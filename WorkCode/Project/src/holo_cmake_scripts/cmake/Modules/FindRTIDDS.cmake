# Find a RTIDDS 
#
# The following directories are searched:
# NDDSHOME (CMake variable)
# NDDSHOME (Environment variable)
#
# Prior to calling this script, you may set the NDDSHOME variable. This is used
# when searching for RTI connext DDS as a name for the directory
# containing the library files. 
#
# This sets the following variables:
# RTIDDS_FOUND - True if DDS was found.
# RTIDDS_INCLUDE_DIRS - Directories containing the DDS include files.
# RTIDDS_LIBRARIES - Libraries needed to use DDS.
# RTIDDS_DEFINITIONS - Compiler flags for DDS.
# RTIDDSGEN - rtiddsgen executable
# RTIDDS_VERSION - The version of DDS found.
# RTIDDS_VERSION_MAJOR - The major version of DDS found.
# RTIDDS_VERSION_MINOR - The minor version of DDS found.
# RTIDDS_VERSION_PATCH - The revision version of DDS found.


find_path(RTIDDS_INCLUDE_DIR ndds/ndds_cpp.h
    HINTS ${NDDSHOME}/include $ENV{NDDSHOME}/include)

if(NOT RTIDDS_TARGET_TOOLCHAIN)
    SET(RTIDDS_TARGET_TOOLCHAIN x64Linux3gcc5.4.0)
endif(NOT RTIDDS_TARGET_TOOLCHAIN)

find_library(RTIDDS_C_LIBRARY nddsc
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_library(RTIDDS_CPP_LIBRARY nddscpp
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_library(RTIDDS_CPP2_LIBRARY nddscpp2
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_library(RTIDDS_CORE_LIBRARY nddscore
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_program(RTIDDSGEN rtiddsgen
    HINTS ${NDDSHOME}/bin $ENV{NDDSHOME}/bin)

find_library(RTIDDS_CONNEXTMSG_C_LIBRARY rticonnextmsgc
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_library(RTIDDS_CONNEXTMSG_CPP_LIBRARY rticonnextmsgcpp
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})
find_library(RTIDDS_CONNEXTMSG_CPP2_LIBRARY rticonnextmsgcpp2
    HINTS ${NDDSHOME}/lib $ENV{NDDSHOME}/lib
    PATH_SUFFIXES ${RTIDDS_TARGET_TOOLCHAIN})

if(WIN32)
    set(RTIDDS_EXTRA_LIBRARIES netapi32 advapi32 user32 ws2_32)
    set(RTIDDS_DEFINITIONS -DRTI_WIN32 -DNDDS_DLL_VARIABLE /MD)
else(WIN32)
    set(RTIDDS_EXTRA_LIBRARIES dl nsl m pthread rt)
    set(RTIDDS_DEFINITIONS -DRTI_UNIX -DRTI_LINUX -DRTI_64BIT)
endif(WIN32)

set(RTIDDS_INCLUDE_DIRS 
    ${RTIDDS_INCLUDE_DIR} 
    ${RTIDDS_INCLUDE_DIR}/ndds
    ${RTIDDS_INCLUDE_DIR}/ndds/hpp)
set(RTIDDS_LIBRARIES 
    ${RTIDDS_C_LIBRARY} 
    ${RTIDDS_CPP_LIBRARY} 
    ${RTIDDS_CPP2_LIBRARY} 
    ${RTIDDS_CORE_LIBRARY}
    ${RTIDDS_EXTRA_LIBRARIES}
    ${RTIDDS_CONNEXTMSG_C_LIBRARY}
    ${RTIDDS_CONNEXTMSG_CPP_LIBRARY}
    ${RTIDDS_CONNEXTMSG_CPP2_LIBRARY})
set(RTIDDS_C_LIBRARIES ${RTIDDS_CORE_LIBRARY} ${RTIDDS_C_LIBRARY} ${RTIDDS_CONNEXTMSG_C_LIBRARY})
set(RTIDDS_C_INCLUDE_DIRS ${RTIDDS_INCLUDE_DIR})
set(RTIDDS_C_DEFINITIONS ${RTIDDS_DEFINITIONS})
set(RTIDDS_CXX_LIBRARIES ${RTIDDS_C_LIBRARIES} ${RTIDDS_CPP_LIBRARY} ${RTIDDS_CONNEXTMSG_CPP_LIBRARY})
set(RTIDDS_CXX_DEFINITIONS ${RTIDDS_DEFINITIONS})
set(RTIDDS_CXX_INCLUDE_DIRS ${RTIDDS_INCLUDE_DIR} ${RTIDDS_INCLUDE_DIR}/ndds)
set(RTIDDS_CXX11_LIBRARIES ${RTIDDS_CXX_LIBRARIES} ${RTIDDS_CPP2_LIBRARY} ${RTIDDS_CONNEXTMSG_CPP2_LIBRARY})
set(RTIDDS_CXX11_INCLUDE_DIRS ${RTIDDS_INCLUDE_DIR} ${RTIDDS_INCLUDE_DIR}/ndds ${RTIDDS_INCLUDE_DIRS}/ndds/hpp)
set(RTIDDS_CXX11_DEFINITIONS ${RTIDDS_DEFINITIONS})

file(GLOB RTIDDS_VERSION_FILE $ENV{NDDSHOME}/rev_target_rtidds.*)

if(RTIDDS_VERSION_FILE)
    string(REGEX MATCH "rtidds.([0-9]+).([0-9]+)([a-z]*)"
        RTIDDS_VERSION "${RTIDDS_VERSION_FILE}")
    set(RTIDDS_VERSION_MAJOR ${CMAKE_MATCH_1})
    set(RTIDDS_VERSION_MINOR ${CMAKE_MATCH_2})
    set(RTIDDS_VERSION_PATCH ${CMAKE_MATCH_3})
    set(RTIDDS_VERSION_CAN)
endif(RTIDDS_VERSION_FILE)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(RTIDDS
    REQUIRED_VARS 
    RTIDDS_INCLUDE_DIR
    RTIDDS_C_LIBRARY 
    RTIDDS_CPP_LIBRARY
    RTIDDS_CPP2_LIBRARY
    RTIDDS_CORE_LIBRARY
    RTIDDS_CONNEXTMSG_C_LIBRARY
    RTIDDS_CONNEXTMSG_CPP_LIBRARY
    RTIDDS_CONNEXTMSG_CPP2_LIBRARY
    RTIDDSGEN
    VERSION_VAR ${RTIDDS_VERSION})
