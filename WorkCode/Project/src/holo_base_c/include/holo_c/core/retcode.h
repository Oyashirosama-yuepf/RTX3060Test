/*!
 *  \brief This header file defines return codes for holo projects.
 *  \author zhangjiannan(zhangjiannan@holomaitc.com)
 *  \date 2018-12-23
 *  \attention Copyright © Holomatic Technology (Beijing) Co.Ltd
 *  \attention Please refer to COPYRIGHT.txt for complete terms of copyright
 *             notice.
 */

#ifndef HOLO_C_CORE_RETCODE_H_
#define HOLO_C_CORE_RETCODE_H_

/*
 * Return code should be a none positive number range from -2147483648 to 0.
 * A negtive return code represents a error code.
 * Zero return code mean no error occurred.
 * Functions may also return a positive return code to show execution status which means no error occurred.
 * For example the following function:
 *
 *          retcode object_serialize(const struct Object *object, uint8_t *buffer, uint32_t buffer_size);
 *
 * may return a positive return code to show the number of bytes serialized or a negtive return code to indicate an
 * error occurred during serialization.
 *
 *
 * TODO Return code numbering
 *
 *
 */

#define RC_SUCCESS 0
#define RC_FAIL -1

/* retcode for serialization and deserialization operations */
#define RC_SERIALIZATION_ERROR -100
#define RC_SERIALIZATION_BUFFER_OVERFLOW -101
#define RC_DESERIALIZATION_ERROR -102
#define RC_DESERIALIZATION_BUFFER_UNDERFLOW -103

#define RC_QUEUE_INVALID_PARAMETER -110
#define RC_QUEUE_OVERFLOW -111
#define RC_QUEUE_UNDERFLOW -112
#define RC_QUEUE_INDEX_OUT_OF_RANGE -112

#define RC_DEQUEUE_INVALID_PARAMETER -130
#define RC_DEQUEUE_OVERFLOW -131
#define RC_DEQUEUE_UNDERFLOW -132
#define RC_DEQUEUE_INDEX_OUT_OF_RANGE -132

/* return code for duration operations */
#define RC_DURATION_INVALID_PARAMETER -1000
#define RC_DURATION_OVERFLOW -1001
#define RC_DURATION_UNDERFLOW -1002

/* return code for timestamp operations */
#define RC_TIMESTAMP_INVALID_PARAMETER -1010
#define RC_TIMESTAMP_OVERFLOW -1011
#define RC_TIMESTAMP_UNDERFLOW -1012

#define RC_NUMERICS_CUBIC_SPLINE_INVALID_POINTLIST -2000
#define RC_NUMERICS_CUBIC_SPLINE_LACK_POINTS -2001
#define RC_NUMERICS_CUBIC_SPLINE_OVERFLOW_POINTS -2002
#define RC_NUMERICS_MATRIX_ROWS_OUT_OF_RANGE -2003
#define RC_NUMERICS_MATRIX_COLS_OUT_OF_RANGE -2004
#define RC_NUMERICS_MATRIX_SIZE_OUT_OF_RANGE -2005
#define RC_NUMERICS_MATRIX_MEMORY_INVALID -2006
#define RC_NUMERICS_MATRIX_MIXED_ROWS -2007
#define RC_NUMERICS_MATRIX_MIXED_COLS -2008
#define RC_NUMERICS_MATRIX_MIXED_SIZE -2009
#define RC_NUMERICS_MATRIX_NOT_SYMMETRIC -2010
#define RC_NUMERICS_MATRIX_NOT_SQUARE -2011
#define RC_NUMERICS_MATRIX_SINGULAR -2012
#define RC_NUMERICS_VECTOR_ROWS_OUT_OF_RANGE -2013
#define RC_NUMERICS_VECTOR_COLS_OUT_OF_RANGE -2014

#define RC_PIDCONTROLLER_INVALID_PARAMETER -3000
#define RC_QPSOLVER_NO_CONSTRAINT -3001
#define RC_QPSOLVER_NOT_SOLVED -3002
#define RC_QPOASES_MAX_NWSR_REACHED -3003
#define RC_QPOASES_INFEASIBILITY -3004
#define RC_MEAN_FILTER_NOT_ENOUGH_BUFFER -3005
#define RC_MEAN_FILTER_INVALID_WINDOW_SIZE -3006
#define RC_DIGITAL_FILTER_INVALID_HZ -3007
#define RC_DIGITAL_FILTER_INVALID_CUTOFF_FREQUENCY -3008
#define RC_FEEDFORWARD_CONTROLLER_INVALID_MAXMIN_DEAD_ZONE -3009
#define RC_FEEDFORWARD_CONTROLLER_EMPTY_PARAM_TABLE -3010
#define RC_FEEDFORWARD_CONTROLLER_SAME_ITEM -3011
#define RC_FEEDFORWARD_CONTROLLER_INVALID_ITEM_SPEED -3012
#define RC_SECTIONAL_PID_CONTROLLER_INVALID_MAXMIN_INTEGRAL -3013
#define RC_SECTIONAL_PID_CONTROLLER_EMPTY_PARAM_TABLE -3014
#define RC_SECTIONAL_PID_CONTROLLER_SAME_ITEM -3015
#define RC_SECTIONAL_PID_CONTROLLER_INVALID_ITEM_ERROR -3016
#define RC_SECTIONAL_PID_CONTROLLER_INVALID_ITEM_SPEED -3017
#define RC_MPC_CONTROLLER_SOLVE_FAILED -3018

#define RC_PILOT_CONTROLLER_INVALID_PLANNING_PATH -3021
#define RC_PILOT_CONTROLLER_INVALID_VEHICLE_STATE -3022
#define RC_PILOT_CONTROLLER_FIND_TARGET_ERROR -3023
#define RC_PILOT_CONTROLLER_LON_CONTROL_FAILED -3024
#define RC_PILOT_CONTROLLER_LAT_CONTROL_FAILED -3025
#define RC_LAT_CONTROLLER_INVALID_PARAM -3026
#define RC_LON_CONTROLLER_INVALID_PARAM -3027

#define RC_PATH_IS_EMPTY -3500
#define RC_PATH_INVALID_START_INDEX -3501
#define RC_PATH_BUFFER_OVERFLOW -3502

#define RC_PATH_IS_EMPTY -3500
#define RC_PATH_INVALID_START_INDEX -3501
#define RC_PATH_BUFFER_OVERFLOW -3502
#define RC_PATH_INVALID_INDEX_DURING_GET_POINT -3503

/* retrun code for aceinna imu */
#define RC_PARSE_ACEINNA_IMU_ID_ERROR -4000
#define RC_PARSE_ACEINNA_IMU_DATA_ERROR -4001
#define RC_PARSE_ACEINNA_IMU_CONTINUE -4002

/* return code for mpc parse state */
#define RC_MPC_PARSE_LINE_CONTINUE -5001
#define RC_MPC_PARSE_LINE_COMPLETE -5002
#define RC_MPC_PARSE_RSR_CONTINUE -5011
#define RC_MPC_PARSE_RSR_COMPLETE -5012
#define RC_MPC_PARSE_OBJ_CONTINUE -5021
#define RC_MPC_PARSE_OBJ_COMPLETE -5022
#define RC_MPC_PARSE_ID_ERROR -5102
#define RC_MPC_PARSE_DATA_ERROR -5103

/* retrun code for conti radar */
#define RC_PARSE_CONTI_RADAR_ID_ERROR -6000
#define RC_PARSE_CONTI_RADAR_DATA_ERROR -6001
#define RC_PARSE_CONTI_RADAR_CONTINUE -6002

/* return code for ublox operations */
#define RC_UBX_RECV_BUFFER_OVERFLOW -7000
#define RC_UBX_SEND_BUFFER_OVERFLOW -7001
#define RC_UBX_PARSER_CONTINUE -7002
#define RC_UBX_PARSER_OUTOFSYNC -7003
#define RC_UBX_PARSE_HEAD_COMPLETE -7010
#define RC_UBX_PARSE_HEAD_CONTINUE -7011
#define RC_UBX_PARSE_ID_COMPLETE -7012
#define RC_UBX_PARSE_ID_CONTINUE -7013
#define RC_UBX_PARSE_LEN_COMPLETE -7014
#define RC_UBX_PARSE_LEN_CONTINUE -7015
#define RC_UBX_PARSE_PAYLOAD_COMPLETE -7016
#define RC_UBX_PARSE_PAYLOAD_CONTINUE -7017
#define RC_UBX_PARSE_CRC_OK -7018
#define RC_UBX_PARSE_CRC_ERROR -7019
#define RC_UBX_PARSE_CRC_CONTINUE -7020
#define RC_UBX_PARSE_MSG_ERROR -7021

/* return code for bosch uss*/
#define RC_BOSCH_USS_PARSE_CONTINUE -8000
#define RC_BOSCH_USS_PARSE_ERROR -8001
#define RC_BOSCH_USS_PARSE_OK -8002

#endif
