#ifndef HOLO_C_SENSORS_MPC_MPC_SEND_DBC_H
#define HOLO_C_SENSORS_MPC_MPC_SEND_DBC_H

/** \file
 * CAN DBC C-Headers
 *
 * These headers were generated by dbc2c.awk on 2019年 02月 12日 星期二 18:11:14 CST.
 *
 * The dbc2c.awk script parses Vector .dbc files, and generates C-style
 * headers with Doxygen documentation from a set of templates.
 *
 * The following databases were parsed:
 * - \ref DB_mpc_can_in
 */

#include <holo_c/core/types.h>

/**
 * @defgroup DB_mpc_can_in CAN Database mpc_can_in
 *
 * BodyCntrl Messages --> Everything mounted to upper body
 * CHCntrl Messages --> Everything mounted to lower body (chassis)
 * ESP --> ESP belongs to Chassis but is handled seperatly
 * Bosch_ECAN_V1.8.dbc
 *
 * Path to file: output/mpc_can_in.dbc
 *
 * Provides the following ECUs:
 * - \ref ECU_BoschVideo
 */

/**
 * @defgroup ECU_BoschVideo Electronics Control Unit BoschVideo
 *
 * This ECU was defined in \ref DB_mpc_can_in.
 *
 * TX messages:
 *
 * RX signals:
 * - \ref SIG_Vehicle_CAN_53_OutsideTemperature
 * - \ref SIG_Vehicle_CAN_53_AebOnOffReq
 * - \ref SIG_Vehicle_CAN_53_TractionCtrlSysIntervention
 * - \ref SIG_Vehicle_CAN_11_ElkoOnOffReq
 * - \ref SIG_Vehicle_CAN_11_ElkreOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LksOnOffReq
 * - \ref SIG_Vehicle_CAN_11_RdpOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LdwOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LcsSystemState
 * - \ref SIG_Vehicle_CAN_11_LcsRightTargetDet
 * - \ref SIG_Vehicle_CAN_11_LcsOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LcsLeftTargetDet
 * - \ref SIG_Vehicle_CAN_11_LdsSensitivity
 * - \ref SIG_Vehicle_CAN_11_EpsLksReady
 * - \ref SIG_Vehicle_CAN_11_DriverBraked
 * - \ref SIG_Vehicle_CAN_11_WiperRear
 * - \ref SIG_Vehicle_CAN_11_WiperFront
 * - \ref SIG_Vehicle_CAN_11_TurnSignalLeverRight
 * - \ref SIG_Vehicle_CAN_11_TurnSignalLeverLeft
 * - \ref SIG_Vehicle_CAN_11_TraficDirectionHeadLights
 * - \ref SIG_Vehicle_CAN_11_ThrottleRaw
 * - \ref SIG_Vehicle_CAN_11_SteeringType
 * - \ref SIG_Vehicle_CAN_11_SideCrashDriver
 * - \ref SIG_Vehicle_CAN_11_SideCrashCodriver
 * - \ref SIG_Vehicle_CAN_11_RolloverCrash
 * - \ref SIG_Vehicle_CAN_11_RearCrash
 * - \ref SIG_Vehicle_CAN_11_IndicatorRight
 * - \ref SIG_Vehicle_CAN_11_IndicatorLeft
 * - \ref SIG_Vehicle_CAN_11_FrontCrash
 * - \ref SIG_Vehicle_CAN_07_Rainfall
 * - \ref SIG_Vehicle_CAN_07_AccDesiredSpeed
 * - \ref SIG_Vehicle_CAN_07_BrakePressure
 * - \ref SIG_Vehicle_CAN_07_VelocityOverGround
 * - \ref SIG_Vehicle_CAN_05_FoggingRiskWindscreen
 * - \ref SIG_Vehicle_CAN_05_TrailerIdentified
 * - \ref SIG_Vehicle_CAN_05_SteeringWheelAngle
 * - \ref SIG_Vehicle_CAN_05_SteeringMomentum
 * - \ref SIG_Vehicle_CAN_05_SteeringAngluarSpeed
 * - \ref SIG_Vehicle_CAN_03_EngineRunning
 * - \ref SIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft
 * - \ref SIG_Vehicle_CAN_03_RotationWheelSpeedRearRight
 * - \ref SIG_Vehicle_CAN_03_Velocity
 * - \ref SIG_Vehicle_CAN_02_DisableRollerDynMode
 * - \ref SIG_Vehicle_CAN_02_BrakeLightSwitch
 * - \ref SIG_Vehicle_CAN_02_AsrSwitchPassive
 * - \ref SIG_Vehicle_CAN_02_AbsIntervention
 * - \ref SIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight
 * - \ref SIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft
 * - \ref SIG_Vehicle_CAN_02_PitchRate
 * - \ref SIG_Vehicle_CAN_01_EspSystemState
 * - \ref SIG_Vehicle_CAN_01_EspSwitchPassive
 * - \ref SIG_Vehicle_CAN_01_EspIntervention
 * - \ref SIG_Vehicle_CAN_01_YawRate
 * - \ref SIG_Vehicle_CAN_01_LongitudinalAccel
 * - \ref SIG_Vehicle_CAN_01_LateralAcceleration
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * @defgroup MSG_VECTOR__INDEPENDENT_SIG_MSG Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * This is a message for not used signals, created by Vector CANdb++ DBC OLE DB Provider.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebError
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Year
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Second
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Month
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Minute
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Hour
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Day
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gear
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CRC
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp
 *
 * @{
 */

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG configuration tuple.
 */
#define MSG_VECTOR__INDEPENDENT_SIG_MSG             0x40000000, 1, 0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG id.
 */
#define ID_VECTOR__INDEPENDENT_SIG_MSG              0x40000000

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG extended id bit.
 */
#define EXT_VECTOR__INDEPENDENT_SIG_MSG             1

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG Data Length Count.
 */
#define DLC_VECTOR__INDEPENDENT_SIG_MSG             0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG cycle time.
 */
#define CYCLE_VECTOR__INDEPENDENT_SIG_MSG           0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG fast cycle time.
 */
#define FAST_VECTOR__INDEPENDENT_SIG_MSG            0

/**
 * Initialise message VECTOR__INDEPENDENT_SIG_MSG buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#if 0
#define INIT_VECTOR__INDEPENDENT_SIG_MSG(buf) { \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebError(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Year(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Second(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Month(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Minute(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Hour(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Day(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gear(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CRC(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(buf); \
}
#endif
/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_53 Message Vehicle_CAN_53 (0x153)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_53_OutsideTemperature
 * - \ref SIG_Vehicle_CAN_53_AebOnOffReq
 * - \ref SIG_Vehicle_CAN_53_TractionCtrlSysIntervention
 * - \ref SIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter
 * - \ref SIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC
 *
 * @{
 */

/**
 * Message Vehicle_CAN_53 configuration tuple.
 */
#define MSG_Vehicle_CAN_53                          0x153, 0, 8

/**
 * Message Vehicle_CAN_53 id.
 */
#define ID_Vehicle_CAN_53                           0x153

/**
 * Message Vehicle_CAN_53 extended id bit.
 */
#define EXT_Vehicle_CAN_53                          0

/**
 * Message Vehicle_CAN_53 Data Length Count.
 */
#define DLC_Vehicle_CAN_53                          8

/**
 * Message Vehicle_CAN_53 cycle time.
 */
#define CYCLE_Vehicle_CAN_53                        20

/**
 * Message Vehicle_CAN_53 fast cycle time.
 */
#define FAST_Vehicle_CAN_53                         0

/**
 * Initialise message Vehicle_CAN_53 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_53(buf) { \
	INITSIG_Vehicle_CAN_53_OutsideTemperature(buf); \
	INITSIG_Vehicle_CAN_53_AebOnOffReq(buf); \
	INITSIG_Vehicle_CAN_53_TractionCtrlSysIntervention(buf); \
	INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter(buf); \
	INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_11 Message Vehicle_CAN_11 (0x111)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_11_ElkoOnOffReq
 * - \ref SIG_Vehicle_CAN_11_ElkreOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LksOnOffReq
 * - \ref SIG_Vehicle_CAN_11_RdpOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LdwOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LcsSystemState
 * - \ref SIG_Vehicle_CAN_11_LcsRightTargetDet
 * - \ref SIG_Vehicle_CAN_11_LcsOnOffReq
 * - \ref SIG_Vehicle_CAN_11_LcsLeftTargetDet
 * - \ref SIG_Vehicle_CAN_11_LdsSensitivity
 * - \ref SIG_Vehicle_CAN_11_EpsLksReady
 * - \ref SIG_Vehicle_CAN_11_DriverBraked
 * - \ref SIG_Vehicle_CAN_11_WiperRear
 * - \ref SIG_Vehicle_CAN_11_WiperFront
 * - \ref SIG_Vehicle_CAN_11_TurnSignalLeverRight
 * - \ref SIG_Vehicle_CAN_11_TurnSignalLeverLeft
 * - \ref SIG_Vehicle_CAN_11_TraficDirectionHeadLights
 * - \ref SIG_Vehicle_CAN_11_ThrottleRaw
 * - \ref SIG_Vehicle_CAN_11_SteeringType
 * - \ref SIG_Vehicle_CAN_11_SideCrashDriver
 * - \ref SIG_Vehicle_CAN_11_SideCrashCodriver
 * - \ref SIG_Vehicle_CAN_11_RolloverCrash
 * - \ref SIG_Vehicle_CAN_11_RearCrash
 * - \ref SIG_Vehicle_CAN_11_IndicatorRight
 * - \ref SIG_Vehicle_CAN_11_IndicatorLeft
 * - \ref SIG_Vehicle_CAN_11_FrontCrash
 * - \ref SIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC
 * - \ref SIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_11 configuration tuple.
 */
#define MSG_Vehicle_CAN_11                          0x111, 0, 8

/**
 * Message Vehicle_CAN_11 id.
 */
#define ID_Vehicle_CAN_11                           0x111

/**
 * Message Vehicle_CAN_11 extended id bit.
 */
#define EXT_Vehicle_CAN_11                          0

/**
 * Message Vehicle_CAN_11 Data Length Count.
 */
#define DLC_Vehicle_CAN_11                          8

/**
 * Message Vehicle_CAN_11 cycle time.
 */
#define CYCLE_Vehicle_CAN_11                        20

/**
 * Message Vehicle_CAN_11 fast cycle time.
 */
#define FAST_Vehicle_CAN_11                         0

/**
 * Initialise message Vehicle_CAN_11 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_11(buf) { \
	INITSIG_Vehicle_CAN_11_ElkoOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_ElkreOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_LksOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_RdpOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_LdwOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_LcsSystemState(buf); \
	INITSIG_Vehicle_CAN_11_LcsRightTargetDet(buf); \
	INITSIG_Vehicle_CAN_11_LcsOnOffReq(buf); \
	INITSIG_Vehicle_CAN_11_LcsLeftTargetDet(buf); \
	INITSIG_Vehicle_CAN_11_LdsSensitivity(buf); \
	INITSIG_Vehicle_CAN_11_EpsLksReady(buf); \
	INITSIG_Vehicle_CAN_11_DriverBraked(buf); \
	INITSIG_Vehicle_CAN_11_WiperRear(buf); \
	INITSIG_Vehicle_CAN_11_WiperFront(buf); \
	INITSIG_Vehicle_CAN_11_TurnSignalLeverRight(buf); \
	INITSIG_Vehicle_CAN_11_TurnSignalLeverLeft(buf); \
	INITSIG_Vehicle_CAN_11_TraficDirectionHeadLights(buf); \
	INITSIG_Vehicle_CAN_11_ThrottleRaw(buf); \
	INITSIG_Vehicle_CAN_11_SteeringType(buf); \
	INITSIG_Vehicle_CAN_11_SideCrashDriver(buf); \
	INITSIG_Vehicle_CAN_11_SideCrashCodriver(buf); \
	INITSIG_Vehicle_CAN_11_RolloverCrash(buf); \
	INITSIG_Vehicle_CAN_11_RearCrash(buf); \
	INITSIG_Vehicle_CAN_11_IndicatorRight(buf); \
	INITSIG_Vehicle_CAN_11_IndicatorLeft(buf); \
	INITSIG_Vehicle_CAN_11_FrontCrash(buf); \
	INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC(buf); \
	INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_07 Message Vehicle_CAN_07 (0x107)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_07_Rainfall
 * - \ref SIG_Vehicle_CAN_07_AccDesiredSpeed
 * - \ref SIG_Vehicle_CAN_07_BrakePressure
 * - \ref SIG_Vehicle_CAN_07_VelocityOverGround
 * - \ref SIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC
 * - \ref SIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_07 configuration tuple.
 */
#define MSG_Vehicle_CAN_07                          0x107, 0, 8

/**
 * Message Vehicle_CAN_07 id.
 */
#define ID_Vehicle_CAN_07                           0x107

/**
 * Message Vehicle_CAN_07 extended id bit.
 */
#define EXT_Vehicle_CAN_07                          0

/**
 * Message Vehicle_CAN_07 Data Length Count.
 */
#define DLC_Vehicle_CAN_07                          8

/**
 * Message Vehicle_CAN_07 cycle time.
 */
#define CYCLE_Vehicle_CAN_07                        20

/**
 * Message Vehicle_CAN_07 fast cycle time.
 */
#define FAST_Vehicle_CAN_07                         0

/**
 * Initialise message Vehicle_CAN_07 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_07(buf) { \
	INITSIG_Vehicle_CAN_07_Rainfall(buf); \
	INITSIG_Vehicle_CAN_07_AccDesiredSpeed(buf); \
	INITSIG_Vehicle_CAN_07_BrakePressure(buf); \
	INITSIG_Vehicle_CAN_07_VelocityOverGround(buf); \
	INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC(buf); \
	INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_05 Message Vehicle_CAN_05 (0x105)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_05_FoggingRiskWindscreen
 * - \ref SIG_Vehicle_CAN_05_TrailerIdentified
 * - \ref SIG_Vehicle_CAN_05_SteeringWheelAngle
 * - \ref SIG_Vehicle_CAN_05_SteeringMomentum
 * - \ref SIG_Vehicle_CAN_05_SteeringAngluarSpeed
 * - \ref SIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC
 * - \ref SIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_05 configuration tuple.
 */
#define MSG_Vehicle_CAN_05                          0x105, 0, 8

/**
 * Message Vehicle_CAN_05 id.
 */
#define ID_Vehicle_CAN_05                           0x105

/**
 * Message Vehicle_CAN_05 extended id bit.
 */
#define EXT_Vehicle_CAN_05                          0

/**
 * Message Vehicle_CAN_05 Data Length Count.
 */
#define DLC_Vehicle_CAN_05                          8

/**
 * Message Vehicle_CAN_05 cycle time.
 */
#define CYCLE_Vehicle_CAN_05                        20

/**
 * Message Vehicle_CAN_05 fast cycle time.
 */
#define FAST_Vehicle_CAN_05                         0

/**
 * Initialise message Vehicle_CAN_05 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_05(buf) { \
	INITSIG_Vehicle_CAN_05_FoggingRiskWindscreen(buf); \
	INITSIG_Vehicle_CAN_05_TrailerIdentified(buf); \
	INITSIG_Vehicle_CAN_05_SteeringWheelAngle(buf); \
	INITSIG_Vehicle_CAN_05_SteeringMomentum(buf); \
	INITSIG_Vehicle_CAN_05_SteeringAngluarSpeed(buf); \
	INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC(buf); \
	INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_03 Message Vehicle_CAN_03 (0x103)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_03_EngineRunning
 * - \ref SIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft
 * - \ref SIG_Vehicle_CAN_03_RotationWheelSpeedRearRight
 * - \ref SIG_Vehicle_CAN_03_Velocity
 * - \ref SIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC
 * - \ref SIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_03 configuration tuple.
 */
#define MSG_Vehicle_CAN_03                          0x103, 0, 8

/**
 * Message Vehicle_CAN_03 id.
 */
#define ID_Vehicle_CAN_03                           0x103

/**
 * Message Vehicle_CAN_03 extended id bit.
 */
#define EXT_Vehicle_CAN_03                          0

/**
 * Message Vehicle_CAN_03 Data Length Count.
 */
#define DLC_Vehicle_CAN_03                          8

/**
 * Message Vehicle_CAN_03 cycle time.
 */
#define CYCLE_Vehicle_CAN_03                        20

/**
 * Message Vehicle_CAN_03 fast cycle time.
 */
#define FAST_Vehicle_CAN_03                         0

/**
 * Initialise message Vehicle_CAN_03 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_03(buf) { \
	INITSIG_Vehicle_CAN_03_EngineRunning(buf); \
	INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft(buf); \
	INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearRight(buf); \
	INITSIG_Vehicle_CAN_03_Velocity(buf); \
	INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC(buf); \
	INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_02 Message Vehicle_CAN_02 (0x102)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_02_DisableRollerDynMode
 * - \ref SIG_Vehicle_CAN_02_BrakeLightSwitch
 * - \ref SIG_Vehicle_CAN_02_AsrSwitchPassive
 * - \ref SIG_Vehicle_CAN_02_AbsIntervention
 * - \ref SIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight
 * - \ref SIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft
 * - \ref SIG_Vehicle_CAN_02_PitchRate
 * - \ref SIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC
 * - \ref SIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_02 configuration tuple.
 */
#define MSG_Vehicle_CAN_02                          0x102, 0, 8

/**
 * Message Vehicle_CAN_02 id.
 */
#define ID_Vehicle_CAN_02                           0x102

/**
 * Message Vehicle_CAN_02 extended id bit.
 */
#define EXT_Vehicle_CAN_02                          0

/**
 * Message Vehicle_CAN_02 Data Length Count.
 */
#define DLC_Vehicle_CAN_02                          8

/**
 * Message Vehicle_CAN_02 cycle time.
 */
#define CYCLE_Vehicle_CAN_02                        20

/**
 * Message Vehicle_CAN_02 fast cycle time.
 */
#define FAST_Vehicle_CAN_02                         0

/**
 * Initialise message Vehicle_CAN_02 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_02(buf) { \
	INITSIG_Vehicle_CAN_02_DisableRollerDynMode(buf); \
	INITSIG_Vehicle_CAN_02_BrakeLightSwitch(buf); \
	INITSIG_Vehicle_CAN_02_AsrSwitchPassive(buf); \
	INITSIG_Vehicle_CAN_02_AbsIntervention(buf); \
	INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight(buf); \
	INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(buf); \
	INITSIG_Vehicle_CAN_02_PitchRate(buf); \
	INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC(buf); \
	INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_CAN_01 Message Vehicle_CAN_01 (0x101)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_CAN_01_EspSystemState
 * - \ref SIG_Vehicle_CAN_01_EspSwitchPassive
 * - \ref SIG_Vehicle_CAN_01_EspIntervention
 * - \ref SIG_Vehicle_CAN_01_YawRate
 * - \ref SIG_Vehicle_CAN_01_LongitudinalAccel
 * - \ref SIG_Vehicle_CAN_01_LateralAcceleration
 * - \ref SIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC
 * - \ref SIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter
 *
 * @{
 */

/**
 * Message Vehicle_CAN_01 configuration tuple.
 */
#define MSG_Vehicle_CAN_01                          0x101, 0, 8

/**
 * Message Vehicle_CAN_01 id.
 */
#define ID_Vehicle_CAN_01                           0x101

/**
 * Message Vehicle_CAN_01 extended id bit.
 */
#define EXT_Vehicle_CAN_01                          0

/**
 * Message Vehicle_CAN_01 Data Length Count.
 */
#define DLC_Vehicle_CAN_01                          8

/**
 * Message Vehicle_CAN_01 cycle time.
 */
#define CYCLE_Vehicle_CAN_01                        20

/**
 * Message Vehicle_CAN_01 fast cycle time.
 */
#define FAST_Vehicle_CAN_01                         0

/**
 * Initialise message Vehicle_CAN_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_CAN_01(buf) { \
	INITSIG_Vehicle_CAN_01_EspSystemState(buf); \
	INITSIG_Vehicle_CAN_01_EspSwitchPassive(buf); \
	INITSIG_Vehicle_CAN_01_EspIntervention(buf); \
	INITSIG_Vehicle_CAN_01_YawRate(buf); \
	INITSIG_Vehicle_CAN_01_LongitudinalAccel(buf); \
	INITSIG_Vehicle_CAN_01_LateralAcceleration(buf); \
	INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC(buf); \
	INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter(buf); \
}

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID Signal ShcVLObj01_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj01_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj01_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj01_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj01_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(buf, 254)

/**
 * Signal ShcVLObj01_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj01_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID      254

/**
 * Signal ShcVLObj01_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID        0

/**
 * Signal ShcVLObj01_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID        255

/**
 * Signal ShcVLObj01_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID Value Table for Signal ShcVLObj01_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type Signal ShcVLObj01_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj01_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj01_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj01_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj01_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(buf, 14)

/**
 * Signal ShcVLObj01_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj01_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type      14

/**
 * Signal ShcVLObj01_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type        0

/**
 * Signal ShcVLObj01_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type        15

/**
 * Signal ShcVLObj01_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type Value Table for Signal ShcVLObj01_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos Signal ShcVLObj01_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj01_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj01_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj01_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj01_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(buf, 254)

/**
 * Signal ShcVLObj01_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj01_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos      254

/**
 * Signal ShcVLObj01_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos        0

/**
 * Signal ShcVLObj01_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos        240

/**
 * Signal ShcVLObj01_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos Value Table for Signal ShcVLObj01_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft Signal ShcVLObj01_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj01_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj01_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj01_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj01_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj01_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj01_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft      4094

/**
 * Signal ShcVLObj01_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft        0

/**
 * Signal ShcVLObj01_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft        4000

/**
 * Signal ShcVLObj01_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft Value Table for Signal ShcVLObj01_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight Signal ShcVLObj01_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj01_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj01_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj01_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj01_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj01_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj01_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight      4094

/**
 * Signal ShcVLObj01_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight        0

/**
 * Signal ShcVLObj01_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight        4000

/**
 * Signal ShcVLObj01_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight Value Table for Signal ShcVLObj01_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed Signal ShcVLObj01_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj01_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj01_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj01_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj01_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj01_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj01_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed      4094

/**
 * Signal ShcVLObj01_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed        0

/**
 * Signal ShcVLObj01_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed        4000

/**
 * Signal ShcVLObj01_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed Value Table for Signal ShcVLObj01_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist Signal ShcVLObj01_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj01_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj01_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj01_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj01_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj01_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(buf, 254)

/**
 * Signal ShcVLObj01_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj01_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist      254

/**
 * Signal ShcVLObj01_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist        0

/**
 * Signal ShcVLObj01_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist        250

/**
 * Signal ShcVLObj01_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist Value Table for Signal ShcVLObj01_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj01_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID Signal ShcVLObj08_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj08_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj08_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj08_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj08_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(buf, 254)

/**
 * Signal ShcVLObj08_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj08_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID      254

/**
 * Signal ShcVLObj08_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID        0

/**
 * Signal ShcVLObj08_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID        255

/**
 * Signal ShcVLObj08_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID Value Table for Signal ShcVLObj08_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type Signal ShcVLObj08_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj08_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj08_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj08_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj08_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(buf, 14)

/**
 * Signal ShcVLObj08_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj08_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type      14

/**
 * Signal ShcVLObj08_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type        0

/**
 * Signal ShcVLObj08_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type        15

/**
 * Signal ShcVLObj08_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type Value Table for Signal ShcVLObj08_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos Signal ShcVLObj08_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj08_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj08_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj08_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj08_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(buf, 254)

/**
 * Signal ShcVLObj08_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj08_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos      254

/**
 * Signal ShcVLObj08_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos        0

/**
 * Signal ShcVLObj08_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos        240

/**
 * Signal ShcVLObj08_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos Value Table for Signal ShcVLObj08_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft Signal ShcVLObj08_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj08_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj08_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj08_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj08_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj08_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj08_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft      4094

/**
 * Signal ShcVLObj08_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft        0

/**
 * Signal ShcVLObj08_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft        4000

/**
 * Signal ShcVLObj08_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft Value Table for Signal ShcVLObj08_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight Signal ShcVLObj08_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj08_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj08_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj08_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj08_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj08_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj08_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight      4094

/**
 * Signal ShcVLObj08_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight        0

/**
 * Signal ShcVLObj08_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight        4000

/**
 * Signal ShcVLObj08_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight Value Table for Signal ShcVLObj08_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed Signal ShcVLObj08_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj08_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj08_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj08_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj08_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj08_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj08_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed      4094

/**
 * Signal ShcVLObj08_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed        0

/**
 * Signal ShcVLObj08_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed        4000

/**
 * Signal ShcVLObj08_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed Value Table for Signal ShcVLObj08_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist Signal ShcVLObj08_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj08_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj08_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj08_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj08_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj08_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(buf, 254)

/**
 * Signal ShcVLObj08_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj08_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist      254

/**
 * Signal ShcVLObj08_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist        0

/**
 * Signal ShcVLObj08_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist        250

/**
 * Signal ShcVLObj08_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist Value Table for Signal ShcVLObj08_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj08_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID Signal ShcVLObj07_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj07_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj07_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj07_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj07_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(buf, 254)

/**
 * Signal ShcVLObj07_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj07_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID      254

/**
 * Signal ShcVLObj07_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID        0

/**
 * Signal ShcVLObj07_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID        255

/**
 * Signal ShcVLObj07_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID Value Table for Signal ShcVLObj07_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type Signal ShcVLObj07_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj07_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj07_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj07_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj07_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(buf, 14)

/**
 * Signal ShcVLObj07_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj07_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type      14

/**
 * Signal ShcVLObj07_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type        0

/**
 * Signal ShcVLObj07_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type        15

/**
 * Signal ShcVLObj07_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type Value Table for Signal ShcVLObj07_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos Signal ShcVLObj07_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj07_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj07_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj07_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj07_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(buf, 254)

/**
 * Signal ShcVLObj07_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj07_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos      254

/**
 * Signal ShcVLObj07_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos        0

/**
 * Signal ShcVLObj07_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos        240

/**
 * Signal ShcVLObj07_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos Value Table for Signal ShcVLObj07_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft Signal ShcVLObj07_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj07_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj07_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj07_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj07_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj07_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj07_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft      4094

/**
 * Signal ShcVLObj07_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft        0

/**
 * Signal ShcVLObj07_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft        4000

/**
 * Signal ShcVLObj07_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft Value Table for Signal ShcVLObj07_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight Signal ShcVLObj07_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj07_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj07_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj07_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj07_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj07_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj07_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight      4094

/**
 * Signal ShcVLObj07_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight        0

/**
 * Signal ShcVLObj07_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight        4000

/**
 * Signal ShcVLObj07_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight Value Table for Signal ShcVLObj07_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed Signal ShcVLObj07_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj07_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj07_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj07_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj07_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj07_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj07_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed      4094

/**
 * Signal ShcVLObj07_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed        0

/**
 * Signal ShcVLObj07_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed        4000

/**
 * Signal ShcVLObj07_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed Value Table for Signal ShcVLObj07_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist Signal ShcVLObj07_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj07_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj07_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj07_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj07_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj07_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(buf, 254)

/**
 * Signal ShcVLObj07_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj07_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist      254

/**
 * Signal ShcVLObj07_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist        0

/**
 * Signal ShcVLObj07_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist        250

/**
 * Signal ShcVLObj07_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist Value Table for Signal ShcVLObj07_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj07_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID Signal ShcVLObj06_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj06_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj06_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj06_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj06_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(buf, 254)

/**
 * Signal ShcVLObj06_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj06_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID      254

/**
 * Signal ShcVLObj06_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID        0

/**
 * Signal ShcVLObj06_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID        255

/**
 * Signal ShcVLObj06_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID Value Table for Signal ShcVLObj06_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type Signal ShcVLObj06_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj06_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj06_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj06_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj06_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(buf, 14)

/**
 * Signal ShcVLObj06_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj06_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type      14

/**
 * Signal ShcVLObj06_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type        0

/**
 * Signal ShcVLObj06_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type        15

/**
 * Signal ShcVLObj06_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type Value Table for Signal ShcVLObj06_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos Signal ShcVLObj06_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj06_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj06_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj06_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj06_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(buf, 254)

/**
 * Signal ShcVLObj06_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj06_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos      254

/**
 * Signal ShcVLObj06_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos        0

/**
 * Signal ShcVLObj06_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos        240

/**
 * Signal ShcVLObj06_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos Value Table for Signal ShcVLObj06_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft Signal ShcVLObj06_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj06_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj06_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj06_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj06_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj06_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj06_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft      4094

/**
 * Signal ShcVLObj06_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft        0

/**
 * Signal ShcVLObj06_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft        4000

/**
 * Signal ShcVLObj06_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft Value Table for Signal ShcVLObj06_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight Signal ShcVLObj06_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj06_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj06_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj06_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj06_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj06_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj06_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight      4094

/**
 * Signal ShcVLObj06_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight        0

/**
 * Signal ShcVLObj06_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight        4000

/**
 * Signal ShcVLObj06_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight Value Table for Signal ShcVLObj06_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed Signal ShcVLObj06_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj06_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj06_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj06_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj06_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj06_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj06_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed      4094

/**
 * Signal ShcVLObj06_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed        0

/**
 * Signal ShcVLObj06_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed        4000

/**
 * Signal ShcVLObj06_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed Value Table for Signal ShcVLObj06_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist Signal ShcVLObj06_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj06_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj06_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj06_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj06_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj06_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(buf, 254)

/**
 * Signal ShcVLObj06_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj06_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist      254

/**
 * Signal ShcVLObj06_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist        0

/**
 * Signal ShcVLObj06_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist        250

/**
 * Signal ShcVLObj06_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist Value Table for Signal ShcVLObj06_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj06_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID Signal ShcVLObj05_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj05_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj05_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj05_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj05_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(buf, 254)

/**
 * Signal ShcVLObj05_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj05_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID      254

/**
 * Signal ShcVLObj05_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID        0

/**
 * Signal ShcVLObj05_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID        255

/**
 * Signal ShcVLObj05_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID Value Table for Signal ShcVLObj05_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type Signal ShcVLObj05_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj05_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj05_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj05_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj05_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(buf, 14)

/**
 * Signal ShcVLObj05_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj05_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type      14

/**
 * Signal ShcVLObj05_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type        0

/**
 * Signal ShcVLObj05_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type        15

/**
 * Signal ShcVLObj05_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type Value Table for Signal ShcVLObj05_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos Signal ShcVLObj05_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj05_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj05_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj05_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj05_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(buf, 254)

/**
 * Signal ShcVLObj05_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj05_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos      254

/**
 * Signal ShcVLObj05_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos        0

/**
 * Signal ShcVLObj05_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos        240

/**
 * Signal ShcVLObj05_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos Value Table for Signal ShcVLObj05_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft Signal ShcVLObj05_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj05_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj05_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj05_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj05_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj05_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj05_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft      4094

/**
 * Signal ShcVLObj05_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft        0

/**
 * Signal ShcVLObj05_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft        4000

/**
 * Signal ShcVLObj05_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft Value Table for Signal ShcVLObj05_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight Signal ShcVLObj05_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj05_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj05_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj05_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj05_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj05_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj05_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight      4094

/**
 * Signal ShcVLObj05_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight        0

/**
 * Signal ShcVLObj05_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight        4000

/**
 * Signal ShcVLObj05_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight Value Table for Signal ShcVLObj05_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed Signal ShcVLObj05_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj05_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj05_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj05_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj05_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj05_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj05_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed      4094

/**
 * Signal ShcVLObj05_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed        0

/**
 * Signal ShcVLObj05_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed        4000

/**
 * Signal ShcVLObj05_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed Value Table for Signal ShcVLObj05_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist Signal ShcVLObj05_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj05_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj05_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj05_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj05_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj05_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(buf, 254)

/**
 * Signal ShcVLObj05_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj05_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist      254

/**
 * Signal ShcVLObj05_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist        0

/**
 * Signal ShcVLObj05_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist        250

/**
 * Signal ShcVLObj05_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist Value Table for Signal ShcVLObj05_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj05_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID Signal ShcVLObj04_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj04_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj04_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj04_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj04_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(buf, 254)

/**
 * Signal ShcVLObj04_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj04_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID      254

/**
 * Signal ShcVLObj04_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID        0

/**
 * Signal ShcVLObj04_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID        255

/**
 * Signal ShcVLObj04_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID Value Table for Signal ShcVLObj04_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type Signal ShcVLObj04_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj04_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj04_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj04_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj04_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(buf, 14)

/**
 * Signal ShcVLObj04_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj04_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type      14

/**
 * Signal ShcVLObj04_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type        0

/**
 * Signal ShcVLObj04_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type        15

/**
 * Signal ShcVLObj04_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type Value Table for Signal ShcVLObj04_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos Signal ShcVLObj04_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj04_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj04_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj04_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj04_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(buf, 254)

/**
 * Signal ShcVLObj04_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj04_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos      254

/**
 * Signal ShcVLObj04_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos        0

/**
 * Signal ShcVLObj04_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos        240

/**
 * Signal ShcVLObj04_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos Value Table for Signal ShcVLObj04_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft Signal ShcVLObj04_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj04_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj04_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj04_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj04_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj04_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj04_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft      4094

/**
 * Signal ShcVLObj04_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft        0

/**
 * Signal ShcVLObj04_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft        4000

/**
 * Signal ShcVLObj04_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft Value Table for Signal ShcVLObj04_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight Signal ShcVLObj04_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj04_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj04_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj04_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj04_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj04_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj04_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight      4094

/**
 * Signal ShcVLObj04_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight        0

/**
 * Signal ShcVLObj04_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight        4000

/**
 * Signal ShcVLObj04_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight Value Table for Signal ShcVLObj04_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed Signal ShcVLObj04_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj04_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj04_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj04_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj04_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj04_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj04_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed      4094

/**
 * Signal ShcVLObj04_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed        0

/**
 * Signal ShcVLObj04_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed        4000

/**
 * Signal ShcVLObj04_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed Value Table for Signal ShcVLObj04_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist Signal ShcVLObj04_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj04_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj04_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj04_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj04_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj04_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(buf, 254)

/**
 * Signal ShcVLObj04_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj04_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist      254

/**
 * Signal ShcVLObj04_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist        0

/**
 * Signal ShcVLObj04_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist        250

/**
 * Signal ShcVLObj04_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist Value Table for Signal ShcVLObj04_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj04_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID Signal ShcVLObj03_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj03_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj03_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj03_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj03_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(buf, 254)

/**
 * Signal ShcVLObj03_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj03_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID      254

/**
 * Signal ShcVLObj03_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID        0

/**
 * Signal ShcVLObj03_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID        255

/**
 * Signal ShcVLObj03_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID Value Table for Signal ShcVLObj03_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type Signal ShcVLObj03_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj03_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj03_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj03_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj03_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(buf, 14)

/**
 * Signal ShcVLObj03_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj03_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type      14

/**
 * Signal ShcVLObj03_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type        0

/**
 * Signal ShcVLObj03_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type        15

/**
 * Signal ShcVLObj03_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type Value Table for Signal ShcVLObj03_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos Signal ShcVLObj03_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj03_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj03_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj03_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj03_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(buf, 254)

/**
 * Signal ShcVLObj03_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj03_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos      254

/**
 * Signal ShcVLObj03_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos        0

/**
 * Signal ShcVLObj03_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos        240

/**
 * Signal ShcVLObj03_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos Value Table for Signal ShcVLObj03_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft Signal ShcVLObj03_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj03_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj03_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj03_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj03_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj03_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj03_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft      4094

/**
 * Signal ShcVLObj03_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft        0

/**
 * Signal ShcVLObj03_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft        4000

/**
 * Signal ShcVLObj03_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft Value Table for Signal ShcVLObj03_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight Signal ShcVLObj03_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj03_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj03_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj03_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj03_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj03_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj03_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight      4094

/**
 * Signal ShcVLObj03_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight        0

/**
 * Signal ShcVLObj03_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight        4000

/**
 * Signal ShcVLObj03_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight Value Table for Signal ShcVLObj03_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed Signal ShcVLObj03_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj03_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj03_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj03_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj03_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj03_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj03_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed      4094

/**
 * Signal ShcVLObj03_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed        0

/**
 * Signal ShcVLObj03_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed        4000

/**
 * Signal ShcVLObj03_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed Value Table for Signal ShcVLObj03_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist Signal ShcVLObj03_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj03_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj03_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj03_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj03_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj03_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(buf, 254)

/**
 * Signal ShcVLObj03_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj03_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist      254

/**
 * Signal ShcVLObj03_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist        0

/**
 * Signal ShcVLObj03_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist        250

/**
 * Signal ShcVLObj03_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist Value Table for Signal ShcVLObj03_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj03_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID Signal ShcVLObj02_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID        0, 0, 0, 8

/**
 * Signal ShcVLObj02_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj02_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj02_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj02_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(buf, 254)

/**
 * Signal ShcVLObj02_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj02_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID      254

/**
 * Signal ShcVLObj02_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID        0

/**
 * Signal ShcVLObj02_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID        255

/**
 * Signal ShcVLObj02_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID Value Table for Signal ShcVLObj02_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type Signal ShcVLObj02_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Object type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type        0, 0, 0, 4

/**
 * Signal ShcVLObj02_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcVLObj02_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcVLObj02_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj02_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(buf, 14)

/**
 * Signal ShcVLObj02_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcVLObj02_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type      14

/**
 * Signal ShcVLObj02_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type        0

/**
 * Signal ShcVLObj02_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type        15

/**
 * Signal ShcVLObj02_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type Value Table for Signal ShcVLObj02_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry reflectionInfraTrafficSignMedium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_reflectionInfraTrafficSignMedium    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry reflectionInfraTrafficSignStrong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_reflectionInfraTrafficSignStrong    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry precedingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_precedingObjPredicted    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry oncomingObjPredicted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_oncomingObjPredicted    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry precedingObjRearLampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_precedingObjRearLampDetected    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry oncomingObjHeadlampDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_oncomingObjHeadlampDetected    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_Type_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos Signal ShcVLObj02_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos        0, 0, 0, 8

/**
 * Signal ShcVLObj02_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj02_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj02_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj02_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(buf, 254)

/**
 * Signal ShcVLObj02_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal ShcVLObj02_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos      254

/**
 * Signal ShcVLObj02_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos        0

/**
 * Signal ShcVLObj02_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos        240

/**
 * Signal ShcVLObj02_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos Value Table for Signal ShcVLObj02_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft Signal ShcVLObj02_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position left
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft        0, 0, 0, 12

/**
 * Signal ShcVLObj02_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj02_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj02_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj02_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(buf, 4094)

/**
 * Signal ShcVLObj02_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj02_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft      4094

/**
 * Signal ShcVLObj02_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft        0

/**
 * Signal ShcVLObj02_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft        4000

/**
 * Signal ShcVLObj02_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft Value Table for Signal ShcVLObj02_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight Signal ShcVLObj02_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position right
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight        0, 0, 0, 12

/**
 * Signal ShcVLObj02_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj02_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj02_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj02_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(buf, 4094)

/**
 * Signal ShcVLObj02_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj02_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight      4094

/**
 * Signal ShcVLObj02_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight        0

/**
 * Signal ShcVLObj02_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight        4000

/**
 * Signal ShcVLObj02_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight Value Table for Signal ShcVLObj02_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed Signal ShcVLObj02_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object speed
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed        0, 0, 0, 12

/**
 * Signal ShcVLObj02_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed      0, 0, 0, 12, 4094

/**
 * Get signal ShcVLObj02_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcVLObj02_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcVLObj02_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(buf, 4094)

/**
 * Signal ShcVLObj02_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcVLObj02_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed      4094

/**
 * Signal ShcVLObj02_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed        0

/**
 * Signal ShcVLObj02_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed        4000

/**
 * Signal ShcVLObj02_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed Value Table for Signal ShcVLObj02_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorSpeed_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist Signal ShcVLObj02_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcVLObj02_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist        0, 0, 0, 8

/**
 * Signal ShcVLObj02_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcVLObj02_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcVLObj02_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcVLObj02_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(buf, 254)

/**
 * Signal ShcVLObj02_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcVLObj02_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist      254

/**
 * Signal ShcVLObj02_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist        0

/**
 * Signal ShcVLObj02_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist        250

/**
 * Signal ShcVLObj02_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist Value Table for Signal ShcVLObj02_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcVLObj02_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition Signal GearLeverPosition of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal GearLeverPosition configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0, 0, 0, 4

/**
 * Signal GearLeverPosition setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition      0, 0, 0, 4, 0

/**
 * Get signal GearLeverPosition from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal GearLeverPosition in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal GearLeverPosition in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf, 0)

/**
 * Signal GearLeverPosition value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(x, fmt) \
	((x) * fmt)

/**
 * Signal GearLeverPosition raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition      0

/**
 * Signal GearLeverPosition raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0

/**
 * Signal GearLeverPosition raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        15

/**
 * Signal GearLeverPosition raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition Value Table for Signal GearLeverPosition in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Failure_F.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Failure_F           15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Tip_E.
 *
 * in D
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Tip_E               14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Tip_D_D.
 *
 * in S
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Tip_D_D             13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_C.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_C          12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_B_B.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_B_B        11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Efficient_A.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Efficient_A         10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_9.
 *
 * S
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_9          9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_8_8.
 *
 * D
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_8_8        8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_7_7.
 *
 * N
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_7_7        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_6_6.
 *
 * R
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_6_6        6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_5_5.
 *
 * P
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_5_5        5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_4_4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_4_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_3_3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_3_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_2_2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_2_2        2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Initialization_1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Initialization_1    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Gear_0.
 *
 * shift in progress
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Gear_0              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition Signal GearShiftPosition of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal GearShiftPosition configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition        0, 0, 0, 4

/**
 * Signal GearShiftPosition setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition      0, 0, 0, 4, 0

/**
 * Get signal GearShiftPosition from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal GearShiftPosition in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal GearShiftPosition in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(buf, 0)

/**
 * Signal GearShiftPosition value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition(x, fmt) \
	((x) * fmt)

/**
 * Signal GearShiftPosition raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition      0

/**
 * Signal GearShiftPosition raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition        0

/**
 * Signal GearShiftPosition raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition        15

/**
 * Signal GearShiftPosition raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition Value Table for Signal GearShiftPosition in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Failure             15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Invalid             14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Reserved            13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position.
 *
 * 8
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position            12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_B.
 *
 * 8
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_B          11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Reserved_A.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Reserved_A          10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Reserved_9.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Reserved_9          9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_8.
 *
 * R
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_8          8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_7.
 *
 * 7
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_7          7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_6.
 *
 * 6
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_5.
 *
 * 5
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_4.
 *
 * 4
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_4          4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_3.
 *
 * 3
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_3          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_2.
 *
 * 2
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_2          2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_1.
 *
 * 1
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_1          1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition entry Position_0.
 *
 * P/N
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearShiftPosition_Position_0          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit Signal WheelPulseSensorRR_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorRR_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit        0, 0, 0, 1

/**
 * Signal WheelPulseSensorRR_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit      0, 0, 0, 1, 1

/**
 * Get signal WheelPulseSensorRR_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorRR_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorRR_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(buf, 1)

/**
 * Signal WheelPulseSensorRR_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorRR_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit      1

/**
 * Signal WheelPulseSensorRR_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit        0

/**
 * Signal WheelPulseSensorRR_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit        1

/**
 * Signal WheelPulseSensorRR_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit Value Table for Signal WheelPulseSensorRR_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit entry Init.
 *
 * or failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRR_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit Signal WheelPulseSensorRL_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorRL_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit        0, 0, 0, 1

/**
 * Signal WheelPulseSensorRL_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit      0, 0, 0, 1, 1

/**
 * Get signal WheelPulseSensorRL_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorRL_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorRL_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(buf, 1)

/**
 * Signal WheelPulseSensorRL_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorRL_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit      1

/**
 * Signal WheelPulseSensorRL_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit        0

/**
 * Signal WheelPulseSensorRL_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit        1

/**
 * Signal WheelPulseSensorRL_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit Value Table for Signal WheelPulseSensorRL_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit entry Init.
 *
 * or failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRL_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit Signal WheelPulseSensorFL_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorFL_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit        0, 0, 0, 1

/**
 * Signal WheelPulseSensorFL_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit      0, 0, 0, 1, 1

/**
 * Get signal WheelPulseSensorFL_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorFL_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorFL_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(buf, 1)

/**
 * Signal WheelPulseSensorFL_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorFL_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit      1

/**
 * Signal WheelPulseSensorFL_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit        0

/**
 * Signal WheelPulseSensorFL_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit        1

/**
 * Signal WheelPulseSensorFL_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit Value Table for Signal WheelPulseSensorFL_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit entry Init.
 *
 * or failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit entry Normal.
 *
 * operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFL_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit Signal WheelPulseSensorFR_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorFR_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit        0, 0, 0, 1

/**
 * Signal WheelPulseSensorFR_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit      0, 0, 0, 1, 1

/**
 * Get signal WheelPulseSensorFR_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorFR_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorFR_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(buf, 1)

/**
 * Signal WheelPulseSensorFR_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorFR_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit      1

/**
 * Signal WheelPulseSensorFR_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit        0

/**
 * Signal WheelPulseSensorFR_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit        1

/**
 * Signal WheelPulseSensorFR_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit Value Table for Signal WheelPulseSensorFR_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit entry Init.
 *
 * or failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit entry Normal.
 *
 * operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFR_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR Signal WheelPulseIndicatorRR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorRR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorRR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorRR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorRR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorRR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf, 0)

/**
 * Signal WheelPulseIndicatorRR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorRR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR      0

/**
 * Signal WheelPulseIndicatorRR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0

/**
 * Signal WheelPulseIndicatorRR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        255

/**
 * Signal WheelPulseIndicatorRR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR Value Table for Signal WheelPulseIndicatorRR in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL Signal WheelPulseIndicatorRL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorRL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorRL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorRL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorRL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorRL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf, 0)

/**
 * Signal WheelPulseIndicatorRL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorRL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL      0

/**
 * Signal WheelPulseIndicatorRL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0

/**
 * Signal WheelPulseIndicatorRL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        255

/**
 * Signal WheelPulseIndicatorRL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL Value Table for Signal WheelPulseIndicatorRL in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR Signal WheelPulseIndicatorFR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorFR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorFR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorFR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorFR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorFR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf, 0)

/**
 * Signal WheelPulseIndicatorFR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorFR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR      0

/**
 * Signal WheelPulseIndicatorFR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0

/**
 * Signal WheelPulseIndicatorFR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        255

/**
 * Signal WheelPulseIndicatorFR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR Value Table for Signal WheelPulseIndicatorFR in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL Signal WheelPulseIndicatorFL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorFL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorFL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorFL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorFL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorFL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf, 0)

/**
 * Signal WheelPulseIndicatorFL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorFL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL      0

/**
 * Signal WheelPulseIndicatorFL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0

/**
 * Signal WheelPulseIndicatorFL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        255

/**
 * Signal WheelPulseIndicatorFL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL Value Table for Signal WheelPulseIndicatorFL in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC Signal Vehicle_CAN_25_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_25_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_25_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_25_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_25_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_25_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_25_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_25_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC      0

/**
 * Signal Vehicle_CAN_25_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC        0

/**
 * Signal Vehicle_CAN_25_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC        255

/**
 * Signal Vehicle_CAN_25_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter Signal Vehicle_CAN_25_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_25_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_25_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_25_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_25_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_25_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_25_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_25_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter      0

/**
 * Signal Vehicle_CAN_25_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter        0

/**
 * Signal Vehicle_CAN_25_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter        15

/**
 * Signal Vehicle_CAN_25_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_25_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal Signal ClutchPedal of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ClutchPedal configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal        0, 0, 0, 1

/**
 * Signal ClutchPedal setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal      0, 0, 0, 1, 0

/**
 * Get signal ClutchPedal from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ClutchPedal in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ClutchPedal in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(buf, 0)

/**
 * Signal ClutchPedal value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal(x, fmt) \
	((x) * fmt)

/**
 * Signal ClutchPedal raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal      0

/**
 * Signal ClutchPedal raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal        0

/**
 * Signal ClutchPedal raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal        1

/**
 * Signal ClutchPedal raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal Value Table for Signal ClutchPedal in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal entry Pressed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal_Pressed             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal entry Not.
 *
 * Pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchPedal_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable Signal DecelerationEnable of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DecelerationEnable configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable        0, 0, 0, 1

/**
 * Signal DecelerationEnable setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable      0, 0, 0, 1, 0

/**
 * Get signal DecelerationEnable from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DecelerationEnable in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DecelerationEnable in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(buf, 0)

/**
 * Signal DecelerationEnable value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable(x, fmt) \
	((x) * fmt)

/**
 * Signal DecelerationEnable raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable      0

/**
 * Signal DecelerationEnable raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable        0

/**
 * Signal DecelerationEnable raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable        1

/**
 * Signal DecelerationEnable raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable Value Table for Signal DecelerationEnable in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable entry Active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable_Active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable entry Not.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DecelerationEnable_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive Signal EmergencyBrakeActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EmergencyBrakeActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive        0, 0, 0, 1

/**
 * Signal EmergencyBrakeActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive      0, 0, 0, 1, 0

/**
 * Get signal EmergencyBrakeActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EmergencyBrakeActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EmergencyBrakeActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(buf, 0)

/**
 * Signal EmergencyBrakeActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive(x, fmt) \
	((x) * fmt)

/**
 * Signal EmergencyBrakeActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive      0

/**
 * Signal EmergencyBrakeActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive        0

/**
 * Signal EmergencyBrakeActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive        1

/**
 * Signal EmergencyBrakeActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive Value Table for Signal EmergencyBrakeActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive entry Active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive_Active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive entry Not.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EmergencyBrakeActive_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus Signal ClutchTemperatureStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ClutchTemperatureStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus        0, 0, 0, 2

/**
 * Signal ClutchTemperatureStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus      0, 0, 0, 2, 0

/**
 * Get signal ClutchTemperatureStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ClutchTemperatureStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ClutchTemperatureStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(buf, 0)

/**
 * Signal ClutchTemperatureStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal ClutchTemperatureStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus      0

/**
 * Signal ClutchTemperatureStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus        0

/**
 * Signal ClutchTemperatureStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus        3

/**
 * Signal ClutchTemperatureStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus Value Table for Signal ClutchTemperatureStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus entry Clutch.
 *
 * protection active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus_Clutch              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus entry Overheat.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus_Overheat            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus entry Normal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus_Normal              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ClutchTemperatureStatus_Initialization      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus Signal BrakeTemperatureStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal BrakeTemperatureStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus        0, 0, 0, 1

/**
 * Signal BrakeTemperatureStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus      0, 0, 0, 1, 0

/**
 * Get signal BrakeTemperatureStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal BrakeTemperatureStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal BrakeTemperatureStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(buf, 0)

/**
 * Signal BrakeTemperatureStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal BrakeTemperatureStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus      0

/**
 * Signal BrakeTemperatureStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus        0

/**
 * Signal BrakeTemperatureStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus        1

/**
 * Signal BrakeTemperatureStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus Value Table for Signal BrakeTemperatureStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus entry Overheat.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus_Overheat            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus entry Normal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_BrakeTemperatureStatus_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention Signal ASR_Intervention of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ASR_Intervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention        0, 0, 0, 1

/**
 * Signal ASR_Intervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention      0, 0, 0, 1, 0

/**
 * Get signal ASR_Intervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ASR_Intervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ASR_Intervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(buf, 0)

/**
 * Signal ASR_Intervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention(x, fmt) \
	((x) * fmt)

/**
 * Signal ASR_Intervention raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention      0

/**
 * Signal ASR_Intervention raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention        0

/**
 * Signal ASR_Intervention raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention        1

/**
 * Signal ASR_Intervention raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention Value Table for Signal ASR_Intervention in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention entry ASR.
 *
 * Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention_ASR                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention entry No.
 *
 * ASR Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASR_Intervention_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention Signal EBV_Intervention of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EBV_Intervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention        0, 0, 0, 1

/**
 * Signal EBV_Intervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention      0, 0, 0, 1, 0

/**
 * Get signal EBV_Intervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EBV_Intervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EBV_Intervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(buf, 0)

/**
 * Signal EBV_Intervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention(x, fmt) \
	((x) * fmt)

/**
 * Signal EBV_Intervention raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention      0

/**
 * Signal EBV_Intervention raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention        0

/**
 * Signal EBV_Intervention raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention        1

/**
 * Signal EBV_Intervention raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention Value Table for Signal EBV_Intervention in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention entry EBV.
 *
 * Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention_EBV                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention entry No.
 *
 * EBV Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EBV_Intervention_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention Signal MSR_Intervention of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal MSR_Intervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention        0, 0, 0, 1

/**
 * Signal MSR_Intervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention      0, 0, 0, 1, 0

/**
 * Get signal MSR_Intervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal MSR_Intervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal MSR_Intervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(buf, 0)

/**
 * Signal MSR_Intervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention(x, fmt) \
	((x) * fmt)

/**
 * Signal MSR_Intervention raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention      0

/**
 * Signal MSR_Intervention raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention        0

/**
 * Signal MSR_Intervention raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention        1

/**
 * Signal MSR_Intervention raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention Value Table for Signal MSR_Intervention in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention entry MSR.
 *
 * Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention_MSR                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention entry NO.
 *
 * MSR Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MSR_Intervention_NO                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention Signal EDS_Intervention of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EDS_Intervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention        0, 0, 0, 1

/**
 * Signal EDS_Intervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention      0, 0, 0, 1, 0

/**
 * Get signal EDS_Intervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EDS_Intervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EDS_Intervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(buf, 0)

/**
 * Signal EDS_Intervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention(x, fmt) \
	((x) * fmt)

/**
 * Signal EDS_Intervention raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention      0

/**
 * Signal EDS_Intervention raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention        0

/**
 * Signal EDS_Intervention raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention        1

/**
 * Signal EDS_Intervention raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention Value Table for Signal EDS_Intervention in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention entry EDS.
 *
 * Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention_EDS                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention entry No.
 *
 * EDS Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EDS_Intervention_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC Signal ESP_ConsistentWithACC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ESP_ConsistentWithACC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC        0, 0, 0, 1

/**
 * Signal ESP_ConsistentWithACC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC      0, 0, 0, 1, 0

/**
 * Get signal ESP_ConsistentWithACC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ESP_ConsistentWithACC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ESP_ConsistentWithACC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(buf, 0)

/**
 * Signal ESP_ConsistentWithACC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC(x, fmt) \
	((x) * fmt)

/**
 * Signal ESP_ConsistentWithACC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC      0

/**
 * Signal ESP_ConsistentWithACC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC        0

/**
 * Signal ESP_ConsistentWithACC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC        1

/**
 * Signal ESP_ConsistentWithACC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC Value Table for Signal ESP_ConsistentWithACC in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC entry ACCCount.
 *
 * not consistent with ESP
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC_ACCCount            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC entry ACC.
 *
 * Counter consistent with ESP
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_ConsistentWithACC_ACC                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive Signal ESP_StoppingProcessActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ESP_StoppingProcessActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive        0, 0, 0, 1

/**
 * Signal ESP_StoppingProcessActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive      0, 0, 0, 1, 0

/**
 * Get signal ESP_StoppingProcessActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ESP_StoppingProcessActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ESP_StoppingProcessActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(buf, 0)

/**
 * Signal ESP_StoppingProcessActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive(x, fmt) \
	((x) * fmt)

/**
 * Signal ESP_StoppingProcessActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive      0

/**
 * Signal ESP_StoppingProcessActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive        0

/**
 * Signal ESP_StoppingProcessActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive        1

/**
 * Signal ESP_StoppingProcessActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive Value Table for Signal ESP_StoppingProcessActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive entry Active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive_Active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive entry Not.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_StoppingProcessActive_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed Signal ESP_StandstillConfirmed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ESP_StandstillConfirmed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed        0, 0, 0, 1

/**
 * Signal ESP_StandstillConfirmed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed      0, 0, 0, 1, 0

/**
 * Get signal ESP_StandstillConfirmed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ESP_StandstillConfirmed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ESP_StandstillConfirmed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(buf, 0)

/**
 * Signal ESP_StandstillConfirmed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed(x, fmt) \
	((x) * fmt)

/**
 * Signal ESP_StandstillConfirmed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed      0

/**
 * Signal ESP_StandstillConfirmed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed        0

/**
 * Signal ESP_StandstillConfirmed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed        1

/**
 * Signal ESP_StandstillConfirmed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed Value Table for Signal ESP_StandstillConfirmed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed entry Standstill.
 *
 * Pos confirmed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed_Standstill          1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed entry Standstill_0.
 *
 * Pos not confirmed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_StandstillConfirmed_Standstill_0        0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive Signal ESP_AutoholdActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ESP_AutoholdActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive        0, 0, 0, 1

/**
 * Signal ESP_AutoholdActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive      0, 0, 0, 1, 0

/**
 * Get signal ESP_AutoholdActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ESP_AutoholdActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ESP_AutoholdActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(buf, 0)

/**
 * Signal ESP_AutoholdActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive(x, fmt) \
	((x) * fmt)

/**
 * Signal ESP_AutoholdActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive      0

/**
 * Signal ESP_AutoholdActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive        0

/**
 * Signal ESP_AutoholdActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive        1

/**
 * Signal ESP_AutoholdActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive Value Table for Signal ESP_AutoholdActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive entry ESP.
 *
 * Autohold active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive_ESP                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive entry ESP_0.
 *
 * Autohold not Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESP_AutoholdActive_ESP_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity Signal AirbagCrashIntensity of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AirbagCrashIntensity configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity        0, 0, 0, 2

/**
 * Signal AirbagCrashIntensity setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity      0, 0, 0, 2, 0

/**
 * Get signal AirbagCrashIntensity from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal AirbagCrashIntensity in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal AirbagCrashIntensity in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(buf, 0)

/**
 * Signal AirbagCrashIntensity value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity(x, fmt) \
	((x) * fmt)

/**
 * Signal AirbagCrashIntensity raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity      0

/**
 * Signal AirbagCrashIntensity raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity        0

/**
 * Signal AirbagCrashIntensity raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity        3

/**
 * Signal AirbagCrashIntensity raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity Value Table for Signal AirbagCrashIntensity in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity entry Intensity.
 *
 * level 2
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity_Intensity           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity entry Intensity_1.
 *
 * level 1
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity_Intensity_1         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity entry No.
 *
 * Crash
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AirbagCrashIntensity_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable Signal ECD_NotAvailable of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ECD_NotAvailable configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable        0, 0, 0, 1

/**
 * Signal ECD_NotAvailable setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable      0, 0, 0, 1, 1

/**
 * Get signal ECD_NotAvailable from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ECD_NotAvailable in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ECD_NotAvailable in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(buf, 1)

/**
 * Signal ECD_NotAvailable value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable(x, fmt) \
	((x) * fmt)

/**
 * Signal ECD_NotAvailable raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable      1

/**
 * Signal ECD_NotAvailable raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable        0

/**
 * Signal ECD_NotAvailable raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable        1

/**
 * Signal ECD_NotAvailable raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable Value Table for Signal ECD_NotAvailable in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable entry ECD.
 *
 * Not Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable_ECD                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable entry ECD_0.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ECD_NotAvailable_ECD_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure Signal ECD_Failure of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ECD_Failure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure        0, 0, 0, 1

/**
 * Signal ECD_Failure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure      0, 0, 0, 1, 0

/**
 * Get signal ECD_Failure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ECD_Failure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ECD_Failure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(buf, 0)

/**
 * Signal ECD_Failure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure(x, fmt) \
	((x) * fmt)

/**
 * Signal ECD_Failure raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure      0

/**
 * Signal ECD_Failure raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure        0

/**
 * Signal ECD_Failure raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure        1

/**
 * Signal ECD_Failure raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure Value Table for Signal ECD_Failure in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure entry ECD.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure_ECD                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure entry ECD_0.
 *
 * in operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ECD_Failure_ECD_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit Signal SteeringAngularSpeed_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SteeringAngularSpeed_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit        0, 0, 0, 1

/**
 * Signal SteeringAngularSpeed_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit      0, 0, 0, 1, 1

/**
 * Get signal SteeringAngularSpeed_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal SteeringAngularSpeed_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal SteeringAngularSpeed_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(buf, 1)

/**
 * Signal SteeringAngularSpeed_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal SteeringAngularSpeed_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit      1

/**
 * Signal SteeringAngularSpeed_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit        0

/**
 * Signal SteeringAngularSpeed_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit        1

/**
 * Signal SteeringAngularSpeed_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit Value Table for Signal SteeringAngularSpeed_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringAngularSpeed_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit Signal SteeringWheelAngle_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SteeringWheelAngle_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit        0, 0, 0, 1

/**
 * Signal SteeringWheelAngle_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit      0, 0, 0, 1, 1

/**
 * Get signal SteeringWheelAngle_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal SteeringWheelAngle_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal SteeringWheelAngle_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(buf, 1)

/**
 * Signal SteeringWheelAngle_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal SteeringWheelAngle_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit      1

/**
 * Signal SteeringWheelAngle_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit        0

/**
 * Signal SteeringWheelAngle_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit        1

/**
 * Signal SteeringWheelAngle_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit Value Table for Signal SteeringWheelAngle_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringWheelAngle_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit Signal WheelCircumference_QBit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelCircumference_QBit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit        0, 0, 0, 1

/**
 * Signal WheelCircumference_QBit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit      0, 0, 0, 1, 1

/**
 * Get signal WheelCircumference_QBit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelCircumference_QBit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelCircumference_QBit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(buf, 1)

/**
 * Signal WheelCircumference_QBit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelCircumference_QBit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit      1

/**
 * Signal WheelCircumference_QBit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit        0

/**
 * Signal WheelCircumference_QBit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit        1

/**
 * Signal WheelCircumference_QBit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit Value Table for Signal WheelCircumference_QBit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference_QBit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit Signal BrakePressure_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal BrakePressure_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit        0, 0, 0, 1

/**
 * Signal BrakePressure_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit      0, 0, 0, 1, 1

/**
 * Get signal BrakePressure_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal BrakePressure_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal BrakePressure_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(buf, 1)

/**
 * Signal BrakePressure_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal BrakePressure_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit      1

/**
 * Signal BrakePressure_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit        0

/**
 * Signal BrakePressure_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit        1

/**
 * Signal BrakePressure_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit Value Table for Signal BrakePressure_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit entry Normal.
 *
 * operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_BrakePressure_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit Signal DriverBraked_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DriverBraked_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit        0, 0, 0, 1

/**
 * Signal DriverBraked_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit      0, 0, 0, 1, 1

/**
 * Get signal DriverBraked_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DriverBraked_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DriverBraked_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(buf, 1)

/**
 * Signal DriverBraked_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal DriverBraked_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit      1

/**
 * Signal DriverBraked_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit        0

/**
 * Signal DriverBraked_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit        1

/**
 * Signal DriverBraked_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit Value Table for Signal DriverBraked_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit entry Init.
 *
 * or failure values
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverBraked_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit Signal Velocity_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Velocity_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit        0, 0, 0, 1

/**
 * Signal Velocity_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit      0, 0, 0, 1, 1

/**
 * Get signal Velocity_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Velocity_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Velocity_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(buf, 1)

/**
 * Signal Velocity_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal Velocity_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit      1

/**
 * Signal Velocity_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit        0

/**
 * Signal Velocity_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit        1

/**
 * Signal Velocity_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit Value Table for Signal Velocity_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Velocity_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit Signal YawRate_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal YawRate_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit        0, 0, 0, 1

/**
 * Signal YawRate_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit      0, 0, 0, 1, 1

/**
 * Get signal YawRate_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal YawRate_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal YawRate_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(buf, 1)

/**
 * Signal YawRate_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal YawRate_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit      1

/**
 * Signal YawRate_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit        0

/**
 * Signal YawRate_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit        1

/**
 * Signal YawRate_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit Value Table for Signal YawRate_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit entry Init.
 *
 * or Failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_YawRate_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs Signal NumberOfCogs of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NumberOfCogs configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs        0, 0, 0, 8

/**
 * Signal NumberOfCogs setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs      0, 0, 0, 8, 0

/**
 * Get signal NumberOfCogs from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal NumberOfCogs in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal NumberOfCogs in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(buf, 0)

/**
 * Signal NumberOfCogs value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs(x, fmt) \
	((x) * fmt)

/**
 * Signal NumberOfCogs raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs      0

/**
 * Signal NumberOfCogs raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs        0

/**
 * Signal NumberOfCogs raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs        255

/**
 * Signal NumberOfCogs raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NumberOfCogs        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference Signal WheelCircumference of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelCircumference configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference        0, 0, 0, 12

/**
 * Signal WheelCircumference setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference      0, 0, 0, 12, 0

/**
 * Get signal WheelCircumference from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal WheelCircumference in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal WheelCircumference in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(buf, 0)

/**
 * Signal WheelCircumference value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelCircumference raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference      0

/**
 * Signal WheelCircumference raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference        0

/**
 * Signal WheelCircumference raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference        4095

/**
 * Signal WheelCircumference raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelCircumference        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC Signal Vehicle_CAN_21_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_21_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_21_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_21_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_21_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_21_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_21_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_21_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC      0

/**
 * Signal Vehicle_CAN_21_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC        0

/**
 * Signal Vehicle_CAN_21_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC        255

/**
 * Signal Vehicle_CAN_21_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter Signal Vehicle_CAN_21_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_21_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_21_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_21_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_21_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_21_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_21_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_21_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter      0

/**
 * Signal Vehicle_CAN_21_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter        0

/**
 * Signal Vehicle_CAN_21_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter        15

/**
 * Signal Vehicle_CAN_21_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_21_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor Signal DriverSeatPositionSensor of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DriverSeatPositionSensor configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor        0, 0, 0, 2

/**
 * Signal DriverSeatPositionSensor setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor      0, 0, 0, 2, 0

/**
 * Get signal DriverSeatPositionSensor from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DriverSeatPositionSensor in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DriverSeatPositionSensor in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(buf, 0)

/**
 * Signal DriverSeatPositionSensor value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor(x, fmt) \
	((x) * fmt)

/**
 * Signal DriverSeatPositionSensor raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor      0

/**
 * Signal DriverSeatPositionSensor raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor        0

/**
 * Signal DriverSeatPositionSensor raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor        3

/**
 * Signal DriverSeatPositionSensor raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor Value Table for Signal DriverSeatPositionSensor in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor entry Lean.
 *
 * Forward
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor_Lean                3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor entry Lean_2.
 *
 * backward
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor_Lean_2              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor_Failure             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor entry Not.
 *
 * Available 
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatPositionSensor_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive Signal ParkingBrakeActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ParkingBrakeActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive        0, 0, 0, 1

/**
 * Signal ParkingBrakeActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive      0, 0, 0, 1, 0

/**
 * Get signal ParkingBrakeActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ParkingBrakeActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ParkingBrakeActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(buf, 0)

/**
 * Signal ParkingBrakeActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive(x, fmt) \
	((x) * fmt)

/**
 * Signal ParkingBrakeActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive      0

/**
 * Signal ParkingBrakeActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive        0

/**
 * Signal ParkingBrakeActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive        1

/**
 * Signal ParkingBrakeActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive Value Table for Signal ParkingBrakeActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive entry Parking.
 *
 * brake is Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive_Parking             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive entry Parking_0.
 *
 * brake is not Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ParkingBrakeActive_Parking_0           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status Signal EPB_Status of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EPB_Status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status        0, 0, 0, 2

/**
 * Signal EPB_Status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status      0, 0, 0, 2, 0

/**
 * Get signal EPB_Status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal EPB_Status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal EPB_Status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(buf, 0)

/**
 * Signal EPB_Status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status(x, fmt) \
	((x) * fmt)

/**
 * Signal EPB_Status raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status      0

/**
 * Signal EPB_Status raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status        0

/**
 * Signal EPB_Status raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status        3

/**
 * Signal EPB_Status raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status Value Table for Signal EPB_Status in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_Status entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_Status_Failure             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_Status entry Actuator.
 *
 * running
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_Status_Actuator            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_Status entry Brake.
 *
 * locked
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_Status_Brake               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_Status entry Brake_0.
 *
 * unlocked
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_Status_Brake_0             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit Signal EPB_SwitchPosition_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EPB_SwitchPosition_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit        0, 0, 0, 1

/**
 * Signal EPB_SwitchPosition_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit      0, 0, 0, 1, 1

/**
 * Get signal EPB_SwitchPosition_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EPB_SwitchPosition_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EPB_SwitchPosition_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(buf, 1)

/**
 * Signal EPB_SwitchPosition_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal EPB_SwitchPosition_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit      1

/**
 * Signal EPB_SwitchPosition_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit        0

/**
 * Signal EPB_SwitchPosition_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit        1

/**
 * Signal EPB_SwitchPosition_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit Value Table for Signal EPB_SwitchPosition_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit entry Init.
 *
 * or failure value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce Signal EPB_BrakeForce of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EPB_BrakeForce configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce        0, 0, 0, 5

/**
 * Signal EPB_BrakeForce setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce      0, 0, 0, 5, 30

/**
 * Get signal EPB_BrakeForce from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal EPB_BrakeForce in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal EPB_BrakeForce in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(buf, 30)

/**
 * Signal EPB_BrakeForce value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce(x, fmt) \
	((x) * fmt)

/**
 * Signal EPB_BrakeForce raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce      30

/**
 * Signal EPB_BrakeForce raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce        0

/**
 * Signal EPB_BrakeForce raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce        31

/**
 * Signal EPB_BrakeForce raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce Value Table for Signal EPB_BrakeForce in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce_Failure             31

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_BrakeForce_Initialization      30

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition Signal EPB_SwitchPosition of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EPB_SwitchPosition configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition        0, 0, 0, 2

/**
 * Signal EPB_SwitchPosition setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition      0, 0, 0, 2, 0

/**
 * Get signal EPB_SwitchPosition from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal EPB_SwitchPosition in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal EPB_SwitchPosition in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(buf, 0)

/**
 * Signal EPB_SwitchPosition value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition(x, fmt) \
	((x) * fmt)

/**
 * Signal EPB_SwitchPosition raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition      0

/**
 * Signal EPB_SwitchPosition raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition        0

/**
 * Signal EPB_SwitchPosition raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition        3

/**
 * Signal EPB_SwitchPosition raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition Value Table for Signal EPB_SwitchPosition in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Failure             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition entry Close.
 *
 * request from driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Close               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition entry Open.
 *
 * request from driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_Open                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition entry No.
 *
 * request
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_SwitchPosition_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus Signal EPB_ErrorStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EPB_ErrorStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus        0, 0, 0, 2

/**
 * Signal EPB_ErrorStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus      0, 0, 0, 2, 0

/**
 * Get signal EPB_ErrorStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal EPB_ErrorStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal EPB_ErrorStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(buf, 0)

/**
 * Signal EPB_ErrorStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal EPB_ErrorStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus      0

/**
 * Signal EPB_ErrorStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus        0

/**
 * Signal EPB_ErrorStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus        3

/**
 * Signal EPB_ErrorStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus Value Table for Signal EPB_ErrorStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus entry Permanent.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus_Permanent           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus entry Temporary.
 *
 * failure level 2
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus_Temporary           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus entry Temporary_1.
 *
 * failure, level 1
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus_Temporary_1         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus entry No.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EPB_ErrorStatus_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect Signal TrailerBrakeLampDefect of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TrailerBrakeLampDefect configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect        0, 0, 0, 1

/**
 * Signal TrailerBrakeLampDefect setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect      0, 0, 0, 1, 0

/**
 * Get signal TrailerBrakeLampDefect from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal TrailerBrakeLampDefect in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal TrailerBrakeLampDefect in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(buf, 0)

/**
 * Signal TrailerBrakeLampDefect value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect(x, fmt) \
	((x) * fmt)

/**
 * Signal TrailerBrakeLampDefect raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect      0

/**
 * Signal TrailerBrakeLampDefect raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect        0

/**
 * Signal TrailerBrakeLampDefect raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect        1

/**
 * Signal TrailerBrakeLampDefect raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect Value Table for Signal TrailerBrakeLampDefect in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect entry Trailer.
 *
 * brake lamp defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect_Trailer             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect entry No.
 *
 * Defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TrailerBrakeLampDefect_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect Signal VehicleBrakeLampsDefect of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VehicleBrakeLampsDefect configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect        0, 0, 0, 2

/**
 * Signal VehicleBrakeLampsDefect setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect      0, 0, 0, 2, 0

/**
 * Get signal VehicleBrakeLampsDefect from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VehicleBrakeLampsDefect in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VehicleBrakeLampsDefect in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(buf, 0)

/**
 * Signal VehicleBrakeLampsDefect value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect(x, fmt) \
	((x) * fmt)

/**
 * Signal VehicleBrakeLampsDefect raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect      0

/**
 * Signal VehicleBrakeLampsDefect raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect        0

/**
 * Signal VehicleBrakeLampsDefect raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect        3

/**
 * Signal VehicleBrakeLampsDefect raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect Value Table for Signal VehicleBrakeLampsDefect in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect entry Center.
 *
 * brake lamp defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect_Center              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect entry Right.
 *
 * brake lamp defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect_Right               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect entry Left.
 *
 * brake lamp defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect_Left                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect entry No.
 *
 * defect
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleBrakeLampsDefect_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen Signal VehicleDoorOpen of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VehicleDoorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen        0, 0, 0, 3

/**
 * Signal VehicleDoorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen      0, 0, 0, 3, 0

/**
 * Get signal VehicleDoorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal VehicleDoorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal VehicleDoorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(buf, 0)

/**
 * Signal VehicleDoorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen(x, fmt) \
	((x) * fmt)

/**
 * Signal VehicleDoorOpen raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen      0

/**
 * Signal VehicleDoorOpen raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen        0

/**
 * Signal VehicleDoorOpen raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen        7

/**
 * Signal VehicleDoorOpen raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen Value Table for Signal VehicleDoorOpen in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen entry Rear.
 *
 * right door opened
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen_Rear                4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen entry Rear_3.
 *
 * left door opened
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen_Rear_3              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen entry Passanger.
 *
 * door opened
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen_Passanger           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen entry Driver.
 *
 * door opened
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen_Driver              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen entry All.
 *
 * doors are Closed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleDoorOpen_All                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus Signal DriverSeatBeltStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DriverSeatBeltStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus        0, 0, 0, 2

/**
 * Signal DriverSeatBeltStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus      0, 0, 0, 2, 1

/**
 * Get signal DriverSeatBeltStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DriverSeatBeltStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DriverSeatBeltStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(buf, 1)

/**
 * Signal DriverSeatBeltStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal DriverSeatBeltStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus      1

/**
 * Signal DriverSeatBeltStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus        0

/**
 * Signal DriverSeatBeltStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus        3

/**
 * Signal DriverSeatBeltStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus Value Table for Signal DriverSeatBeltStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus entry Locked.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus_Locked              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus entry Unlocked.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus_Unlocked            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus entry Failure.
 *
 * or Initialization
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus_Failure             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus entry Not.
 *
 * in Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DriverSeatBeltStatus_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram Signal RequestedDrivingProgram of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RequestedDrivingProgram configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram        0, 0, 0, 4

/**
 * Signal RequestedDrivingProgram setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram      0, 0, 0, 4, 0

/**
 * Get signal RequestedDrivingProgram from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal RequestedDrivingProgram in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal RequestedDrivingProgram in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(buf, 0)

/**
 * Signal RequestedDrivingProgram value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram(x, fmt) \
	((x) * fmt)

/**
 * Signal RequestedDrivingProgram raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram      0

/**
 * Signal RequestedDrivingProgram raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram        0

/**
 * Signal RequestedDrivingProgram raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram        15

/**
 * Signal RequestedDrivingProgram raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram Value Table for Signal RequestedDrivingProgram in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving.
 *
 * Program 15
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving             15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_E.
 *
 * Program 14
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_E           14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_D.
 *
 * Program 13
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_D           13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_C.
 *
 * Program 12
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_C           12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_B.
 *
 * Program 11
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_B           11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_A.
 *
 * Program 10
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_A           10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_9.
 *
 * Program 8
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_9           9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_8.
 *
 * Program 8
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_8           8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_7.
 *
 * Program 7
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_7           7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_6.
 *
 * Program 6
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_6           6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_5.
 *
 * Program 5
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_5           5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_4.
 *
 * Program 4
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_4           4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_3.
 *
 * Program 3
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_3           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_2.
 *
 * Program 2
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_2           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry Driving_1.
 *
 * Program 1
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_Driving_1           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram entry No.
 *
 * Driving Program
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RequestedDrivingProgram_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType Signal DisplayedSpeedUnitType of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DisplayedSpeedUnitType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType        0, 0, 0, 1

/**
 * Signal DisplayedSpeedUnitType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType      0, 0, 0, 1, 0

/**
 * Get signal DisplayedSpeedUnitType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DisplayedSpeedUnitType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DisplayedSpeedUnitType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(buf, 0)

/**
 * Signal DisplayedSpeedUnitType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType(x, fmt) \
	((x) * fmt)

/**
 * Signal DisplayedSpeedUnitType raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType      0

/**
 * Signal DisplayedSpeedUnitType raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType        0

/**
 * Signal DisplayedSpeedUnitType raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType        1

/**
 * Signal DisplayedSpeedUnitType raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType Value Table for Signal DisplayedSpeedUnitType in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType entry mph.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType_mph                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType entry kmh.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeedUnitType_kmh                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC Signal DisplayConsistentWithACC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DisplayConsistentWithACC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC        0, 0, 0, 1

/**
 * Signal DisplayConsistentWithACC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC      0, 0, 0, 1, 0

/**
 * Get signal DisplayConsistentWithACC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DisplayConsistentWithACC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DisplayConsistentWithACC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(buf, 0)

/**
 * Signal DisplayConsistentWithACC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC(x, fmt) \
	((x) * fmt)

/**
 * Signal DisplayConsistentWithACC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC      0

/**
 * Signal DisplayConsistentWithACC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC        0

/**
 * Signal DisplayConsistentWithACC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC        1

/**
 * Signal DisplayConsistentWithACC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC Value Table for Signal DisplayConsistentWithACC in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC entry ACC.
 *
 * Counter not consistent
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC entry ACC_0.
 *
 * Counter consistent
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayConsistentWithACC_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure Signal DisplayFailure of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DisplayFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure        0, 0, 0, 1

/**
 * Signal DisplayFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure      0, 0, 0, 1, 0

/**
 * Get signal DisplayFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DisplayFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DisplayFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(buf, 0)

/**
 * Signal DisplayFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure(x, fmt) \
	((x) * fmt)

/**
 * Signal DisplayFailure raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure      0

/**
 * Signal DisplayFailure raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure        0

/**
 * Signal DisplayFailure raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure        1

/**
 * Signal DisplayFailure raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure Value Table for Signal DisplayFailure in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure entry Display.
 *
 * in Failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure_Display             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure entry In.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayFailure_In                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed Signal DisplayedSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DisplayedSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed        0, 0, 0, 10

/**
 * Signal DisplayedSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed      0, 0, 0, 10, 0

/**
 * Get signal DisplayedSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x03) << 8) \
)

/**
 * Set signal DisplayedSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x03 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal DisplayedSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(buf, 0)

/**
 * Signal DisplayedSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed(x, fmt) \
	((x) * fmt * 8 / 25)

/**
 * Signal DisplayedSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed      0

/**
 * Signal DisplayedSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed        0

/**
 * Signal DisplayedSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed        1016

/**
 * Signal DisplayedSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DisplayedSpeed        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive Signal DisplayACCScreenActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DisplayACCScreenActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive        0, 0, 0, 1

/**
 * Signal DisplayACCScreenActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive      0, 0, 0, 1, 0

/**
 * Get signal DisplayACCScreenActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DisplayACCScreenActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DisplayACCScreenActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(buf, 0)

/**
 * Signal DisplayACCScreenActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive(x, fmt) \
	((x) * fmt)

/**
 * Signal DisplayACCScreenActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive      0

/**
 * Signal DisplayACCScreenActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive        0

/**
 * Signal DisplayACCScreenActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive        1

/**
 * Signal DisplayACCScreenActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive Value Table for Signal DisplayACCScreenActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive entry Active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive_Active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive entry Not.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DisplayACCScreenActive_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch Signal ACC_VSetPlusSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_VSetPlusSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch        0, 0, 0, 1

/**
 * Signal ACC_VSetPlusSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_VSetPlusSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_VSetPlusSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_VSetPlusSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(buf, 0)

/**
 * Signal ACC_VSetPlusSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_VSetPlusSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch      0

/**
 * Signal ACC_VSetPlusSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch        0

/**
 * Signal ACC_VSetPlusSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch        1

/**
 * Signal ACC_VSetPlusSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch Value Table for Signal ACC_VSetPlusSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch entry ACC.
 *
 * VSetPlusSw was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch entry ACC_0.
 *
 * VSetPlusSw was not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetPlusSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch Signal ACC_VSetMinusSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_VSetMinusSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch        0, 0, 0, 1

/**
 * Signal ACC_VSetMinusSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_VSetMinusSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_VSetMinusSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_VSetMinusSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(buf, 0)

/**
 * Signal ACC_VSetMinusSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_VSetMinusSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch      0

/**
 * Signal ACC_VSetMinusSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch        0

/**
 * Signal ACC_VSetMinusSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch        1

/**
 * Signal ACC_VSetMinusSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch Value Table for Signal ACC_VSetMinusSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch entry ACC.
 *
 * VSetMinusSw was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch entry ACC_0.
 *
 * VSetMinusSw not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VSetMinusSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches Signal ACC_TimegapSwitches of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_TimegapSwitches configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches        0, 0, 0, 2

/**
 * Signal ACC_TimegapSwitches setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches      0, 0, 0, 2, 0

/**
 * Get signal ACC_TimegapSwitches from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_TimegapSwitches in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_TimegapSwitches in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(buf, 0)

/**
 * Signal ACC_TimegapSwitches value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_TimegapSwitches raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches      0

/**
 * Signal ACC_TimegapSwitches raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches        0

/**
 * Signal ACC_TimegapSwitches raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches        3

/**
 * Signal ACC_TimegapSwitches raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches Value Table for Signal ACC_TimegapSwitches in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches entry ACC.
 *
 * Timegap toggle was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches_ACC                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches entry ACC_2.
 *
 * Timegap plus was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches_ACC_2               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches entry ACC_1.
 *
 * Timegap minus was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches_ACC_1               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches entry ACC_0.
 *
 * Timegap buttons not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TimegapSwitches_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure Signal ACC_SwitchFailure of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_SwitchFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure        0, 0, 0, 1

/**
 * Signal ACC_SwitchFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure      0, 0, 0, 1, 0

/**
 * Get signal ACC_SwitchFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_SwitchFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_SwitchFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(buf, 0)

/**
 * Signal ACC_SwitchFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_SwitchFailure raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure      0

/**
 * Signal ACC_SwitchFailure raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure        0

/**
 * Signal ACC_SwitchFailure raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure        1

/**
 * Signal ACC_SwitchFailure raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure Value Table for Signal ACC_SwitchFailure in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure_Failure             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure entry No.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_SwitchFailure_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch Signal ACC_SetSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_SetSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch        0, 0, 0, 1

/**
 * Signal ACC_SetSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_SetSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_SetSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_SetSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(buf, 0)

/**
 * Signal ACC_SetSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_SetSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch      0

/**
 * Signal ACC_SetSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch        0

/**
 * Signal ACC_SetSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch        1

/**
 * Signal ACC_SetSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch Value Table for Signal ACC_SetSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch entry ACC.
 *
 * SetSw pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch entry ACC_0.
 *
 * SetSw not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch Signal ACC_ResumeSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_ResumeSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch        0, 0, 0, 1

/**
 * Signal ACC_ResumeSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_ResumeSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_ResumeSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_ResumeSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(buf, 0)

/**
 * Signal ACC_ResumeSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_ResumeSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch      0

/**
 * Signal ACC_ResumeSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch        0

/**
 * Signal ACC_ResumeSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch        1

/**
 * Signal ACC_ResumeSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch Value Table for Signal ACC_ResumeSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch entry ACC.
 *
 * ResumeSw pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch entry ACC_0.
 *
 * ResumeSw not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_ResumeSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch Signal ACC_MainSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_MainSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch        0, 0, 0, 1

/**
 * Signal ACC_MainSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_MainSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_MainSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_MainSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(buf, 0)

/**
 * Signal ACC_MainSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_MainSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch      0

/**
 * Signal ACC_MainSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch        0

/**
 * Signal ACC_MainSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch        1

/**
 * Signal ACC_MainSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch Value Table for Signal ACC_MainSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch entry ACC.
 *
 * MainSw button pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch entry ACC_0.
 *
 * MainSw button not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_MainSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch Signal ACC_LimiterSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_LimiterSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch        0, 0, 0, 1

/**
 * Signal ACC_LimiterSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_LimiterSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_LimiterSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_LimiterSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(buf, 0)

/**
 * Signal ACC_LimiterSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_LimiterSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch      0

/**
 * Signal ACC_LimiterSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch        0

/**
 * Signal ACC_LimiterSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch        1

/**
 * Signal ACC_LimiterSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch Value Table for Signal ACC_LimiterSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch entry ACC.
 *
 * LimiterSw was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch entry ACC_0.
 *
 * LimSw was not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_LimiterSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch Signal ACC_CancelSwitch of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_CancelSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch        0, 0, 0, 1

/**
 * Signal ACC_CancelSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch      0, 0, 0, 1, 0

/**
 * Get signal ACC_CancelSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_CancelSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_CancelSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(buf, 0)

/**
 * Signal ACC_CancelSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_CancelSwitch raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch      0

/**
 * Signal ACC_CancelSwitch raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch        0

/**
 * Signal ACC_CancelSwitch raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch        1

/**
 * Signal ACC_CancelSwitch raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch Value Table for Signal ACC_CancelSwitch in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch entry ACC.
 *
 * CancelSwitch was pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch_ACC                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch entry ACC_0.
 *
 * CancelSwitch was not pressed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_CancelSwitch_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC Signal Vehicle_CAN_15_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_15_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_15_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_15_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_15_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_15_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_15_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_15_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC      0

/**
 * Signal Vehicle_CAN_15_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC        0

/**
 * Signal Vehicle_CAN_15_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC        255

/**
 * Signal Vehicle_CAN_15_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter Signal Vehicle_CAN_15_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_15_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_15_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_15_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_15_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_15_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_15_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_15_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter      0

/**
 * Signal Vehicle_CAN_15_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter        0

/**
 * Signal Vehicle_CAN_15_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter        15

/**
 * Signal Vehicle_CAN_15_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_15_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout Signal Gateway5Timeout of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gateway5Timeout configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout        0, 0, 0, 1

/**
 * Signal Gateway5Timeout setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout      0, 0, 0, 1, 0

/**
 * Get signal Gateway5Timeout from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Gateway5Timeout in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Gateway5Timeout in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(buf, 0)

/**
 * Signal Gateway5Timeout value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout(x, fmt) \
	((x) * fmt)

/**
 * Signal Gateway5Timeout raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout      0

/**
 * Signal Gateway5Timeout raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout        0

/**
 * Signal Gateway5Timeout raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout        1

/**
 * Signal Gateway5Timeout raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout Value Table for Signal Gateway5Timeout in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout entry Outdated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout_Outdated            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout entry Actual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway5Timeout_Actual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout Signal Gateway4Timeout of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gateway4Timeout configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout        0, 0, 0, 1

/**
 * Signal Gateway4Timeout setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout      0, 0, 0, 1, 0

/**
 * Get signal Gateway4Timeout from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Gateway4Timeout in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Gateway4Timeout in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(buf, 0)

/**
 * Signal Gateway4Timeout value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout(x, fmt) \
	((x) * fmt)

/**
 * Signal Gateway4Timeout raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout      0

/**
 * Signal Gateway4Timeout raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout        0

/**
 * Signal Gateway4Timeout raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout        1

/**
 * Signal Gateway4Timeout raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout Value Table for Signal Gateway4Timeout in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout entry Outdated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout_Outdated            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout entry Actual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway4Timeout_Actual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout Signal Gateway3Timeout of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gateway3Timeout configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout        0, 0, 0, 1

/**
 * Signal Gateway3Timeout setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout      0, 0, 0, 1, 0

/**
 * Get signal Gateway3Timeout from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Gateway3Timeout in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Gateway3Timeout in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(buf, 0)

/**
 * Signal Gateway3Timeout value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout(x, fmt) \
	((x) * fmt)

/**
 * Signal Gateway3Timeout raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout      0

/**
 * Signal Gateway3Timeout raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout        0

/**
 * Signal Gateway3Timeout raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout        1

/**
 * Signal Gateway3Timeout raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout Value Table for Signal Gateway3Timeout in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout entry Outdated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout_Outdated            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout entry Actual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway3Timeout_Actual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout Signal Gateway2Timeout of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gateway2Timeout configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout        0, 0, 0, 1

/**
 * Signal Gateway2Timeout setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout      0, 0, 0, 1, 0

/**
 * Get signal Gateway2Timeout from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Gateway2Timeout in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Gateway2Timeout in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(buf, 0)

/**
 * Signal Gateway2Timeout value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout(x, fmt) \
	((x) * fmt)

/**
 * Signal Gateway2Timeout raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout      0

/**
 * Signal Gateway2Timeout raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout        0

/**
 * Signal Gateway2Timeout raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout        1

/**
 * Signal Gateway2Timeout raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout Value Table for Signal Gateway2Timeout in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout entry Outdated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout_Outdated            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout entry Actual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway2Timeout_Actual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout Signal Gateway1Timeout of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gateway1Timeout configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout        0, 0, 0, 1

/**
 * Signal Gateway1Timeout setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout      0, 0, 0, 1, 0

/**
 * Get signal Gateway1Timeout from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal Gateway1Timeout in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal Gateway1Timeout in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(buf, 0)

/**
 * Signal Gateway1Timeout value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout(x, fmt) \
	((x) * fmt)

/**
 * Signal Gateway1Timeout raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout      0

/**
 * Signal Gateway1Timeout raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout        0

/**
 * Signal Gateway1Timeout raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout        1

/**
 * Signal Gateway1Timeout raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout Value Table for Signal Gateway1Timeout in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout entry Outdated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout_Outdated            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout entry Actual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gateway1Timeout_Actual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest Signal StartStop_DriverRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal StartStop_DriverRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest        0, 0, 0, 2

/**
 * Signal StartStop_DriverRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest      0, 0, 0, 2, 0

/**
 * Get signal StartStop_DriverRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal StartStop_DriverRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal StartStop_DriverRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(buf, 0)

/**
 * Signal StartStop_DriverRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal StartStop_DriverRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest      0

/**
 * Signal StartStop_DriverRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest        0

/**
 * Signal StartStop_DriverRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest        3

/**
 * Signal StartStop_DriverRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest Value Table for Signal StartStop_DriverRequest in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest entry Stop.
 *
 * requested by driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest_Stop                3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest entry Stop_2.
 *
 * released by driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest_Stop_2              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest entry Stop_1.
 *
 * forbidden by driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest_Stop_1              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_DriverRequest_Initialization      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit Signal VehicleMass_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VehicleMass_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit        0, 0, 0, 1

/**
 * Signal VehicleMass_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit      0, 0, 0, 1, 1

/**
 * Get signal VehicleMass_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal VehicleMass_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal VehicleMass_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(buf, 1)

/**
 * Signal VehicleMass_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal VehicleMass_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit      1

/**
 * Signal VehicleMass_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit        0

/**
 * Signal VehicleMass_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit        1

/**
 * Signal VehicleMass_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit Value Table for Signal VehicleMass_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit entry Init.
 *
 * or Failure Value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit Signal EngineRPM_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EngineRPM_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit        0, 0, 0, 1

/**
 * Signal EngineRPM_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit      0, 0, 0, 1, 1

/**
 * Get signal EngineRPM_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EngineRPM_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EngineRPM_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(buf, 1)

/**
 * Signal EngineRPM_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal EngineRPM_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit      1

/**
 * Signal EngineRPM_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit        0

/**
 * Signal EngineRPM_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit        1

/**
 * Signal EngineRPM_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit Value Table for Signal EngineRPM_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit entry Init.
 *
 * or Failure Value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM Signal EngineRPM of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EngineRPM configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM        0, 0, 0, 16

/**
 * Signal EngineRPM setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM      0, 0, 0, 16, 0

/**
 * Get signal EngineRPM from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
)

/**
 * Set signal EngineRPM in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal EngineRPM in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(buf, 0)

/**
 * Signal EngineRPM value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM(x, fmt) \
	((x) * fmt / 4)

/**
 * Signal EngineRPM raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM      0

/**
 * Signal EngineRPM raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM        0

/**
 * Signal EngineRPM raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM        65535

/**
 * Signal EngineRPM raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM Value Table for Signal EngineRPM in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineRPM entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineRPM
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineRPM_Failure             65535

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive Signal LimiterActive of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LimiterActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive        0, 0, 0, 1

/**
 * Signal LimiterActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive      0, 0, 0, 1, 0

/**
 * Get signal LimiterActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal LimiterActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal LimiterActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(buf, 0)

/**
 * Signal LimiterActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive(x, fmt) \
	((x) * fmt)

/**
 * Signal LimiterActive raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive      0

/**
 * Signal LimiterActive raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive        0

/**
 * Signal LimiterActive raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive        1

/**
 * Signal LimiterActive raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive Value Table for Signal LimiterActive in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LimiterActive entry Limiter.
 *
 * activated
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LimiterActive_Limiter             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LimiterActive entry Limiter_0.
 *
 * not activated
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LimiterActive
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LimiterActive_Limiter_0           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus Signal EngineControllerStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EngineControllerStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus        0, 0, 0, 3

/**
 * Signal EngineControllerStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus      0, 0, 0, 3, 1

/**
 * Get signal EngineControllerStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal EngineControllerStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal EngineControllerStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(buf, 1)

/**
 * Signal EngineControllerStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal EngineControllerStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus      1

/**
 * Signal EngineControllerStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus        0

/**
 * Signal EngineControllerStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus        7

/**
 * Signal EngineControllerStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus Value Table for Signal EngineControllerStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Irreversible.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Irreversible        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Reversible.
 *
 * failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Reversible          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Brake.
 *
 * only mode
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Brake               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Override.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Override            4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Active              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Passive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Passive             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Initialization      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus entry Mainswitch.
 *
 * off
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EngineControllerStatus_Mainswitch          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit Signal ThrottleRaw_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ThrottleRaw_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit        0, 0, 0, 1

/**
 * Signal ThrottleRaw_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit      0, 0, 0, 1, 1

/**
 * Get signal ThrottleRaw_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ThrottleRaw_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ThrottleRaw_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(buf, 1)

/**
 * Signal ThrottleRaw_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal ThrottleRaw_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit      1

/**
 * Signal ThrottleRaw_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit        0

/**
 * Signal ThrottleRaw_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit        1

/**
 * Signal ThrottleRaw_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit Value Table for Signal ThrottleRaw_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit entry Init.
 *
 * or Failure Value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ThrottleRaw_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit Signal RoadSlope_Qbit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RoadSlope_Qbit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit        0, 0, 0, 1

/**
 * Signal RoadSlope_Qbit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit      0, 0, 0, 1, 1

/**
 * Get signal RoadSlope_Qbit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal RoadSlope_Qbit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal RoadSlope_Qbit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(buf, 1)

/**
 * Signal RoadSlope_Qbit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit(x, fmt) \
	((x) * fmt)

/**
 * Signal RoadSlope_Qbit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit      1

/**
 * Signal RoadSlope_Qbit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit        0

/**
 * Signal RoadSlope_Qbit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit        1

/**
 * Signal RoadSlope_Qbit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit Value Table for Signal RoadSlope_Qbit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit entry Init.
 *
 * or Failure Value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit_Init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit entry Normal.
 *
 * Operation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Qbit_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope Signal RoadSlope of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RoadSlope configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope        0, 0, 0, 8

/**
 * Signal RoadSlope setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope      0, 0, 0, 8, 0

/**
 * Get signal RoadSlope from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal RoadSlope in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal RoadSlope in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(buf, 0)

/**
 * Signal RoadSlope value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope(x, fmt) \
	((x) * fmt * 4 / 5 + fmt * 508 / (-5))

/**
 * Signal RoadSlope raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope      0

/**
 * Signal RoadSlope raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope        0

/**
 * Signal RoadSlope raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope        254

/**
 * Signal RoadSlope raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope        -127

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope Value Table for Signal RoadSlope in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RoadSlope entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Failure             255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RoadSlope entry Init.
 *
 * Value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RoadSlope
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RoadSlope_Init                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass Signal VehicleMass of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VehicleMass configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass        0, 0, 0, 8

/**
 * Signal VehicleMass setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass      0, 0, 0, 8, 0

/**
 * Get signal VehicleMass from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal VehicleMass in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal VehicleMass in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(buf, 0)

/**
 * Signal VehicleMass value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass(x, fmt) \
	((x) * fmt * 32)

/**
 * Signal VehicleMass raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass      0

/**
 * Signal VehicleMass raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass        0

/**
 * Signal VehicleMass raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass        254

/**
 * Signal VehicleMass raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass Value Table for Signal VehicleMass in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMass entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMass
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMass_Failure             255

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status Signal StartStop_Status of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal StartStop_Status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status        0, 0, 0, 2

/**
 * Signal StartStop_Status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status      0, 0, 0, 2, 0

/**
 * Get signal StartStop_Status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal StartStop_Status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal StartStop_Status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(buf, 0)

/**
 * Signal StartStop_Status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status(x, fmt) \
	((x) * fmt)

/**
 * Signal StartStop_Status raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status      0

/**
 * Signal StartStop_Status raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status        0

/**
 * Signal StartStop_Status raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status        3

/**
 * Signal StartStop_Status raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status Value Table for Signal StartStop_Status in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status entry Active_.
 *
 * Active, partially cleared
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status_Active_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status entry Active__2.
 *
 * Active, fully cleared
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status_Active__2           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status entry Active__1.
 *
 * Active, not cleared
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status_Active__1           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status entry Not.
 *
 * available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_Status_Not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting Signal StartStop_EngineStarting of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal StartStop_EngineStarting configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting        0, 0, 0, 1

/**
 * Signal StartStop_EngineStarting setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting      0, 0, 0, 1, 0

/**
 * Get signal StartStop_EngineStarting from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal StartStop_EngineStarting in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal StartStop_EngineStarting in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(buf, 0)

/**
 * Signal StartStop_EngineStarting value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting(x, fmt) \
	((x) * fmt)

/**
 * Signal StartStop_EngineStarting raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting      0

/**
 * Signal StartStop_EngineStarting raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting        0

/**
 * Signal StartStop_EngineStarting raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting        1

/**
 * Signal StartStop_EngineStarting raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting Value Table for Signal StartStop_EngineStarting in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting entry Engine.
 *
 * starting is active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting_Engine              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting entry Engine_0.
 *
 * starting is not active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStarting_Engine_0            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping Signal StartStop_EngineStopping of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal StartStop_EngineStopping configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping        0, 0, 0, 1

/**
 * Signal StartStop_EngineStopping setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping      0, 0, 0, 1, 0

/**
 * Get signal StartStop_EngineStopping from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal StartStop_EngineStopping in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal StartStop_EngineStopping in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(buf, 0)

/**
 * Signal StartStop_EngineStopping value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping(x, fmt) \
	((x) * fmt)

/**
 * Signal StartStop_EngineStopping raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping      0

/**
 * Signal StartStop_EngineStopping raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping        0

/**
 * Signal StartStop_EngineStopping raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping        1

/**
 * Signal StartStop_EngineStopping raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping Value Table for Signal StartStop_EngineStopping in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping entry Engine.
 *
 * stopping is active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping_Engine              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping entry Engine_0.
 *
 * stopping is not active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping
 */
#define VECTOR__INDEPENDENT_SIG_MSG_StartStop_EngineStopping_Engine_0            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC Signal Vehicle_CAN_09_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_09_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_09_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_09_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_09_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_09_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_09_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_09_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC      0

/**
 * Signal Vehicle_CAN_09_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC        0

/**
 * Signal Vehicle_CAN_09_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC        255

/**
 * Signal Vehicle_CAN_09_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter Signal Vehicle_CAN_09_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_09_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_09_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_09_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_09_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_09_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_09_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_09_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter      0

/**
 * Signal Vehicle_CAN_09_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter        0

/**
 * Signal Vehicle_CAN_09_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter        15

/**
 * Signal Vehicle_CAN_09_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_09_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo Signal ACC_WarnInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_WarnInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo        0, 0, 0, 5

/**
 * Signal ACC_WarnInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo      0, 0, 0, 5, 0

/**
 * Get signal ACC_WarnInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal ACC_WarnInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal ACC_WarnInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(buf, 0)

/**
 * Signal ACC_WarnInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_WarnInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo      0

/**
 * Signal ACC_WarnInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo        0

/**
 * Signal ACC_WarnInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo        31

/**
 * Signal ACC_WarnInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_WarnInfo        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex Signal ACC_TORindex of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_TORindex configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex        0, 0, 0, 10

/**
 * Signal ACC_TORindex setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex      0, 0, 0, 10, 0

/**
 * Get signal ACC_TORindex from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x03) << 8) \
)

/**
 * Set signal ACC_TORindex in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x03 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal ACC_TORindex in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(buf, 0)

/**
 * Signal ACC_TORindex value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_TORindex raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex      0

/**
 * Signal ACC_TORindex raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex        0

/**
 * Signal ACC_TORindex raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex        1023

/**
 * Signal ACC_TORindex raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_TORindex        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker Signal ACC_TgapMarker of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_TgapMarker configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker        0, 0, 0, 1

/**
 * Signal ACC_TgapMarker setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker      0, 0, 0, 1, 0

/**
 * Get signal ACC_TgapMarker from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_TgapMarker in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_TgapMarker in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(buf, 0)

/**
 * Signal ACC_TgapMarker value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_TgapMarker raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker      0

/**
 * Signal ACC_TgapMarker raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker        0

/**
 * Signal ACC_TgapMarker raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker        1

/**
 * Signal ACC_TgapMarker raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker Value Table for Signal ACC_TgapMarker in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker entry Timegap.
 *
 * display requested
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker_Timegap             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker entry Timegap_0.
 *
 * display not requested
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_TgapMarker_Timegap_0           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent Signal ACC_TargetObjectPresent of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_TargetObjectPresent configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent        0, 0, 0, 2

/**
 * Signal ACC_TargetObjectPresent setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent      0, 0, 0, 2, 0

/**
 * Get signal ACC_TargetObjectPresent from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_TargetObjectPresent in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_TargetObjectPresent in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(buf, 0)

/**
 * Signal ACC_TargetObjectPresent value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_TargetObjectPresent raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent      0

/**
 * Signal ACC_TargetObjectPresent raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent        0

/**
 * Signal ACC_TargetObjectPresent raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent        3

/**
 * Signal ACC_TargetObjectPresent raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_TargetObjectPresent        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode Signal ACC_StatusMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_StatusMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode        0, 0, 0, 2

/**
 * Signal ACC_StatusMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode      0, 0, 0, 2, 0

/**
 * Get signal ACC_StatusMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_StatusMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_StatusMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(buf, 0)

/**
 * Signal ACC_StatusMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_StatusMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode      0

/**
 * Signal ACC_StatusMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode        0

/**
 * Signal ACC_StatusMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode        3

/**
 * Signal ACC_StatusMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusMode        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed Signal ACC_SetSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_SetSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed        0, 0, 0, 10

/**
 * Signal ACC_SetSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed      0, 0, 0, 10, 1023

/**
 * Get signal ACC_SetSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x03) << 8) \
)

/**
 * Set signal ACC_SetSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x03 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal ACC_SetSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(buf, 1023)

/**
 * Signal ACC_SetSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed(x, fmt) \
	((x) * fmt * 8 / 25)

/**
 * Signal ACC_SetSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed      1023

/**
 * Signal ACC_SetSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed        0

/**
 * Signal ACC_SetSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed        1023

/**
 * Signal ACC_SetSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed Value Table for Signal ACC_SetSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed entry Set.
 *
 * speed wil not be displayed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_SetSpeed_Set                 1023

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning Signal ACC_OpticalWarning of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_OpticalWarning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning        0, 0, 0, 1

/**
 * Signal ACC_OpticalWarning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning      0, 0, 0, 1, 0

/**
 * Get signal ACC_OpticalWarning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_OpticalWarning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_OpticalWarning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(buf, 0)

/**
 * Signal ACC_OpticalWarning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_OpticalWarning raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning      0

/**
 * Signal ACC_OpticalWarning raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning        0

/**
 * Signal ACC_OpticalWarning raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning        1

/**
 * Signal ACC_OpticalWarning raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_OpticalWarning        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus Signal ACC_DrivingProgramStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DrivingProgramStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus        0, 0, 0, 2

/**
 * Signal ACC_DrivingProgramStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus      0, 0, 0, 2, 0

/**
 * Get signal ACC_DrivingProgramStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_DrivingProgramStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_DrivingProgramStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(buf, 0)

/**
 * Signal ACC_DrivingProgramStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DrivingProgramStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus      0

/**
 * Signal ACC_DrivingProgramStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus        0

/**
 * Signal ACC_DrivingProgramStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus        3

/**
 * Signal ACC_DrivingProgramStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus Value Table for Signal ACC_DrivingProgramStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus entry Not.
 *
 * in synchron with driver
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus_Not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus entry Not_2.
 *
 * available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus_Not_2               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus entry Available.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus_Available           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgramStatus_Initialization      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram Signal ACC_DrivingProgram of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DrivingProgram configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram        0, 0, 0, 4

/**
 * Signal ACC_DrivingProgram setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram      0, 0, 0, 4, 0

/**
 * Get signal ACC_DrivingProgram from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ACC_DrivingProgram in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ACC_DrivingProgram in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(buf, 0)

/**
 * Signal ACC_DrivingProgram value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DrivingProgram raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram      0

/**
 * Signal ACC_DrivingProgram raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram        0

/**
 * Signal ACC_DrivingProgram raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram        15

/**
 * Signal ACC_DrivingProgram raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DrivingProgram        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol Signal ACC_DriverAlertSymbol of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DriverAlertSymbol configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol        0, 0, 0, 7

/**
 * Signal ACC_DriverAlertSymbol setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol      0, 0, 0, 7, 0

/**
 * Get signal ACC_DriverAlertSymbol from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal ACC_DriverAlertSymbol in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal ACC_DriverAlertSymbol in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(buf, 0)

/**
 * Signal ACC_DriverAlertSymbol value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DriverAlertSymbol raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol      0

/**
 * Signal ACC_DriverAlertSymbol raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol        0

/**
 * Signal ACC_DriverAlertSymbol raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol        127

/**
 * Signal ACC_DriverAlertSymbol raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DriverAlertSymbol        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio Signal ACC_DisplayPrio of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DisplayPrio configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio        0, 0, 0, 2

/**
 * Signal ACC_DisplayPrio setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio      0, 0, 0, 2, 0

/**
 * Get signal ACC_DisplayPrio from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_DisplayPrio in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_DisplayPrio in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(buf, 0)

/**
 * Signal ACC_DisplayPrio value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DisplayPrio raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio      0

/**
 * Signal ACC_DisplayPrio raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio        0

/**
 * Signal ACC_DisplayPrio raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio        3

/**
 * Signal ACC_DisplayPrio raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio Value Table for Signal ACC_DisplayPrio in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio entry no.
 *
 * prio
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio_no                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio entry low.
 *
 * prio
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio_low                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio entry medium.
 *
 * prio
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio_medium              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio entry high.
 *
 * prio
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayPrio_high                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap Signal ACC_DisplayedTgap of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DisplayedTgap configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap        0, 0, 0, 3

/**
 * Signal ACC_DisplayedTgap setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap      0, 0, 0, 3, 0

/**
 * Get signal ACC_DisplayedTgap from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal ACC_DisplayedTgap in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal ACC_DisplayedTgap in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(buf, 0)

/**
 * Signal ACC_DisplayedTgap value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DisplayedTgap raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap      0

/**
 * Signal ACC_DisplayedTgap raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap        0

/**
 * Signal ACC_DisplayedTgap raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap        7

/**
 * Signal ACC_DisplayedTgap raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap Value Table for Signal ACC_DisplayedTgap in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap.
 *
 * 7
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap             7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_6.
 *
 * 6
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_6           6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_5.
 *
 * 5
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_5           5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_4.
 *
 * 4
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_4           4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_3.
 *
 * 3
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_3           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_2.
 *
 * 2
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_2           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_1.
 *
 * 1
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_1           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap entry Timegap_0.
 *
 * will not be displayed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedTgap_Timegap_0           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus Signal ACC_DisplayedStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_DisplayedStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus        0, 0, 0, 3

/**
 * Signal ACC_DisplayedStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus      0, 0, 0, 3, 0

/**
 * Get signal ACC_DisplayedStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal ACC_DisplayedStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal ACC_DisplayedStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(buf, 0)

/**
 * Signal ACC_DisplayedStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_DisplayedStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus      0

/**
 * Signal ACC_DisplayedStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus        0

/**
 * Signal ACC_DisplayedStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus        7

/**
 * Signal ACC_DisplayedStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus Value Table for Signal ACC_DisplayedStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC.
 *
 * Irreversible failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC                 7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_6.
 *
 * Reversible failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_6               6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_5.
 *
 * Deactivate
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_5               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_4.
 *
 * Override
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_4               4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_3.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_3               3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_2.
 *
 * Passive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_2               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_1.
 *
 * Initialization
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_1               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus entry ACC_0.
 *
 * Mainswitch Off
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_DisplayedStatus_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo Signal ACC_AdditionalDisplayInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_AdditionalDisplayInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo        0, 0, 0, 8

/**
 * Signal ACC_AdditionalDisplayInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo      0, 0, 0, 8, 0

/**
 * Get signal ACC_AdditionalDisplayInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ACC_AdditionalDisplayInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ACC_AdditionalDisplayInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(buf, 0)

/**
 * Signal ACC_AdditionalDisplayInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_AdditionalDisplayInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo      0

/**
 * Signal ACC_AdditionalDisplayInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo        0

/**
 * Signal ACC_AdditionalDisplayInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo        255

/**
 * Signal ACC_AdditionalDisplayInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_AdditionalDisplayInfo        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning Signal ACC_AcousticalWarning of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_AcousticalWarning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning        0, 0, 0, 2

/**
 * Signal ACC_AcousticalWarning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning      0, 0, 0, 2, 0

/**
 * Get signal ACC_AcousticalWarning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_AcousticalWarning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_AcousticalWarning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(buf, 0)

/**
 * Signal ACC_AcousticalWarning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_AcousticalWarning raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning      0

/**
 * Signal ACC_AcousticalWarning raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning        0

/**
 * Signal ACC_AcousticalWarning raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning        3

/**
 * Signal ACC_AcousticalWarning raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning Value Table for Signal ACC_AcousticalWarning in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning entry low.
 *
 * prio acoustic warning
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning_low                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning entry high.
 *
 * prio acoustic warning
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning_high                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning entry no.
 *
 * acoustic warning
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_AcousticalWarning_no                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest Signal ACC_VehicleStartRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_VehicleStartRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest        0, 0, 0, 1

/**
 * Signal ACC_VehicleStartRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest      0, 0, 0, 1, 0

/**
 * Get signal ACC_VehicleStartRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_VehicleStartRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_VehicleStartRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(buf, 0)

/**
 * Signal ACC_VehicleStartRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_VehicleStartRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest      0

/**
 * Signal ACC_VehicleStartRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest        0

/**
 * Signal ACC_VehicleStartRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest        1

/**
 * Signal ACC_VehicleStartRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest Value Table for Signal ACC_VehicleStartRequest in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest_active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest entry not.
 *
 * active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStartRequest_not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit Signal ACC_UpperJerkLimit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_UpperJerkLimit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit        0, 0, 0, 8

/**
 * Signal ACC_UpperJerkLimit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit      0, 0, 0, 8, 0

/**
 * Get signal ACC_UpperJerkLimit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ACC_UpperJerkLimit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ACC_UpperJerkLimit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(buf, 0)

/**
 * Signal ACC_UpperJerkLimit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit(x, fmt) \
	((x) * fmt / 20)

/**
 * Signal ACC_UpperJerkLimit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit      0

/**
 * Signal ACC_UpperJerkLimit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit        0

/**
 * Signal ACC_UpperJerkLimit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit        255

/**
 * Signal ACC_UpperJerkLimit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_UpperJerkLimit        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest Signal ACC_VehicleStopRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_VehicleStopRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest        0, 0, 0, 1

/**
 * Signal ACC_VehicleStopRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest      0, 0, 0, 1, 0

/**
 * Get signal ACC_VehicleStopRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_VehicleStopRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_VehicleStopRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(buf, 0)

/**
 * Signal ACC_VehicleStopRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_VehicleStopRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest      0

/**
 * Signal ACC_VehicleStopRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest        0

/**
 * Signal ACC_VehicleStopRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest        1

/**
 * Signal ACC_VehicleStopRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest Value Table for Signal ACC_VehicleStopRequest in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest_active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest entry not.
 *
 * active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_VehicleStopRequest_not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type Signal ACC_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type        0, 0, 0, 2

/**
 * Signal ACC_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type      0, 0, 0, 2, 0

/**
 * Get signal ACC_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(buf, 0)

/**
 * Signal ACC_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type      0

/**
 * Signal ACC_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type        0

/**
 * Signal ACC_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type        3

/**
 * Signal ACC_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type Value Table for Signal ACC_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Type entry ACC.
 *
 * not equipped
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Type_ACC                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Type entry ACC_2.
 *
 * type: Stop and Go
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Type_ACC_2               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Type entry ACC_1.
 *
 * type: Follow To Stop
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Type_ACC_1               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Type entry ACC_0.
 *
 * type: Basic
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Type_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance Signal ACC_StoppingDistance of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_StoppingDistance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance        0, 0, 0, 11

/**
 * Signal ACC_StoppingDistance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance      0, 0, 0, 11, 2046

/**
 * Get signal ACC_StoppingDistance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x07) << 8) \
)

/**
 * Set signal ACC_StoppingDistance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x07 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x07) << 0; \
}

/**
 * Set signal ACC_StoppingDistance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(buf, 2046)

/**
 * Signal ACC_StoppingDistance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal ACC_StoppingDistance raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance      2046

/**
 * Signal ACC_StoppingDistance raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance        0

/**
 * Signal ACC_StoppingDistance raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance        2047

/**
 * Signal ACC_StoppingDistance raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance Value Table for Signal ACC_StoppingDistance in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance_Failure             2047

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance entry Neutral.
 *
 * value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StoppingDistance_Neutral             2046

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC Signal ACC_StatusACC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_StatusACC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC        0, 0, 0, 3

/**
 * Signal ACC_StatusACC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC      0, 0, 0, 3, 0

/**
 * Get signal ACC_StatusACC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal ACC_StatusACC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal ACC_StatusACC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(buf, 0)

/**
 * Signal ACC_StatusACC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_StatusACC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC      0

/**
 * Signal ACC_StatusACC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC        0

/**
 * Signal ACC_StatusACC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC        7

/**
 * Signal ACC_StatusACC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC Value Table for Signal ACC_StatusACC in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC.
 *
 * Irreversible failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC                 7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_6.
 *
 * Reversible failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_6               6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_5.
 *
 * Deactivation
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_5               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_4.
 *
 * Override
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_4               4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_3.
 *
 * Active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_3               3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_2.
 *
 * Passive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_2               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_1.
 *
 * Initialization
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_1               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC entry ACC_0.
 *
 * Mainswitch Off
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StatusACC_ACC_0               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo Signal ACC_StartStopInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_StartStopInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo        0, 0, 0, 2

/**
 * Signal ACC_StartStopInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo      0, 0, 0, 2, 0

/**
 * Get signal ACC_StartStopInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ACC_StartStopInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ACC_StartStopInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(buf, 0)

/**
 * Signal ACC_StartStopInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_StartStopInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo      0

/**
 * Signal ACC_StartStopInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo        0

/**
 * Signal ACC_StartStopInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo        3

/**
 * Signal ACC_StartStopInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo Value Table for Signal ACC_StartStopInfo in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo entry System.
 *
 * Failure
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo_System              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo entry Engine.
 *
 * Start Request
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo_Engine              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo entry EngineStopForbidden_StartNotNeed.
 *
 * EngineStopForbidden&StartNotNeed
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo_EngineStopForbidden_StartNotNeed    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo entry EngineStopReqisAlowed_canbeStopd.
 *
 * EngineStopReqisAlowed&canbeStopd
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_StartStopInfo_EngineStopReqisAlowed_canbeStopd    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff Signal ACC_ReducedDynamicDriveoff of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_ReducedDynamicDriveoff configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff        0, 0, 0, 1

/**
 * Signal ACC_ReducedDynamicDriveoff setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff      0, 0, 0, 1, 0

/**
 * Get signal ACC_ReducedDynamicDriveoff from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_ReducedDynamicDriveoff in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_ReducedDynamicDriveoff in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(buf, 0)

/**
 * Signal ACC_ReducedDynamicDriveoff value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_ReducedDynamicDriveoff raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff      0

/**
 * Signal ACC_ReducedDynamicDriveoff raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff        0

/**
 * Signal ACC_ReducedDynamicDriveoff raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff        1

/**
 * Signal ACC_ReducedDynamicDriveoff raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff Value Table for Signal ACC_ReducedDynamicDriveoff in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff_active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff entry not.
 *
 * active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_ReducedDynamicDriveoff_not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking Signal ACC_MinimalBraking of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_MinimalBraking configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking        0, 0, 0, 1

/**
 * Signal ACC_MinimalBraking setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking      0, 0, 0, 1, 0

/**
 * Get signal ACC_MinimalBraking from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ACC_MinimalBraking in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ACC_MinimalBraking in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(buf, 0)

/**
 * Signal ACC_MinimalBraking value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking(x, fmt) \
	((x) * fmt)

/**
 * Signal ACC_MinimalBraking raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking      0

/**
 * Signal ACC_MinimalBraking raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking        0

/**
 * Signal ACC_MinimalBraking raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking        1

/**
 * Signal ACC_MinimalBraking raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking Value Table for Signal ACC_MinimalBraking in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking_active              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking entry not.
 *
 * active
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_MinimalBraking_not                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit Signal ACC_LowerJerkLimit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_LowerJerkLimit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit        0, 0, 0, 8

/**
 * Signal ACC_LowerJerkLimit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit      0, 0, 0, 8, 0

/**
 * Get signal ACC_LowerJerkLimit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ACC_LowerJerkLimit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ACC_LowerJerkLimit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(buf, 0)

/**
 * Signal ACC_LowerJerkLimit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit(x, fmt) \
	((x) * fmt / 20)

/**
 * Signal ACC_LowerJerkLimit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit      0

/**
 * Signal ACC_LowerJerkLimit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit        0

/**
 * Signal ACC_LowerJerkLimit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit        255

/**
 * Signal ACC_LowerJerkLimit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_LowerJerkLimit        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit Signal ACC_ComfortBandUpperLimit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_ComfortBandUpperLimit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit        0, 0, 0, 7

/**
 * Signal ACC_ComfortBandUpperLimit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit      0, 0, 0, 7, 0

/**
 * Get signal ACC_ComfortBandUpperLimit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal ACC_ComfortBandUpperLimit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal ACC_ComfortBandUpperLimit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(buf, 0)

/**
 * Signal ACC_ComfortBandUpperLimit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit(x, fmt) \
	((x) * fmt * 33 / 2000)

/**
 * Signal ACC_ComfortBandUpperLimit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit      0

/**
 * Signal ACC_ComfortBandUpperLimit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit        0

/**
 * Signal ACC_ComfortBandUpperLimit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit        127

/**
 * Signal ACC_ComfortBandUpperLimit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandUpperLimit        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit Signal ACC_ComfortBandLowerLimit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_ComfortBandLowerLimit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit        0, 0, 0, 7

/**
 * Signal ACC_ComfortBandLowerLimit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit      0, 0, 0, 7, 0

/**
 * Get signal ACC_ComfortBandLowerLimit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal ACC_ComfortBandLowerLimit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal ACC_ComfortBandLowerLimit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(buf, 0)

/**
 * Signal ACC_ComfortBandLowerLimit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit(x, fmt) \
	((x) * fmt * 33 / 2000)

/**
 * Signal ACC_ComfortBandLowerLimit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit      0

/**
 * Signal ACC_ComfortBandLowerLimit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit        0

/**
 * Signal ACC_ComfortBandLowerLimit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit        127

/**
 * Signal ACC_ComfortBandLowerLimit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_ComfortBandLowerLimit        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration Signal ACC_Acceleration of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ACC_Acceleration configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration        0, 0, 0, 11

/**
 * Signal ACC_Acceleration setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration      0, 0, 0, 11, 2046

/**
 * Get signal ACC_Acceleration from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x07) << 8) \
)

/**
 * Set signal ACC_Acceleration in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x07 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x07) << 0; \
}

/**
 * Set signal ACC_Acceleration in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(buf, 2046)

/**
 * Signal ACC_Acceleration value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration(x, fmt) \
	((x) * fmt / 200 + fmt * (-361) / 50)

/**
 * Signal ACC_Acceleration raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration      2046

/**
 * Signal ACC_Acceleration raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration        0

/**
 * Signal ACC_Acceleration raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration        2047

/**
 * Signal ACC_Acceleration raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration        -1444

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration Value Table for Signal ACC_Acceleration in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration_Failure             2047

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration entry Neutral.
 *
 * value
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ACC_Acceleration_Neutral             2046

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation Signal WwaWarningSituation of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WwaWarningSituation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation        0, 0, 0, 2

/**
 * Signal WwaWarningSituation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation      0, 0, 0, 2, 0

/**
 * Get signal WwaWarningSituation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal WwaWarningSituation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal WwaWarningSituation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(buf, 0)

/**
 * Signal WwaWarningSituation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation(x, fmt) \
	((x) * fmt)

/**
 * Signal WwaWarningSituation raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation      0

/**
 * Signal WwaWarningSituation raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation        0

/**
 * Signal WwaWarningSituation raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation        3

/**
 * Signal WwaWarningSituation raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation Value Table for Signal WwaWarningSituation in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation entry SITUATION_BOTH.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation_SITUATION_BOTH      3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation entry SITUATION_GATE_CLOE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation_SITUATION_GATE_CLOE    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation entry SITUATION_NEAR_HWAY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation_SITUATION_NEAR_HWAY    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation entry NO_SITUATION.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaWarningSituation_NO_SITUATION        0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter Signal WWA_01_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WWA_01_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter        0, 0, 0, 4

/**
 * Signal WWA_01_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter      0, 0, 0, 4, 0

/**
 * Get signal WWA_01_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal WWA_01_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal WWA_01_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(buf, 0)

/**
 * Signal WWA_01_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal WWA_01_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter      0

/**
 * Signal WWA_01_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter        0

/**
 * Signal WWA_01_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter        15

/**
 * Signal WWA_01_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC Signal WWA_01_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WWA_01_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC        0, 0, 0, 8

/**
 * Signal WWA_01_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC      0, 0, 0, 8, 0

/**
 * Get signal WWA_01_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WWA_01_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WWA_01_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(buf, 0)

/**
 * Signal WWA_01_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal WWA_01_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC      0

/**
 * Signal WWA_01_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC        0

/**
 * Signal WWA_01_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC        255

/**
 * Signal WWA_01_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WWA_01_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState Signal WwaState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WwaState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WwaState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WwaState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState        0, 0, 0, 2

/**
 * Signal WwaState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WwaState      0, 0, 0, 2, 0

/**
 * Get signal WwaState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WwaState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal WwaState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WwaState(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal WwaState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WwaState(buf, 0)

/**
 * Signal WwaState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WwaState(x, fmt) \
	((x) * fmt)

/**
 * Signal WwaState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WwaState      0

/**
 * Signal WwaState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WwaState        0

/**
 * Signal WwaState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WwaState        3

/**
 * Signal WwaState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WwaState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState Value Table for Signal WwaState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaState entry WWA_NAVIGATION_NOT_AVAILABLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaState_WWA_NAVIGATION_NOT_AVAILABLE    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaState entry WWA_FUNCTION_NOT_AVAILABLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaState_WWA_FUNCTION_NOT_AVAILABLE    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaState entry WWA_WORK.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaState_WWA_WORK            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaState entry WWA_OFF.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaState_WWA_OFF             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning Signal WwaDriverWarning of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WwaDriverWarning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning        0, 0, 0, 3

/**
 * Signal WwaDriverWarning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning      0, 0, 0, 3, 0

/**
 * Get signal WwaDriverWarning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal WwaDriverWarning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal WwaDriverWarning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(buf, 0)

/**
 * Signal WwaDriverWarning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning(x, fmt) \
	((x) * fmt)

/**
 * Signal WwaDriverWarning raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning      0

/**
 * Signal WwaDriverWarning raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning        0

/**
 * Signal WwaDriverWarning raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning        7

/**
 * Signal WwaDriverWarning raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning Value Table for Signal WwaDriverWarning in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry NOT_USED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_NOT_USED            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry NOT_USED_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_NOT_USED_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry NOT_USED_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_NOT_USED_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry WARNING_NAV.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_WARNING_NAV         4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry WARNING_NO_ENTRY_ARROW.
 *
 * WARNING_NO_ENTRY+ARROW
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_WARNING_NO_ENTRY_ARROW    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry WARNING_ARROW.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_WARNING_ARROW       2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry WARNING_NO_ENTRY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_WARNING_NO_ENTRY    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning entry NO_WARNING.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WwaDriverWarning_NO_WARNING          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd Signal TSRSpdSetpInd of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRSpdSetpInd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd        0, 0, 0, 5

/**
 * Signal TSRSpdSetpInd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd      0, 0, 0, 5, 0

/**
 * Get signal TSRSpdSetpInd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal TSRSpdSetpInd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal TSRSpdSetpInd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(buf, 0)

/**
 * Signal TSRSpdSetpInd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRSpdSetpInd raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd      0

/**
 * Signal TSRSpdSetpInd raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd        0

/**
 * Signal TSRSpdSetpInd raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd        31

/**
 * Signal TSRSpdSetpInd raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd Value Table for Signal TSRSpdSetpInd in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 150.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_150                 31

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 145.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_145                 30

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 140.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_140                 29

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 135.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_135                 28

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 130.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_130                 27

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 125.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_125                 26

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 120.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_120                 25

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 115.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_115                 24

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 110.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_110                 23

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 105.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_105                 22

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 100.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_100                 21

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 95.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_95                  20

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 90.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_90                  19

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 85.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_85                  18

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 80.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_80                  17

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 75.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_75                  16

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 70.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_70                  15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 65.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_65                  14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 60.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_60                  13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 55.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_55                  12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 50.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_50                  11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 45.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_45                  10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 40.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_40                  9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 35.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_35                  8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 30.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_30                  7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 25.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_25                  6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 20.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_20                  5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 15.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_15                  4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 10.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_10                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry 5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_5                   2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry Cancelled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_Cancelled           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd entry Unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSetpInd_Unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits Signal TSRSpdLimitUnits of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRSpdLimitUnits configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits        0, 0, 0, 2

/**
 * Signal TSRSpdLimitUnits setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits      0, 0, 0, 2, 0

/**
 * Get signal TSRSpdLimitUnits from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal TSRSpdLimitUnits in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal TSRSpdLimitUnits in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(buf, 0)

/**
 * Signal TSRSpdLimitUnits value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRSpdLimitUnits raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits      0

/**
 * Signal TSRSpdLimitUnits raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits        0

/**
 * Signal TSRSpdLimitUnits raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits        3

/**
 * Signal TSRSpdLimitUnits raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits Value Table for Signal TSRSpdLimitUnits in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits entry Not.
 *
 * Used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits_Not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits entry Mph.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits_Mph                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits entry Km_h.
 *
 * Km/h
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits_Km_h                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits entry Unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdLimitUnits_Unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType Signal TSRSignType of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRSignType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType        0, 0, 0, 3

/**
 * Signal TSRSignType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType      0, 0, 0, 3, 0

/**
 * Get signal TSRSignType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal TSRSignType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal TSRSignType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(buf, 0)

/**
 * Signal TSRSignType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRSignType raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType      0

/**
 * Signal TSRSignType raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType        0

/**
 * Signal TSRSignType raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType        7

/**
 * Signal TSRSignType raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType Value Table for Signal TSRSignType in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Unused.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Unused              7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Unused_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Unused_6            6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Unused_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Unused_5            5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Unused_4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Unused_4            4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Canada.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Canada              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry US.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_US                  2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Vienna.
 *
 * convention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Vienna              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSignType entry Unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSignType_Unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus Signal TSROperatingStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSROperatingStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus        0, 0, 0, 3

/**
 * Signal TSROperatingStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus      0, 0, 0, 3, 0

/**
 * Get signal TSROperatingStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal TSROperatingStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal TSROperatingStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(buf, 0)

/**
 * Signal TSROperatingStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal TSROperatingStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus      0

/**
 * Signal TSROperatingStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus        0

/**
 * Signal TSROperatingStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus        7

/**
 * Signal TSROperatingStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus Value Table for Signal TSROperatingStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Defect.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Defect              7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Not.
 *
 * Used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Not                 6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Not_5.
 *
 * Used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Not_5               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Not_4.
 *
 * Used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Not_4               4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Navigation.
 *
 * only Mode
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Navigation          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Vision.
 *
 * only Mode
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Vision              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Fusion.
 *
 * Mode
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Fusion              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus entry Off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROperatingStatus_Off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 Signal TSRMainSign2 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRMainSign2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2        0, 0, 0, 8

/**
 * Signal TSRMainSign2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2      0, 0, 0, 8, 0

/**
 * Get signal TSRMainSign2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal TSRMainSign2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal TSRMainSign2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(buf, 0)

/**
 * Signal TSRMainSign2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRMainSign2 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2      0

/**
 * Signal TSRMainSign2 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2        0

/**
 * Signal TSRMainSign2 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2        255

/**
 * Signal TSRMainSign2 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 Value Table for Signal TSRMainSign2 in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 entry Prohibition.
 *
 * of overtaking wth un
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2_Prohibition         3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 entry Prohibition_2.
 *
 * of overtaking
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2_Prohibition_2       2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 entry Cancelled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2_Cancelled           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2 entry No.
 *
 * Display
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign2_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 Signal TSRMainSign1 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRMainSign1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1        0, 0, 0, 8

/**
 * Signal TSRMainSign1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1      0, 0, 0, 8, 0

/**
 * Get signal TSRMainSign1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal TSRMainSign1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal TSRMainSign1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(buf, 0)

/**
 * Signal TSRMainSign1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRMainSign1 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1      0

/**
 * Signal TSRMainSign1 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1        0

/**
 * Signal TSRMainSign1 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1        255

/**
 * Signal TSRMainSign1 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 Value Table for Signal TSRMainSign1 in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 150.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_150                 31

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 145.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_145                 30

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 140.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_140                 29

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 135.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_135                 28

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 130.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_130                 27

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 125.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_125                 26

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 120.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_120                 25

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 115.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_115                 24

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 110.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_110                 23

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 105.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_105                 22

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 100.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_100                 21

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 95.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_95                  20

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 90.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_90                  19

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 85.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_85                  18

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 80.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_80                  17

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 75.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_75                  16

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 70.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_70                  15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 65.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_65                  14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 60.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_60                  13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 55.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_55                  12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 50.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_50                  11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 45.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_45                  10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 40.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_40                  9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 35.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_35                  8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 30.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_30                  7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 25.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_25                  6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 20.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_20                  5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 15.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_15                  4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 10.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_10                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry 5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_5                   2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry Cancellation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_Cancellation        1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1 entry Unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRMainSign1_Unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic Signal TSRHandOfTraffic of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRHandOfTraffic configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic        0, 0, 0, 2

/**
 * Signal TSRHandOfTraffic setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic      0, 0, 0, 2, 2

/**
 * Get signal TSRHandOfTraffic from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal TSRHandOfTraffic in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal TSRHandOfTraffic in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(buf, 2)

/**
 * Signal TSRHandOfTraffic value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRHandOfTraffic raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic      2

/**
 * Signal TSRHandOfTraffic raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic        0

/**
 * Signal TSRHandOfTraffic raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic        3

/**
 * Signal TSRHandOfTraffic raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic Value Table for Signal TSRHandOfTraffic in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic entry Not.
 *
 * Used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic_Not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic entry Unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic_Unknown             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic entry RH.
 *
 * Traffic
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic_RH                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic entry LH.
 *
 * Traffic
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRHandOfTraffic_LH                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 Signal TSRAddSign2 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRAddSign2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2        0, 0, 0, 6

/**
 * Signal TSRAddSign2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2      0, 0, 0, 6, 0

/**
 * Get signal TSRAddSign2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal TSRAddSign2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal TSRAddSign2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(buf, 0)

/**
 * Signal TSRAddSign2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRAddSign2 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2      0

/**
 * Signal TSRAddSign2 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2        0

/**
 * Signal TSRAddSign2 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2        63

/**
 * Signal TSRAddSign2 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 Value Table for Signal TSRAddSign2 in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2 entry Undefined1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign2_Undefined1          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 Signal TSRAddSign1 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRAddSign1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1        0, 0, 0, 6

/**
 * Signal TSRAddSign1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1      0, 0, 0, 6, 0

/**
 * Get signal TSRAddSign1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal TSRAddSign1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal TSRAddSign1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(buf, 0)

/**
 * Signal TSRAddSign1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRAddSign1 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1      0

/**
 * Signal TSRAddSign1 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1        0

/**
 * Signal TSRAddSign1 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1        0

/**
 * Signal TSRAddSign1 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 Value Table for Signal TSRAddSign1 in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1 entry Undefined1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRAddSign1_Undefined1          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState Signal TSRSpdSignState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSRSpdSignState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState        0, 0, 0, 2

/**
 * Signal TSRSpdSignState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState      0, 0, 0, 2, 0

/**
 * Get signal TSRSpdSignState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal TSRSpdSignState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal TSRSpdSignState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(buf, 0)

/**
 * Signal TSRSpdSignState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState(x, fmt) \
	((x) * fmt)

/**
 * Signal TSRSpdSignState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState      0

/**
 * Signal TSRSpdSignState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState        0

/**
 * Signal TSRSpdSignState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState        3

/**
 * Signal TSRSpdSignState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState Value Table for Signal TSRSpdSignState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState entry Not.
 *
 * used
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState_Not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState entry Grayed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState_Grayed              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState entry Highlighted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState_Highlighted         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState entry Normal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSRSpdSignState_Normal              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType Signal TSROtkSignType of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TSROtkSignType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType        0, 0, 0, 4

/**
 * Signal TSROtkSignType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType      0, 0, 0, 4, 0

/**
 * Get signal TSROtkSignType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal TSROtkSignType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal TSROtkSignType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(buf, 0)

/**
 * Signal TSROtkSignType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType(x, fmt) \
	((x) * fmt)

/**
 * Signal TSROtkSignType raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType      0

/**
 * Signal TSROtkSignType raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType        0

/**
 * Signal TSROtkSignType raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType        15

/**
 * Signal TSROtkSignType raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType Value Table for Signal TSROtkSignType in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Reserved5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Reserved5           15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Reserved4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Reserved4           14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Reserved3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Reserved3           13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Reserved2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Reserved2           12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Reserved1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Reserved1           11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Thailand.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Thailand            10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Singapore.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Singapore           9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Japan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Japan               8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry South_Korea.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_South_Korea         7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry China.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_China               6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry United_States.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_United_States       5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Taiwan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Taiwan              4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Canada_Ireland_Malaysia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Canada_Ireland_Malaysia    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Vienna_Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Vienna_Right        2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry Vienna_Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_Vienna_Left         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType entry No_Display.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TSROtkSignType_No_Display          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07 Signal AdasPos07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07        0, 0, 0, 8

/**
 * Signal AdasPos07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07      0, 0, 0, 8, 0

/**
 * Get signal AdasPos07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(buf, 0)

/**
 * Signal AdasPos07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07      0

/**
 * Signal AdasPos07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07        0

/**
 * Signal AdasPos07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07        255

/**
 * Signal AdasPos07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06 Signal AdasPos06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06        0, 0, 0, 8

/**
 * Signal AdasPos06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06      0, 0, 0, 8, 0

/**
 * Get signal AdasPos06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(buf, 0)

/**
 * Signal AdasPos06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06      0

/**
 * Signal AdasPos06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06        0

/**
 * Signal AdasPos06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06        255

/**
 * Signal AdasPos06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05 Signal AdasPos05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05        0, 0, 0, 8

/**
 * Signal AdasPos05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05      0, 0, 0, 8, 0

/**
 * Get signal AdasPos05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(buf, 0)

/**
 * Signal AdasPos05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05      0

/**
 * Signal AdasPos05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05        0

/**
 * Signal AdasPos05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05        255

/**
 * Signal AdasPos05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04 Signal AdasPos04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04        0, 0, 0, 8

/**
 * Signal AdasPos04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04      0, 0, 0, 8, 0

/**
 * Get signal AdasPos04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(buf, 0)

/**
 * Signal AdasPos04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04      0

/**
 * Signal AdasPos04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04        0

/**
 * Signal AdasPos04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04        255

/**
 * Signal AdasPos04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03 Signal AdasPos03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03        0, 0, 0, 8

/**
 * Signal AdasPos03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03      0, 0, 0, 8, 0

/**
 * Get signal AdasPos03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(buf, 0)

/**
 * Signal AdasPos03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03      0

/**
 * Signal AdasPos03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03        0

/**
 * Signal AdasPos03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03        255

/**
 * Signal AdasPos03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02 Signal AdasPos02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02        0, 0, 0, 8

/**
 * Signal AdasPos02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02      0, 0, 0, 8, 0

/**
 * Get signal AdasPos02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(buf, 0)

/**
 * Signal AdasPos02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02      0

/**
 * Signal AdasPos02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02        0

/**
 * Signal AdasPos02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02        255

/**
 * Signal AdasPos02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01 Signal AdasPos01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01        0, 0, 0, 8

/**
 * Signal AdasPos01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01      0, 0, 0, 8, 0

/**
 * Get signal AdasPos01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(buf, 0)

/**
 * Signal AdasPos01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01      0

/**
 * Signal AdasPos01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01        0

/**
 * Signal AdasPos01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01        255

/**
 * Signal AdasPos01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00 Signal AdasPos00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasPos00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00        0, 0, 0, 8

/**
 * Signal AdasPos00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00      0, 0, 0, 8, 0

/**
 * Get signal AdasPos00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasPos00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasPos00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(buf, 0)

/**
 * Signal AdasPos00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasPos00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00      0

/**
 * Signal AdasPos00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00        0

/**
 * Signal AdasPos00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00        255

/**
 * Signal AdasPos00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasPos00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07 Signal AdasSgmt07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07        0, 0, 0, 8

/**
 * Signal AdasSgmt07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(buf, 0)

/**
 * Signal AdasSgmt07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07      0

/**
 * Signal AdasSgmt07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07        0

/**
 * Signal AdasSgmt07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07        255

/**
 * Signal AdasSgmt07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06 Signal AdasSgmt06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06        0, 0, 0, 8

/**
 * Signal AdasSgmt06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(buf, 0)

/**
 * Signal AdasSgmt06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06      0

/**
 * Signal AdasSgmt06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06        0

/**
 * Signal AdasSgmt06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06        255

/**
 * Signal AdasSgmt06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05 Signal AdasSgmt05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05        0, 0, 0, 8

/**
 * Signal AdasSgmt05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(buf, 0)

/**
 * Signal AdasSgmt05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05      0

/**
 * Signal AdasSgmt05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05        0

/**
 * Signal AdasSgmt05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05        255

/**
 * Signal AdasSgmt05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04 Signal AdasSgmt04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04        0, 0, 0, 8

/**
 * Signal AdasSgmt04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(buf, 0)

/**
 * Signal AdasSgmt04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04      0

/**
 * Signal AdasSgmt04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04        0

/**
 * Signal AdasSgmt04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04        255

/**
 * Signal AdasSgmt04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03 Signal AdasSgmt03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03        0, 0, 0, 8

/**
 * Signal AdasSgmt03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(buf, 0)

/**
 * Signal AdasSgmt03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03      0

/**
 * Signal AdasSgmt03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03        0

/**
 * Signal AdasSgmt03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03        255

/**
 * Signal AdasSgmt03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02 Signal AdasSgmt02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02        0, 0, 0, 8

/**
 * Signal AdasSgmt02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(buf, 0)

/**
 * Signal AdasSgmt02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02      0

/**
 * Signal AdasSgmt02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02        0

/**
 * Signal AdasSgmt02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02        255

/**
 * Signal AdasSgmt02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01 Signal AdasSgmt01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01        0, 0, 0, 8

/**
 * Signal AdasSgmt01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(buf, 0)

/**
 * Signal AdasSgmt01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01      0

/**
 * Signal AdasSgmt01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01        0

/**
 * Signal AdasSgmt01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01        255

/**
 * Signal AdasSgmt01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00 Signal AdasSgmt00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasSgmt00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00        0, 0, 0, 8

/**
 * Signal AdasSgmt00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00      0, 0, 0, 8, 0

/**
 * Get signal AdasSgmt00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasSgmt00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasSgmt00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(buf, 0)

/**
 * Signal AdasSgmt00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasSgmt00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00      0

/**
 * Signal AdasSgmt00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00        0

/**
 * Signal AdasSgmt00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00        255

/**
 * Signal AdasSgmt00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasSgmt00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07 Signal AdasStub07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07        0, 0, 0, 8

/**
 * Signal AdasStub07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07      0, 0, 0, 8, 0

/**
 * Get signal AdasStub07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(buf, 0)

/**
 * Signal AdasStub07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07      0

/**
 * Signal AdasStub07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07        0

/**
 * Signal AdasStub07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07        255

/**
 * Signal AdasStub07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06 Signal AdasStub06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06        0, 0, 0, 8

/**
 * Signal AdasStub06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06      0, 0, 0, 8, 0

/**
 * Get signal AdasStub06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(buf, 0)

/**
 * Signal AdasStub06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06      0

/**
 * Signal AdasStub06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06        0

/**
 * Signal AdasStub06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06        255

/**
 * Signal AdasStub06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05 Signal AdasStub05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05        0, 0, 0, 8

/**
 * Signal AdasStub05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05      0, 0, 0, 8, 0

/**
 * Get signal AdasStub05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(buf, 0)

/**
 * Signal AdasStub05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05      0

/**
 * Signal AdasStub05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05        0

/**
 * Signal AdasStub05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05        255

/**
 * Signal AdasStub05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04 Signal AdasStub04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04        0, 0, 0, 8

/**
 * Signal AdasStub04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04      0, 0, 0, 8, 0

/**
 * Get signal AdasStub04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(buf, 0)

/**
 * Signal AdasStub04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04      0

/**
 * Signal AdasStub04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04        0

/**
 * Signal AdasStub04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04        255

/**
 * Signal AdasStub04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03 Signal AdasStub03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03        0, 0, 0, 8

/**
 * Signal AdasStub03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03      0, 0, 0, 8, 0

/**
 * Get signal AdasStub03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(buf, 0)

/**
 * Signal AdasStub03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03      0

/**
 * Signal AdasStub03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03        0

/**
 * Signal AdasStub03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03        255

/**
 * Signal AdasStub03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02 Signal AdasStub02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02        0, 0, 0, 8

/**
 * Signal AdasStub02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02      0, 0, 0, 8, 0

/**
 * Get signal AdasStub02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(buf, 0)

/**
 * Signal AdasStub02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02      0

/**
 * Signal AdasStub02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02        0

/**
 * Signal AdasStub02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02        255

/**
 * Signal AdasStub02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01 Signal AdasStub01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01        0, 0, 0, 8

/**
 * Signal AdasStub01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01      0, 0, 0, 8, 0

/**
 * Get signal AdasStub01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(buf, 0)

/**
 * Signal AdasStub01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01      0

/**
 * Signal AdasStub01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01        0

/**
 * Signal AdasStub01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01        255

/**
 * Signal AdasStub01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00 Signal AdasStub00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasStub00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00        0, 0, 0, 8

/**
 * Signal AdasStub00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00      0, 0, 0, 8, 0

/**
 * Get signal AdasStub00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasStub00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasStub00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(buf, 0)

/**
 * Signal AdasStub00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasStub00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00      0

/**
 * Signal AdasStub00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00        0

/**
 * Signal AdasStub00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00        255

/**
 * Signal AdasStub00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasStub00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07 Signal AdasShrt07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07        0, 0, 0, 8

/**
 * Signal AdasShrt07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(buf, 0)

/**
 * Signal AdasShrt07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07      0

/**
 * Signal AdasShrt07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07        0

/**
 * Signal AdasShrt07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07        255

/**
 * Signal AdasShrt07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06 Signal AdasShrt06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06        0, 0, 0, 8

/**
 * Signal AdasShrt06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(buf, 0)

/**
 * Signal AdasShrt06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06      0

/**
 * Signal AdasShrt06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06        0

/**
 * Signal AdasShrt06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06        255

/**
 * Signal AdasShrt06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05 Signal AdasShrt05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05        0, 0, 0, 8

/**
 * Signal AdasShrt05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(buf, 0)

/**
 * Signal AdasShrt05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05      0

/**
 * Signal AdasShrt05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05        0

/**
 * Signal AdasShrt05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05        255

/**
 * Signal AdasShrt05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04 Signal AdasShrt04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04        0, 0, 0, 8

/**
 * Signal AdasShrt04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(buf, 0)

/**
 * Signal AdasShrt04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04      0

/**
 * Signal AdasShrt04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04        0

/**
 * Signal AdasShrt04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04        255

/**
 * Signal AdasShrt04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03 Signal AdasShrt03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03        0, 0, 0, 8

/**
 * Signal AdasShrt03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(buf, 0)

/**
 * Signal AdasShrt03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03      0

/**
 * Signal AdasShrt03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03        0

/**
 * Signal AdasShrt03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03        255

/**
 * Signal AdasShrt03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02 Signal AdasShrt02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02        0, 0, 0, 8

/**
 * Signal AdasShrt02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(buf, 0)

/**
 * Signal AdasShrt02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02      0

/**
 * Signal AdasShrt02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02        0

/**
 * Signal AdasShrt02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02        255

/**
 * Signal AdasShrt02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01 Signal AdasShrt01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01        0, 0, 0, 8

/**
 * Signal AdasShrt01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(buf, 0)

/**
 * Signal AdasShrt01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01      0

/**
 * Signal AdasShrt01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01        0

/**
 * Signal AdasShrt01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01        255

/**
 * Signal AdasShrt01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00 Signal AdasShrt00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasShrt00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00        0, 0, 0, 8

/**
 * Signal AdasShrt00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00      0, 0, 0, 8, 0

/**
 * Get signal AdasShrt00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasShrt00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasShrt00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(buf, 0)

/**
 * Signal AdasShrt00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasShrt00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00      0

/**
 * Signal AdasShrt00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00        0

/**
 * Signal AdasShrt00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00        255

/**
 * Signal AdasShrt00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasShrt00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07 Signal AdasMeta07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07        0, 0, 0, 8

/**
 * Signal AdasMeta07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(buf, 0)

/**
 * Signal AdasMeta07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07      0

/**
 * Signal AdasMeta07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07        0

/**
 * Signal AdasMeta07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07        255

/**
 * Signal AdasMeta07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06 Signal AdasMeta06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06        0, 0, 0, 8

/**
 * Signal AdasMeta06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(buf, 0)

/**
 * Signal AdasMeta06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06      0

/**
 * Signal AdasMeta06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06        0

/**
 * Signal AdasMeta06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06        255

/**
 * Signal AdasMeta06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05 Signal AdasMeta05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05        0, 0, 0, 8

/**
 * Signal AdasMeta05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(buf, 0)

/**
 * Signal AdasMeta05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05      0

/**
 * Signal AdasMeta05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05        0

/**
 * Signal AdasMeta05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05        255

/**
 * Signal AdasMeta05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04 Signal AdasMeta04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04        0, 0, 0, 8

/**
 * Signal AdasMeta04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(buf, 0)

/**
 * Signal AdasMeta04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04      0

/**
 * Signal AdasMeta04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04        0

/**
 * Signal AdasMeta04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04        255

/**
 * Signal AdasMeta04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03 Signal AdasMeta03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03        0, 0, 0, 8

/**
 * Signal AdasMeta03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(buf, 0)

/**
 * Signal AdasMeta03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03      0

/**
 * Signal AdasMeta03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03        0

/**
 * Signal AdasMeta03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03        255

/**
 * Signal AdasMeta03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02 Signal AdasMeta02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02        0, 0, 0, 8

/**
 * Signal AdasMeta02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(buf, 0)

/**
 * Signal AdasMeta02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02      0

/**
 * Signal AdasMeta02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02        0

/**
 * Signal AdasMeta02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02        255

/**
 * Signal AdasMeta02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01 Signal AdasMeta01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01        0, 0, 0, 8

/**
 * Signal AdasMeta01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(buf, 0)

/**
 * Signal AdasMeta01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01      0

/**
 * Signal AdasMeta01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01        0

/**
 * Signal AdasMeta01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01        255

/**
 * Signal AdasMeta01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00 Signal AdasMeta00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasMeta00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00        0, 0, 0, 8

/**
 * Signal AdasMeta00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00      0, 0, 0, 8, 0

/**
 * Get signal AdasMeta00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasMeta00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasMeta00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(buf, 0)

/**
 * Signal AdasMeta00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasMeta00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00      0

/**
 * Signal AdasMeta00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00        0

/**
 * Signal AdasMeta00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00        255

/**
 * Signal AdasMeta00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasMeta00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07 Signal AdasLong07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07        0, 0, 0, 8

/**
 * Signal AdasLong07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07      0, 0, 0, 8, 0

/**
 * Get signal AdasLong07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(buf, 0)

/**
 * Signal AdasLong07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07      0

/**
 * Signal AdasLong07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07        0

/**
 * Signal AdasLong07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07        255

/**
 * Signal AdasLong07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06 Signal AdasLong06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06        0, 0, 0, 8

/**
 * Signal AdasLong06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06      0, 0, 0, 8, 0

/**
 * Get signal AdasLong06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(buf, 0)

/**
 * Signal AdasLong06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06      0

/**
 * Signal AdasLong06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06        0

/**
 * Signal AdasLong06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06        255

/**
 * Signal AdasLong06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05 Signal AdasLong05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05        0, 0, 0, 8

/**
 * Signal AdasLong05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05      0, 0, 0, 8, 0

/**
 * Get signal AdasLong05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(buf, 0)

/**
 * Signal AdasLong05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05      0

/**
 * Signal AdasLong05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05        0

/**
 * Signal AdasLong05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05        255

/**
 * Signal AdasLong05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04 Signal AdasLong04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04        0, 0, 0, 8

/**
 * Signal AdasLong04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04      0, 0, 0, 8, 0

/**
 * Get signal AdasLong04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(buf, 0)

/**
 * Signal AdasLong04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04      0

/**
 * Signal AdasLong04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04        0

/**
 * Signal AdasLong04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04        255

/**
 * Signal AdasLong04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03 Signal AdasLong03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03        0, 0, 0, 8

/**
 * Signal AdasLong03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03      0, 0, 0, 8, 0

/**
 * Get signal AdasLong03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(buf, 0)

/**
 * Signal AdasLong03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03      0

/**
 * Signal AdasLong03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03        0

/**
 * Signal AdasLong03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03        255

/**
 * Signal AdasLong03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02 Signal AdasLong02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02        0, 0, 0, 8

/**
 * Signal AdasLong02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02      0, 0, 0, 8, 0

/**
 * Get signal AdasLong02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(buf, 0)

/**
 * Signal AdasLong02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02      0

/**
 * Signal AdasLong02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02        0

/**
 * Signal AdasLong02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02        255

/**
 * Signal AdasLong02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01 Signal AdasLong01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01        0, 0, 0, 8

/**
 * Signal AdasLong01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01      0, 0, 0, 8, 0

/**
 * Get signal AdasLong01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(buf, 0)

/**
 * Signal AdasLong01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01      0

/**
 * Signal AdasLong01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01        0

/**
 * Signal AdasLong01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01        255

/**
 * Signal AdasLong01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00 Signal AdasLong00 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AdasLong00 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00        0, 0, 0, 8

/**
 * Signal AdasLong00 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00      0, 0, 0, 8, 0

/**
 * Get signal AdasLong00 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AdasLong00 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AdasLong00 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(buf, 0)

/**
 * Signal AdasLong00 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00(x, fmt) \
	((x) * fmt)

/**
 * Signal AdasLong00 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00      0

/**
 * Signal AdasLong00 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00        0

/**
 * Signal AdasLong00 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00        255

/**
 * Signal AdasLong00 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AdasLong00        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt Signal HbSeg09Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg09Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt        0, 0, 0, 3

/**
 * Signal HbSeg09Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg09Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg09Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg09Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(buf, 6)

/**
 * Signal HbSeg09Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg09Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt      6

/**
 * Signal HbSeg09Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt        0

/**
 * Signal HbSeg09Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt        7

/**
 * Signal HbSeg09Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt Value Table for Signal HbSeg09Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt Signal HbSeg09Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg09Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt        0, 0, 0, 3

/**
 * Signal HbSeg09Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg09Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg09Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg09Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(buf, 6)

/**
 * Signal HbSeg09Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg09Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt      6

/**
 * Signal HbSeg09Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt        0

/**
 * Signal HbSeg09Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt        7

/**
 * Signal HbSeg09Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt Value Table for Signal HbSeg09Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg09Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt Signal HbSeg08Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg08Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt        0, 0, 0, 3

/**
 * Signal HbSeg08Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg08Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg08Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg08Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(buf, 6)

/**
 * Signal HbSeg08Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg08Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt      6

/**
 * Signal HbSeg08Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt        0

/**
 * Signal HbSeg08Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt        7

/**
 * Signal HbSeg08Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt Value Table for Signal HbSeg08Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt Signal HbSeg08Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg08Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt        0, 0, 0, 3

/**
 * Signal HbSeg08Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg08Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg08Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg08Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(buf, 6)

/**
 * Signal HbSeg08Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg08Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt      6

/**
 * Signal HbSeg08Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt        0

/**
 * Signal HbSeg08Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt        7

/**
 * Signal HbSeg08Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt Value Table for Signal HbSeg08Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg08Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt Signal HbSeg07Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg07Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt        0, 0, 0, 3

/**
 * Signal HbSeg07Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg07Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg07Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg07Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(buf, 6)

/**
 * Signal HbSeg07Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg07Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt      6

/**
 * Signal HbSeg07Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt        0

/**
 * Signal HbSeg07Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt        7

/**
 * Signal HbSeg07Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt Value Table for Signal HbSeg07Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt Signal HbSeg07Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg07Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt        0, 0, 0, 3

/**
 * Signal HbSeg07Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg07Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg07Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg07Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(buf, 6)

/**
 * Signal HbSeg07Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg07Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt      6

/**
 * Signal HbSeg07Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt        0

/**
 * Signal HbSeg07Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt        7

/**
 * Signal HbSeg07Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt Value Table for Signal HbSeg07Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg07Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt Signal HbSeg06Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg06Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt        0, 0, 0, 3

/**
 * Signal HbSeg06Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg06Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg06Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg06Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(buf, 6)

/**
 * Signal HbSeg06Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg06Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt      6

/**
 * Signal HbSeg06Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt        0

/**
 * Signal HbSeg06Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt        7

/**
 * Signal HbSeg06Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt Value Table for Signal HbSeg06Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt Signal HbSeg06Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg06Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt        0, 0, 0, 3

/**
 * Signal HbSeg06Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg06Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg06Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg06Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(buf, 6)

/**
 * Signal HbSeg06Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg06Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt      6

/**
 * Signal HbSeg06Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt        0

/**
 * Signal HbSeg06Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt        7

/**
 * Signal HbSeg06Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt Value Table for Signal HbSeg06Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg06Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt Signal HbSeg05Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg05Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt        0, 0, 0, 3

/**
 * Signal HbSeg05Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg05Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg05Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg05Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(buf, 6)

/**
 * Signal HbSeg05Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg05Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt      6

/**
 * Signal HbSeg05Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt        0

/**
 * Signal HbSeg05Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt        7

/**
 * Signal HbSeg05Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt Value Table for Signal HbSeg05Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt Signal HbSeg05Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg05Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt        0, 0, 0, 3

/**
 * Signal HbSeg05Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg05Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg05Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg05Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(buf, 6)

/**
 * Signal HbSeg05Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg05Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt      6

/**
 * Signal HbSeg05Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt        0

/**
 * Signal HbSeg05Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt        7

/**
 * Signal HbSeg05Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt Value Table for Signal HbSeg05Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg05Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt Signal HbSeg04Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg04Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt        0, 0, 0, 3

/**
 * Signal HbSeg04Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg04Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg04Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg04Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(buf, 6)

/**
 * Signal HbSeg04Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg04Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt      6

/**
 * Signal HbSeg04Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt        0

/**
 * Signal HbSeg04Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt        7

/**
 * Signal HbSeg04Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt Value Table for Signal HbSeg04Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt Signal HbSeg04Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg04Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt        0, 0, 0, 3

/**
 * Signal HbSeg04Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg04Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg04Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg04Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(buf, 6)

/**
 * Signal HbSeg04Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg04Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt      6

/**
 * Signal HbSeg04Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt        0

/**
 * Signal HbSeg04Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt        7

/**
 * Signal HbSeg04Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt Value Table for Signal HbSeg04Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg04Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt Signal HbSeg03Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg03Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt        0, 0, 0, 3

/**
 * Signal HbSeg03Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg03Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg03Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg03Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(buf, 6)

/**
 * Signal HbSeg03Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg03Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt      6

/**
 * Signal HbSeg03Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt        0

/**
 * Signal HbSeg03Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt        7

/**
 * Signal HbSeg03Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt Value Table for Signal HbSeg03Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt Signal HbSeg03Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg03Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt        0, 0, 0, 3

/**
 * Signal HbSeg03Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg03Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg03Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg03Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(buf, 6)

/**
 * Signal HbSeg03Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg03Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt      6

/**
 * Signal HbSeg03Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt        0

/**
 * Signal HbSeg03Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt        7

/**
 * Signal HbSeg03Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt Value Table for Signal HbSeg03Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg03Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt Signal HbSeg02Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg02Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt        0, 0, 0, 3

/**
 * Signal HbSeg02Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg02Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg02Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg02Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(buf, 6)

/**
 * Signal HbSeg02Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg02Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt      6

/**
 * Signal HbSeg02Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt        0

/**
 * Signal HbSeg02Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt        7

/**
 * Signal HbSeg02Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt Value Table for Signal HbSeg02Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt Signal HbSeg02Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg02Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt        0, 0, 0, 3

/**
 * Signal HbSeg02Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg02Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg02Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg02Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(buf, 6)

/**
 * Signal HbSeg02Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg02Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt      6

/**
 * Signal HbSeg02Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt        0

/**
 * Signal HbSeg02Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt        7

/**
 * Signal HbSeg02Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt Value Table for Signal HbSeg02Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg02Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt Signal HbSeg01Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg01Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt        0, 0, 0, 3

/**
 * Signal HbSeg01Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg01Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg01Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg01Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(buf, 6)

/**
 * Signal HbSeg01Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg01Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt      6

/**
 * Signal HbSeg01Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt        0

/**
 * Signal HbSeg01Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt        7

/**
 * Signal HbSeg01Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt Value Table for Signal HbSeg01Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt Signal HbSeg01Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg01Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt        0, 0, 0, 3

/**
 * Signal HbSeg01Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg01Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg01Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg01Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(buf, 6)

/**
 * Signal HbSeg01Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg01Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt      6

/**
 * Signal HbSeg01Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt        0

/**
 * Signal HbSeg01Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt        7

/**
 * Signal HbSeg01Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt Value Table for Signal HbSeg01Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg01Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt Signal HbSeg00Rt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg00Rt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt        0, 0, 0, 3

/**
 * Signal HbSeg00Rt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg00Rt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg00Rt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg00Rt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(buf, 6)

/**
 * Signal HbSeg00Rt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg00Rt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt      6

/**
 * Signal HbSeg00Rt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt        0

/**
 * Signal HbSeg00Rt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt        7

/**
 * Signal HbSeg00Rt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt Value Table for Signal HbSeg00Rt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Rt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt Signal HbSeg00Lt of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HbSeg00Lt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt        0, 0, 0, 3

/**
 * Signal HbSeg00Lt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt      0, 0, 0, 3, 6

/**
 * Get signal HbSeg00Lt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal HbSeg00Lt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal HbSeg00Lt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(buf, 6)

/**
 * Signal HbSeg00Lt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt(x, fmt) \
	((x) * fmt)

/**
 * Signal HbSeg00Lt raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt      6

/**
 * Signal HbSeg00Lt raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt        0

/**
 * Signal HbSeg00Lt raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt        7

/**
 * Signal HbSeg00Lt raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt Value Table for Signal HbSeg00Lt in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_notAvailable        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_init                6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry _100_.
 *
 * >100% additionalLaserSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt__100_               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry _100__4.
 *
 * >100% additionalLedSpot
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt__100__4             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry 76_100_.
 *
 * 76-100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_76_100_             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry 51_75_.
 *
 * 51-75%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_51_75_              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry 1_50_.
 *
 * 1-50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_1_50_               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HbSeg00Lt_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus Signal LbStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Low beam status
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LbStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LbStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LbStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus        0, 0, 0, 4

/**
 * Signal LbStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LbStatus      0, 0, 0, 4, 14

/**
 * Get signal LbStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal LbStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal LbStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(buf, 14)

/**
 * Signal LbStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LbStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal LbStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LbStatus      14

/**
 * Signal LbStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LbStatus        0

/**
 * Signal LbStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LbStatus        15

/**
 * Signal LbStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LbStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus Value Table for Signal LbStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry lbFailureHardware.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_lbFailureHardware    11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry lbFailureSignalInput.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_lbFailureSignalInput    10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel7.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel7            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel6            6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel5            5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel4            4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel3            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel2            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry onLevel1Normal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_onLevel1Normal      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LbStatus entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LbStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LbStatus_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest Signal FcwRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest        0, 0, 0, 1

/**
 * Signal FcwRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest      0, 0, 0, 1, 0

/**
 * Get signal FcwRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal FcwRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal FcwRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(buf, 0)

/**
 * Signal FcwRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest      0

/**
 * Signal FcwRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest        0

/**
 * Signal FcwRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest        1

/**
 * Signal FcwRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest Value Table for Signal FcwRequest in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwRequest entry FcwRequestActive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwRequest_FcwRequestActive    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwRequest entry NoRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwRequest_NoRequest           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError Signal FcwError of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwError.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwError configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwError and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwError instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError        0, 0, 0, 1

/**
 * Signal FcwError setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwError      0, 0, 0, 1, 0

/**
 * Get signal FcwError from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwError(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal FcwError in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwError(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal FcwError in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwError(buf, 0)

/**
 * Signal FcwError value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwError(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwError raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwError      0

/**
 * Signal FcwError raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwError        0

/**
 * Signal FcwError raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwError        1

/**
 * Signal FcwError raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwError        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwError Value Table for Signal FcwError in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwError
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwError entry Error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwError
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwError_Error               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwError entry NoError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwError
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwError_NoError             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled Signal FcwEnabled of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwEnabled configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled        0, 0, 0, 1

/**
 * Signal FcwEnabled setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled      0, 0, 0, 1, 0

/**
 * Get signal FcwEnabled from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal FcwEnabled in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal FcwEnabled in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(buf, 0)

/**
 * Signal FcwEnabled value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwEnabled raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled      0

/**
 * Signal FcwEnabled raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled        0

/**
 * Signal FcwEnabled raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled        1

/**
 * Signal FcwEnabled raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled Value Table for Signal FcwEnabled in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled entry Enabled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled_Enabled             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled entry Disabled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FcwEnabled_Disabled            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter Signal AEB_01_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AEB_01_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter        0, 0, 0, 4

/**
 * Signal AEB_01_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter      0, 0, 0, 4, 0

/**
 * Get signal AEB_01_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal AEB_01_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal AEB_01_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(buf, 0)

/**
 * Signal AEB_01_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal AEB_01_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter      0

/**
 * Signal AEB_01_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter        0

/**
 * Signal AEB_01_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter        15

/**
 * Signal AEB_01_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC Signal AEB_01_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AEB_01_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC        0, 0, 0, 8

/**
 * Signal AEB_01_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC      0, 0, 0, 8, 0

/**
 * Get signal AEB_01_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal AEB_01_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal AEB_01_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(buf, 0)

/**
 * Signal AEB_01_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal AEB_01_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC      0

/**
 * Signal AEB_01_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC        0

/**
 * Signal AEB_01_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC        255

/**
 * Signal AEB_01_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AEB_01_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled Signal AebEnabled of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AebEnabled configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled        0, 0, 0, 1

/**
 * Signal AebEnabled setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled      0, 0, 0, 1, 0

/**
 * Get signal AebEnabled from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal AebEnabled in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal AebEnabled in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(buf, 0)

/**
 * Signal AebEnabled value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled(x, fmt) \
	((x) * fmt)

/**
 * Signal AebEnabled raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled      0

/**
 * Signal AebEnabled raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled        0

/**
 * Signal AebEnabled raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled        1

/**
 * Signal AebEnabled raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled Value Table for Signal AebEnabled in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebEnabled entry Enabled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebEnabled_Enabled             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebEnabled entry notEnabled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebEnabled
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebEnabled_notEnabled          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebError Signal AebError of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebError.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AebError configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AebError and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AebError instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AebError        0, 0, 0, 1

/**
 * Signal AebError setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebError or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AebError      0, 0, 0, 1, 0

/**
 * Get signal AebError from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AebError(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal AebError in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AebError(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal AebError in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebError(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AebError(buf, 0)

/**
 * Signal AebError value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AebError(x, fmt) \
	((x) * fmt)

/**
 * Signal AebError raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AebError      0

/**
 * Signal AebError raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AebError        0

/**
 * Signal AebError raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AebError        1

/**
 * Signal AebError raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AebError        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebError Value Table for Signal AebError in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebError.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebError
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebError entry Error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebError
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebError_Error               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebError entry noError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebError
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebError_noError             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest Signal AebRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AebRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AebRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AebRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest        0, 0, 0, 2

/**
 * Signal AebRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AebRequest      0, 0, 0, 2, 0

/**
 * Get signal AebRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal AebRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal AebRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(buf, 0)

/**
 * Signal AebRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AebRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal AebRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AebRequest      0

/**
 * Signal AebRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AebRequest        0

/**
 * Signal AebRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AebRequest        3

/**
 * Signal AebRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AebRequest        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest Value Table for Signal AebRequest in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebRequest entry fullBrakingRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebRequest_fullBrakingRequest    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebRequest entry partialBrakingRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebRequest_partialBrakingRequest    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebRequest entry prefillRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebRequest_prefillRequest      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebRequest entry noRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebRequest
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebRequest_noRequest           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport Signal AebBrakeSupport of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AebBrakeSupport configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport        0, 0, 0, 1

/**
 * Signal AebBrakeSupport setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport      0, 0, 0, 1, 0

/**
 * Get signal AebBrakeSupport from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal AebBrakeSupport in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal AebBrakeSupport in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(buf, 0)

/**
 * Signal AebBrakeSupport value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport(x, fmt) \
	((x) * fmt)

/**
 * Signal AebBrakeSupport raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport      0

/**
 * Signal AebBrakeSupport raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport        0

/**
 * Signal AebBrakeSupport raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport        1

/**
 * Signal AebBrakeSupport raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport Value Table for Signal AebBrakeSupport in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport entry aebBrakeSuppNotAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport_aebBrakeSuppNotAvailable    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport entry aebBrakeSuppAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AebBrakeSupport_aebBrakeSuppAvailable    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity Signal DiagnosisReleaseValidity of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DiagnosisReleaseValidity configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity        0, 0, 0, 1

/**
 * Signal DiagnosisReleaseValidity setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity      0, 0, 0, 1, 0

/**
 * Get signal DiagnosisReleaseValidity from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DiagnosisReleaseValidity in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DiagnosisReleaseValidity in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(buf, 0)

/**
 * Signal DiagnosisReleaseValidity value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity(x, fmt) \
	((x) * fmt)

/**
 * Signal DiagnosisReleaseValidity raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity      0

/**
 * Signal DiagnosisReleaseValidity raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity        0

/**
 * Signal DiagnosisReleaseValidity raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity        1

/**
 * Signal DiagnosisReleaseValidity raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity Value Table for Signal DiagnosisReleaseValidity in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity entry supported.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity_supported           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity entry notSupported.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DiagnosisReleaseValidity_notSupported        0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease Signal DiagnosisRelease of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DiagnosisRelease configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease        0, 0, 0, 1

/**
 * Signal DiagnosisRelease setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease      0, 0, 0, 1, 0

/**
 * Get signal DiagnosisRelease from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal DiagnosisRelease in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal DiagnosisRelease in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(buf, 0)

/**
 * Signal DiagnosisRelease value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease(x, fmt) \
	((x) * fmt)

/**
 * Signal DiagnosisRelease raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease      0

/**
 * Signal DiagnosisRelease raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease        0

/**
 * Signal DiagnosisRelease raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease        1

/**
 * Signal DiagnosisRelease raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease Value Table for Signal DiagnosisRelease in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease entry released.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease_released            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease entry notReleased.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DiagnosisRelease_notReleased         0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus Signal NavSpeedLimitStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Speed limit status from NAV
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NavSpeedLimitStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus        0, 0, 0, 2

/**
 * Signal NavSpeedLimitStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus      0, 0, 0, 2, 0

/**
 * Get signal NavSpeedLimitStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal NavSpeedLimitStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal NavSpeedLimitStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(buf, 0)

/**
 * Signal NavSpeedLimitStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal NavSpeedLimitStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus      0

/**
 * Signal NavSpeedLimitStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus        0

/**
 * Signal NavSpeedLimitStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus        3

/**
 * Signal NavSpeedLimitStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus Value Table for Signal NavSpeedLimitStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus entry pluralDataExists.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus_pluralDataExists    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus entry noLimit.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus_noLimit             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus entry exists.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus_exists              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpeedLimitStatus_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits Signal NavSpdLimitUnits of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Speed limit units from NAV
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NavSpdLimitUnits configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits        0, 0, 0, 2

/**
 * Signal NavSpdLimitUnits setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits      0, 0, 0, 2, 0

/**
 * Get signal NavSpdLimitUnits from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal NavSpdLimitUnits in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal NavSpdLimitUnits in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(buf, 0)

/**
 * Signal NavSpdLimitUnits value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits(x, fmt) \
	((x) * fmt)

/**
 * Signal NavSpdLimitUnits raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits      0

/**
 * Signal NavSpdLimitUnits raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits        0

/**
 * Signal NavSpdLimitUnits raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits        3

/**
 * Signal NavSpdLimitUnits raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits Value Table for Signal NavSpdLimitUnits in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits entry km_h.
 *
 * km/h
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits_km_h                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits entry miles_h.
 *
 * miles/h
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits_miles_h             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimitUnits_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit Signal NavSpdLimit of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Speed limit value from NAV
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NavSpdLimit configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit        0, 0, 0, 8

/**
 * Signal NavSpdLimit setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit      0, 0, 0, 8, 0

/**
 * Get signal NavSpdLimit from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal NavSpdLimit in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal NavSpdLimit in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(buf, 0)

/**
 * Signal NavSpdLimit value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit(x, fmt) \
	((x) * fmt)

/**
 * Signal NavSpdLimit raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit      0

/**
 * Signal NavSpdLimit raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit        0

/**
 * Signal NavSpdLimit raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit        255

/**
 * Signal NavSpdLimit raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit Value Table for Signal NavSpdLimit in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit entry invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavSpdLimit_invalid             597

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType Signal NavCurrRoadType of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Current road type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NavCurrRoadType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType        0, 0, 0, 3

/**
 * Signal NavCurrRoadType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType      0, 0, 0, 3, 0

/**
 * Get signal NavCurrRoadType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal NavCurrRoadType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal NavCurrRoadType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(buf, 0)

/**
 * Signal NavCurrRoadType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType(x, fmt) \
	((x) * fmt)

/**
 * Signal NavCurrRoadType raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType      0

/**
 * Signal NavCurrRoadType raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType        0

/**
 * Signal NavCurrRoadType raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType        7

/**
 * Signal NavCurrRoadType raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType Value Table for Signal NavCurrRoadType in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry class5.
 *
 * miscRoad
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_class5              5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry class4.
 *
 * lowSpeedRoad
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_class4              4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry class3.
 *
 * localRoad
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_class3              3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry class2.
 *
 * mainRoad
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_class2              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry class1.
 *
 * motorway
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_class1              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCurrRoadType_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus Signal VehicleMovementStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VehicleMovementStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus        0, 0, 0, 2

/**
 * Signal VehicleMovementStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus      0, 0, 0, 2, 0

/**
 * Get signal VehicleMovementStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VehicleMovementStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VehicleMovementStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(buf, 0)

/**
 * Signal VehicleMovementStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal VehicleMovementStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus      0

/**
 * Signal VehicleMovementStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus        0

/**
 * Signal VehicleMovementStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus        3

/**
 * Signal VehicleMovementStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus Value Table for Signal VehicleMovementStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus entry flippingAround.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus_flippingAround      3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus entry reverse.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus_reverse             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus entry forward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus_forward             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus entry static.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_VehicleMovementStatus_static              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode Signal NavCountryCode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Siehe wertetabelle
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal NavCountryCode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode        0, 0, 0, 8

/**
 * Signal NavCountryCode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode      0, 0, 0, 8, 0

/**
 * Get signal NavCountryCode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal NavCountryCode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal NavCountryCode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(buf, 0)

/**
 * Signal NavCountryCode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode(x, fmt) \
	((x) * fmt)

/**
 * Signal NavCountryCode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode      0

/**
 * Signal NavCountryCode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode        0

/**
 * Signal NavCountryCode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode        255

/**
 * Signal NavCountryCode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode Value Table for Signal NavCountryCode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry montenegro.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_montenegro          244

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bosnia_herzegovina.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bosnia_herzegovina    243

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry macedonia2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_macedonia2          242

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry croatia2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_croatia2            241

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry zimbabwe.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_zimbabwe            240

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry zambia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_zambia              239

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry serbia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_serbia              238

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry yemen.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_yemen               237

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry western_sahara.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_western_sahara      236

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry wallis_and_futuna_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_wallis_and_futuna_islands    235

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry virgin_islands_us.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_virgin_islands_us    234

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry virgin_islands_british.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_virgin_islands_british    233

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry vietnam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_vietnam             232

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry venezuela.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_venezuela           231

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry vatican.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_vatican             230

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry vanuatu.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_vanuatu             229

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry uzbekistan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_uzbekistan          228

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry uruguay.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_uruguay             227

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry usa_minor_outlying_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_usa_minor_outlying_islands    226

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry united_states.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_united_states       225

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry united_kingdom.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_united_kingdom      224

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry united_arab_emirates.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_united_arab_emirates    223

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry ukraine.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_ukraine             222

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry uganda.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_uganda              221

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tuvalu.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tuvalu              220

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry turks_and_caicos_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_turks_and_caicos_islands    219

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry turkmenistan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_turkmenistan        218

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry turkey.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_turkey              217

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tunisia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tunisia             216

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry trinidad_and_tobago.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_trinidad_and_tobago    215

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tonga.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tonga               214

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tokelau.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tokelau             213

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry togo.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_togo                212

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry thailand.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_thailand            211

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tanzania.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tanzania            210

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry tajikistan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_tajikistan          209

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry taiwan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_taiwan              208

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry syrian_arab_republic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_syrian_arab_republic    207

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry switzerland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_switzerland         206

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry sweden.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_sweden              205

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry swaziland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_swaziland           204

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry svalbard_and_jan_mayen_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_svalbard_and_jan_mayen_islands    203

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry suriname.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_suriname            202

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry sudan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_sudan               201

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry st_pierre_and_miquelon.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_st_pierre_and_miquelon    200

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry st_helena.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_st_helena           199

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry sri_lanka.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_sri_lanka           198

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry spain.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_spain               197

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry south_georgia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_south_georgia       196

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry south_africa.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_south_africa        195

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry somalia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_somalia             194

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry solomon_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_solomon_islands     193

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry slovenia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_slovenia            192

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry slovakia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_slovakia            191

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry singapore.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_singapore           190

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry sierra_leone.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_sierra_leone        189

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry seychelles.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_seychelles          188

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry senegal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_senegal             187

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry saudi_arabia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_saudi_arabia        186

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry sao_tome_and_principe.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_sao_tome_and_principe    185

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry san_marino.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_san_marino          184

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry samoa.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_samoa               183

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry saint_vincent_and_the_grenadines.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_saint_vincent_and_the_grenadines    182

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry saint_lucia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_saint_lucia         181

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry saint_kitts_and_nevis.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_saint_kitts_and_nevis    180

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry rwanda.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_rwanda              179

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry russian_federation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_russian_federation    178

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry romania.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_romania             177

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry reunion.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_reunion             176

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry qatar.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_qatar               175

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry puerto_rico.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_puerto_rico         174

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry portugal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_portugal            173

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry poland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_poland              172

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry pitcairn.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_pitcairn            171

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry philippines.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_philippines         170

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry peru.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_peru                169

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry paraguay.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_paraguay            168

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry papua_new_guinea.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_papua_new_guinea    167

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry panama.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_panama              166

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry palestinian_authority.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_palestinian_authority    165

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry palau.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_palau               164

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry pakistan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_pakistan            163

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry oman.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_oman                162

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry norway.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_norway              161

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry northern_mariana_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_northern_mariana_islands    160

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry norfolk_island.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_norfolk_island      159

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry niue.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_niue                158

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry nigeria.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_nigeria             157

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry niger.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_niger               156

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry nicaragua.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_nicaragua           155

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry new_zealand.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_new_zealand         154

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry new_caledonia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_new_caledonia       153

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry netherlands_antilles.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_netherlands_antilles    152

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry netherlands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_netherlands         151

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry nepal.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_nepal               150

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry nauru.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_nauru               149

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry namibia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_namibia             148

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry myanmar.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_myanmar             147

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mozambique.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mozambique          146

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry morocco.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_morocco             145

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry montserrat.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_montserrat          144

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mongolia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mongolia            143

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry monaco.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_monaco              142

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry moldova.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_moldova             141

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry micronesia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_micronesia          140

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mexico.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mexico              139

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mayotte.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mayotte             138

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mauritius.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mauritius           137

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mauritania.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mauritania          136

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry martinique.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_martinique          135

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry marshall_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_marshall_islands    134

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry malta.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_malta               133

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry mali.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_mali                132

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry maldives.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_maldives            131

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry malaysia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_malaysia            130

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry malawi.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_malawi              129

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry madagascar.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_madagascar          128

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry macedonia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_macedonia           127

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry macau.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_macau               126

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry luxemburg.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_luxemburg           125

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry lithuania.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_lithuania           124

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry liechtenstein.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_liechtenstein       123

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry libyan_arab_jamahiriya.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_libyan_arab_jamahiriya    122

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry liberia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_liberia             121

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry lesotho.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_lesotho             120

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry lebanon.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_lebanon             119

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry latvia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_latvia              118

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry lao.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_lao                 117

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry kyrgyzstan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_kyrgyzstan          116

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry kuwait.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_kuwait              115

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry korea_south.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_korea_south         114

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry korea_north.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_korea_north         113

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry kiribati.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_kiribati            112

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry kenya.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_kenya               111

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry kazakhstan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_kazakhstan          110

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry jordan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_jordan              109

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry japan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_japan               108

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry jamaica.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_jamaica             107

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry italy.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_italy               106

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry israel.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_israel              105

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry ireland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_ireland             104

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry iraq.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_iraq                103

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry iran.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_iran                102

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry indonesia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_indonesia           101

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry india.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_india               100

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry iceland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_iceland             99

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry hungary.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_hungary             98

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry hong_kong.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_hong_kong           97

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry honduras.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_honduras            96

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry heard_and_mc_donald_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_heard_and_mc_donald_islands    95

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry haiti.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_haiti               94

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guyana.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guyana              93

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guinea_bissau.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guinea_bissau       92

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guinea.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guinea              91

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guatemala.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guatemala           90

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guam                89

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry guadeloupe.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_guadeloupe          88

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry grenada.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_grenada             87

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry greenland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_greenland           86

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry greece.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_greece              85

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry gibraltar.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_gibraltar           84

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry ghana.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_ghana               83

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry germany.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_germany             82

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry georgia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_georgia             81

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry gambia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_gambia              80

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry gabon.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_gabon               79

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry french_southern_territories.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_french_southern_territories    78

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry french_polynesia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_french_polynesia    77

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry french_guiana.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_french_guiana       76

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry france_metropolitan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_france_metropolitan    75

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry france.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_france              74

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry finland.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_finland             73

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry fiji.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_fiji                72

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry faroe_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_faroe_islands       71

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry falkland_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_falkland_islands    70

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry ethiopia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_ethiopia            69

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry estonia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_estonia             68

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry eritrea.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_eritrea             67

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry equatorial_guinea.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_equatorial_guinea    66

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry el_salvador.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_el_salvador         65

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry egypt.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_egypt               64

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry ecuador.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_ecuador             63

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry east_timor.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_east_timor          62

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry dominican_republic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_dominican_republic    61

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry dominica.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_dominica            60

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry djibouti.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_djibouti            59

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry denmark.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_denmark             58

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry czech_republic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_czech_republic      57

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cyprus.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cyprus              56

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cuba.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cuba                55

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry croatia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_croatia             54

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cote_divoire.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cote_divoire        53

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry costa_rica.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_costa_rica          52

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cook_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cook_islands        51

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry congo_democratic_republic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_congo_democratic_republic    50

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry congo.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_congo               49

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry comoros.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_comoros             48

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry colombia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_colombia            47

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cocos_keeling_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cocos_keeling_islands    46

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry christmas_island.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_christmas_island    45

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry china.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_china               44

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry chile.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_chile               43

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry chad.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_chad                42

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry central_african_republic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_central_african_republic    41

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cayman_islands.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cayman_islands      40

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cape_verde.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cape_verde          39

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry canada.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_canada              38

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cameroon.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cameroon            37

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry cambodia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_cambodia            36

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry burundi.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_burundi             35

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry burkina_faso.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_burkina_faso        34

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bulgaria.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bulgaria            33

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry brunei_darussalam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_brunei_darussalam    32

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry british_indian_ocean_territory.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_british_indian_ocean_territory    31

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry brazil.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_brazil              30

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bouvet_island.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bouvet_island       29

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry botswana.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_botswana            28

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bosnia_and_herzegovina.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bosnia_and_herzegovina    27

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bolivia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bolivia             26

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bhutan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bhutan              25

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bermuda.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bermuda             24

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry benin.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_benin               23

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry belize.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_belize              22

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry belgium.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_belgium             21

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry belarus.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_belarus             20

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry barbados.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_barbados            19

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bangladesh.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bangladesh          18

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bahrain.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bahrain             17

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry bahamas.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_bahamas             16

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry azerbaijan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_azerbaijan          15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry austria.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_austria             14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry australia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_australia           13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry aruba.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_aruba               12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry armenia.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_armenia             11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry argentina.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_argentina           10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry antigua_and_barbuda.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_antigua_and_barbuda    9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry antarctica.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_antarctica          8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry anguilla.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_anguilla            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry angola.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_angola              6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry andorra.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_andorra             5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry american_samoa.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_american_samoa      4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry algeria.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_algeria             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry albania.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_albania             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry afghanistan.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_afghanistan         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_NavCountryCode_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage Signal Mileage of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Mileage configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Mileage and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Mileage instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage        0, 0, 0, 20

/**
 * Signal Mileage setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Mileage      0, 0, 0, 20, 0

/**
 * Get signal Mileage from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Mileage(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
	| (ulong)(+(ulong)((buf[2] >> 0) & 0x0f) << 16) \
)

/**
 * Set signal Mileage in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Mileage(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
	buf[2] &= ~(0x0f << 0); \
	buf[2] |= ((ubyte)((ulong)(val) >> 16) & 0x0f) << 0; \
}

/**
 * Set signal Mileage in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Mileage(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Mileage(buf, 0)

/**
 * Signal Mileage value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Mileage(x, fmt) \
	((x) * fmt)

/**
 * Signal Mileage raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Mileage      0

/**
 * Signal Mileage raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Mileage        0

/**
 * Signal Mileage raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Mileage        1048575

/**
 * Signal Mileage raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Mileage        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC Signal Vehicle_CAN_19_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_19_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_19_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_19_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_19_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_19_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_19_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_19_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC      0

/**
 * Signal Vehicle_CAN_19_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC        0

/**
 * Signal Vehicle_CAN_19_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC        255

/**
 * Signal Vehicle_CAN_19_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter Signal Vehicle_CAN_19_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_19_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_19_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_19_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_19_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_19_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_19_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_19_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter      0

/**
 * Signal Vehicle_CAN_19_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter        0

/**
 * Signal Vehicle_CAN_19_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter        15

/**
 * Signal Vehicle_CAN_19_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_19_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber Signal KeyNumber of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Dummy in Gateway - for Systest only
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal KeyNumber configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber        0, 0, 0, 2

/**
 * Signal KeyNumber setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber      0, 0, 0, 2, 0

/**
 * Get signal KeyNumber from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal KeyNumber in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal KeyNumber in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(buf, 0)

/**
 * Signal KeyNumber value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber(x, fmt) \
	((x) * fmt)

/**
 * Signal KeyNumber raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber      0

/**
 * Signal KeyNumber raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber        0

/**
 * Signal KeyNumber raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber        3

/**
 * Signal KeyNumber raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_KeyNumber        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset Signal RideHeightOffset of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RideHeightOffset configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset        0, 0, 0, 8

/**
 * Signal RideHeightOffset setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset      0, 0, 0, 8, 127

/**
 * Get signal RideHeightOffset from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal RideHeightOffset in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal RideHeightOffset in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(buf, 127)

/**
 * Signal RideHeightOffset value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset(x, fmt) \
	((x) * fmt + fmt * (-127))

/**
 * Signal RideHeightOffset raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset      127

/**
 * Signal RideHeightOffset raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset        0

/**
 * Signal RideHeightOffset raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset        254

/**
 * Signal RideHeightOffset raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RideHeightOffset        -127

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight Signal DirRotationWheelRearRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DirRotationWheelRearRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight        0, 0, 0, 2

/**
 * Signal DirRotationWheelRearRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight      0, 0, 0, 2, 0

/**
 * Get signal DirRotationWheelRearRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DirRotationWheelRearRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DirRotationWheelRearRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(buf, 0)

/**
 * Signal DirRotationWheelRearRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight(x, fmt) \
	((x) * fmt)

/**
 * Signal DirRotationWheelRearRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight      0

/**
 * Signal DirRotationWheelRearRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight        0

/**
 * Signal DirRotationWheelRearRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight        3

/**
 * Signal DirRotationWheelRearRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight Value Table for Signal DirRotationWheelRearRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight entry not.
 *
 * mounted
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight_not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight_init                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight entry Backwards.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight_Backwards           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight entry Forward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearRight_Forward             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft Signal DirRotationWheelRearLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DirRotationWheelRearLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft        0, 0, 0, 2

/**
 * Signal DirRotationWheelRearLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft      0, 0, 0, 2, 0

/**
 * Get signal DirRotationWheelRearLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DirRotationWheelRearLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DirRotationWheelRearLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(buf, 0)

/**
 * Signal DirRotationWheelRearLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft(x, fmt) \
	((x) * fmt)

/**
 * Signal DirRotationWheelRearLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft      0

/**
 * Signal DirRotationWheelRearLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft        0

/**
 * Signal DirRotationWheelRearLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft        3

/**
 * Signal DirRotationWheelRearLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft Value Table for Signal DirRotationWheelRearLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft entry not.
 *
 * mounted
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft_not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft_init                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft entry Backwards.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft_Backwards           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft entry Forward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelRearLeft_Forward             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight Signal DirRotationWheelFrontRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DirRotationWheelFrontRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight        0, 0, 0, 2

/**
 * Signal DirRotationWheelFrontRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight      0, 0, 0, 2, 0

/**
 * Get signal DirRotationWheelFrontRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DirRotationWheelFrontRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DirRotationWheelFrontRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(buf, 0)

/**
 * Signal DirRotationWheelFrontRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight(x, fmt) \
	((x) * fmt)

/**
 * Signal DirRotationWheelFrontRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight      0

/**
 * Signal DirRotationWheelFrontRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight        0

/**
 * Signal DirRotationWheelFrontRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight        3

/**
 * Signal DirRotationWheelFrontRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight Value Table for Signal DirRotationWheelFrontRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight entry not.
 *
 * mounted
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight_not                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight_init                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight entry Backwards.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight_Backwards           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight entry Forward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontRight_Forward             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC Signal Vehicle_CAN_17_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_17_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_17_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_17_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_17_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_17_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_17_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_17_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC      0

/**
 * Signal Vehicle_CAN_17_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC        0

/**
 * Signal Vehicle_CAN_17_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC        255

/**
 * Signal Vehicle_CAN_17_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter Signal Vehicle_CAN_17_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_17_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_17_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_17_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_17_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_17_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_17_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_17_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter      0

/**
 * Signal Vehicle_CAN_17_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter        0

/**
 * Signal Vehicle_CAN_17_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter        15

/**
 * Signal Vehicle_CAN_17_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_17_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft Signal DirRotationWheelFrontLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal DirRotationWheelFrontLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft        0, 0, 0, 2

/**
 * Signal DirRotationWheelFrontLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft      0, 0, 0, 2, 0

/**
 * Get signal DirRotationWheelFrontLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DirRotationWheelFrontLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DirRotationWheelFrontLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(buf, 0)

/**
 * Signal DirRotationWheelFrontLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft(x, fmt) \
	((x) * fmt)

/**
 * Signal DirRotationWheelFrontLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft      0

/**
 * Signal DirRotationWheelFrontLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft        0

/**
 * Signal DirRotationWheelFrontLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft        3

/**
 * Signal DirRotationWheelFrontLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft Value Table for Signal DirRotationWheelFrontLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft entry not_mounted.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft_not_mounted         3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft_init                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft entry Backwards.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft_Backwards           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft entry Forward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_DirRotationWheelFrontLeft_Forward             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Year Signal Year of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Year configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Year and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Year instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Year        0, 0, 0, 7

/**
 * Signal Year setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Year or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Year      0, 0, 0, 7, 0

/**
 * Get signal Year from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Year(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal Year in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Year(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal Year in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Year(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Year(buf, 0)

/**
 * Signal Year value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Year(x, fmt) \
	((x) * fmt + fmt * 2000)

/**
 * Signal Year raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Year      0

/**
 * Signal Year raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Year        0

/**
 * Signal Year raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Year        127

/**
 * Signal Year raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Year        2000

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Second Signal Second of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Second configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Second and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Second instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Second        0, 0, 0, 6

/**
 * Signal Second setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Second or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Second      0, 0, 0, 6, 0

/**
 * Get signal Second from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Second(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal Second in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Second(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal Second in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Second(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Second(buf, 0)

/**
 * Signal Second value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Second(x, fmt) \
	((x) * fmt)

/**
 * Signal Second raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Second      0

/**
 * Signal Second raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Second        0

/**
 * Signal Second raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Second        60

/**
 * Signal Second raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Second        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Month Signal Month of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Month configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Month and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Month instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Month        0, 0, 0, 4

/**
 * Signal Month setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Month or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Month      0, 0, 0, 4, 0

/**
 * Get signal Month from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Month(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Month in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Month(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Month in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Month(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Month(buf, 0)

/**
 * Signal Month value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Month(x, fmt) \
	((x) * fmt)

/**
 * Signal Month raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Month      0

/**
 * Signal Month raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Month        0

/**
 * Signal Month raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Month        12

/**
 * Signal Month raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Month        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Minute Signal Minute of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Minute configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Minute and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Minute instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Minute        0, 0, 0, 6

/**
 * Signal Minute setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Minute or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Minute      0, 0, 0, 6, 0

/**
 * Get signal Minute from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Minute(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal Minute in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Minute(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal Minute in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Minute(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Minute(buf, 0)

/**
 * Signal Minute value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Minute(x, fmt) \
	((x) * fmt)

/**
 * Signal Minute raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Minute      0

/**
 * Signal Minute raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Minute        0

/**
 * Signal Minute raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Minute        60

/**
 * Signal Minute raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Minute        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Hour Signal Hour of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Time Mode = 24h/Day
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Hour configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Hour and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Hour instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Hour        0, 0, 0, 5

/**
 * Signal Hour setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Hour or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Hour      0, 0, 0, 5, 0

/**
 * Get signal Hour from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Hour(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal Hour in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Hour(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal Hour in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Hour(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Hour(buf, 0)

/**
 * Signal Hour value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Hour(x, fmt) \
	((x) * fmt)

/**
 * Signal Hour raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Hour      0

/**
 * Signal Hour raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Hour        0

/**
 * Signal Hour raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Hour        23

/**
 * Signal Hour raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Hour        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Day Signal Day of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Day configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Day and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Day instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Day         0, 0, 0, 5

/**
 * Signal Day setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Day or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Day       0, 0, 0, 5, 1

/**
 * Get signal Day from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Day(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal Day in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Day(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal Day in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Day(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Day(buf, 1)

/**
 * Signal Day value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Day(x, fmt) \
	((x) * fmt)

/**
 * Signal Day raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Day       1

/**
 * Signal Day raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Day         1

/**
 * Signal Day raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Day         31

/**
 * Signal Day raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Day         0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights Signal HazardLights of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HazardLights.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HazardLights configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HazardLights and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HazardLights instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights        0, 0, 0, 1

/**
 * Signal HazardLights setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HazardLights      0, 0, 0, 1, 0

/**
 * Get signal HazardLights from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal HazardLights in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal HazardLights in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(buf, 0)

/**
 * Signal HazardLights value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HazardLights(x, fmt) \
	((x) * fmt)

/**
 * Signal HazardLights raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HazardLights      0

/**
 * Signal HazardLights raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HazardLights        0

/**
 * Signal HazardLights raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HazardLights        1

/**
 * Signal HazardLights raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HazardLights        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HazardLights Value Table for Signal HazardLights in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HazardLights
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HazardLights entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HazardLights
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HazardLights_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HazardLights entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HazardLights
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HazardLights_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight Signal FrontFogLight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FrontFogLight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight        0, 0, 0, 1

/**
 * Signal FrontFogLight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight      0, 0, 0, 1, 0

/**
 * Get signal FrontFogLight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal FrontFogLight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal FrontFogLight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(buf, 0)

/**
 * Signal FrontFogLight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight(x, fmt) \
	((x) * fmt)

/**
 * Signal FrontFogLight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight      0

/**
 * Signal FrontFogLight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight        0

/**
 * Signal FrontFogLight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight        1

/**
 * Signal FrontFogLight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight Value Table for Signal FrontFogLight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_FrontFogLight_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl Signal EspHillDescentControl of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal EspHillDescentControl configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl        0, 0, 0, 1

/**
 * Signal EspHillDescentControl setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl      0, 0, 0, 1, 0

/**
 * Get signal EspHillDescentControl from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal EspHillDescentControl in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal EspHillDescentControl in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(buf, 0)

/**
 * Signal EspHillDescentControl value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl(x, fmt) \
	((x) * fmt)

/**
 * Signal EspHillDescentControl raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl      0

/**
 * Signal EspHillDescentControl raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl        0

/**
 * Signal EspHillDescentControl raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl        1

/**
 * Signal EspHillDescentControl raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl Value Table for Signal EspHillDescentControl in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_EspHillDescentControl_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter Signal CentralAgingCounter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Align_Counter for Diagnostic
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal CentralAgingCounter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter        0, 0, 0, 8

/**
 * Signal CentralAgingCounter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter      0, 0, 0, 8, 0

/**
 * Get signal CentralAgingCounter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal CentralAgingCounter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal CentralAgingCounter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(buf, 0)

/**
 * Signal CentralAgingCounter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter(x, fmt) \
	((x) * fmt)

/**
 * Signal CentralAgingCounter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter      0

/**
 * Signal CentralAgingCounter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter        0

/**
 * Signal CentralAgingCounter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter        255

/**
 * Signal CentralAgingCounter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_CentralAgingCounter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight Signal ReversingLight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * includes RequestReversingLight
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ReversingLight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight        0, 0, 0, 1

/**
 * Signal ReversingLight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight      0, 0, 0, 1, 0

/**
 * Get signal ReversingLight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal ReversingLight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal ReversingLight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(buf, 0)

/**
 * Signal ReversingLight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight(x, fmt) \
	((x) * fmt)

/**
 * Signal ReversingLight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight      0

/**
 * Signal ReversingLight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight        0

/**
 * Signal ReversingLight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight        1

/**
 * Signal ReversingLight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight Value Table for Signal ReversingLight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ReversingLight entry lightOn.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ReversingLight_lightOn             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ReversingLight entry lightOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ReversingLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ReversingLight_lightOff            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam Signal LowBeam of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LowBeam.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LowBeam configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LowBeam and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LowBeam instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam        0, 0, 0, 1

/**
 * Signal LowBeam setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LowBeam      0, 0, 0, 1, 0

/**
 * Get signal LowBeam from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal LowBeam in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal LowBeam in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(buf, 0)

/**
 * Signal LowBeam value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LowBeam(x, fmt) \
	((x) * fmt)

/**
 * Signal LowBeam raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LowBeam      0

/**
 * Signal LowBeam raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LowBeam        0

/**
 * Signal LowBeam raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LowBeam        1

/**
 * Signal LowBeam raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LowBeam        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LowBeam Value Table for Signal LowBeam in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LowBeam
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LowBeam entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LowBeam
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LowBeam_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LowBeam entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LowBeam
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LowBeam_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever Signal HighBeamLever of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HighBeamLever configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever        0, 0, 0, 2

/**
 * Signal HighBeamLever setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever      0, 0, 0, 2, 0

/**
 * Get signal HighBeamLever from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal HighBeamLever in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal HighBeamLever in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(buf, 0)

/**
 * Signal HighBeamLever value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever(x, fmt) \
	((x) * fmt)

/**
 * Signal HighBeamLever raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever      0

/**
 * Signal HighBeamLever raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever        0

/**
 * Signal HighBeamLever raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever        3

/**
 * Signal HighBeamLever raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever Value Table for Signal HighBeamLever in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever entry continiousMainBeam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever_continiousMainBeam    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever entry toggle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever_toggle              1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever entry neutral.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeamLever_neutral             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam Signal HighBeam of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeam.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HighBeam configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeam and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HighBeam instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam        0, 0, 0, 1

/**
 * Signal HighBeam setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HighBeam      0, 0, 0, 1, 0

/**
 * Get signal HighBeam from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal HighBeam in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal HighBeam in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(buf, 0)

/**
 * Signal HighBeam value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HighBeam(x, fmt) \
	((x) * fmt)

/**
 * Signal HighBeam raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HighBeam      0

/**
 * Signal HighBeam raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HighBeam        0

/**
 * Signal HighBeam raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HighBeam        1

/**
 * Signal HighBeam raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HighBeam        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeam Value Table for Signal HighBeam in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HighBeam
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeam entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeam
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeam_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_HighBeam entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_HighBeam
 */
#define VECTOR__INDEPENDENT_SIG_MSG_HighBeam_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos Signal ExteriorLightSwitchPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ExteriorLightSwitchPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos        0, 0, 0, 3

/**
 * Signal ExteriorLightSwitchPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos      0, 0, 0, 3, 0

/**
 * Get signal ExteriorLightSwitchPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal ExteriorLightSwitchPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal ExteriorLightSwitchPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(buf, 0)

/**
 * Signal ExteriorLightSwitchPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos(x, fmt) \
	((x) * fmt)

/**
 * Signal ExteriorLightSwitchPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos      0

/**
 * Signal ExteriorLightSwitchPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos        0

/**
 * Signal ExteriorLightSwitchPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos        4

/**
 * Signal ExteriorLightSwitchPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos Value Table for Signal ExteriorLightSwitchPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos entry automated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos_automated           4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos entry parkingLights.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos_parkingLights       3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos entry highBeam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos_highBeam            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos entry lowBeam.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos_lowBeam             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos entry headlightOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ExteriorLightSwitchPos_headlightOff        0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight Signal ChassisHeightFrontRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ChassisHeightFrontRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight        0, 0, 0, 8

/**
 * Signal ChassisHeightFrontRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight      0, 0, 0, 8, 127

/**
 * Get signal ChassisHeightFrontRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ChassisHeightFrontRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ChassisHeightFrontRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(buf, 127)

/**
 * Signal ChassisHeightFrontRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight(x, fmt) \
	((x) * fmt + fmt * (-127))

/**
 * Signal ChassisHeightFrontRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight      127

/**
 * Signal ChassisHeightFrontRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight        0

/**
 * Signal ChassisHeightFrontRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight        253

/**
 * Signal ChassisHeightFrontRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontRight        -127

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft Signal ChassisHeightFrontLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ChassisHeightFrontLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft        0, 0, 0, 8

/**
 * Signal ChassisHeightFrontLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft      0, 0, 0, 8, 127

/**
 * Get signal ChassisHeightFrontLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ChassisHeightFrontLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ChassisHeightFrontLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(buf, 127)

/**
 * Signal ChassisHeightFrontLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft(x, fmt) \
	((x) * fmt + fmt * (-127))

/**
 * Signal ChassisHeightFrontLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft      127

/**
 * Signal ChassisHeightFrontLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft        0

/**
 * Signal ChassisHeightFrontLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft        253

/**
 * Signal ChassisHeightFrontLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightFrontLeft        -127

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight Signal ChassisHeightBackRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ChassisHeightBackRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight        0, 0, 0, 8

/**
 * Signal ChassisHeightBackRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight      0, 0, 0, 8, 127

/**
 * Get signal ChassisHeightBackRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ChassisHeightBackRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ChassisHeightBackRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(buf, 127)

/**
 * Signal ChassisHeightBackRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight(x, fmt) \
	((x) * fmt + fmt * (-127))

/**
 * Signal ChassisHeightBackRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight      127

/**
 * Signal ChassisHeightBackRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight        0

/**
 * Signal ChassisHeightBackRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight        253

/**
 * Signal ChassisHeightBackRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackRight        -127

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft Signal ChassisHeightBackLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ChassisHeightBackLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft        0, 0, 0, 8

/**
 * Signal ChassisHeightBackLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft      0, 0, 0, 8, 127

/**
 * Get signal ChassisHeightBackLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ChassisHeightBackLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ChassisHeightBackLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(buf, 127)

/**
 * Signal ChassisHeightBackLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft(x, fmt) \
	((x) * fmt + fmt * (-127))

/**
 * Signal ChassisHeightBackLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft      127

/**
 * Signal ChassisHeightBackLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft        0

/**
 * Signal ChassisHeightBackLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft        253

/**
 * Signal ChassisHeightBackLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ChassisHeightBackLeft        -127

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC Signal Vehicle_CAN_13_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_13_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_13_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_13_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_13_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_13_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_13_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_13_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC      0

/**
 * Signal Vehicle_CAN_13_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC        0

/**
 * Signal Vehicle_CAN_13_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC        255

/**
 * Signal Vehicle_CAN_13_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter Signal Vehicle_CAN_13_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Vehicle_CAN_13_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter        0, 0, 0, 4

/**
 * Signal Vehicle_CAN_13_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter      0, 0, 0, 4, 0

/**
 * Get signal Vehicle_CAN_13_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_13_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_13_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_13_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_13_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter      0

/**
 * Signal Vehicle_CAN_13_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter        0

/**
 * Signal Vehicle_CAN_13_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter        15

/**
 * Signal Vehicle_CAN_13_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Vehicle_CAN_13_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7 Signal XCP_MPC_DTO_Byte7 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte7 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7      0

/**
 * Signal XCP_MPC_DTO_Byte7 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7        0

/**
 * Signal XCP_MPC_DTO_Byte7 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7        255

/**
 * Signal XCP_MPC_DTO_Byte7 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte7        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6 Signal XCP_MPC_DTO_Byte6 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte6 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6      0

/**
 * Signal XCP_MPC_DTO_Byte6 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6        0

/**
 * Signal XCP_MPC_DTO_Byte6 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6        255

/**
 * Signal XCP_MPC_DTO_Byte6 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte6        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5 Signal XCP_MPC_DTO_Byte5 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte5 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5      0

/**
 * Signal XCP_MPC_DTO_Byte5 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5        0

/**
 * Signal XCP_MPC_DTO_Byte5 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5        255

/**
 * Signal XCP_MPC_DTO_Byte5 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte5        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4 Signal XCP_MPC_DTO_Byte4 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte4 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4      0

/**
 * Signal XCP_MPC_DTO_Byte4 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4        0

/**
 * Signal XCP_MPC_DTO_Byte4 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4        255

/**
 * Signal XCP_MPC_DTO_Byte4 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte4        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3 Signal XCP_MPC_DTO_Byte3 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte3 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3      0

/**
 * Signal XCP_MPC_DTO_Byte3 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3        0

/**
 * Signal XCP_MPC_DTO_Byte3 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3        255

/**
 * Signal XCP_MPC_DTO_Byte3 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte3        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2 Signal XCP_MPC_DTO_Byte2 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte2 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2      0

/**
 * Signal XCP_MPC_DTO_Byte2 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2        0

/**
 * Signal XCP_MPC_DTO_Byte2 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2        255

/**
 * Signal XCP_MPC_DTO_Byte2 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte2        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1 Signal XCP_MPC_DTO_Byte1 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte1 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1      0

/**
 * Signal XCP_MPC_DTO_Byte1 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1        0

/**
 * Signal XCP_MPC_DTO_Byte1 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1        255

/**
 * Signal XCP_MPC_DTO_Byte1 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte1        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0 Signal XCP_MPC_DTO_Byte0 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_DTO_Byte0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0        0, 1, 0, 8

/**
 * Signal XCP_MPC_DTO_Byte0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_DTO_Byte0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_DTO_Byte0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_DTO_Byte0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(buf, 0)

/**
 * Signal XCP_MPC_DTO_Byte0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_DTO_Byte0 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0      0

/**
 * Signal XCP_MPC_DTO_Byte0 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0        0

/**
 * Signal XCP_MPC_DTO_Byte0 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0        255

/**
 * Signal XCP_MPC_DTO_Byte0 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_DTO_Byte0        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7 Signal XCP_MPC_CRO_Byte7 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte7 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7      0

/**
 * Signal XCP_MPC_CRO_Byte7 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7        0

/**
 * Signal XCP_MPC_CRO_Byte7 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7        255

/**
 * Signal XCP_MPC_CRO_Byte7 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte7        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6 Signal XCP_MPC_CRO_Byte6 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte6 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6      0

/**
 * Signal XCP_MPC_CRO_Byte6 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6        0

/**
 * Signal XCP_MPC_CRO_Byte6 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6        255

/**
 * Signal XCP_MPC_CRO_Byte6 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte6        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5 Signal XCP_MPC_CRO_Byte5 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte5 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5      0

/**
 * Signal XCP_MPC_CRO_Byte5 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5        0

/**
 * Signal XCP_MPC_CRO_Byte5 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5        255

/**
 * Signal XCP_MPC_CRO_Byte5 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte5        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4 Signal XCP_MPC_CRO_Byte4 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte4 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4      0

/**
 * Signal XCP_MPC_CRO_Byte4 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4        0

/**
 * Signal XCP_MPC_CRO_Byte4 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4        255

/**
 * Signal XCP_MPC_CRO_Byte4 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte4        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3 Signal XCP_MPC_CRO_Byte3 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte3 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3      0

/**
 * Signal XCP_MPC_CRO_Byte3 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3        0

/**
 * Signal XCP_MPC_CRO_Byte3 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3        255

/**
 * Signal XCP_MPC_CRO_Byte3 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte3        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2 Signal XCP_MPC_CRO_Byte2 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte2 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2      0

/**
 * Signal XCP_MPC_CRO_Byte2 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2        0

/**
 * Signal XCP_MPC_CRO_Byte2 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2        255

/**
 * Signal XCP_MPC_CRO_Byte2 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte2        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1 Signal XCP_MPC_CRO_Byte1 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte1 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1      0

/**
 * Signal XCP_MPC_CRO_Byte1 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1        0

/**
 * Signal XCP_MPC_CRO_Byte1 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1        255

/**
 * Signal XCP_MPC_CRO_Byte1 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte1        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0 Signal XCP_MPC_CRO_Byte0 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal XCP_MPC_CRO_Byte0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0        0, 1, 0, 8

/**
 * Signal XCP_MPC_CRO_Byte0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0      0, 1, 0, 8, 0

/**
 * Get signal XCP_MPC_CRO_Byte0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal XCP_MPC_CRO_Byte0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal XCP_MPC_CRO_Byte0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(buf, 0)

/**
 * Signal XCP_MPC_CRO_Byte0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0(x, fmt) \
	((x) * fmt)

/**
 * Signal XCP_MPC_CRO_Byte0 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0      0

/**
 * Signal XCP_MPC_CRO_Byte0 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0        0

/**
 * Signal XCP_MPC_CRO_Byte0 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0        255

/**
 * Signal XCP_MPC_CRO_Byte0 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_XCP_MPC_CRO_Byte0        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC Signal LDS_02_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LDS_02_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC        0, 0, 0, 8

/**
 * Signal LDS_02_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC      0, 0, 0, 8, 0

/**
 * Get signal LDS_02_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal LDS_02_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal LDS_02_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(buf, 0)

/**
 * Signal LDS_02_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal LDS_02_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC      0

/**
 * Signal LDS_02_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC        0

/**
 * Signal LDS_02_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC        255

/**
 * Signal LDS_02_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter Signal LDS_02_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LDS_02_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter        0, 0, 0, 4

/**
 * Signal LDS_02_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter      0, 0, 0, 4, 0

/**
 * Get signal LDS_02_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal LDS_02_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal LDS_02_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(buf, 0)

/**
 * Signal LDS_02_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal LDS_02_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter      0

/**
 * Signal LDS_02_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter        0

/**
 * Signal LDS_02_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter        15

/**
 * Signal LDS_02_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LDS_02_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi Signal ElkreSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkreSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi        0, 0, 0, 2

/**
 * Signal ElkreSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal ElkreSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkreSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkreSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(buf, 0)

/**
 * Signal ElkreSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkreSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi      0

/**
 * Signal ElkreSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi        0

/**
 * Signal ElkreSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi        3

/**
 * Signal ElkreSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi Value Table for Signal ElkreSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesRi_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe Signal ElkreSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkreSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe        0, 0, 0, 2

/**
 * Signal ElkreSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal ElkreSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkreSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkreSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(buf, 0)

/**
 * Signal ElkreSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkreSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe      0

/**
 * Signal ElkreSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe        0

/**
 * Signal ElkreSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe        3

/**
 * Signal ElkreSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe Value Table for Signal ElkreSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreSubStatesLe_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates Signal ElkreMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkreMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates        0, 0, 0, 2

/**
 * Signal ElkreMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates      0, 0, 0, 2, 0

/**
 * Get signal ElkreMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkreMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkreMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(buf, 0)

/**
 * Signal ElkreMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkreMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates      0

/**
 * Signal ElkreMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates        0

/**
 * Signal ElkreMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates        3

/**
 * Signal ElkreMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates Value Table for Signal ElkreMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates entry ON.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates_ON                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates entry TEMPORARYERROR.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates_TEMPORARYERROR      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates entry PERMANENTERROR.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates_PERMANENTERROR      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates entry OFF.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkreMainStates_OFF                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi Signal ElkoSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkoSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi        0, 0, 0, 2

/**
 * Signal ElkoSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal ElkoSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkoSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkoSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(buf, 0)

/**
 * Signal ElkoSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkoSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi      0

/**
 * Signal ElkoSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi        0

/**
 * Signal ElkoSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi        3

/**
 * Signal ElkoSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi Value Table for Signal ElkoSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesRi_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe Signal ElkoSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkoSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe        0, 0, 0, 2

/**
 * Signal ElkoSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal ElkoSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkoSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkoSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(buf, 0)

/**
 * Signal ElkoSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkoSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe      0

/**
 * Signal ElkoSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe        0

/**
 * Signal ElkoSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe        3

/**
 * Signal ElkoSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe Value Table for Signal ElkoSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoSubStatesLe_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates Signal ElkoMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ElkoMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates        0, 0, 0, 2

/**
 * Signal ElkoMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates      0, 0, 0, 2, 0

/**
 * Get signal ElkoMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ElkoMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ElkoMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(buf, 0)

/**
 * Signal ElkoMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkoMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates      0

/**
 * Signal ElkoMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates        0

/**
 * Signal ElkoMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates        3

/**
 * Signal ElkoMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates Value Table for Signal ElkoMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates entry ON.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates_ON                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates entry TEMPORARYERROR.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates_TEMPORARYERROR      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates entry PER.
 *
 * MANENTERROR
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates_PER                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates entry OFF.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ElkoMainStates_OFF                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi Signal LksSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LksSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi        0, 0, 0, 2

/**
 * Signal LksSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal LksSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LksSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LksSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(buf, 0)

/**
 * Signal LksSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal LksSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi      0

/**
 * Signal LksSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi        0

/**
 * Signal LksSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi        3

/**
 * Signal LksSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi Value Table for Signal LksSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesRi_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe Signal LksSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LksSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe        0, 0, 0, 2

/**
 * Signal LksSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal LksSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LksSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LksSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(buf, 0)

/**
 * Signal LksSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal LksSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe      0

/**
 * Signal LksSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe        0

/**
 * Signal LksSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe        3

/**
 * Signal LksSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe Value Table for Signal LksSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe entry RESERVED.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe_RESERVED            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe entry ACTIVE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe_ACTIVE              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe entry READY.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe_READY               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe entry IDLE.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksSubStatesLe_IDLE                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates Signal LksMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LksMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates        0, 0, 0, 2

/**
 * Signal LksMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates      0, 0, 0, 2, 0

/**
 * Get signal LksMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LksMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LksMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(buf, 0)

/**
 * Signal LksMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal LksMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates      0

/**
 * Signal LksMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates        0

/**
 * Signal LksMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates        3

/**
 * Signal LksMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates Value Table for Signal LksMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksMainStates entry ON.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksMainStates_ON                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksMainStates entry TEMPORARYERROR.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksMainStates_TEMPORARYERROR      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksMainStates entry PERMANENTERROR.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksMainStates_PERMANENTERROR      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LksMainStates entry OFF.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LksMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LksMainStates_OFF                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle Signal IhcLopTrafficStyle of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopTrafficStyle configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle        0, 0, 0, 4

/**
 * Signal IhcLopTrafficStyle setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle      0, 0, 0, 4, 14

/**
 * Get signal IhcLopTrafficStyle from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopTrafficStyle in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopTrafficStyle in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(buf, 14)

/**
 * Signal IhcLopTrafficStyle value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopTrafficStyle raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle      14

/**
 * Signal IhcLopTrafficStyle raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle        0

/**
 * Signal IhcLopTrafficStyle raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle        15

/**
 * Signal IhcLopTrafficStyle raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle Value Table for Signal IhcLopTrafficStyle in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle entry leftHandTraffic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle_leftHandTraffic     2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle entry rightHandTraffic.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle_rightHandTraffic    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopTrafficStyle_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState Signal IhcLopState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState        0, 0, 0, 4

/**
 * Signal IhcLopState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState      0, 0, 0, 4, 14

/**
 * Get signal IhcLopState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(buf, 14)

/**
 * Signal IhcLopState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState      14

/**
 * Signal IhcLopState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState        0

/**
 * Signal IhcLopState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState        15

/**
 * Signal IhcLopState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState Value Table for Signal IhcLopState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry offNotCoded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_offNotCoded         4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry onFailure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_onFailure           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry onReducedSight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_onReducedSight      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry onActive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_onActive            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopState entry onPassive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopState_onPassive           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring Signal IhcLopSelfGlaring of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopSelfGlaring configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring        0, 0, 0, 4

/**
 * Signal IhcLopSelfGlaring setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring      0, 0, 0, 4, 14

/**
 * Get signal IhcLopSelfGlaring from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopSelfGlaring in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopSelfGlaring in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(buf, 14)

/**
 * Signal IhcLopSelfGlaring value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopSelfGlaring raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring      14

/**
 * Signal IhcLopSelfGlaring raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring        0

/**
 * Signal IhcLopSelfGlaring raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring        15

/**
 * Signal IhcLopSelfGlaring raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring Value Table for Signal IhcLopSelfGlaring in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 100_.
 *
 * 100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_100_                10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 90_.
 *
 * 90%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_90_                 9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 80_.
 *
 * 80%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_80_                 8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 70_.
 *
 * 70%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_70_                 7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 60_.
 *
 * 60%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_60_                 6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 50_.
 *
 * 50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_50_                 5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 40_.
 *
 * 40%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_40_                 4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 30_.
 *
 * 30%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_30_                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 20_.
 *
 * 20%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_20_                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry 10_.
 *
 * 10%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_10_                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring entry notDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopSelfGlaring_notDetected         0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination Signal IhcLopRoadIllumination of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopRoadIllumination configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination        0, 0, 0, 4

/**
 * Signal IhcLopRoadIllumination setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination      0, 0, 0, 4, 14

/**
 * Get signal IhcLopRoadIllumination from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopRoadIllumination in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopRoadIllumination in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(buf, 14)

/**
 * Signal IhcLopRoadIllumination value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopRoadIllumination raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination      14

/**
 * Signal IhcLopRoadIllumination raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination        0

/**
 * Signal IhcLopRoadIllumination raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination        15

/**
 * Signal IhcLopRoadIllumination raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination Value Table for Signal IhcLopRoadIllumination in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination entry NotAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination_NotAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination entry detected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination_detected            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination entry notDetected.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopRoadIllumination_notDetected         0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum Signal IhcLopObjNum of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObjNum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum        0, 0, 0, 4

/**
 * Signal IhcLopObjNum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObjNum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObjNum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObjNum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(buf, 14)

/**
 * Signal IhcLopObjNum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObjNum raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum      14

/**
 * Signal IhcLopObjNum raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum        0

/**
 * Signal IhcLopObjNum raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum        15

/**
 * Signal IhcLopObjNum raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum Value Table for Signal IhcLopObjNum in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry NotAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_NotAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry More.
 *
 * then 8 objects detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_More                11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 8.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_8                   8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 7.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_7                   7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 6.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_6                   6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 5.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_5                   5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 4.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_4                   4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 3.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_3                   3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 2.
 *
 * Objects Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_2                   2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry 1.
 *
 * Object Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_1                   1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum entry No.
 *
 * Object Detected
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObjNum_No                  0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight Signal IhcLopAmbientLight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopAmbientLight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight        0, 0, 0, 4

/**
 * Signal IhcLopAmbientLight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight      0, 0, 0, 4, 14

/**
 * Get signal IhcLopAmbientLight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopAmbientLight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopAmbientLight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(buf, 14)

/**
 * Signal IhcLopAmbientLight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopAmbientLight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight      14

/**
 * Signal IhcLopAmbientLight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight        0

/**
 * Signal IhcLopAmbientLight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight        15

/**
 * Signal IhcLopAmbientLight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight Value Table for Signal IhcLopAmbientLight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight entry night.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight_night               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight entry day.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight_day                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight entry unknown.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopAmbientLight_unknown             0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest Signal PvwPrefillRequest of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Prefill request to ESP
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PvwPrefillRequest configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest        0, 0, 0, 1

/**
 * Signal PvwPrefillRequest setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest      0, 0, 0, 1, 0

/**
 * Get signal PvwPrefillRequest from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal PvwPrefillRequest in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal PvwPrefillRequest in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(buf, 0)

/**
 * Signal PvwPrefillRequest value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest(x, fmt) \
	((x) * fmt)

/**
 * Signal PvwPrefillRequest raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest      0

/**
 * Signal PvwPrefillRequest raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest        0

/**
 * Signal PvwPrefillRequest raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest        1

/**
 * Signal PvwPrefillRequest raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PvwPrefillRequest        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC Signal PVW_02_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PVW_02_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC        0, 0, 0, 8

/**
 * Signal PVW_02_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC      0, 0, 0, 8, 0

/**
 * Get signal PVW_02_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal PVW_02_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal PVW_02_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(buf, 0)

/**
 * Signal PVW_02_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal PVW_02_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC      0

/**
 * Signal PVW_02_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC        0

/**
 * Signal PVW_02_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC        255

/**
 * Signal PVW_02_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter Signal PVW_02_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PVW_02_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter        0, 0, 0, 4

/**
 * Signal PVW_02_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter      0, 0, 0, 4, 0

/**
 * Get signal PVW_02_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal PVW_02_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal PVW_02_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(buf, 0)

/**
 * Signal PVW_02_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal PVW_02_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter      0

/**
 * Signal PVW_02_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter        0

/**
 * Signal PVW_02_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter        15

/**
 * Signal PVW_02_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PVW_02_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile Signal PvwHbaProfile of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Request to ESP, set HBA parameter
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PvwHbaProfile configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile        0, 0, 0, 2

/**
 * Signal PvwHbaProfile setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile      0, 0, 0, 2, 0

/**
 * Get signal PvwHbaProfile from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal PvwHbaProfile in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal PvwHbaProfile in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(buf, 0)

/**
 * Signal PvwHbaProfile value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile(x, fmt) \
	((x) * fmt)

/**
 * Signal PvwHbaProfile raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile      0

/**
 * Signal PvwHbaProfile raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile        0

/**
 * Signal PvwHbaProfile raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile        3

/**
 * Signal PvwHbaProfile raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PvwHbaProfile        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease Signal PvwBreakJerkRelease of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * BrakeJerk activation
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PvwBreakJerkRelease configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease        0, 0, 0, 1

/**
 * Signal PvwBreakJerkRelease setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease      0, 0, 0, 1, 0

/**
 * Get signal PvwBreakJerkRelease from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal PvwBreakJerkRelease in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal PvwBreakJerkRelease in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(buf, 0)

/**
 * Signal PvwBreakJerkRelease value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease(x, fmt) \
	((x) * fmt)

/**
 * Signal PvwBreakJerkRelease raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease      0

/**
 * Signal PvwBreakJerkRelease raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease        0

/**
 * Signal PvwBreakJerkRelease raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease        1

/**
 * Signal PvwBreakJerkRelease raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PvwBreakJerkRelease        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning Signal FcwWarning of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the actual warnlevel
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwWarning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning        0, 0, 0, 2

/**
 * Signal FcwWarning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning      0, 0, 0, 2, 0

/**
 * Get signal FcwWarning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal FcwWarning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal FcwWarning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(buf, 0)

/**
 * Signal FcwWarning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwWarning raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning      0

/**
 * Signal FcwWarning raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning        0

/**
 * Signal FcwWarning raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning        3

/**
 * Signal FcwWarning raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwWarning        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC Signal FcwTargetTTC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * TTC of the Target object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwTargetTTC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC        0, 0, 0, 7

/**
 * Signal FcwTargetTTC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC      0, 0, 0, 7, 0

/**
 * Get signal FcwTargetTTC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal FcwTargetTTC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal FcwTargetTTC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(buf, 0)

/**
 * Signal FcwTargetTTC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal FcwTargetTTC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC      0

/**
 * Signal FcwTargetTTC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC        0

/**
 * Signal FcwTargetTTC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC        100

/**
 * Signal FcwTargetTTC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetTTC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID Signal FcwTargetID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Id of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwTargetID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID        0, 0, 0, 7

/**
 * Signal FcwTargetID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID      0, 0, 0, 7, 0

/**
 * Get signal FcwTargetID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal FcwTargetID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal FcwTargetID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(buf, 0)

/**
 * Signal FcwTargetID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwTargetID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID      0

/**
 * Signal FcwTargetID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID        0

/**
 * Signal FcwTargetID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID        64

/**
 * Signal FcwTargetID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetID        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality Signal FcwTargetCriticality of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Criticality of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwTargetCriticality configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality        0, 0, 0, 4

/**
 * Signal FcwTargetCriticality setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality      0, 0, 0, 4, 0

/**
 * Get signal FcwTargetCriticality from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal FcwTargetCriticality in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal FcwTargetCriticality in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(buf, 0)

/**
 * Signal FcwTargetCriticality value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal FcwTargetCriticality raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality      0

/**
 * Signal FcwTargetCriticality raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality        0

/**
 * Signal FcwTargetCriticality raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality        10

/**
 * Signal FcwTargetCriticality raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCriticality        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB Signal FcwTargetCB of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Constant Bearing of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwTargetCB configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB        0, 0, 0, 5

/**
 * Signal FcwTargetCB setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB      0, 0, 0, 5, 0

/**
 * Get signal FcwTargetCB from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal FcwTargetCB in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal FcwTargetCB in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(buf, 0)

/**
 * Signal FcwTargetCB value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal FcwTargetCB raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB      0

/**
 * Signal FcwTargetCB raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB        0

/**
 * Signal FcwTargetCB raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB        20

/**
 * Signal FcwTargetCB raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwTargetCB        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState Signal FcwSysState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the function Status
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwSysState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState        0, 0, 0, 3

/**
 * Signal FcwSysState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState      0, 0, 0, 3, 0

/**
 * Get signal FcwSysState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal FcwSysState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal FcwSysState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(buf, 0)

/**
 * Signal FcwSysState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwSysState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState      0

/**
 * Signal FcwSysState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState        0

/**
 * Signal FcwSysState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState        7

/**
 * Signal FcwSysState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwSysState        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate Signal FcwMainstate of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the current Mainstate of the statemachine
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal FcwMainstate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate        0, 0, 0, 2

/**
 * Signal FcwMainstate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate      0, 0, 0, 2, 0

/**
 * Get signal FcwMainstate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal FcwMainstate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal FcwMainstate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(buf, 0)

/**
 * Signal FcwMainstate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate(x, fmt) \
	((x) * fmt)

/**
 * Signal FcwMainstate raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate      0

/**
 * Signal FcwMainstate raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate        0

/**
 * Signal FcwMainstate raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate        3

/**
 * Signal FcwMainstate raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_FcwMainstate        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC Signal PVW_01_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PVW_01_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC        0, 0, 0, 8

/**
 * Signal PVW_01_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC      0, 0, 0, 8, 0

/**
 * Get signal PVW_01_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal PVW_01_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal PVW_01_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(buf, 0)

/**
 * Signal PVW_01_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal PVW_01_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC      0

/**
 * Signal PVW_01_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC        0

/**
 * Signal PVW_01_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC        255

/**
 * Signal PVW_01_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter Signal PVW_01_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PVW_01_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter        0, 0, 0, 4

/**
 * Signal PVW_01_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter      0, 0, 0, 4, 0

/**
 * Get signal PVW_01_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal PVW_01_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal PVW_01_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(buf, 0)

/**
 * Signal PVW_01_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal PVW_01_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter      0

/**
 * Signal PVW_01_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter        0

/**
 * Signal PVW_01_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter        15

/**
 * Signal PVW_01_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PVW_01_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC Signal PpwTargetTTC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * TTC of the Target object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwTargetTTC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC        0, 0, 0, 7

/**
 * Signal PpwTargetTTC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC      0, 0, 0, 7, 0

/**
 * Get signal PpwTargetTTC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal PpwTargetTTC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal PpwTargetTTC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(buf, 0)

/**
 * Signal PpwTargetTTC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal PpwTargetTTC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC      0

/**
 * Signal PpwTargetTTC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC        0

/**
 * Signal PpwTargetTTC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC        100

/**
 * Signal PpwTargetTTC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetTTC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID Signal PpwTargetID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Id of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwTargetID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID        0, 0, 0, 7

/**
 * Signal PpwTargetID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID      0, 0, 0, 7, 0

/**
 * Get signal PpwTargetID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x7f) << 0) \
)

/**
 * Set signal PpwTargetID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(buf, val) { \
	buf[0] &= ~(0x7f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x7f) << 0; \
}

/**
 * Set signal PpwTargetID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(buf, 0)

/**
 * Signal PpwTargetID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID(x, fmt) \
	((x) * fmt)

/**
 * Signal PpwTargetID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID      0

/**
 * Signal PpwTargetID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID        0

/**
 * Signal PpwTargetID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID        64

/**
 * Signal PpwTargetID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetID        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost Signal PpwTargetGhost of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Ghost possibility of the target object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwTargetGhost configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost        0, 0, 0, 2

/**
 * Signal PpwTargetGhost setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost      0, 0, 0, 2, 0

/**
 * Get signal PpwTargetGhost from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal PpwTargetGhost in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal PpwTargetGhost in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(buf, 0)

/**
 * Signal PpwTargetGhost value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost(x, fmt) \
	((x) * fmt)

/**
 * Signal PpwTargetGhost raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost      0

/**
 * Signal PpwTargetGhost raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost        0

/**
 * Signal PpwTargetGhost raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost        2

/**
 * Signal PpwTargetGhost raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetGhost        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality Signal PpwTargetCriticality of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Criticality of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwTargetCriticality configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality        0, 0, 0, 4

/**
 * Signal PpwTargetCriticality setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality      0, 0, 0, 4, 0

/**
 * Get signal PpwTargetCriticality from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal PpwTargetCriticality in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal PpwTargetCriticality in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(buf, 0)

/**
 * Signal PpwTargetCriticality value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal PpwTargetCriticality raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality      0

/**
 * Signal PpwTargetCriticality raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality        0

/**
 * Signal PpwTargetCriticality raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality        15

/**
 * Signal PpwTargetCriticality raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCriticality        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB Signal PpwTargetCB of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Constant Bearing of the Target Object
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwTargetCB configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB        0, 0, 0, 5

/**
 * Signal PpwTargetCB setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB      0, 0, 0, 5, 0

/**
 * Get signal PpwTargetCB from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x1f) << 0) \
)

/**
 * Set signal PpwTargetCB in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(buf, val) { \
	buf[0] &= ~(0x1f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x1f) << 0; \
}

/**
 * Set signal PpwTargetCB in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(buf, 0)

/**
 * Signal PpwTargetCB value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal PpwTargetCB raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB      0

/**
 * Signal PpwTargetCB raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB        0

/**
 * Signal PpwTargetCB raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB        31

/**
 * Signal PpwTargetCB raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwTargetCB        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate Signal PpwMainstate of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the current Mainstate of the statemachine
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwMainstate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate        0, 0, 0, 2

/**
 * Signal PpwMainstate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate      0, 0, 0, 2, 0

/**
 * Get signal PpwMainstate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal PpwMainstate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal PpwMainstate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(buf, 0)

/**
 * Signal PpwMainstate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate(x, fmt) \
	((x) * fmt)

/**
 * Signal PpwMainstate raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate      0

/**
 * Signal PpwMainstate raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate        0

/**
 * Signal PpwMainstate raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate        3

/**
 * Signal PpwMainstate raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwMainstate        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState Signal PpwSysState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the function Status
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwSysState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState        0, 0, 0, 3

/**
 * Signal PpwSysState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState      0, 0, 0, 3, 0

/**
 * Get signal PpwSysState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal PpwSysState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal PpwSysState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(buf, 0)

/**
 * Signal PpwSysState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState(x, fmt) \
	((x) * fmt)

/**
 * Signal PpwSysState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState      0

/**
 * Signal PpwSysState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState        0

/**
 * Signal PpwSysState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState        7

/**
 * Signal PpwSysState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwSysState        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning Signal PpwWarning of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Gives the actual warnlevel
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PpwWarning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning        0, 0, 0, 2

/**
 * Signal PpwWarning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning      0, 0, 0, 2, 0

/**
 * Get signal PpwWarning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal PpwWarning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal PpwWarning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(buf, 0)

/**
 * Signal PpwWarning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning(x, fmt) \
	((x) * fmt)

/**
 * Signal PpwWarning raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning      0

/**
 * Signal PpwWarning raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning        0

/**
 * Signal PpwWarning raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning        3

/**
 * Signal PpwWarning raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PpwWarning        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability Signal SelfGlareProbability of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Can be used by external headlamp ECU for reaction on self glare in dense fog (Probability value for self glare).
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SelfGlareProbability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability        0, 0, 0, 4

/**
 * Signal SelfGlareProbability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability      0, 0, 0, 4, 14

/**
 * Get signal SelfGlareProbability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal SelfGlareProbability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal SelfGlareProbability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(buf, 14)

/**
 * Signal SelfGlareProbability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability(x, fmt) \
	((x) * fmt * 10)

/**
 * Signal SelfGlareProbability raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability      14

/**
 * Signal SelfGlareProbability raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability        0

/**
 * Signal SelfGlareProbability raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability        15

/**
 * Signal SelfGlareProbability raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability Value Table for Signal SelfGlareProbability in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SelfGlareProbability_init                14

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare Signal SelfGlare of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Can be used by external headlamp ECU for reaction on self glare in dense fog. (Binary signal self glare exists / does not exist).
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SelfGlare configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare        0, 0, 0, 1

/**
 * Signal SelfGlare setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare      0, 0, 0, 1, 0

/**
 * Get signal SelfGlare from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal SelfGlare in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal SelfGlare in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(buf, 0)

/**
 * Signal SelfGlare value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare(x, fmt) \
	((x) * fmt)

/**
 * Signal SelfGlare raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare      0

/**
 * Signal SelfGlare raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare        0

/**
 * Signal SelfGlare raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare        1

/**
 * Signal SelfGlare raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare Value Table for Signal SelfGlare in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SelfGlare entry selfGlare.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SelfGlare_selfGlare           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SelfGlare entry noSelfGlare.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SelfGlare
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SelfGlare_noSelfGlare         0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID Signal ShcTLObj04_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID        0, 0, 0, 8

/**
 * Signal ShcTLObj04_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj04_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj04_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj04_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(buf, 254)

/**
 * Signal ShcTLObj04_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj04_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID      254

/**
 * Signal ShcTLObj04_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID        0

/**
 * Signal ShcTLObj04_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID        255

/**
 * Signal ShcTLObj04_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID Value Table for Signal ShcTLObj04_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type Signal ShcTLObj04_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type        0, 0, 0, 4

/**
 * Signal ShcTLObj04_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj04_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj04_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj04_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(buf, 14)

/**
 * Signal ShcTLObj04_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj04_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type      14

/**
 * Signal ShcTLObj04_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type        0

/**
 * Signal ShcTLObj04_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type        15

/**
 * Signal ShcTLObj04_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type Value Table for Signal ShcTLObj04_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightRedBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightRedBlinking    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightRed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightRed     5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightYellowBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightYellowBlinking    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightYellow.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightYellow    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightGreenBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightGreenBlinking    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry trafficLightGreen.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_trafficLightGreen    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Type_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction Signal ShcTLObj04_Direction of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light direction
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_Direction configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction        0, 0, 0, 4

/**
 * Signal ShcTLObj04_Direction setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj04_Direction from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj04_Direction in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj04_Direction in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(buf, 14)

/**
 * Signal ShcTLObj04_Direction value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj04_Direction raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction      14

/**
 * Signal ShcTLObj04_Direction raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction        0

/**
 * Signal ShcTLObj04_Direction raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction        15

/**
 * Signal ShcTLObj04_Direction raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction Value Table for Signal ShcTLObj04_Direction in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightLeft.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightLeft    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightLeftAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightLeftAhead    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightAhead    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightRightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightRightAhead    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightRight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightRight    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry trafficLightNoDirection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_trafficLightNoDirection    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_Direction_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist Signal ShcTLObj04_VerDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_VerDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist        0, 0, 0, 8

/**
 * Signal ShcTLObj04_VerDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj04_VerDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj04_VerDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj04_VerDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(buf, 254)

/**
 * Signal ShcTLObj04_VerDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist(x, fmt) \
	((x) * fmt * 2 + fmt * (-60))

/**
 * Signal ShcTLObj04_VerDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist      254

/**
 * Signal ShcTLObj04_VerDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist        0

/**
 * Signal ShcTLObj04_VerDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist        60

/**
 * Signal ShcTLObj04_VerDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist        -30

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist Value Table for Signal ShcTLObj04_VerDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist entry objPositionExceeded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerDist_objPositionExceeded    253

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos Signal ShcTLObj04_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos        0, 0, 0, 12

/**
 * Signal ShcTLObj04_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj04_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj04_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj04_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(buf, 4094)

/**
 * Signal ShcTLObj04_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-12))

/**
 * Signal ShcTLObj04_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos      4094

/**
 * Signal ShcTLObj04_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos        0

/**
 * Signal ShcTLObj04_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos        1200

/**
 * Signal ShcTLObj04_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos        -600

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos Value Table for Signal ShcTLObj04_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_VerPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist Signal ShcTLObj04_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist        0, 0, 0, 8

/**
 * Signal ShcTLObj04_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj04_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj04_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj04_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(buf, 254)

/**
 * Signal ShcTLObj04_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcTLObj04_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist      254

/**
 * Signal ShcTLObj04_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist        0

/**
 * Signal ShcTLObj04_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist        250

/**
 * Signal ShcTLObj04_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist Value Table for Signal ShcTLObj04_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos Signal ShcTLObj04_HorPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_HorPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos        0, 0, 0, 12

/**
 * Signal ShcTLObj04_HorPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj04_HorPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj04_HorPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj04_HorPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(buf, 4094)

/**
 * Signal ShcTLObj04_HorPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcTLObj04_HorPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos      4094

/**
 * Signal ShcTLObj04_HorPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos        0

/**
 * Signal ShcTLObj04_HorPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos        4000

/**
 * Signal ShcTLObj04_HorPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos Value Table for Signal ShcTLObj04_HorPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_HorPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo Signal ShcTLObj04_AddInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Additional object information
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj04_AddInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo        0, 0, 0, 8

/**
 * Signal ShcTLObj04_AddInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj04_AddInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj04_AddInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj04_AddInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(buf, 254)

/**
 * Signal ShcTLObj04_AddInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj04_AddInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo      254

/**
 * Signal ShcTLObj04_AddInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo        0

/**
 * Signal ShcTLObj04_AddInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo        250

/**
 * Signal ShcTLObj04_AddInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo Value Table for Signal ShcTLObj04_AddInfo in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj04_AddInfo_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID Signal ShcTLObj03_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID        0, 0, 0, 8

/**
 * Signal ShcTLObj03_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj03_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj03_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj03_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(buf, 254)

/**
 * Signal ShcTLObj03_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj03_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID      254

/**
 * Signal ShcTLObj03_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID        0

/**
 * Signal ShcTLObj03_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID        255

/**
 * Signal ShcTLObj03_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID Value Table for Signal ShcTLObj03_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type Signal ShcTLObj03_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type        0, 0, 0, 4

/**
 * Signal ShcTLObj03_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj03_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj03_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj03_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(buf, 14)

/**
 * Signal ShcTLObj03_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj03_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type      14

/**
 * Signal ShcTLObj03_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type        0

/**
 * Signal ShcTLObj03_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type        15

/**
 * Signal ShcTLObj03_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type Value Table for Signal ShcTLObj03_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightRedBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightRedBlinking    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightRed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightRed     5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightYellowBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightYellowBlinking    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightYellow.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightYellow    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightGreenBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightGreenBlinking    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry trafficLightGreen.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_trafficLightGreen    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Type_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction Signal ShcTLObj03_Direction of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light direction
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_Direction configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction        0, 0, 0, 4

/**
 * Signal ShcTLObj03_Direction setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj03_Direction from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj03_Direction in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj03_Direction in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(buf, 14)

/**
 * Signal ShcTLObj03_Direction value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj03_Direction raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction      14

/**
 * Signal ShcTLObj03_Direction raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction        0

/**
 * Signal ShcTLObj03_Direction raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction        15

/**
 * Signal ShcTLObj03_Direction raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction Value Table for Signal ShcTLObj03_Direction in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightLeft.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightLeft    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightLeftAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightLeftAhead    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightAhead    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightRightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightRightAhead    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightRight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightRight    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry trafficLightNoDirection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_trafficLightNoDirection    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_Direction_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist Signal ShcTLObj03_VerDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_VerDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist        0, 0, 0, 8

/**
 * Signal ShcTLObj03_VerDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj03_VerDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj03_VerDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj03_VerDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(buf, 254)

/**
 * Signal ShcTLObj03_VerDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist(x, fmt) \
	((x) * fmt * 2 + fmt * (-60))

/**
 * Signal ShcTLObj03_VerDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist      254

/**
 * Signal ShcTLObj03_VerDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist        0

/**
 * Signal ShcTLObj03_VerDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist        60

/**
 * Signal ShcTLObj03_VerDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist        -30

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist Value Table for Signal ShcTLObj03_VerDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist entry objPositionExceeded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerDist_objPositionExceeded    253

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos Signal ShcTLObj03_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos        0, 0, 0, 12

/**
 * Signal ShcTLObj03_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj03_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj03_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj03_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(buf, 4094)

/**
 * Signal ShcTLObj03_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-12))

/**
 * Signal ShcTLObj03_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos      4094

/**
 * Signal ShcTLObj03_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos        0

/**
 * Signal ShcTLObj03_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos        1200

/**
 * Signal ShcTLObj03_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos        -600

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos Value Table for Signal ShcTLObj03_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_VerPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist Signal ShcTLObj03_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist        0, 0, 0, 8

/**
 * Signal ShcTLObj03_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj03_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj03_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj03_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(buf, 254)

/**
 * Signal ShcTLObj03_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcTLObj03_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist      254

/**
 * Signal ShcTLObj03_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist        0

/**
 * Signal ShcTLObj03_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist        250

/**
 * Signal ShcTLObj03_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist Value Table for Signal ShcTLObj03_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos Signal ShcTLObj03_HorPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_HorPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos        0, 0, 0, 12

/**
 * Signal ShcTLObj03_HorPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj03_HorPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj03_HorPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj03_HorPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(buf, 4094)

/**
 * Signal ShcTLObj03_HorPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcTLObj03_HorPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos      4094

/**
 * Signal ShcTLObj03_HorPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos        0

/**
 * Signal ShcTLObj03_HorPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos        4000

/**
 * Signal ShcTLObj03_HorPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos Value Table for Signal ShcTLObj03_HorPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_HorPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo Signal ShcTLObj03_AddInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Additional object information
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj03_AddInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo        0, 0, 0, 8

/**
 * Signal ShcTLObj03_AddInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj03_AddInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj03_AddInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj03_AddInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(buf, 254)

/**
 * Signal ShcTLObj03_AddInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj03_AddInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo      254

/**
 * Signal ShcTLObj03_AddInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo        0

/**
 * Signal ShcTLObj03_AddInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo        250

/**
 * Signal ShcTLObj03_AddInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo Value Table for Signal ShcTLObj03_AddInfo in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj03_AddInfo_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID Signal ShcTLObj02_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID        0, 0, 0, 8

/**
 * Signal ShcTLObj02_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj02_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj02_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj02_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(buf, 254)

/**
 * Signal ShcTLObj02_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj02_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID      254

/**
 * Signal ShcTLObj02_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID        0

/**
 * Signal ShcTLObj02_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID        255

/**
 * Signal ShcTLObj02_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID Value Table for Signal ShcTLObj02_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type Signal ShcTLObj02_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type        0, 0, 0, 4

/**
 * Signal ShcTLObj02_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj02_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj02_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj02_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(buf, 14)

/**
 * Signal ShcTLObj02_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj02_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type      14

/**
 * Signal ShcTLObj02_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type        0

/**
 * Signal ShcTLObj02_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type        15

/**
 * Signal ShcTLObj02_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type Value Table for Signal ShcTLObj02_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightRedBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightRedBlinking    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightRed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightRed     5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightYellowBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightYellowBlinking    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightYellow.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightYellow    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightGreenBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightGreenBlinking    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry trafficLightGreen.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_trafficLightGreen    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Type_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction Signal ShcTLObj02_Direction of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light direction
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_Direction configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction        0, 0, 0, 4

/**
 * Signal ShcTLObj02_Direction setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj02_Direction from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj02_Direction in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj02_Direction in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(buf, 14)

/**
 * Signal ShcTLObj02_Direction value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj02_Direction raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction      14

/**
 * Signal ShcTLObj02_Direction raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction        0

/**
 * Signal ShcTLObj02_Direction raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction        15

/**
 * Signal ShcTLObj02_Direction raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction Value Table for Signal ShcTLObj02_Direction in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightLeft.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightLeft    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightLeftAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightLeftAhead    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightAhead    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightRightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightRightAhead    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightRight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightRight    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry trafficLightNoDirection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_trafficLightNoDirection    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_Direction_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist Signal ShcTLObj02_VerDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_VerDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist        0, 0, 0, 8

/**
 * Signal ShcTLObj02_VerDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj02_VerDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj02_VerDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj02_VerDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(buf, 254)

/**
 * Signal ShcTLObj02_VerDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist(x, fmt) \
	((x) * fmt * 2 + fmt * (-60))

/**
 * Signal ShcTLObj02_VerDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist      254

/**
 * Signal ShcTLObj02_VerDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist        0

/**
 * Signal ShcTLObj02_VerDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist        60

/**
 * Signal ShcTLObj02_VerDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist        -30

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist Value Table for Signal ShcTLObj02_VerDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist entry objPositionExceeded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerDist_objPositionExceeded    253

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos Signal ShcTLObj02_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos        0, 0, 0, 12

/**
 * Signal ShcTLObj02_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj02_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj02_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj02_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(buf, 4094)

/**
 * Signal ShcTLObj02_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-12))

/**
 * Signal ShcTLObj02_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos      4094

/**
 * Signal ShcTLObj02_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos        0

/**
 * Signal ShcTLObj02_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos        1200

/**
 * Signal ShcTLObj02_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos        -600

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos Value Table for Signal ShcTLObj02_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_VerPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist Signal ShcTLObj02_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist        0, 0, 0, 8

/**
 * Signal ShcTLObj02_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj02_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj02_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj02_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(buf, 254)

/**
 * Signal ShcTLObj02_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcTLObj02_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist      254

/**
 * Signal ShcTLObj02_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist        0

/**
 * Signal ShcTLObj02_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist        250

/**
 * Signal ShcTLObj02_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist Value Table for Signal ShcTLObj02_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos Signal ShcTLObj02_HorPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_HorPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos        0, 0, 0, 12

/**
 * Signal ShcTLObj02_HorPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj02_HorPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj02_HorPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj02_HorPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(buf, 4094)

/**
 * Signal ShcTLObj02_HorPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcTLObj02_HorPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos      4094

/**
 * Signal ShcTLObj02_HorPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos        0

/**
 * Signal ShcTLObj02_HorPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos        4000

/**
 * Signal ShcTLObj02_HorPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos Value Table for Signal ShcTLObj02_HorPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_HorPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo Signal ShcTLObj02_AddInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Additional object information
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj02_AddInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo        0, 0, 0, 8

/**
 * Signal ShcTLObj02_AddInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj02_AddInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj02_AddInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj02_AddInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(buf, 254)

/**
 * Signal ShcTLObj02_AddInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj02_AddInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo      254

/**
 * Signal ShcTLObj02_AddInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo        0

/**
 * Signal ShcTLObj02_AddInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo        250

/**
 * Signal ShcTLObj02_AddInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo Value Table for Signal ShcTLObj02_AddInfo in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj02_AddInfo_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID Signal ShcTLObj01_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Unique object ID
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID        0, 0, 0, 8

/**
 * Signal ShcTLObj01_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj01_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj01_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj01_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(buf, 254)

/**
 * Signal ShcTLObj01_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj01_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID      254

/**
 * Signal ShcTLObj01_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID        0

/**
 * Signal ShcTLObj01_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID        255

/**
 * Signal ShcTLObj01_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID Value Table for Signal ShcTLObj01_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_ID_noObject            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type Signal ShcTLObj01_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light type
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type        0, 0, 0, 4

/**
 * Signal ShcTLObj01_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj01_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj01_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj01_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(buf, 14)

/**
 * Signal ShcTLObj01_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj01_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type      14

/**
 * Signal ShcTLObj01_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type        0

/**
 * Signal ShcTLObj01_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type        15

/**
 * Signal ShcTLObj01_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type Value Table for Signal ShcTLObj01_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightRedBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightRedBlinking    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightRed.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightRed     5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightYellowBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightYellowBlinking    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightYellow.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightYellow    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightGreenBlinking.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightGreenBlinking    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry trafficLightGreen.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_trafficLightGreen    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Type_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction Signal ShcTLObj01_Direction of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Traffic light direction
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_Direction configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction        0, 0, 0, 4

/**
 * Signal ShcTLObj01_Direction setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction      0, 0, 0, 4, 14

/**
 * Get signal ShcTLObj01_Direction from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal ShcTLObj01_Direction in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj01_Direction in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(buf, 14)

/**
 * Signal ShcTLObj01_Direction value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj01_Direction raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction      14

/**
 * Signal ShcTLObj01_Direction raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction        0

/**
 * Signal ShcTLObj01_Direction raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction        15

/**
 * Signal ShcTLObj01_Direction raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction Value Table for Signal ShcTLObj01_Direction in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightLeft.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightLeft    6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightLeftAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightLeftAhead    5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightAhead    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightRightAhead.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightRightAhead    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightRight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightRight    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry trafficLightNoDirection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_trafficLightNoDirection    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction entry noTrafficLight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_Direction_noTrafficLight      0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist Signal ShcTLObj01_VerDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_VerDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist        0, 0, 0, 8

/**
 * Signal ShcTLObj01_VerDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj01_VerDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj01_VerDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj01_VerDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(buf, 254)

/**
 * Signal ShcTLObj01_VerDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist(x, fmt) \
	((x) * fmt * 2 + fmt * (-60))

/**
 * Signal ShcTLObj01_VerDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist      254

/**
 * Signal ShcTLObj01_VerDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist        0

/**
 * Signal ShcTLObj01_VerDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist        60

/**
 * Signal ShcTLObj01_VerDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist        -30

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist Value Table for Signal ShcTLObj01_VerDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist entry objPositionExceeded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerDist_objPositionExceeded    253

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos Signal ShcTLObj01_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Vertical object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos        0, 0, 0, 12

/**
 * Signal ShcTLObj01_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj01_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj01_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj01_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(buf, 4094)

/**
 * Signal ShcTLObj01_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-12))

/**
 * Signal ShcTLObj01_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos      4094

/**
 * Signal ShcTLObj01_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos        0

/**
 * Signal ShcTLObj01_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos        1200

/**
 * Signal ShcTLObj01_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos        -600

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos Value Table for Signal ShcTLObj01_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_VerPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist Signal ShcTLObj01_HorDist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object distance
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_HorDist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist        0, 0, 0, 8

/**
 * Signal ShcTLObj01_HorDist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj01_HorDist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj01_HorDist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj01_HorDist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(buf, 254)

/**
 * Signal ShcTLObj01_HorDist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal ShcTLObj01_HorDist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist      254

/**
 * Signal ShcTLObj01_HorDist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist        0

/**
 * Signal ShcTLObj01_HorDist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist        250

/**
 * Signal ShcTLObj01_HorDist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist Value Table for Signal ShcTLObj01_HorDist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist entry objPositionExceeded.
 *
 * >500m
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorDist_objPositionExceeded    251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos Signal ShcTLObj01_HorPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Horizontal object position
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_HorPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos        0, 0, 0, 12

/**
 * Signal ShcTLObj01_HorPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos      0, 0, 0, 12, 4094

/**
 * Get signal ShcTLObj01_HorPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal ShcTLObj01_HorPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal ShcTLObj01_HorPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(buf, 4094)

/**
 * Signal ShcTLObj01_HorPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal ShcTLObj01_HorPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos      4094

/**
 * Signal ShcTLObj01_HorPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos        0

/**
 * Signal ShcTLObj01_HorPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos        4000

/**
 * Signal ShcTLObj01_HorPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos Value Table for Signal ShcTLObj01_HorPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_HorPos_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo Signal ShcTLObj01_AddInfo of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Additional object information
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShcTLObj01_AddInfo configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo        0, 0, 0, 8

/**
 * Signal ShcTLObj01_AddInfo setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo      0, 0, 0, 8, 254

/**
 * Get signal ShcTLObj01_AddInfo from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShcTLObj01_AddInfo in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShcTLObj01_AddInfo in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(buf, 254)

/**
 * Signal ShcTLObj01_AddInfo value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo(x, fmt) \
	((x) * fmt)

/**
 * Signal ShcTLObj01_AddInfo raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo      254

/**
 * Signal ShcTLObj01_AddInfo raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo        0

/**
 * Signal ShcTLObj01_AddInfo raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo        250

/**
 * Signal ShcTLObj01_AddInfo raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo Value Table for Signal ShcTLObj01_AddInfo in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ShcTLObj01_AddInfo_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos Signal IhcLopObj08_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj08_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj08_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj08_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj08_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(buf, 254)

/**
 * Signal IhcLopObj08_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj08_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos      254

/**
 * Signal IhcLopObj08_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos        0

/**
 * Signal IhcLopObj08_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos        240

/**
 * Signal IhcLopObj08_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos Value Table for Signal IhcLopObj08_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type Signal IhcLopObj08_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj08_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj08_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj08_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj08_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(buf, 14)

/**
 * Signal IhcLopObj08_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj08_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type      14

/**
 * Signal IhcLopObj08_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type        0

/**
 * Signal IhcLopObj08_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type        15

/**
 * Signal IhcLopObj08_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type Value Table for Signal IhcLopObj08_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID Signal IhcLopObj08_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj08_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj08_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj08_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj08_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(buf, 254)

/**
 * Signal IhcLopObj08_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj08_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID      254

/**
 * Signal IhcLopObj08_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID        0

/**
 * Signal IhcLopObj08_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID        255

/**
 * Signal IhcLopObj08_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID Value Table for Signal IhcLopObj08_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID_Not                 255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_ID_Init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign Signal IhcLopObj08_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj08_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj08_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj08_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj08_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj08_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj08_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign      0

/**
 * Signal IhcLopObj08_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign        0

/**
 * Signal IhcLopObj08_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign        1

/**
 * Signal IhcLopObj08_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign Value Table for Signal IhcLopObj08_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed Signal IhcLopObj08_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj08_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj08_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj08_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj08_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj08_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj08_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed      254

/**
 * Signal IhcLopObj08_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed        0

/**
 * Signal IhcLopObj08_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed        250

/**
 * Signal IhcLopObj08_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed Value Table for Signal IhcLopObj08_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight Signal IhcLopObj08_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj08_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj08_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj08_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj08_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj08_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj08_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight      4094

/**
 * Signal IhcLopObj08_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight        0

/**
 * Signal IhcLopObj08_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight        4000

/**
 * Signal IhcLopObj08_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight Value Table for Signal IhcLopObj08_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft Signal IhcLopObj08_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj08_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj08_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj08_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj08_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj08_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj08_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft      4094

/**
 * Signal IhcLopObj08_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft        0

/**
 * Signal IhcLopObj08_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft        4000

/**
 * Signal IhcLopObj08_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft Value Table for Signal IhcLopObj08_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist Signal IhcLopObj08_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj08_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj08_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj08_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj08_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj08_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(buf, 254)

/**
 * Signal IhcLopObj08_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj08_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist      254

/**
 * Signal IhcLopObj08_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist        0

/**
 * Signal IhcLopObj08_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist        251

/**
 * Signal IhcLopObj08_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist Value Table for Signal IhcLopObj08_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj08_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos Signal IhcLopObj07_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj07_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj07_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj07_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj07_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(buf, 254)

/**
 * Signal IhcLopObj07_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj07_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos      254

/**
 * Signal IhcLopObj07_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos        0

/**
 * Signal IhcLopObj07_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos        240

/**
 * Signal IhcLopObj07_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos Value Table for Signal IhcLopObj07_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type Signal IhcLopObj07_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj07_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj07_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj07_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj07_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(buf, 14)

/**
 * Signal IhcLopObj07_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj07_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type      14

/**
 * Signal IhcLopObj07_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type        0

/**
 * Signal IhcLopObj07_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type        15

/**
 * Signal IhcLopObj07_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type Value Table for Signal IhcLopObj07_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID Signal IhcLopObj07_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj07_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj07_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj07_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj07_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(buf, 254)

/**
 * Signal IhcLopObj07_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj07_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID      254

/**
 * Signal IhcLopObj07_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID        0

/**
 * Signal IhcLopObj07_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID        255

/**
 * Signal IhcLopObj07_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID Value Table for Signal IhcLopObj07_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign Signal IhcLopObj07_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj07_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj07_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj07_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj07_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj07_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj07_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign      0

/**
 * Signal IhcLopObj07_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign        0

/**
 * Signal IhcLopObj07_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign        1

/**
 * Signal IhcLopObj07_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign Value Table for Signal IhcLopObj07_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed Signal IhcLopObj07_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj07_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj07_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj07_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj07_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj07_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj07_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed      254

/**
 * Signal IhcLopObj07_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed        0

/**
 * Signal IhcLopObj07_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed        250

/**
 * Signal IhcLopObj07_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed Value Table for Signal IhcLopObj07_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight Signal IhcLopObj07_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj07_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj07_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj07_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj07_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj07_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj07_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight      4094

/**
 * Signal IhcLopObj07_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight        0

/**
 * Signal IhcLopObj07_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight        4000

/**
 * Signal IhcLopObj07_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight Value Table for Signal IhcLopObj07_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft Signal IhcLopObj07_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj07_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj07_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj07_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj07_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj07_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj07_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft      4094

/**
 * Signal IhcLopObj07_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft        0

/**
 * Signal IhcLopObj07_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft        4000

/**
 * Signal IhcLopObj07_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft Value Table for Signal IhcLopObj07_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist Signal IhcLopObj07_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj07_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj07_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj07_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj07_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj07_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(buf, 254)

/**
 * Signal IhcLopObj07_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj07_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist      254

/**
 * Signal IhcLopObj07_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist        0

/**
 * Signal IhcLopObj07_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist        251

/**
 * Signal IhcLopObj07_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist Value Table for Signal IhcLopObj07_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj07_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos Signal IhcLopObj06_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj06_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj06_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj06_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj06_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(buf, 254)

/**
 * Signal IhcLopObj06_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj06_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos      254

/**
 * Signal IhcLopObj06_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos        0

/**
 * Signal IhcLopObj06_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos        240

/**
 * Signal IhcLopObj06_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos Value Table for Signal IhcLopObj06_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type Signal IhcLopObj06_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj06_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj06_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj06_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj06_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(buf, 14)

/**
 * Signal IhcLopObj06_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj06_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type      14

/**
 * Signal IhcLopObj06_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type        0

/**
 * Signal IhcLopObj06_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type        15

/**
 * Signal IhcLopObj06_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type Value Table for Signal IhcLopObj06_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID Signal IhcLopObj06_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj06_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj06_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj06_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj06_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(buf, 254)

/**
 * Signal IhcLopObj06_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj06_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID      254

/**
 * Signal IhcLopObj06_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID        0

/**
 * Signal IhcLopObj06_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID        255

/**
 * Signal IhcLopObj06_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID Value Table for Signal IhcLopObj06_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign Signal IhcLopObj06_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj06_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj06_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj06_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj06_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj06_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj06_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign      0

/**
 * Signal IhcLopObj06_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign        0

/**
 * Signal IhcLopObj06_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign        1

/**
 * Signal IhcLopObj06_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign Value Table for Signal IhcLopObj06_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed Signal IhcLopObj06_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj06_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj06_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj06_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj06_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj06_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj06_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed      254

/**
 * Signal IhcLopObj06_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed        0

/**
 * Signal IhcLopObj06_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed        250

/**
 * Signal IhcLopObj06_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed Value Table for Signal IhcLopObj06_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight Signal IhcLopObj06_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj06_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj06_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj06_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj06_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj06_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj06_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight      4094

/**
 * Signal IhcLopObj06_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight        0

/**
 * Signal IhcLopObj06_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight        4000

/**
 * Signal IhcLopObj06_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight Value Table for Signal IhcLopObj06_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft Signal IhcLopObj06_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj06_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj06_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj06_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj06_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj06_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj06_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft      4094

/**
 * Signal IhcLopObj06_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft        0

/**
 * Signal IhcLopObj06_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft        4000

/**
 * Signal IhcLopObj06_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft Value Table for Signal IhcLopObj06_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist Signal IhcLopObj06_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj06_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj06_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj06_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj06_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj06_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(buf, 254)

/**
 * Signal IhcLopObj06_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj06_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist      254

/**
 * Signal IhcLopObj06_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist        0

/**
 * Signal IhcLopObj06_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist        251

/**
 * Signal IhcLopObj06_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist Value Table for Signal IhcLopObj06_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj06_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos Signal IhcLopObj05_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj05_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj05_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj05_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj05_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(buf, 254)

/**
 * Signal IhcLopObj05_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj05_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos      254

/**
 * Signal IhcLopObj05_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos        0

/**
 * Signal IhcLopObj05_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos        240

/**
 * Signal IhcLopObj05_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos Value Table for Signal IhcLopObj05_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type Signal IhcLopObj05_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj05_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj05_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj05_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj05_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(buf, 14)

/**
 * Signal IhcLopObj05_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj05_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type      14

/**
 * Signal IhcLopObj05_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type        0

/**
 * Signal IhcLopObj05_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type        15

/**
 * Signal IhcLopObj05_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type Value Table for Signal IhcLopObj05_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID Signal IhcLopObj05_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj05_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj05_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj05_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj05_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(buf, 254)

/**
 * Signal IhcLopObj05_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj05_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID      254

/**
 * Signal IhcLopObj05_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID        0

/**
 * Signal IhcLopObj05_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID        255

/**
 * Signal IhcLopObj05_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID Value Table for Signal IhcLopObj05_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign Signal IhcLopObj05_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj05_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj05_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj05_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj05_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj05_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj05_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign      0

/**
 * Signal IhcLopObj05_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign        0

/**
 * Signal IhcLopObj05_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign        1

/**
 * Signal IhcLopObj05_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign Value Table for Signal IhcLopObj05_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed Signal IhcLopObj05_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj05_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj05_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj05_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj05_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj05_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj05_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed      254

/**
 * Signal IhcLopObj05_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed        0

/**
 * Signal IhcLopObj05_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed        250

/**
 * Signal IhcLopObj05_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed Value Table for Signal IhcLopObj05_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight Signal IhcLopObj05_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj05_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj05_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj05_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj05_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj05_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj05_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight      4094

/**
 * Signal IhcLopObj05_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight        0

/**
 * Signal IhcLopObj05_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight        4000

/**
 * Signal IhcLopObj05_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight Value Table for Signal IhcLopObj05_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft Signal IhcLopObj05_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj05_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj05_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj05_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj05_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj05_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj05_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft      4094

/**
 * Signal IhcLopObj05_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft        0

/**
 * Signal IhcLopObj05_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft        4000

/**
 * Signal IhcLopObj05_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft Value Table for Signal IhcLopObj05_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist Signal IhcLopObj05_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj05_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj05_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj05_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj05_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj05_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(buf, 254)

/**
 * Signal IhcLopObj05_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj05_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist      254

/**
 * Signal IhcLopObj05_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist        0

/**
 * Signal IhcLopObj05_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist        251

/**
 * Signal IhcLopObj05_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist Value Table for Signal IhcLopObj05_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj05_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos Signal IhcLopObj04_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj04_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj04_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj04_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj04_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(buf, 254)

/**
 * Signal IhcLopObj04_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj04_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos      254

/**
 * Signal IhcLopObj04_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos        0

/**
 * Signal IhcLopObj04_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos        240

/**
 * Signal IhcLopObj04_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos Value Table for Signal IhcLopObj04_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type Signal IhcLopObj04_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj04_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj04_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj04_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj04_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(buf, 14)

/**
 * Signal IhcLopObj04_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj04_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type      14

/**
 * Signal IhcLopObj04_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type        0

/**
 * Signal IhcLopObj04_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type        15

/**
 * Signal IhcLopObj04_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type Value Table for Signal IhcLopObj04_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID Signal IhcLopObj04_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj04_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj04_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj04_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj04_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(buf, 254)

/**
 * Signal IhcLopObj04_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj04_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID      254

/**
 * Signal IhcLopObj04_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID        0

/**
 * Signal IhcLopObj04_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID        255

/**
 * Signal IhcLopObj04_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID Value Table for Signal IhcLopObj04_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign Signal IhcLopObj04_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj04_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj04_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj04_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj04_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj04_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj04_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign      0

/**
 * Signal IhcLopObj04_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign        0

/**
 * Signal IhcLopObj04_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign        1

/**
 * Signal IhcLopObj04_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign Value Table for Signal IhcLopObj04_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed Signal IhcLopObj04_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj04_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj04_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj04_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj04_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj04_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj04_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed      254

/**
 * Signal IhcLopObj04_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed        0

/**
 * Signal IhcLopObj04_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed        250

/**
 * Signal IhcLopObj04_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed Value Table for Signal IhcLopObj04_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight Signal IhcLopObj04_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj04_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj04_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj04_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj04_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj04_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj04_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight      4094

/**
 * Signal IhcLopObj04_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight        0

/**
 * Signal IhcLopObj04_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight        4000

/**
 * Signal IhcLopObj04_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight Value Table for Signal IhcLopObj04_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft Signal IhcLopObj04_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj04_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj04_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj04_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj04_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj04_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj04_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft      4094

/**
 * Signal IhcLopObj04_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft        0

/**
 * Signal IhcLopObj04_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft        4000

/**
 * Signal IhcLopObj04_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft Value Table for Signal IhcLopObj04_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist Signal IhcLopObj04_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj04_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj04_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj04_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj04_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj04_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(buf, 254)

/**
 * Signal IhcLopObj04_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj04_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist      254

/**
 * Signal IhcLopObj04_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist        0

/**
 * Signal IhcLopObj04_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist        251

/**
 * Signal IhcLopObj04_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist Value Table for Signal IhcLopObj04_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj04_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos Signal IhcLopObj03_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj03_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj03_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj03_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj03_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(buf, 254)

/**
 * Signal IhcLopObj03_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj03_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos      254

/**
 * Signal IhcLopObj03_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos        0

/**
 * Signal IhcLopObj03_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos        240

/**
 * Signal IhcLopObj03_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos Value Table for Signal IhcLopObj03_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type Signal IhcLopObj03_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj03_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj03_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj03_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj03_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(buf, 14)

/**
 * Signal IhcLopObj03_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj03_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type      14

/**
 * Signal IhcLopObj03_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type        0

/**
 * Signal IhcLopObj03_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type        15

/**
 * Signal IhcLopObj03_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type Value Table for Signal IhcLopObj03_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID Signal IhcLopObj03_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj03_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj03_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj03_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj03_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(buf, 254)

/**
 * Signal IhcLopObj03_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj03_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID      254

/**
 * Signal IhcLopObj03_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID        0

/**
 * Signal IhcLopObj03_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID        255

/**
 * Signal IhcLopObj03_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID Value Table for Signal IhcLopObj03_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign Signal IhcLopObj03_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj03_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj03_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj03_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj03_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj03_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj03_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign      0

/**
 * Signal IhcLopObj03_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign        0

/**
 * Signal IhcLopObj03_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign        1

/**
 * Signal IhcLopObj03_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign Value Table for Signal IhcLopObj03_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed Signal IhcLopObj03_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj03_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj03_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj03_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj03_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj03_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj03_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed      254

/**
 * Signal IhcLopObj03_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed        0

/**
 * Signal IhcLopObj03_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed        250

/**
 * Signal IhcLopObj03_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed Value Table for Signal IhcLopObj03_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight Signal IhcLopObj03_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj03_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj03_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj03_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj03_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj03_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj03_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight      4094

/**
 * Signal IhcLopObj03_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight        0

/**
 * Signal IhcLopObj03_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight        4000

/**
 * Signal IhcLopObj03_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight Value Table for Signal IhcLopObj03_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft Signal IhcLopObj03_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj03_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj03_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj03_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj03_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj03_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj03_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft      4094

/**
 * Signal IhcLopObj03_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft        0

/**
 * Signal IhcLopObj03_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft        4000

/**
 * Signal IhcLopObj03_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft Value Table for Signal IhcLopObj03_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist Signal IhcLopObj03_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj03_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj03_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj03_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj03_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj03_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(buf, 254)

/**
 * Signal IhcLopObj03_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj03_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist      254

/**
 * Signal IhcLopObj03_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist        0

/**
 * Signal IhcLopObj03_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist        251

/**
 * Signal IhcLopObj03_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist Value Table for Signal IhcLopObj03_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj03_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos Signal IhcLopObj02_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj02_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj02_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj02_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj02_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(buf, 254)

/**
 * Signal IhcLopObj02_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj02_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos      254

/**
 * Signal IhcLopObj02_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos        0

/**
 * Signal IhcLopObj02_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos        240

/**
 * Signal IhcLopObj02_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos Value Table for Signal IhcLopObj02_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type Signal IhcLopObj02_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj02_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj02_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj02_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj02_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(buf, 14)

/**
 * Signal IhcLopObj02_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj02_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type      14

/**
 * Signal IhcLopObj02_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type        0

/**
 * Signal IhcLopObj02_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type        15

/**
 * Signal IhcLopObj02_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type Value Table for Signal IhcLopObj02_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID Signal IhcLopObj02_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj02_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj02_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj02_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj02_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(buf, 254)

/**
 * Signal IhcLopObj02_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj02_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID      254

/**
 * Signal IhcLopObj02_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID        0

/**
 * Signal IhcLopObj02_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID        255

/**
 * Signal IhcLopObj02_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID Value Table for Signal IhcLopObj02_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign Signal IhcLopObj02_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj02_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj02_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj02_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj02_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj02_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj02_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign      0

/**
 * Signal IhcLopObj02_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign        0

/**
 * Signal IhcLopObj02_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign        1

/**
 * Signal IhcLopObj02_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign Value Table for Signal IhcLopObj02_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed Signal IhcLopObj02_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj02_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj02_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj02_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj02_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj02_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj02_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed      254

/**
 * Signal IhcLopObj02_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed        0

/**
 * Signal IhcLopObj02_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed        250

/**
 * Signal IhcLopObj02_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed Value Table for Signal IhcLopObj02_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight Signal IhcLopObj02_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj02_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj02_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj02_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj02_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj02_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj02_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight      4094

/**
 * Signal IhcLopObj02_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight        0

/**
 * Signal IhcLopObj02_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight        4000

/**
 * Signal IhcLopObj02_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight Value Table for Signal IhcLopObj02_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft Signal IhcLopObj02_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj02_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj02_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj02_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj02_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj02_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj02_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft      4094

/**
 * Signal IhcLopObj02_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft        0

/**
 * Signal IhcLopObj02_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft        4000

/**
 * Signal IhcLopObj02_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft Value Table for Signal IhcLopObj02_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist Signal IhcLopObj02_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj02_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj02_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj02_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj02_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj02_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(buf, 254)

/**
 * Signal IhcLopObj02_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj02_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist      254

/**
 * Signal IhcLopObj02_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist        0

/**
 * Signal IhcLopObj02_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist        251

/**
 * Signal IhcLopObj02_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist Value Table for Signal IhcLopObj02_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj02_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign Signal IhcLopObj01_HorSpeedSign of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_HorSpeedSign configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign        0, 0, 0, 1

/**
 * Signal IhcLopObj01_HorSpeedSign setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign      0, 0, 0, 1, 0

/**
 * Get signal IhcLopObj01_HorSpeedSign from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcLopObj01_HorSpeedSign in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcLopObj01_HorSpeedSign in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(buf, 0)

/**
 * Signal IhcLopObj01_HorSpeedSign value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj01_HorSpeedSign raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign      0

/**
 * Signal IhcLopObj01_HorSpeedSign raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign        0

/**
 * Signal IhcLopObj01_HorSpeedSign raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign        1

/**
 * Signal IhcLopObj01_HorSpeedSign raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign Value Table for Signal IhcLopObj01_HorSpeedSign in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign entry Right.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign_Right               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign entry Left.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeedSign_Left                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed Signal IhcLopObj01_HorSpeed of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_HorSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed        0, 0, 0, 8

/**
 * Signal IhcLopObj01_HorSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj01_HorSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj01_HorSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj01_HorSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(buf, 254)

/**
 * Signal IhcLopObj01_HorSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal IhcLopObj01_HorSpeed raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed      254

/**
 * Signal IhcLopObj01_HorSpeed raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed        0

/**
 * Signal IhcLopObj01_HorSpeed raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed        250

/**
 * Signal IhcLopObj01_HorSpeed raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed Value Table for Signal IhcLopObj01_HorSpeed in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorSpeed_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos Signal IhcLopObj01_VerPos of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_VerPos configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos        0, 0, 0, 8

/**
 * Signal IhcLopObj01_VerPos setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj01_VerPos from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj01_VerPos in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj01_VerPos in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(buf, 254)

/**
 * Signal IhcLopObj01_VerPos value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos(x, fmt) \
	((x) * fmt / 10 + fmt * (-12))

/**
 * Signal IhcLopObj01_VerPos raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos      254

/**
 * Signal IhcLopObj01_VerPos raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos        0

/**
 * Signal IhcLopObj01_VerPos raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos        240

/**
 * Signal IhcLopObj01_VerPos raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos        -120

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos Value Table for Signal IhcLopObj01_VerPos in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_VerPos_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist Signal IhcLopObj01_Dist of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_Dist configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist        0, 0, 0, 8

/**
 * Signal IhcLopObj01_Dist setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj01_Dist from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj01_Dist in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj01_Dist in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(buf, 254)

/**
 * Signal IhcLopObj01_Dist value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist(x, fmt) \
	((x) * fmt * 2)

/**
 * Signal IhcLopObj01_Dist raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist      254

/**
 * Signal IhcLopObj01_Dist raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist        0

/**
 * Signal IhcLopObj01_Dist raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist        251

/**
 * Signal IhcLopObj01_Dist raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist Value Table for Signal IhcLopObj01_Dist in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist_init                254

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist entry greaterThen500m.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Dist_greaterThen500m     251

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight Signal IhcLopObj01_HorPosRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_HorPosRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight        0, 0, 0, 12

/**
 * Signal IhcLopObj01_HorPosRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj01_HorPosRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj01_HorPosRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj01_HorPosRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(buf, 4094)

/**
 * Signal IhcLopObj01_HorPosRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj01_HorPosRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight      4094

/**
 * Signal IhcLopObj01_HorPosRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight        0

/**
 * Signal IhcLopObj01_HorPosRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight        4000

/**
 * Signal IhcLopObj01_HorPosRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight Value Table for Signal IhcLopObj01_HorPosRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosRight_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft Signal IhcLopObj01_HorPosLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_HorPosLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft        0, 0, 0, 12

/**
 * Signal IhcLopObj01_HorPosLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft      0, 0, 0, 12, 4094

/**
 * Get signal IhcLopObj01_HorPosLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal IhcLopObj01_HorPosLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj01_HorPosLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(buf, 4094)

/**
 * Signal IhcLopObj01_HorPosLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft(x, fmt) \
	((x) * fmt / 50 + fmt * (-40))

/**
 * Signal IhcLopObj01_HorPosLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft      4094

/**
 * Signal IhcLopObj01_HorPosLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft        0

/**
 * Signal IhcLopObj01_HorPosLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft        4000

/**
 * Signal IhcLopObj01_HorPosLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft        -2000

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft Value Table for Signal IhcLopObj01_HorPosLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft_notAvailable        4095

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_HorPosLeft_init                4094

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type Signal IhcLopObj01_Type of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type        0, 0, 0, 4

/**
 * Signal IhcLopObj01_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type      0, 0, 0, 4, 14

/**
 * Get signal IhcLopObj01_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcLopObj01_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcLopObj01_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(buf, 14)

/**
 * Signal IhcLopObj01_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj01_Type raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type      14

/**
 * Signal IhcLopObj01_Type raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type        0

/**
 * Signal IhcLopObj01_Type raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type        15

/**
 * Signal IhcLopObj01_Type raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type Value Table for Signal IhcLopObj01_Type in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Not.
 *
 * Available
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Not                 15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Reflective.
 *
 * Object High
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Reflective          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Reflective_4.
 *
 * Object Middle
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Reflective_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Reflective_3.
 *
 * Object Low
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Reflective_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry No.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_No                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Preceding.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Preceding           2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type entry Oncoming.
 *
 * Object
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_Type_Oncoming            1

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID Signal IhcLopObj01_ID of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcLopObj01_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID        0, 0, 0, 8

/**
 * Signal IhcLopObj01_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID      0, 0, 0, 8, 254

/**
 * Get signal IhcLopObj01_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal IhcLopObj01_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal IhcLopObj01_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(buf, 254)

/**
 * Signal IhcLopObj01_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcLopObj01_ID raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID      254

/**
 * Signal IhcLopObj01_ID raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID        0

/**
 * Signal IhcLopObj01_ID raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID        255

/**
 * Signal IhcLopObj01_ID raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID Value Table for Signal IhcLopObj01_ID in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID entry noObject.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID_noObject            0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID_notAvailable        255

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcLopObj01_ID_init                254

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC Signal HMA_State_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HMA_State_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC        0, 0, 0, 8

/**
 * Signal HMA_State_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC      0, 0, 0, 8, 0

/**
 * Get signal HMA_State_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal HMA_State_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal HMA_State_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(buf, 0)

/**
 * Signal HMA_State_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal HMA_State_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC      0

/**
 * Signal HMA_State_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC        0

/**
 * Signal HMA_State_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC        255

/**
 * Signal HMA_State_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter Signal HMA_State_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal HMA_State_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter        0, 0, 0, 4

/**
 * Signal HMA_State_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter      0, 0, 0, 4, 0

/**
 * Get signal HMA_State_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal HMA_State_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal HMA_State_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(buf, 0)

/**
 * Signal HMA_State_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal HMA_State_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter      0

/**
 * Signal HMA_State_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter        0

/**
 * Signal HMA_State_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter        15

/**
 * Signal HMA_State_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_HMA_State_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus Signal IhcHmaStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcHmaStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus        0, 0, 0, 4

/**
 * Signal IhcHmaStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus      0, 0, 0, 4, 14

/**
 * Get signal IhcHmaStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcHmaStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcHmaStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(buf, 14)

/**
 * Signal IhcHmaStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcHmaStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus      14

/**
 * Signal IhcHmaStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus        0

/**
 * Signal IhcHmaStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus        15

/**
 * Signal IhcHmaStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus Value Table for Signal IhcHmaStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry notAvailable.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_notAvailable        15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry offNotCoded.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_offNotCoded         4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry onFailure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_onFailure           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry onReducedSight.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_onReducedSight      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry onActive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_onActive            1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus entry onPassive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaStatus_onPassive           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation Signal IhcHmaRecommendation of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcHmaRecommendation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation        0, 0, 0, 1

/**
 * Signal IhcHmaRecommendation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation      0, 0, 0, 1, 0

/**
 * Get signal IhcHmaRecommendation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal IhcHmaRecommendation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal IhcHmaRecommendation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(buf, 0)

/**
 * Signal IhcHmaRecommendation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcHmaRecommendation raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation      0

/**
 * Signal IhcHmaRecommendation raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation        0

/**
 * Signal IhcHmaRecommendation raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation        1

/**
 * Signal IhcHmaRecommendation raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation Value Table for Signal IhcHmaRecommendation in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation entry highBeamRecommendation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation_highBeamRecommendation    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation entry noHighBeamRecommendation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaRecommendation_noHighBeamRecommendation    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason Signal IhcHmaNoHBReason of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcHmaNoHBReason configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason        0, 0, 0, 4

/**
 * Signal IhcHmaNoHBReason setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason      0, 0, 0, 4, 14

/**
 * Get signal IhcHmaNoHBReason from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcHmaNoHBReason in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcHmaNoHBReason in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(buf, 14)

/**
 * Signal IhcHmaNoHBReason value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason(x, fmt) \
	((x) * fmt)

/**
 * Signal IhcHmaNoHBReason raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason      14

/**
 * Signal IhcHmaNoHBReason raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason        0

/**
 * Signal IhcHmaNoHBReason raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason        15

/**
 * Signal IhcHmaNoHBReason raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason Value Table for Signal IhcHmaNoHBReason in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry none.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_none                0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry oncomingVeh.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_oncomingVeh         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry preceedingVeh.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_preceedingVeh       2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry velTooLow.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_velTooLow           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry roadLighting.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_roadLighting        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry brightness.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_brightness          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry blindness.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_blindness           6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry lowBeamOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_lowBeamOff          7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry selfGlaring.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_selfGlaring         8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry badWeather.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_badWeather          9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry supression.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_supression          10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry passive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_passive             13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_init                14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason entry error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaNoHBReason_error               15

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight Signal IhcHmaDimRight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcHmaDimRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight        0, 0, 0, 4

/**
 * Signal IhcHmaDimRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight      0, 0, 0, 4, 0

/**
 * Get signal IhcHmaDimRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcHmaDimRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcHmaDimRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(buf, 0)

/**
 * Signal IhcHmaDimRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight(x, fmt) \
	((x) * fmt * 10)

/**
 * Signal IhcHmaDimRight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight      0

/**
 * Signal IhcHmaDimRight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight        0

/**
 * Signal IhcHmaDimRight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight        10

/**
 * Signal IhcHmaDimRight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight Value Table for Signal IhcHmaDimRight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 0_.
 *
 * 0%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_0_                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 10_.
 *
 * 10%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_10_                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 20_.
 *
 * 20%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_20_                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 30_.
 *
 * 30%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_30_                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 40_.
 *
 * 40%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_40_                 4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 50_.
 *
 * 50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_50_                 5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 60_.
 *
 * 60%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_60_                 6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 70_.
 *
 * 70%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_70_                 7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 80_.
 *
 * 80%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_80_                 8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 90_.
 *
 * 90%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_90_                 9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight entry 100_.
 *
 * 100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimRight_100_                10

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft Signal IhcHmaDimLeft of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal IhcHmaDimLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft        0, 0, 0, 4

/**
 * Signal IhcHmaDimLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft      0, 0, 0, 4, 0

/**
 * Get signal IhcHmaDimLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal IhcHmaDimLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal IhcHmaDimLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(buf, 0)

/**
 * Signal IhcHmaDimLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft(x, fmt) \
	((x) * fmt * 10)

/**
 * Signal IhcHmaDimLeft raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft      0

/**
 * Signal IhcHmaDimLeft raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft        0

/**
 * Signal IhcHmaDimLeft raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft        10

/**
 * Signal IhcHmaDimLeft raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft Value Table for Signal IhcHmaDimLeft in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 0_.
 *
 * 0%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_0_                  0

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 10_.
 *
 * 10%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_10_                 1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 20_.
 *
 * 20%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_20_                 2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 30_.
 *
 * 30%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_30_                 3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 40_.
 *
 * 40%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_40_                 4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 50_.
 *
 * 50%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_50_                 5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 60_.
 *
 * 60%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_60_                 6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 70_.
 *
 * 70%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_70_                 7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 80_.
 *
 * 80%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_80_                 8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 90_.
 *
 * 90%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_90_                 9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft entry 100_.
 *
 * 100%
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft
 */
#define VECTOR__INDEPENDENT_SIG_MSG_IhcHmaDimLeft_100_                10

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ Signal BoschVideoDiagPhyRequ of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal BoschVideoDiagPhyRequ configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ        0, 0, 0, 64

/**
 * Signal BoschVideoDiagPhyRequ setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ      0, 0, 0, 64, 0

/**
 * Get signal BoschVideoDiagPhyRequ from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
	| (ulong)(+(ulong)((buf[2] >> 0) & 0xff) << 16) \
	| (ulong)(+(ulong)((buf[3] >> 0) & 0xff) << 24) \
	| (ulong)(+(ulong)((buf[4] >> 0) & 0xff) << 32) \
	| (ulong)(+(ulong)((buf[5] >> 0) & 0xff) << 40) \
	| (ulong)(+(ulong)((buf[6] >> 0) & 0xff) << 48) \
	| (ulong)(+(ulong)((buf[7] >> 0) & 0xff) << 56) \
)

/**
 * Set signal BoschVideoDiagPhyRequ in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0; \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= ((ubyte)((ulong)(val) >> 32) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((ulong)(val) >> 40) & 0xff) << 0; \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= ((ubyte)((ulong)(val) >> 48) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((ulong)(val) >> 56) & 0xff) << 0; \
}

/**
 * Set signal BoschVideoDiagPhyRequ in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(buf, 0)

/**
 * Signal BoschVideoDiagPhyRequ value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ(x, fmt) \
	((x) * fmt)

/**
 * Signal BoschVideoDiagPhyRequ raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ      0

/**
 * Signal BoschVideoDiagPhyRequ raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ        0

/**
 * Signal BoschVideoDiagPhyRequ raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ        0

/**
 * Signal BoschVideoDiagPhyRequ raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagPhyRequ        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ Signal BoschVideoDiagFuncRequ of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal BoschVideoDiagFuncRequ configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ        0, 0, 0, 64

/**
 * Signal BoschVideoDiagFuncRequ setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ      0, 0, 0, 64, 0

/**
 * Get signal BoschVideoDiagFuncRequ from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
	| (ulong)(+(ulong)((buf[2] >> 0) & 0xff) << 16) \
	| (ulong)(+(ulong)((buf[3] >> 0) & 0xff) << 24) \
	| (ulong)(+(ulong)((buf[4] >> 0) & 0xff) << 32) \
	| (ulong)(+(ulong)((buf[5] >> 0) & 0xff) << 40) \
	| (ulong)(+(ulong)((buf[6] >> 0) & 0xff) << 48) \
	| (ulong)(+(ulong)((buf[7] >> 0) & 0xff) << 56) \
)

/**
 * Set signal BoschVideoDiagFuncRequ in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0; \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= ((ubyte)((ulong)(val) >> 32) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((ulong)(val) >> 40) & 0xff) << 0; \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= ((ubyte)((ulong)(val) >> 48) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((ulong)(val) >> 56) & 0xff) << 0; \
}

/**
 * Set signal BoschVideoDiagFuncRequ in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(buf, 0)

/**
 * Signal BoschVideoDiagFuncRequ value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ(x, fmt) \
	((x) * fmt)

/**
 * Signal BoschVideoDiagFuncRequ raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ      0

/**
 * Signal BoschVideoDiagFuncRequ raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ        0

/**
 * Signal BoschVideoDiagFuncRequ raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ        0

/**
 * Signal BoschVideoDiagFuncRequ raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagFuncRequ        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState Signal InternalSystemState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal InternalSystemState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState        0, 0, 0, 6

/**
 * Signal InternalSystemState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState      0, 0, 0, 6, 1

/**
 * Get signal InternalSystemState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal InternalSystemState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal InternalSystemState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(buf, 1)

/**
 * Signal InternalSystemState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState(x, fmt) \
	((x) * fmt)

/**
 * Signal InternalSystemState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState      1

/**
 * Signal InternalSystemState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState        0

/**
 * Signal InternalSystemState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState        63

/**
 * Signal InternalSystemState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState Value Table for Signal InternalSystemState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry hotRestart.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_hotRestart          34

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry hvProtection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_hvProtection        33

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry htProtection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_htProtection        32

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry systemError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_systemError         31

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry limited.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_limited             30

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry crash.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_crash               20

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry operational.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_operational         10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry crashProtection.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_crashProtection     7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry calibration.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_calibration         3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry rbeol.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_rbeol               2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry init.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_init                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState entry notInStm.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_InternalSystemState_notInStm            0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState Signal CameraSystemState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal CameraSystemState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState        0, 0, 0, 3

/**
 * Signal CameraSystemState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState      0, 0, 0, 3, 1

/**
 * Get signal CameraSystemState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal CameraSystemState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal CameraSystemState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(buf, 1)

/**
 * Signal CameraSystemState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState(x, fmt) \
	((x) * fmt)

/**
 * Signal CameraSystemState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState      1

/**
 * Signal CameraSystemState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState        0

/**
 * Signal CameraSystemState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState        7

/**
 * Signal CameraSystemState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState Value Table for Signal CameraSystemState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState entry limited.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState_limited             4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState entry failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState_failure             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState entry turnsOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState_turnsOff            2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState entry initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState_initialization      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState entry operative.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraSystemState_operative           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState Signal CameraFailureState of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal CameraFailureState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState        0, 0, 0, 1

/**
 * Signal CameraFailureState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState      0, 0, 0, 1, 0

/**
 * Get signal CameraFailureState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal CameraFailureState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal CameraFailureState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(buf, 0)

/**
 * Signal CameraFailureState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState(x, fmt) \
	((x) * fmt)

/**
 * Signal CameraFailureState raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState      0

/**
 * Signal CameraFailureState raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState        0

/**
 * Signal CameraFailureState raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState        1

/**
 * Signal CameraFailureState raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState Value Table for Signal CameraFailureState in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState entry failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState_failure             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState entry noFailure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CameraFailureState_noFailure           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi Signal LcsSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * SSW sub states (of right side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LcsSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi        0, 0, 0, 2

/**
 * Signal LcsSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal LcsSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LcsSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LcsSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(buf, 0)

/**
 * Signal LcsSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi      0

/**
 * Signal LcsSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi        0

/**
 * Signal LcsSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi        3

/**
 * Signal LcsSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi Value Table for Signal LcsSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesRi_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe Signal LcsSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * SSW sub states (of left side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LcsSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe        0, 0, 0, 2

/**
 * Signal LcsSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal LcsSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LcsSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LcsSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(buf, 0)

/**
 * Signal LcsSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe      0

/**
 * Signal LcsSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe        0

/**
 * Signal LcsSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe        3

/**
 * Signal LcsSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe Value Table for Signal LcsSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsSubStatesLe_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates Signal LcsMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Main states of SSW
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LcsMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates        0, 0, 0, 2

/**
 * Signal LcsMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates      0, 0, 0, 2, 0

/**
 * Get signal LcsMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LcsMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LcsMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(buf, 0)

/**
 * Signal LcsMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates      0

/**
 * Signal LcsMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates        0

/**
 * Signal LcsMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates        3

/**
 * Signal LcsMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates Value Table for Signal LcsMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates_on                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates entry temporaryError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates_temporaryError      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates entry permanentError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates_permanentError      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LcsMainStates_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi Signal RdpSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * LKS sub states (of right side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RdpSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi        0, 0, 0, 2

/**
 * Signal RdpSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal RdpSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal RdpSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal RdpSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(buf, 0)

/**
 * Signal RdpSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal RdpSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi      0

/**
 * Signal RdpSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi        0

/**
 * Signal RdpSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi        3

/**
 * Signal RdpSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi Value Table for Signal RdpSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesRi_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe Signal RdpSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * LKS sub states (of left side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RdpSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe        0, 0, 0, 2

/**
 * Signal RdpSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal RdpSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal RdpSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal RdpSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(buf, 0)

/**
 * Signal RdpSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal RdpSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe      0

/**
 * Signal RdpSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe        0

/**
 * Signal RdpSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe        3

/**
 * Signal RdpSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe Value Table for Signal RdpSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpSubStatesLe_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates Signal RdpMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Main states of LDW
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RdpMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates        0, 0, 0, 2

/**
 * Signal RdpMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates      0, 0, 0, 2, 0

/**
 * Get signal RdpMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal RdpMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal RdpMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(buf, 0)

/**
 * Signal RdpMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal RdpMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates      0

/**
 * Signal RdpMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates        0

/**
 * Signal RdpMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates        3

/**
 * Signal RdpMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates Value Table for Signal RdpMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates_on                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates entry temporaryError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates_temporaryError      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates entry permanentError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates_permanentError      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RdpMainStates_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi Signal LdwSubStatesRi of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * LDW sub states (of right side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdwSubStatesRi configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi        0, 0, 0, 2

/**
 * Signal LdwSubStatesRi setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi      0, 0, 0, 2, 0

/**
 * Get signal LdwSubStatesRi from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LdwSubStatesRi in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LdwSubStatesRi in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(buf, 0)

/**
 * Signal LdwSubStatesRi value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi(x, fmt) \
	((x) * fmt)

/**
 * Signal LdwSubStatesRi raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi      0

/**
 * Signal LdwSubStatesRi raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi        0

/**
 * Signal LdwSubStatesRi raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi        3

/**
 * Signal LdwSubStatesRi raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi Value Table for Signal LdwSubStatesRi in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesRi_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe Signal LdwSubStatesLe of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * LDW sub states (of left side)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdwSubStatesLe configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe        0, 0, 0, 2

/**
 * Signal LdwSubStatesLe setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe      0, 0, 0, 2, 0

/**
 * Get signal LdwSubStatesLe from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LdwSubStatesLe in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LdwSubStatesLe in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(buf, 0)

/**
 * Signal LdwSubStatesLe value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe(x, fmt) \
	((x) * fmt)

/**
 * Signal LdwSubStatesLe raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe      0

/**
 * Signal LdwSubStatesLe raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe        0

/**
 * Signal LdwSubStatesLe raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe        3

/**
 * Signal LdwSubStatesLe raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe Value Table for Signal LdwSubStatesLe in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe entry active.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe_active              2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe entry ready.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe_ready               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwSubStatesLe_idle                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates Signal LdwMainStates of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Main states of LDW
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdwMainStates configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates        0, 0, 0, 2

/**
 * Signal LdwMainStates setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates      0, 0, 0, 2, 0

/**
 * Get signal LdwMainStates from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LdwMainStates in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LdwMainStates in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(buf, 0)

/**
 * Signal LdwMainStates value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates(x, fmt) \
	((x) * fmt)

/**
 * Signal LdwMainStates raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates      0

/**
 * Signal LdwMainStates raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates        0

/**
 * Signal LdwMainStates raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates        3

/**
 * Signal LdwMainStates raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates Value Table for Signal LdwMainStates in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates_on                  3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates entry temporaryError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates_temporaryError      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates entry permanentError.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates_permanentError      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdwMainStates_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq Signal LdsVibFreq of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdsVibFreq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq        0, 0, 0, 4

/**
 * Signal LdsVibFreq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq      0, 0, 0, 4, 0

/**
 * Get signal LdsVibFreq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal LdsVibFreq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal LdsVibFreq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(buf, 0)

/**
 * Signal LdsVibFreq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq(x, fmt) \
	((x) * fmt + fmt * 15)

/**
 * Signal LdsVibFreq raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq      0

/**
 * Signal LdsVibFreq raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq        0

/**
 * Signal LdsVibFreq raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq        15

/**
 * Signal LdsVibFreq raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdsVibFreq        15

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp Signal LdsVibAmp of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdsVibAmp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp        0, 0, 0, 4

/**
 * Signal LdsVibAmp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp      0, 0, 0, 4, 0

/**
 * Get signal LdsVibAmp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal LdsVibAmp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal LdsVibAmp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(buf, 0)

/**
 * Signal LdsVibAmp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp(x, fmt) \
	((x) * fmt / 5)

/**
 * Signal LdsVibAmp raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp      0

/**
 * Signal LdsVibAmp raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp        0

/**
 * Signal LdsVibAmp raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp        15

/**
 * Signal LdsVibAmp raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdsVibAmp        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus Signal LdsTorqueReqStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdsTorqueReqStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus        0, 0, 0, 2

/**
 * Signal LdsTorqueReqStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus      0, 0, 0, 2, 0

/**
 * Get signal LdsTorqueReqStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LdsTorqueReqStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LdsTorqueReqStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(buf, 0)

/**
 * Signal LdsTorqueReqStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal LdsTorqueReqStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus      0

/**
 * Signal LdsTorqueReqStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus        0

/**
 * Signal LdsTorqueReqStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus        3

/**
 * Signal LdsTorqueReqStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus Value Table for Signal LdsTorqueReqStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus_reserved            3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus entry ldsTorqueActive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus_ldsTorqueActive     2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus entry ldsTorqueReady.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus_ldsTorqueReady      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus entry ldsTorqueInhibited.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReqStatus_ldsTorqueInhibited    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq Signal LdsTorqueReq of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdsTorqueReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq        0, 0, 0, 11

/**
 * Signal LdsTorqueReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq      0, 0, 0, 11, 1023

/**
 * Get signal LdsTorqueReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x07) << 8) \
)

/**
 * Set signal LdsTorqueReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x07 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x07) << 0; \
}

/**
 * Set signal LdsTorqueReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(buf, 1023)

/**
 * Signal LdsTorqueReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq(x, fmt) \
	((x) * fmt / 50 + fmt * (-1023) / 50)

/**
 * Signal LdsTorqueReq raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq      1023

/**
 * Signal LdsTorqueReq raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq        0

/**
 * Signal LdsTorqueReq raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq        2046

/**
 * Signal LdsTorqueReq raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdsTorqueReq        -1023

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq Signal LdsDriverOvertakeReq of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LdsDriverOvertakeReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq        0, 0, 0, 1

/**
 * Signal LdsDriverOvertakeReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq      0, 0, 0, 1, 0

/**
 * Get signal LdsDriverOvertakeReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal LdsDriverOvertakeReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal LdsDriverOvertakeReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(buf, 0)

/**
 * Signal LdsDriverOvertakeReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq(x, fmt) \
	((x) * fmt)

/**
 * Signal LdsDriverOvertakeReq raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq      0

/**
 * Signal LdsDriverOvertakeReq raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq        0

/**
 * Signal LdsDriverOvertakeReq raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq        1

/**
 * Signal LdsDriverOvertakeReq raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq Value Table for Signal LdsDriverOvertakeReq in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq entry overtakeReq.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq_overtakeReq         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq entry noOvertakeReq.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_LdsDriverOvertakeReq_noOvertakeReq       0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC Signal LDS_01_CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LDS_01_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC        0, 0, 0, 8

/**
 * Signal LDS_01_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC      0, 0, 0, 8, 0

/**
 * Get signal LDS_01_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal LDS_01_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal LDS_01_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(buf, 0)

/**
 * Signal LDS_01_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal LDS_01_CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC      0

/**
 * Signal LDS_01_CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC        0

/**
 * Signal LDS_01_CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC        255

/**
 * Signal LDS_01_CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter Signal LDS_01_Counter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal LDS_01_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter        0, 0, 0, 4

/**
 * Signal LDS_01_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter      0, 0, 0, 4, 0

/**
 * Get signal LDS_01_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal LDS_01_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal LDS_01_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(buf, 0)

/**
 * Signal LDS_01_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal LDS_01_Counter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter      0

/**
 * Signal LDS_01_Counter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter        0

/**
 * Signal LDS_01_Counter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter        15

/**
 * Signal LDS_01_Counter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_LDS_01_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus Signal CruiseStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal CruiseStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus        0, 0, 0, 3

/**
 * Signal CruiseStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus      0, 0, 0, 3, 0

/**
 * Get signal CruiseStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal CruiseStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal CruiseStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(buf, 0)

/**
 * Signal CruiseStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal CruiseStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus      0

/**
 * Signal CruiseStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus        0

/**
 * Signal CruiseStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus        7

/**
 * Signal CruiseStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus Value Table for Signal CruiseStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry External.
 *
 * Function Override
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_External            5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry Driver.
 *
 * Override
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_Driver              4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry Inhibiting.
 *
 * Cruise Request
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_Inhibiting          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry Idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_Idle                2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry Fault.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_Fault               1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus entry CruiseControl.
 *
 * not Supported
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_CruiseStatus_CruiseControl       0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode Signal ESPMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ESPMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ESPMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ESPMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode        0, 0, 0, 2

/**
 * Signal ESPMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ESPMode      0, 0, 0, 2, 0

/**
 * Get signal ESPMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ESPMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ESPMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(buf, 0)

/**
 * Signal ESPMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ESPMode(x, fmt) \
	((x) * fmt)

/**
 * Signal ESPMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ESPMode      0

/**
 * Signal ESPMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ESPMode        0

/**
 * Signal ESPMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ESPMode        3

/**
 * Signal ESPMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ESPMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode Value Table for Signal ESPMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESPMode entry activatedIntervention.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESPMode_activatedIntervention    3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESPMode entry activatedPassive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESPMode_activatedPassive    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESPMode entry deactivatedInactive.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESPMode_deactivatedInactive    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ESPMode entry error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ESPMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ESPMode_error               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode Signal ASRMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ASRMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ASRMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ASRMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode        0, 0, 0, 2

/**
 * Signal ASRMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ASRMode      0, 0, 0, 2, 0

/**
 * Get signal ASRMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ASRMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ASRMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(buf, 0)

/**
 * Signal ASRMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ASRMode(x, fmt) \
	((x) * fmt)

/**
 * Signal ASRMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ASRMode      0

/**
 * Signal ASRMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ASRMode        0

/**
 * Signal ASRMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ASRMode        3

/**
 * Signal ASRMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ASRMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode Value Table for Signal ASRMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASRMode entry Activated.
 *
 * - Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASRMode_Activated           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASRMode entry Activated_2.
 *
 * - Passive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASRMode_Activated_2         2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASRMode entry Deactivated.
 *
 * - Inactive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASRMode_Deactivated         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ASRMode entry Error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ASRMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ASRMode_Error               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus Signal AEBStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AEBStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus        0, 0, 0, 4

/**
 * Signal AEBStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus      0, 0, 0, 4, 0

/**
 * Get signal AEBStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal AEBStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal AEBStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(buf, 0)

/**
 * Signal AEBStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal AEBStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus      0

/**
 * Signal AEBStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus        0

/**
 * Signal AEBStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus        15

/**
 * Signal AEBStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus Value Table for Signal AEBStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry Reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_Reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry Reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_Reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry Reserved_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_Reserved_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry AEB_Level_3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_AEB_Level_3         4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry AEB_Level_2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_AEB_Level_2         3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry AEB_Level_1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_AEB_Level_1         2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry AEB_Fault.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_AEB_Fault           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEBStatus entry AEB_Not_Supported.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEBStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEBStatus_AEB_Not_Supported    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support Signal AEB_Support of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AEB_Support configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support        0, 0, 0, 2

/**
 * Signal AEB_Support setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support      0, 0, 0, 2, 0

/**
 * Get signal AEB_Support from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal AEB_Support in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal AEB_Support in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(buf, 0)

/**
 * Signal AEB_Support value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support(x, fmt) \
	((x) * fmt)

/**
 * Signal AEB_Support raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support      0

/**
 * Signal AEB_Support raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support        0

/**
 * Signal AEB_Support raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support        3

/**
 * Signal AEB_Support raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support Value Table for Signal AEB_Support in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEB_Support entry error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEB_Support_error               3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEB_Support entry fullSupport.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEB_Support_fullSupport         2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEB_Support entry limitedSupport.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEB_Support_limitedSupport      1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_AEB_Support entry noSupport.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_AEB_Support
 */
#define VECTOR__INDEPENDENT_SIG_MSG_AEB_Support_noSupport           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode Signal ABSMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ABSMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ABSMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ABSMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode        0, 0, 0, 2

/**
 * Signal ABSMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ABSMode      0, 0, 0, 2, 0

/**
 * Get signal ABSMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ABSMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ABSMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(buf, 0)

/**
 * Signal ABSMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ABSMode(x, fmt) \
	((x) * fmt)

/**
 * Signal ABSMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ABSMode      0

/**
 * Signal ABSMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ABSMode        0

/**
 * Signal ABSMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ABSMode        3

/**
 * Signal ABSMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ABSMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode Value Table for Signal ABSMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ABSMode entry Activated.
 *
 * - Intervention
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ABSMode_Activated           3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ABSMode entry Activated_2.
 *
 * - Passive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ABSMode_Activated_2         2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ABSMode entry Deactivated.
 *
 * - Inactive
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ABSMode_Deactivated         1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ABSMode entry Error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ABSMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ABSMode_Error               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus Signal WheelPulseSensorRRStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Status of rear wheel pulse sensor
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorRRStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus        0, 0, 0, 1

/**
 * Signal WheelPulseSensorRRStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus      0, 0, 0, 1, 0

/**
 * Get signal WheelPulseSensorRRStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorRRStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorRRStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(buf, 0)

/**
 * Signal WheelPulseSensorRRStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorRRStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus      0

/**
 * Signal WheelPulseSensorRRStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus        0

/**
 * Signal WheelPulseSensorRRStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus        1

/**
 * Signal WheelPulseSensorRRStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRRStatus        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus Signal WheelPulseSensorRLStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Status of rear wheel pulse sensor
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorRLStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus        0, 0, 0, 1

/**
 * Signal WheelPulseSensorRLStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus      0, 0, 0, 1, 0

/**
 * Get signal WheelPulseSensorRLStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorRLStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorRLStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(buf, 0)

/**
 * Signal WheelPulseSensorRLStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorRLStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus      0

/**
 * Signal WheelPulseSensorRLStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus        0

/**
 * Signal WheelPulseSensorRLStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus        1

/**
 * Signal WheelPulseSensorRLStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorRLStatus        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus Signal WheelPulseSensorFRStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Status of front wheel impulse sensor
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorFRStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus        0, 0, 0, 1

/**
 * Signal WheelPulseSensorFRStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus      0, 0, 0, 1, 0

/**
 * Get signal WheelPulseSensorFRStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorFRStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorFRStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(buf, 0)

/**
 * Signal WheelPulseSensorFRStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorFRStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus      0

/**
 * Signal WheelPulseSensorFRStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus        0

/**
 * Signal WheelPulseSensorFRStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus        1

/**
 * Signal WheelPulseSensorFRStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFRStatus        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus Signal WheelPulseSensorFLStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Status of front wheel impulse sensor
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseSensorFLStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus        0, 0, 0, 1

/**
 * Signal WheelPulseSensorFLStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus      0, 0, 0, 1, 0

/**
 * Get signal WheelPulseSensorFLStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal WheelPulseSensorFLStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal WheelPulseSensorFLStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(buf, 0)

/**
 * Signal WheelPulseSensorFLStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseSensorFLStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus      0

/**
 * Signal WheelPulseSensorFLStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus        0

/**
 * Signal WheelPulseSensorFLStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus        1

/**
 * Signal WheelPulseSensorFLStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseSensorFLStatus        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR Signal WheelPulseIndicatorRR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorRR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorRR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorRR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorRR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorRR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(buf, 0)

/**
 * Signal WheelPulseIndicatorRR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorRR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR      0

/**
 * Signal WheelPulseIndicatorRR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0

/**
 * Signal WheelPulseIndicatorRR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        255

/**
 * Signal WheelPulseIndicatorRR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR Value Table for Signal WheelPulseIndicatorRR in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRR_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL Signal WheelPulseIndicatorRL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorRL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorRL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorRL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorRL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorRL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(buf, 0)

/**
 * Signal WheelPulseIndicatorRL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorRL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL      0

/**
 * Signal WheelPulseIndicatorRL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0

/**
 * Signal WheelPulseIndicatorRL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        255

/**
 * Signal WheelPulseIndicatorRL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL Value Table for Signal WheelPulseIndicatorRL in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorRL_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR Signal WheelPulseIndicatorFR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorFR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorFR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorFR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorFR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorFR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(buf, 0)

/**
 * Signal WheelPulseIndicatorFR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorFR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR      0

/**
 * Signal WheelPulseIndicatorFR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0

/**
 * Signal WheelPulseIndicatorFR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        255

/**
 * Signal WheelPulseIndicatorFR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR Value Table for Signal WheelPulseIndicatorFR in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFR_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL Signal WheelPulseIndicatorFL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Wheel pulse indicator -  Incremending by 1 each rising and falling edge.
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WheelPulseIndicatorFL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0, 0, 0, 8

/**
 * Signal WheelPulseIndicatorFL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL      0, 0, 0, 8, 0

/**
 * Get signal WheelPulseIndicatorFL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal WheelPulseIndicatorFL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal WheelPulseIndicatorFL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(buf, 0)

/**
 * Signal WheelPulseIndicatorFL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL(x, fmt) \
	((x) * fmt)

/**
 * Signal WheelPulseIndicatorFL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL      0

/**
 * Signal WheelPulseIndicatorFL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0

/**
 * Signal WheelPulseIndicatorFL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        255

/**
 * Signal WheelPulseIndicatorFL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL Value Table for Signal WheelPulseIndicatorFL in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Failure.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Failure             1023

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Invalid.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Invalid             1022

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL entry Initialization.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL
 */
#define VECTOR__INDEPENDENT_SIG_MSG_WheelPulseIndicatorFL_Initialization      1021

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus Signal MovementStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal MovementStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus        0, 0, 0, 4

/**
 * Signal MovementStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus      0, 0, 0, 4, 0

/**
 * Get signal MovementStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal MovementStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal MovementStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(buf, 0)

/**
 * Signal MovementStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal MovementStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus      0

/**
 * Signal MovementStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus        0

/**
 * Signal MovementStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus        15

/**
 * Signal MovementStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus Value Table for Signal MovementStatus in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MovementStatus entry movingUncertain.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MovementStatus_movingUncertain     4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MovementStatus entry standStill.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MovementStatus_standStill          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MovementStatus entry movingBackwards.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MovementStatus_movingBackwards     2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MovementStatus entry movingForward.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MovementStatus_movingForward       1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_MovementStatus entry error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_MovementStatus
 */
#define VECTOR__INDEPENDENT_SIG_MSG_MovementStatus_error               0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate Signal RollRate of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RollRate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RollRate and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RollRate instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate        0, 0, 0, 16

/**
 * Signal RollRate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RollRate      0, 0, 0, 16, 32767

/**
 * Get signal RollRate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RollRate(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
)

/**
 * Set signal RollRate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RollRate(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal RollRate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RollRate(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RollRate(buf, 32767)

/**
 * Signal RollRate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RollRate(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal RollRate raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RollRate      32767

/**
 * Signal RollRate raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RollRate        0

/**
 * Signal RollRate raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RollRate        65534

/**
 * Signal RollRate raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RollRate        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode Signal TerrainMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal TerrainMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode        0, 0, 0, 4

/**
 * Signal TerrainMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode      0, 0, 0, 4, 0

/**
 * Get signal TerrainMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal TerrainMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal TerrainMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(buf, 0)

/**
 * Signal TerrainMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode(x, fmt) \
	((x) * fmt)

/**
 * Signal TerrainMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode      0

/**
 * Signal TerrainMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode        0

/**
 * Signal TerrainMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode        15

/**
 * Signal TerrainMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode Value Table for Signal TerrainMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TerrainMode entry highBeamRecommendation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TerrainMode_highBeamRecommendation    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_TerrainMode entry noHighBeamRecommendation.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_TerrainMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_TerrainMode_noHighBeamRecommendation    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl Signal SuspensionControl of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SuspensionControl configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl        0, 0, 0, 2

/**
 * Signal SuspensionControl setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl      0, 0, 0, 2, 0

/**
 * Get signal SuspensionControl from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal SuspensionControl in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal SuspensionControl in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(buf, 0)

/**
 * Signal SuspensionControl value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl(x, fmt) \
	((x) * fmt)

/**
 * Signal SuspensionControl raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl      0

/**
 * Signal SuspensionControl raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl        0

/**
 * Signal SuspensionControl raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl        3

/**
 * Signal SuspensionControl raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl Value Table for Signal SuspensionControl in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl entry lifting.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl_lifting             3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl entry droping.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl_droping             2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl_idle                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionControl_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib Signal ShockAbsCalib of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShockAbsCalib configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib        0, 0, 0, 2

/**
 * Signal ShockAbsCalib setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib      0, 0, 0, 2, 0

/**
 * Get signal ShockAbsCalib from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal ShockAbsCalib in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal ShockAbsCalib in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(buf, 0)

/**
 * Signal ShockAbsCalib value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib(x, fmt) \
	((x) * fmt)

/**
 * Signal ShockAbsCalib raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib      0

/**
 * Signal ShockAbsCalib raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib        0

/**
 * Signal ShockAbsCalib raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib        3

/**
 * Signal ShockAbsCalib raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsCalib        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR Signal ShockAbsLevel_RR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShockAbsLevel_RR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR        0, 0, 0, 8

/**
 * Signal ShockAbsLevel_RR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR      0, 0, 0, 8, 0

/**
 * Get signal ShockAbsLevel_RR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShockAbsLevel_RR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShockAbsLevel_RR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(buf, 0)

/**
 * Signal ShockAbsLevel_RR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR(x, fmt) \
	((x) * fmt * 2 / 5)

/**
 * Signal ShockAbsLevel_RR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR      0

/**
 * Signal ShockAbsLevel_RR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR        0

/**
 * Signal ShockAbsLevel_RR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR        250

/**
 * Signal ShockAbsLevel_RR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RR        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL Signal ShockAbsLevel_RL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShockAbsLevel_RL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL        0, 0, 0, 8

/**
 * Signal ShockAbsLevel_RL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL      0, 0, 0, 8, 0

/**
 * Get signal ShockAbsLevel_RL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShockAbsLevel_RL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShockAbsLevel_RL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(buf, 0)

/**
 * Signal ShockAbsLevel_RL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL(x, fmt) \
	((x) * fmt * 2 / 5)

/**
 * Signal ShockAbsLevel_RL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL      0

/**
 * Signal ShockAbsLevel_RL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL        0

/**
 * Signal ShockAbsLevel_RL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL        250

/**
 * Signal ShockAbsLevel_RL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_RL        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR Signal ShockAbsLevel_FR of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShockAbsLevel_FR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR        0, 0, 0, 8

/**
 * Signal ShockAbsLevel_FR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR      0, 0, 0, 8, 0

/**
 * Get signal ShockAbsLevel_FR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShockAbsLevel_FR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShockAbsLevel_FR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(buf, 0)

/**
 * Signal ShockAbsLevel_FR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR(x, fmt) \
	((x) * fmt * 2 / 5)

/**
 * Signal ShockAbsLevel_FR raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR      0

/**
 * Signal ShockAbsLevel_FR raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR        0

/**
 * Signal ShockAbsLevel_FR raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR        250

/**
 * Signal ShockAbsLevel_FR raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FR        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL Signal ShockAbsLevel_FL of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ShockAbsLevel_FL configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL        0, 0, 0, 8

/**
 * Signal ShockAbsLevel_FL setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL      0, 0, 0, 8, 0

/**
 * Get signal ShockAbsLevel_FL from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ShockAbsLevel_FL in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ShockAbsLevel_FL in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(buf, 0)

/**
 * Signal ShockAbsLevel_FL value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL(x, fmt) \
	((x) * fmt * 2 / 5)

/**
 * Signal ShockAbsLevel_FL raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL      0

/**
 * Signal ShockAbsLevel_FL raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL        0

/**
 * Signal ShockAbsLevel_FL raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL        250

/**
 * Signal ShockAbsLevel_FL raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ShockAbsLevel_FL        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode Signal SuspensionMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SuspensionMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode        0, 0, 0, 6

/**
 * Signal SuspensionMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode      0, 0, 0, 6, 0

/**
 * Get signal SuspensionMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x3f) << 0) \
)

/**
 * Set signal SuspensionMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(buf, val) { \
	buf[0] &= ~(0x3f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x3f) << 0; \
}

/**
 * Set signal SuspensionMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(buf, 0)

/**
 * Signal SuspensionMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode(x, fmt) \
	((x) * fmt)

/**
 * Signal SuspensionMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode      0

/**
 * Signal SuspensionMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode        0

/**
 * Signal SuspensionMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode        63

/**
 * Signal SuspensionMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode Value Table for Signal SuspensionMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved            15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_E.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_E          14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_D.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_D          13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_C.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_C          12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_B.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_B          11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_A.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_A          10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_9.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_9          9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_8.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_8          8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_7.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_7          7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_4          4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_3          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_2          2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_1          1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode entry reserved_0.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SuspensionMode_reserved_0          0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter Signal PwrTrnTrqAliveCounter of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PwrTrnTrqAliveCounter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter        0, 0, 0, 4

/**
 * Signal PwrTrnTrqAliveCounter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter      0, 0, 0, 4, 0

/**
 * Get signal PwrTrnTrqAliveCounter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal PwrTrnTrqAliveCounter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal PwrTrnTrqAliveCounter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(buf, 0)

/**
 * Signal PwrTrnTrqAliveCounter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter(x, fmt) \
	((x) * fmt)

/**
 * Signal PwrTrnTrqAliveCounter raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter      0

/**
 * Signal PwrTrnTrqAliveCounter raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter        0

/**
 * Signal PwrTrnTrqAliveCounter raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter        15

/**
 * Signal PwrTrnTrqAliveCounter raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrqAliveCounter        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq Signal PwrTrnTrq of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * 0 = Engine Off
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PwrTrnTrq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq        0, 0, 0, 10

/**
 * Signal PwrTrnTrq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq      0, 0, 0, 10, 0

/**
 * Get signal PwrTrnTrq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x03) << 8) \
)

/**
 * Set signal PwrTrnTrq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x03 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal PwrTrnTrq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(buf, 0)

/**
 * Signal PwrTrnTrq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq(x, fmt) \
	((x) * fmt)

/**
 * Signal PwrTrnTrq raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq      0

/**
 * Signal PwrTrnTrq raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq        0

/**
 * Signal PwrTrnTrq raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq        1023

/**
 * Signal PwrTrnTrq raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq Value Table for Signal PwrTrnTrq in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry reserved_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_reserved_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry engineStoppedStartStopMode.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_engineStoppedStartStopMode    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry engineRunning.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_engineRunning       3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry engineStarting.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_engineStarting      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry engineKilled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_engineKilled        1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq entry engineOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnTrq_engineOff           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct Signal PwrTrnAct of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal PwrTrnAct configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct        0, 0, 0, 3

/**
 * Signal PwrTrnAct setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct      0, 0, 0, 3, 0

/**
 * Get signal PwrTrnAct from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal PwrTrnAct in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal PwrTrnAct in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(buf, 0)

/**
 * Signal PwrTrnAct value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct(x, fmt) \
	((x) * fmt)

/**
 * Signal PwrTrnAct raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct      0

/**
 * Signal PwrTrnAct raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct        0

/**
 * Signal PwrTrnAct raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct        7

/**
 * Signal PwrTrnAct raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct Value Table for Signal PwrTrnAct in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry reserved_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_reserved_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry EngineStoppedStartStopMode.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_EngineStoppedStartStopMode    4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry engineRunning.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_engineRunning       3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry engineStarting.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_engineStarting      2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry engineKilled.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_engineKilled        1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct entry engineOff.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct
 */
#define VECTOR__INDEPENDENT_SIG_MSG_PwrTrnAct_engineOff           0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq Signal ManualShiftReq of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal ManualShiftReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq        0, 0, 0, 3

/**
 * Signal ManualShiftReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq      0, 0, 0, 3, 0

/**
 * Get signal ManualShiftReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0) \
)

/**
 * Set signal ManualShiftReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(buf, val) { \
	buf[0] &= ~(0x07 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal ManualShiftReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(buf, 0)

/**
 * Signal ManualShiftReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq(x, fmt) \
	((x) * fmt)

/**
 * Signal ManualShiftReq raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq      0

/**
 * Signal ManualShiftReq raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq        0

/**
 * Signal ManualShiftReq raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq        7

/**
 * Signal ManualShiftReq raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq Value Table for Signal ManualShiftReq in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_reserved            7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry reserved_5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_reserved_5          5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry reserved_4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_reserved_4          4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry reserved_3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_reserved_3          3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry manualUpshiftRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_manualUpshiftRequest    2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry manualDownshiftRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_manualDownshiftRequest    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq entry noManualShiftRequest.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq
 */
#define VECTOR__INDEPENDENT_SIG_MSG_ManualShiftReq_noManualShiftRequest    0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode Signal GearMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal GearMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_GearMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_GearMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode        0, 0, 0, 1

/**
 * Signal GearMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_GearMode      0, 0, 0, 1, 0

/**
 * Get signal GearMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_GearMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal GearMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_GearMode(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal GearMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_GearMode(buf, 0)

/**
 * Signal GearMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_GearMode(x, fmt) \
	((x) * fmt)

/**
 * Signal GearMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_GearMode      0

/**
 * Signal GearMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_GearMode        0

/**
 * Signal GearMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_GearMode        1

/**
 * Signal GearMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_GearMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearMode Value Table for Signal GearMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearMode entry automated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearMode_automated           1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearMode entry manual.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearMode_manual              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition Signal GearLeverPosition of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal GearLeverPosition configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0, 0, 0, 4

/**
 * Signal GearLeverPosition setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition      0, 0, 0, 4, 0

/**
 * Get signal GearLeverPosition from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal GearLeverPosition in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal GearLeverPosition in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(buf, 0)

/**
 * Signal GearLeverPosition value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition(x, fmt) \
	((x) * fmt)

/**
 * Signal GearLeverPosition raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition      0

/**
 * Signal GearLeverPosition raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0

/**
 * Signal GearLeverPosition raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        15

/**
 * Signal GearLeverPosition raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition Value Table for Signal GearLeverPosition in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Failure_F.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Failure_F           15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Tip_E.
 *
 * in D
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Tip_E               14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Tip_D_D.
 *
 * in S
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Tip_D_D             13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_C.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_C          12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_B_B.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_B_B        11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Efficient_A.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Efficient_A         10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_9.
 *
 * S
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_9          9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_8_8.
 *
 * D
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_8_8        8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_7_7.
 *
 * N
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_7_7        7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_6_6.
 *
 * R
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_6_6        6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Position_5_5.
 *
 * P
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Position_5_5        5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_4_4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_4_4        4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_3_3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_3_3        3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Reserved_2_2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Reserved_2_2        2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Initialization_1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Initialization_1    1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition entry Gear_0.
 *
 * shift in progress
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition
 */
#define VECTOR__INDEPENDENT_SIG_MSG_GearLeverPosition_Gear_0              0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gear Signal Gear of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal Gear configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_Gear and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_Gear instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_Gear        0, 0, 0, 4

/**
 * Signal Gear setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gear or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_Gear      0, 0, 0, 4, 0

/**
 * Get signal Gear from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_Gear(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Gear in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_Gear(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Gear in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_Gear(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_Gear(buf, 0)

/**
 * Signal Gear value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_Gear(x, fmt) \
	((x) * fmt)

/**
 * Signal Gear raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_Gear      0

/**
 * Signal Gear raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_Gear        0

/**
 * Signal Gear raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_Gear        15

/**
 * Signal Gear raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_Gear        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear Value Table for Signal Gear in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_Gear.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 14.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_14                  15

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 13.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_13                  14

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 12.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_12                  13

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 11.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_11                  12

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 10.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_10                  11

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 9.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_9                   10

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 8.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_8                   9

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 7.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_7                   8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_6                   7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 5.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_5                   6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 4.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_4                   5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 3.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_3                   4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_2                   3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry 1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_1                   2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry neutral.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_neutral             1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_Gear entry rear.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_Gear
 */
#define VECTOR__INDEPENDENT_SIG_MSG_Gear_rear                0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode Signal SteeringOperationMode of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal SteeringOperationMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode        0, 0, 0, 4

/**
 * Signal SteeringOperationMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode      0, 0, 0, 4, 0

/**
 * Get signal SteeringOperationMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal SteeringOperationMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal SteeringOperationMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(buf, 0)

/**
 * Signal SteeringOperationMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode(x, fmt) \
	((x) * fmt)

/**
 * Signal SteeringOperationMode raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode      0

/**
 * Signal SteeringOperationMode raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode        0

/**
 * Signal SteeringOperationMode raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode        15

/**
 * Signal SteeringOperationMode raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode Value Table for Signal SteeringOperationMode in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry reserved.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_reserved            8

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry reserved_7.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_reserved_7          7

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry reserved_6.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_reserved_6          6

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry error.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_error               5

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry torqueAction2.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_torqueAction2       4

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry torqueAction1.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_torqueAction1       3

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry operational.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_operational         2

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry idle.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_idle                1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode entry deactivated.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode
 */
#define VECTOR__INDEPENDENT_SIG_MSG_SteeringOperationMode_deactivated         0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear Signal WasherRear of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WasherRear configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WasherRear and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WasherRear instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear        0, 0, 0, 2

/**
 * Signal WasherRear setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WasherRear      0, 0, 0, 2, 0

/**
 * Get signal WasherRear from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal WasherRear in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal WasherRear in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(buf, 0)

/**
 * Signal WasherRear value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WasherRear(x, fmt) \
	((x) * fmt)

/**
 * Signal WasherRear raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WasherRear      0

/**
 * Signal WasherRear raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WasherRear        0

/**
 * Signal WasherRear raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WasherRear        3

/**
 * Signal WasherRear raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WasherRear        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront Signal WasherFront of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal WasherFront configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_WasherFront and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_WasherFront instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront        0, 0, 0, 2

/**
 * Signal WasherFront setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_WasherFront      0, 0, 0, 2, 0

/**
 * Get signal WasherFront from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal WasherFront in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal WasherFront in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(buf, 0)

/**
 * Signal WasherFront value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_WasherFront(x, fmt) \
	((x) * fmt)

/**
 * Signal WasherFront raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_WasherFront      0

/**
 * Signal WasherFront raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_WasherFront        0

/**
 * Signal WasherFront raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_WasherFront        3

/**
 * Signal WasherFront raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_WasherFront        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight Signal RearFogLight of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Contains the value table \ref ENUM_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal RearFogLight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight        0, 0, 0, 1

/**
 * Signal RearFogLight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight      0, 0, 0, 1, 0

/**
 * Get signal RearFogLight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal RearFogLight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal RearFogLight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(buf, 0)

/**
 * Signal RearFogLight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight(x, fmt) \
	((x) * fmt)

/**
 * Signal RearFogLight raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight      0

/**
 * Signal RearFogLight raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight        0

/**
 * Signal RearFogLight raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight        1

/**
 * Signal RearFogLight raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight Value Table for Signal RearFogLight in Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Enum values defined for \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight.
 *
 * @ingroup SIG_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight
 */

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RearFogLight entry on.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RearFogLight_on                  1

/**
 * Value table VECTOR__INDEPENDENT_SIG_MSG_RearFogLight entry off.
 *
 * @ingroup ENUM_VECTOR__INDEPENDENT_SIG_MSG_RearFogLight
 */
#define VECTOR__INDEPENDENT_SIG_MSG_RearFogLight_off                 0

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_CRC Signal CRC of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_CRC and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_CRC instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_CRC         0, 0, 0, 8

/**
 * Signal CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CRC or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_CRC       0, 0, 0, 8, 0

/**
 * Get signal CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_CRC(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_CRC(buf, 0)

/**
 * Signal CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal CRC raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_CRC       0

/**
 * Signal CRC raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_CRC         0

/**
 * Signal CRC raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_CRC         255

/**
 * Signal CRC raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_CRC         0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus Signal AmbTempStatus of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AmbTempStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus        0, 0, 0, 1

/**
 * Signal AmbTempStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus      0, 0, 0, 1, 0

/**
 * Get signal AmbTempStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0) \
)

/**
 * Set signal AmbTempStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(buf, val) { \
	buf[0] &= ~(0x01 << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal AmbTempStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(buf, 0)

/**
 * Signal AmbTempStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus(x, fmt) \
	((x) * fmt)

/**
 * Signal AmbTempStatus raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus      0

/**
 * Signal AmbTempStatus raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus        0

/**
 * Signal AmbTempStatus raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus        1

/**
 * Signal AmbTempStatus raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AmbTempStatus        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp Signal AmbTemp of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal AmbTemp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp        0, 0, 0, 10

/**
 * Signal AmbTemp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp      0, 0, 0, 10, 0

/**
 * Get signal AmbTemp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0x03) << 8) \
)

/**
 * Set signal AmbTemp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x03 << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal AmbTemp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(buf, 0)

/**
 * Signal AmbTemp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal AmbTemp raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp      0

/**
 * Signal AmbTemp raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp        0

/**
 * Signal AmbTemp raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp        1023

/**
 * Signal AmbTemp raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_AmbTemp        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp Signal BoschVideoDiagResp of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal BoschVideoDiagResp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp        0, 0, 0, 64

/**
 * Signal BoschVideoDiagResp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp      0, 0, 0, 64, 0

/**
 * Get signal BoschVideoDiagResp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) \
	| (ulong)(+(ulong)((buf[2] >> 0) & 0xff) << 16) \
	| (ulong)(+(ulong)((buf[3] >> 0) & 0xff) << 24) \
	| (ulong)(+(ulong)((buf[4] >> 0) & 0xff) << 32) \
	| (ulong)(+(ulong)((buf[5] >> 0) & 0xff) << 40) \
	| (ulong)(+(ulong)((buf[6] >> 0) & 0xff) << 48) \
	| (ulong)(+(ulong)((buf[7] >> 0) & 0xff) << 56) \
)

/**
 * Set signal BoschVideoDiagResp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[1] &= (ubyte)~(0xff << 0); \
	buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0; \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= ((ubyte)((ulong)(val) >> 32) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((ulong)(val) >> 40) & 0xff) << 0; \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= ((ubyte)((ulong)(val) >> 48) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((ulong)(val) >> 56) & 0xff) << 0; \
}

/**
 * Set signal BoschVideoDiagResp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(buf, 0)

/**
 * Signal BoschVideoDiagResp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp(x, fmt) \
	((x) * fmt)

/**
 * Signal BoschVideoDiagResp raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp      0

/**
 * Signal BoschVideoDiagResp raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp        0

/**
 * Signal BoschVideoDiagResp raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp        0

/**
 * Signal BoschVideoDiagResp raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_BoschVideoDiagResp        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_53_OutsideTemperature Signal OutsideTemperature of Message Vehicle_CAN_53 (0x153)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_53_OutsideTemperature.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_53
 * @{
 */

/**
 * Signal OutsideTemperature configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_53_OutsideTemperature and \ref GET_Vehicle_CAN_53_OutsideTemperature instead.
 */
#define SIG_Vehicle_CAN_53_OutsideTemperature        0, 0, 14, 11

/**
 * Signal OutsideTemperature setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_53_OutsideTemperature or \ref INIT_Vehicle_CAN_53 instead.
 */
#define SETUP_Vehicle_CAN_53_OutsideTemperature      0, 0, 14, 11, 500

/**
 * Get signal OutsideTemperature from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_53_OutsideTemperature(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0) \
	| (uword)(+(uword)((buf[2] >> 0) & 0xff) << 2) \
	| (uword)(+(uword)((buf[3] >> 0) & 0x01) << 10) \
)

/**
 * Set signal OutsideTemperature in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_53_OutsideTemperature(buf, val) { \
	buf[1] &= ~(0x03 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0; \
	buf[3] &= ~(0x01 << 0); \
	buf[3] |= ((ubyte)((uword)(val) >> 10) & 0x01) << 0; \
}

/**
 * Set signal OutsideTemperature in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_53_OutsideTemperature(buf) \
	SET_Vehicle_CAN_53_OutsideTemperature(buf, 500)

/**
 * Signal OutsideTemperature value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_53_OutsideTemperature(x, fmt) \
	((x) * fmt / 10 + fmt * (-50))

/**
 * Signal OutsideTemperature raw initial value.
 */
#define START_Vehicle_CAN_53_OutsideTemperature      500

/**
 * Signal OutsideTemperature raw minimum value.
 */
#define MIN_Vehicle_CAN_53_OutsideTemperature        0

/**
 * Signal OutsideTemperature raw maximum value.
 */
#define MAX_Vehicle_CAN_53_OutsideTemperature        1250

/**
 * Signal OutsideTemperature raw offset value.
 */
#define OFF_Vehicle_CAN_53_OutsideTemperature        -500

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_53_OutsideTemperature Value Table for Signal OutsideTemperature in Message Vehicle_CAN_53 (0x153)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_53_OutsideTemperature.
 *
 * @ingroup SIG_Vehicle_CAN_53_OutsideTemperature
 */

/**
 * Value table Vehicle_CAN_53_OutsideTemperature entry DegC.
 *
 * (0x0 - 0x452)
 *
 * @ingroup ENUM_Vehicle_CAN_53_OutsideTemperature
 */
#define Vehicle_CAN_53_OutsideTemperature_DegC                0

/**
 * @defgroup SIG_Vehicle_CAN_53_AebOnOffReq Signal AebOnOffReq of Message Vehicle_CAN_53 (0x153)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_53_AebOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_53
 * @{
 */

/**
 * Signal AebOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_53_AebOnOffReq and \ref GET_Vehicle_CAN_53_AebOnOffReq instead.
 */
#define SIG_Vehicle_CAN_53_AebOnOffReq              0, 0, 13, 1

/**
 * Signal AebOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_53_AebOnOffReq or \ref INIT_Vehicle_CAN_53 instead.
 */
#define SETUP_Vehicle_CAN_53_AebOnOffReq            0, 0, 13, 1, 0

/**
 * Get signal AebOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_53_AebOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0) \
)

/**
 * Set signal AebOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_53_AebOnOffReq(buf, val) { \
	buf[1] &= ~(0x01 << 5); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal AebOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_53_AebOnOffReq(buf) \
	SET_Vehicle_CAN_53_AebOnOffReq(buf, 0)

/**
 * Signal AebOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_53_AebOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal AebOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_53_AebOnOffReq            0

/**
 * Signal AebOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_53_AebOnOffReq              0

/**
 * Signal AebOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_53_AebOnOffReq              1

/**
 * Signal AebOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_53_AebOnOffReq              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_53_AebOnOffReq Value Table for Signal AebOnOffReq in Message Vehicle_CAN_53 (0x153)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_53_AebOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_53_AebOnOffReq
 */

/**
 * Value table Vehicle_CAN_53_AebOnOffReq entry AebOn.
 *
 * @ingroup ENUM_Vehicle_CAN_53_AebOnOffReq
 */
#define Vehicle_CAN_53_AebOnOffReq_AebOn               1

/**
 * Value table Vehicle_CAN_53_AebOnOffReq entry AebOff.
 *
 * @ingroup ENUM_Vehicle_CAN_53_AebOnOffReq
 */
#define Vehicle_CAN_53_AebOnOffReq_AebOff              0

/**
 * @defgroup SIG_Vehicle_CAN_53_TractionCtrlSysIntervention Signal TractionCtrlSysIntervention of Message Vehicle_CAN_53 (0x153)
 *
 * Traction controller system activity needed to be evaluated by AEB, because like during esp/abs intervention (instable vehicle driving situations) AEB intervention is inhibited
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_53_TractionCtrlSysIntervention.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_53
 * @{
 */

/**
 * Signal TractionCtrlSysIntervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_53_TractionCtrlSysIntervention and \ref GET_Vehicle_CAN_53_TractionCtrlSysIntervention instead.
 */
#define SIG_Vehicle_CAN_53_TractionCtrlSysIntervention        0, 0, 12, 1

/**
 * Signal TractionCtrlSysIntervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_53_TractionCtrlSysIntervention or \ref INIT_Vehicle_CAN_53 instead.
 */
#define SETUP_Vehicle_CAN_53_TractionCtrlSysIntervention      0, 0, 12, 1, 0

/**
 * Get signal TractionCtrlSysIntervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_53_TractionCtrlSysIntervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0) \
)

/**
 * Set signal TractionCtrlSysIntervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_53_TractionCtrlSysIntervention(buf, val) { \
	buf[1] &= ~(0x01 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal TractionCtrlSysIntervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_53_TractionCtrlSysIntervention(buf) \
	SET_Vehicle_CAN_53_TractionCtrlSysIntervention(buf, 0)

/**
 * Signal TractionCtrlSysIntervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_53_TractionCtrlSysIntervention(x, fmt) \
	((x) * fmt)

/**
 * Signal TractionCtrlSysIntervention raw initial value.
 */
#define START_Vehicle_CAN_53_TractionCtrlSysIntervention      0

/**
 * Signal TractionCtrlSysIntervention raw minimum value.
 */
#define MIN_Vehicle_CAN_53_TractionCtrlSysIntervention        0

/**
 * Signal TractionCtrlSysIntervention raw maximum value.
 */
#define MAX_Vehicle_CAN_53_TractionCtrlSysIntervention        1

/**
 * Signal TractionCtrlSysIntervention raw offset value.
 */
#define OFF_Vehicle_CAN_53_TractionCtrlSysIntervention        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_53_TractionCtrlSysIntervention Value Table for Signal TractionCtrlSysIntervention in Message Vehicle_CAN_53 (0x153)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_53_TractionCtrlSysIntervention.
 *
 * @ingroup SIG_Vehicle_CAN_53_TractionCtrlSysIntervention
 */

/**
 * Value table Vehicle_CAN_53_TractionCtrlSysIntervention entry tractionControllActive.
 *
 * @ingroup ENUM_Vehicle_CAN_53_TractionCtrlSysIntervention
 */
#define Vehicle_CAN_53_TractionCtrlSysIntervention_tractionControllActive    1

/**
 * Value table Vehicle_CAN_53_TractionCtrlSysIntervention entry tractionControllInactive.
 *
 * @ingroup ENUM_Vehicle_CAN_53_TractionCtrlSysIntervention
 */
#define Vehicle_CAN_53_TractionCtrlSysIntervention_tractionControllInactive    0

/**
 * @defgroup SIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter Signal Vehicle_CAN_53_Counter of Message Vehicle_CAN_53 (0x153)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_53
 * @{
 */

/**
 * Signal Vehicle_CAN_53_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_53_Vehicle_CAN_53_Counter and \ref GET_Vehicle_CAN_53_Vehicle_CAN_53_Counter instead.
 */
#define SIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_53_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter or \ref INIT_Vehicle_CAN_53 instead.
 */
#define SETUP_Vehicle_CAN_53_Vehicle_CAN_53_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_53_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_53_Vehicle_CAN_53_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_53_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_53_Vehicle_CAN_53_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_53_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_Counter(buf) \
	SET_Vehicle_CAN_53_Vehicle_CAN_53_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_53_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_53_Vehicle_CAN_53_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_53_Counter raw initial value.
 */
#define START_Vehicle_CAN_53_Vehicle_CAN_53_Counter      0

/**
 * Signal Vehicle_CAN_53_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_53_Vehicle_CAN_53_Counter        0

/**
 * Signal Vehicle_CAN_53_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_53_Vehicle_CAN_53_Counter        15

/**
 * Signal Vehicle_CAN_53_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_53_Vehicle_CAN_53_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC Signal Vehicle_CAN_53_CRC of Message Vehicle_CAN_53 (0x153)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_53
 * @{
 */

/**
 * Signal Vehicle_CAN_53_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_53_Vehicle_CAN_53_CRC and \ref GET_Vehicle_CAN_53_Vehicle_CAN_53_CRC instead.
 */
#define SIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_53_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC or \ref INIT_Vehicle_CAN_53 instead.
 */
#define SETUP_Vehicle_CAN_53_Vehicle_CAN_53_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_53_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_53_Vehicle_CAN_53_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_53_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_53_Vehicle_CAN_53_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_53_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_53_Vehicle_CAN_53_CRC(buf) \
	SET_Vehicle_CAN_53_Vehicle_CAN_53_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_53_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_53_Vehicle_CAN_53_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_53_CRC raw initial value.
 */
#define START_Vehicle_CAN_53_Vehicle_CAN_53_CRC      0

/**
 * Signal Vehicle_CAN_53_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_53_Vehicle_CAN_53_CRC        0

/**
 * Signal Vehicle_CAN_53_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_53_Vehicle_CAN_53_CRC        255

/**
 * Signal Vehicle_CAN_53_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_53_Vehicle_CAN_53_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_11_ElkoOnOffReq Signal ElkoOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_ElkoOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal ElkoOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_ElkoOnOffReq and \ref GET_Vehicle_CAN_11_ElkoOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_ElkoOnOffReq             0, 0, 27, 1

/**
 * Signal ElkoOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_ElkoOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_ElkoOnOffReq           0, 0, 27, 1, 0

/**
 * Get signal ElkoOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_ElkoOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 3) & 0x01) << 0) \
)

/**
 * Set signal ElkoOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_ElkoOnOffReq(buf, val) { \
	buf[3] &= ~(0x01 << 3); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal ElkoOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_ElkoOnOffReq(buf) \
	SET_Vehicle_CAN_11_ElkoOnOffReq(buf, 0)

/**
 * Signal ElkoOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_ElkoOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkoOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_ElkoOnOffReq           0

/**
 * Signal ElkoOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_ElkoOnOffReq             0

/**
 * Signal ElkoOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_ElkoOnOffReq             1

/**
 * Signal ElkoOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_ElkoOnOffReq             0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_ElkoOnOffReq Value Table for Signal ElkoOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_ElkoOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_ElkoOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_ElkoOnOffReq entry ELKO.
 *
 * ON
 *
 * @ingroup ENUM_Vehicle_CAN_11_ElkoOnOffReq
 */
#define Vehicle_CAN_11_ElkoOnOffReq_ELKO                1

/**
 * Value table Vehicle_CAN_11_ElkoOnOffReq entry ELKO_0.
 *
 * OFF
 *
 * @ingroup ENUM_Vehicle_CAN_11_ElkoOnOffReq
 */
#define Vehicle_CAN_11_ElkoOnOffReq_ELKO_0              0

/**
 * @defgroup SIG_Vehicle_CAN_11_ElkreOnOffReq Signal ElkreOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_ElkreOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal ElkreOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_ElkreOnOffReq and \ref GET_Vehicle_CAN_11_ElkreOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_ElkreOnOffReq            0, 0, 37, 1

/**
 * Signal ElkreOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_ElkreOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_ElkreOnOffReq          0, 0, 37, 1, 0

/**
 * Get signal ElkreOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_ElkreOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 5) & 0x01) << 0) \
)

/**
 * Set signal ElkreOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_ElkreOnOffReq(buf, val) { \
	buf[4] &= ~(0x01 << 5); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal ElkreOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_ElkreOnOffReq(buf) \
	SET_Vehicle_CAN_11_ElkreOnOffReq(buf, 0)

/**
 * Signal ElkreOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_ElkreOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal ElkreOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_ElkreOnOffReq          0

/**
 * Signal ElkreOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_ElkreOnOffReq            0

/**
 * Signal ElkreOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_ElkreOnOffReq            1

/**
 * Signal ElkreOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_ElkreOnOffReq            0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_ElkreOnOffReq Value Table for Signal ElkreOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_ElkreOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_ElkreOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_ElkreOnOffReq entry ELKRE.
 *
 * ON
 *
 * @ingroup ENUM_Vehicle_CAN_11_ElkreOnOffReq
 */
#define Vehicle_CAN_11_ElkreOnOffReq_ELKRE               1

/**
 * Value table Vehicle_CAN_11_ElkreOnOffReq entry ELKRE_0.
 *
 * OFF
 *
 * @ingroup ENUM_Vehicle_CAN_11_ElkreOnOffReq
 */
#define Vehicle_CAN_11_ElkreOnOffReq_ELKRE_0             0

/**
 * @defgroup SIG_Vehicle_CAN_11_LksOnOffReq Signal LksOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LksOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LksOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LksOnOffReq and \ref GET_Vehicle_CAN_11_LksOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_LksOnOffReq              0, 0, 26, 1

/**
 * Signal LksOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LksOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LksOnOffReq            0, 0, 26, 1, 0

/**
 * Get signal LksOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LksOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 2) & 0x01) << 0) \
)

/**
 * Set signal LksOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LksOnOffReq(buf, val) { \
	buf[3] &= ~(0x01 << 2); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 2; \
}

/**
 * Set signal LksOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LksOnOffReq(buf) \
	SET_Vehicle_CAN_11_LksOnOffReq(buf, 0)

/**
 * Signal LksOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LksOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal LksOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_LksOnOffReq            0

/**
 * Signal LksOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LksOnOffReq              0

/**
 * Signal LksOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LksOnOffReq              1

/**
 * Signal LksOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_LksOnOffReq              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LksOnOffReq Value Table for Signal LksOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LksOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_LksOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_LksOnOffReq entry LKS.
 *
 * ON
 *
 * @ingroup ENUM_Vehicle_CAN_11_LksOnOffReq
 */
#define Vehicle_CAN_11_LksOnOffReq_LKS                 1

/**
 * Value table Vehicle_CAN_11_LksOnOffReq entry LKS_0.
 *
 * OFF
 *
 * @ingroup ENUM_Vehicle_CAN_11_LksOnOffReq
 */
#define Vehicle_CAN_11_LksOnOffReq_LKS_0               0

/**
 * @defgroup SIG_Vehicle_CAN_11_RdpOnOffReq Signal RdpOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_RdpOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal RdpOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_RdpOnOffReq and \ref GET_Vehicle_CAN_11_RdpOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_RdpOnOffReq              0, 0, 33, 1

/**
 * Signal RdpOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_RdpOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_RdpOnOffReq            0, 0, 33, 1, 0

/**
 * Get signal RdpOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_RdpOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 1) & 0x01) << 0) \
)

/**
 * Set signal RdpOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_RdpOnOffReq(buf, val) { \
	buf[4] &= ~(0x01 << 1); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 1; \
}

/**
 * Set signal RdpOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_RdpOnOffReq(buf) \
	SET_Vehicle_CAN_11_RdpOnOffReq(buf, 0)

/**
 * Signal RdpOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_RdpOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal RdpOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_RdpOnOffReq            0

/**
 * Signal RdpOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_RdpOnOffReq              0

/**
 * Signal RdpOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_RdpOnOffReq              1

/**
 * Signal RdpOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_RdpOnOffReq              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_RdpOnOffReq Value Table for Signal RdpOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_RdpOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_RdpOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_RdpOnOffReq entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RdpOnOffReq
 */
#define Vehicle_CAN_11_RdpOnOffReq_on                  1

/**
 * Value table Vehicle_CAN_11_RdpOnOffReq entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RdpOnOffReq
 */
#define Vehicle_CAN_11_RdpOnOffReq_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_LdwOnOffReq Signal LdwOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LdwOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LdwOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LdwOnOffReq and \ref GET_Vehicle_CAN_11_LdwOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_LdwOnOffReq              0, 0, 34, 1

/**
 * Signal LdwOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LdwOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LdwOnOffReq            0, 0, 34, 1, 0

/**
 * Get signal LdwOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LdwOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 2) & 0x01) << 0) \
)

/**
 * Set signal LdwOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LdwOnOffReq(buf, val) { \
	buf[4] &= ~(0x01 << 2); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 2; \
}

/**
 * Set signal LdwOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LdwOnOffReq(buf) \
	SET_Vehicle_CAN_11_LdwOnOffReq(buf, 0)

/**
 * Signal LdwOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LdwOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal LdwOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_LdwOnOffReq            0

/**
 * Signal LdwOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LdwOnOffReq              0

/**
 * Signal LdwOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LdwOnOffReq              1

/**
 * Signal LdwOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_LdwOnOffReq              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LdwOnOffReq Value Table for Signal LdwOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LdwOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_LdwOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_LdwOnOffReq entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdwOnOffReq
 */
#define Vehicle_CAN_11_LdwOnOffReq_on                  1

/**
 * Value table Vehicle_CAN_11_LdwOnOffReq entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdwOnOffReq
 */
#define Vehicle_CAN_11_LdwOnOffReq_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_LcsSystemState Signal LcsSystemState of Message Vehicle_CAN_11 (0x111)
 *
 * Usage Description:
 * Needed for different operation modes for LDW and LKA functions, e.g. early and late
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LcsSystemState.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LcsSystemState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LcsSystemState and \ref GET_Vehicle_CAN_11_LcsSystemState instead.
 */
#define SIG_Vehicle_CAN_11_LcsSystemState           0, 0, 28, 2

/**
 * Signal LcsSystemState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LcsSystemState or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LcsSystemState         0, 0, 28, 2, 0

/**
 * Get signal LcsSystemState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LcsSystemState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 4) & 0x03) << 0) \
)

/**
 * Set signal LcsSystemState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LcsSystemState(buf, val) { \
	buf[3] &= ~(0x03 << 4); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal LcsSystemState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LcsSystemState(buf) \
	SET_Vehicle_CAN_11_LcsSystemState(buf, 0)

/**
 * Signal LcsSystemState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LcsSystemState(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsSystemState raw initial value.
 */
#define START_Vehicle_CAN_11_LcsSystemState         0

/**
 * Signal LcsSystemState raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LcsSystemState           0

/**
 * Signal LcsSystemState raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LcsSystemState           3

/**
 * Signal LcsSystemState raw offset value.
 */
#define OFF_Vehicle_CAN_11_LcsSystemState           0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LcsSystemState Value Table for Signal LcsSystemState in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LcsSystemState.
 *
 * @ingroup SIG_Vehicle_CAN_11_LcsSystemState
 */

/**
 * Value table Vehicle_CAN_11_LcsSystemState entry araFault.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsSystemState
 */
#define Vehicle_CAN_11_LcsSystemState_araFault            3

/**
 * Value table Vehicle_CAN_11_LcsSystemState entry systemFault.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsSystemState
 */
#define Vehicle_CAN_11_LcsSystemState_systemFault         2

/**
 * Value table Vehicle_CAN_11_LcsSystemState entry sensorBlockage.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsSystemState
 */
#define Vehicle_CAN_11_LcsSystemState_sensorBlockage      1

/**
 * Value table Vehicle_CAN_11_LcsSystemState entry systemNormal.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsSystemState
 */
#define Vehicle_CAN_11_LcsSystemState_systemNormal        0

/**
 * @defgroup SIG_Vehicle_CAN_11_LcsRightTargetDet Signal LcsRightTargetDet of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LcsRightTargetDet.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LcsRightTargetDet configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LcsRightTargetDet and \ref GET_Vehicle_CAN_11_LcsRightTargetDet instead.
 */
#define SIG_Vehicle_CAN_11_LcsRightTargetDet        0, 0, 31, 1

/**
 * Signal LcsRightTargetDet setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LcsRightTargetDet or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LcsRightTargetDet      0, 0, 31, 1, 0

/**
 * Get signal LcsRightTargetDet from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LcsRightTargetDet(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 7) & 0x01) << 0) \
)

/**
 * Set signal LcsRightTargetDet in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LcsRightTargetDet(buf, val) { \
	buf[3] &= ~(0x01 << 7); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal LcsRightTargetDet in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LcsRightTargetDet(buf) \
	SET_Vehicle_CAN_11_LcsRightTargetDet(buf, 0)

/**
 * Signal LcsRightTargetDet value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LcsRightTargetDet(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsRightTargetDet raw initial value.
 */
#define START_Vehicle_CAN_11_LcsRightTargetDet      0

/**
 * Signal LcsRightTargetDet raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LcsRightTargetDet        0

/**
 * Signal LcsRightTargetDet raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LcsRightTargetDet        1

/**
 * Signal LcsRightTargetDet raw offset value.
 */
#define OFF_Vehicle_CAN_11_LcsRightTargetDet        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LcsRightTargetDet Value Table for Signal LcsRightTargetDet in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LcsRightTargetDet.
 *
 * @ingroup SIG_Vehicle_CAN_11_LcsRightTargetDet
 */

/**
 * Value table Vehicle_CAN_11_LcsRightTargetDet entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsRightTargetDet
 */
#define Vehicle_CAN_11_LcsRightTargetDet_on                  1

/**
 * Value table Vehicle_CAN_11_LcsRightTargetDet entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsRightTargetDet
 */
#define Vehicle_CAN_11_LcsRightTargetDet_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_LcsOnOffReq Signal LcsOnOffReq of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LcsOnOffReq.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LcsOnOffReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LcsOnOffReq and \ref GET_Vehicle_CAN_11_LcsOnOffReq instead.
 */
#define SIG_Vehicle_CAN_11_LcsOnOffReq              0, 0, 32, 1

/**
 * Signal LcsOnOffReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LcsOnOffReq or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LcsOnOffReq            0, 0, 32, 1, 0

/**
 * Get signal LcsOnOffReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LcsOnOffReq(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0x01) << 0) \
)

/**
 * Set signal LcsOnOffReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LcsOnOffReq(buf, val) { \
	buf[4] &= ~(0x01 << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal LcsOnOffReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LcsOnOffReq(buf) \
	SET_Vehicle_CAN_11_LcsOnOffReq(buf, 0)

/**
 * Signal LcsOnOffReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LcsOnOffReq(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsOnOffReq raw initial value.
 */
#define START_Vehicle_CAN_11_LcsOnOffReq            0

/**
 * Signal LcsOnOffReq raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LcsOnOffReq              0

/**
 * Signal LcsOnOffReq raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LcsOnOffReq              1

/**
 * Signal LcsOnOffReq raw offset value.
 */
#define OFF_Vehicle_CAN_11_LcsOnOffReq              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LcsOnOffReq Value Table for Signal LcsOnOffReq in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LcsOnOffReq.
 *
 * @ingroup SIG_Vehicle_CAN_11_LcsOnOffReq
 */

/**
 * Value table Vehicle_CAN_11_LcsOnOffReq entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsOnOffReq
 */
#define Vehicle_CAN_11_LcsOnOffReq_on                  1

/**
 * Value table Vehicle_CAN_11_LcsOnOffReq entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsOnOffReq
 */
#define Vehicle_CAN_11_LcsOnOffReq_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_LcsLeftTargetDet Signal LcsLeftTargetDet of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LcsLeftTargetDet.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LcsLeftTargetDet configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LcsLeftTargetDet and \ref GET_Vehicle_CAN_11_LcsLeftTargetDet instead.
 */
#define SIG_Vehicle_CAN_11_LcsLeftTargetDet         0, 0, 30, 1

/**
 * Signal LcsLeftTargetDet setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LcsLeftTargetDet or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LcsLeftTargetDet       0, 0, 30, 1, 0

/**
 * Get signal LcsLeftTargetDet from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LcsLeftTargetDet(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 6) & 0x01) << 0) \
)

/**
 * Set signal LcsLeftTargetDet in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LcsLeftTargetDet(buf, val) { \
	buf[3] &= ~(0x01 << 6); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal LcsLeftTargetDet in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LcsLeftTargetDet(buf) \
	SET_Vehicle_CAN_11_LcsLeftTargetDet(buf, 0)

/**
 * Signal LcsLeftTargetDet value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LcsLeftTargetDet(x, fmt) \
	((x) * fmt)

/**
 * Signal LcsLeftTargetDet raw initial value.
 */
#define START_Vehicle_CAN_11_LcsLeftTargetDet       0

/**
 * Signal LcsLeftTargetDet raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LcsLeftTargetDet         0

/**
 * Signal LcsLeftTargetDet raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LcsLeftTargetDet         1

/**
 * Signal LcsLeftTargetDet raw offset value.
 */
#define OFF_Vehicle_CAN_11_LcsLeftTargetDet         0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LcsLeftTargetDet Value Table for Signal LcsLeftTargetDet in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LcsLeftTargetDet.
 *
 * @ingroup SIG_Vehicle_CAN_11_LcsLeftTargetDet
 */

/**
 * Value table Vehicle_CAN_11_LcsLeftTargetDet entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsLeftTargetDet
 */
#define Vehicle_CAN_11_LcsLeftTargetDet_on                  1

/**
 * Value table Vehicle_CAN_11_LcsLeftTargetDet entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LcsLeftTargetDet
 */
#define Vehicle_CAN_11_LcsLeftTargetDet_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_LdsSensitivity Signal LdsSensitivity of Message Vehicle_CAN_11 (0x111)
 *
 * Usage Description:
 * Needed for different operation modes for LDW and LKA functions, e.g. early and late
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_LdsSensitivity.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal LdsSensitivity configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_LdsSensitivity and \ref GET_Vehicle_CAN_11_LdsSensitivity instead.
 */
#define SIG_Vehicle_CAN_11_LdsSensitivity           0, 0, 24, 2

/**
 * Signal LdsSensitivity setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_LdsSensitivity or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_LdsSensitivity         0, 0, 24, 2, 0

/**
 * Get signal LdsSensitivity from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_LdsSensitivity(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 0) & 0x03) << 0) \
)

/**
 * Set signal LdsSensitivity in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_LdsSensitivity(buf, val) { \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal LdsSensitivity in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_LdsSensitivity(buf) \
	SET_Vehicle_CAN_11_LdsSensitivity(buf, 0)

/**
 * Signal LdsSensitivity value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_LdsSensitivity(x, fmt) \
	((x) * fmt)

/**
 * Signal LdsSensitivity raw initial value.
 */
#define START_Vehicle_CAN_11_LdsSensitivity         0

/**
 * Signal LdsSensitivity raw minimum value.
 */
#define MIN_Vehicle_CAN_11_LdsSensitivity           0

/**
 * Signal LdsSensitivity raw maximum value.
 */
#define MAX_Vehicle_CAN_11_LdsSensitivity           3

/**
 * Signal LdsSensitivity raw offset value.
 */
#define OFF_Vehicle_CAN_11_LdsSensitivity           0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_LdsSensitivity Value Table for Signal LdsSensitivity in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_LdsSensitivity.
 *
 * @ingroup SIG_Vehicle_CAN_11_LdsSensitivity
 */

/**
 * Value table Vehicle_CAN_11_LdsSensitivity entry reserved.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdsSensitivity
 */
#define Vehicle_CAN_11_LdsSensitivity_reserved            3

/**
 * Value table Vehicle_CAN_11_LdsSensitivity entry highSensitivity.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdsSensitivity
 */
#define Vehicle_CAN_11_LdsSensitivity_highSensitivity     2

/**
 * Value table Vehicle_CAN_11_LdsSensitivity entry normalSensitivity.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdsSensitivity
 */
#define Vehicle_CAN_11_LdsSensitivity_normalSensitivity    1

/**
 * Value table Vehicle_CAN_11_LdsSensitivity entry lowSensitivity.
 *
 * @ingroup ENUM_Vehicle_CAN_11_LdsSensitivity
 */
#define Vehicle_CAN_11_LdsSensitivity_lowSensitivity      0

/**
 * @defgroup SIG_Vehicle_CAN_11_EpsLksReady Signal EpsLksReady of Message Vehicle_CAN_11 (0x111)
 *
 * Usage Description:
 * Needed for hand shake with EPS
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_EpsLksReady.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal EpsLksReady configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_EpsLksReady and \ref GET_Vehicle_CAN_11_EpsLksReady instead.
 */
#define SIG_Vehicle_CAN_11_EpsLksReady              0, 0, 23, 1

/**
 * Signal EpsLksReady setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_EpsLksReady or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_EpsLksReady            0, 0, 23, 1, 0

/**
 * Get signal EpsLksReady from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_EpsLksReady(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 7) & 0x01) << 0) \
)

/**
 * Set signal EpsLksReady in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_EpsLksReady(buf, val) { \
	buf[2] &= ~(0x01 << 7); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal EpsLksReady in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_EpsLksReady(buf) \
	SET_Vehicle_CAN_11_EpsLksReady(buf, 0)

/**
 * Signal EpsLksReady value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_EpsLksReady(x, fmt) \
	((x) * fmt)

/**
 * Signal EpsLksReady raw initial value.
 */
#define START_Vehicle_CAN_11_EpsLksReady            0

/**
 * Signal EpsLksReady raw minimum value.
 */
#define MIN_Vehicle_CAN_11_EpsLksReady              0

/**
 * Signal EpsLksReady raw maximum value.
 */
#define MAX_Vehicle_CAN_11_EpsLksReady              1

/**
 * Signal EpsLksReady raw offset value.
 */
#define OFF_Vehicle_CAN_11_EpsLksReady              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_EpsLksReady Value Table for Signal EpsLksReady in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_EpsLksReady.
 *
 * @ingroup SIG_Vehicle_CAN_11_EpsLksReady
 */

/**
 * Value table Vehicle_CAN_11_EpsLksReady entry epsLksReady.
 *
 * @ingroup ENUM_Vehicle_CAN_11_EpsLksReady
 */
#define Vehicle_CAN_11_EpsLksReady_epsLksReady         1

/**
 * Value table Vehicle_CAN_11_EpsLksReady entry epsLksNotReady.
 *
 * @ingroup ENUM_Vehicle_CAN_11_EpsLksReady
 */
#define Vehicle_CAN_11_EpsLksReady_epsLksNotReady      0

/**
 * @defgroup SIG_Vehicle_CAN_11_DriverBraked Signal DriverBraked of Message Vehicle_CAN_11 (0x111)
 *
 * Same Signal like BrakeInformationDriver
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_DriverBraked.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal DriverBraked configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_DriverBraked and \ref GET_Vehicle_CAN_11_DriverBraked instead.
 */
#define SIG_Vehicle_CAN_11_DriverBraked             0, 0, 16, 2

/**
 * Signal DriverBraked setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_DriverBraked or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_DriverBraked           0, 0, 16, 2, 0

/**
 * Get signal DriverBraked from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_DriverBraked(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0) \
)

/**
 * Set signal DriverBraked in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_DriverBraked(buf, val) { \
	buf[2] &= ~(0x03 << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal DriverBraked in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_DriverBraked(buf) \
	SET_Vehicle_CAN_11_DriverBraked(buf, 0)

/**
 * Signal DriverBraked value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_DriverBraked(x, fmt) \
	((x) * fmt)

/**
 * Signal DriverBraked raw initial value.
 */
#define START_Vehicle_CAN_11_DriverBraked           0

/**
 * Signal DriverBraked raw minimum value.
 */
#define MIN_Vehicle_CAN_11_DriverBraked             0

/**
 * Signal DriverBraked raw maximum value.
 */
#define MAX_Vehicle_CAN_11_DriverBraked             3

/**
 * Signal DriverBraked raw offset value.
 */
#define OFF_Vehicle_CAN_11_DriverBraked             0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_DriverBraked Value Table for Signal DriverBraked in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_DriverBraked.
 *
 * @ingroup SIG_Vehicle_CAN_11_DriverBraked
 */

/**
 * Value table Vehicle_CAN_11_DriverBraked entry External.
 *
 * Brake Activation
 *
 * @ingroup ENUM_Vehicle_CAN_11_DriverBraked
 */
#define Vehicle_CAN_11_DriverBraked_External            3

/**
 * Value table Vehicle_CAN_11_DriverBraked entry Active.
 *
 * @ingroup ENUM_Vehicle_CAN_11_DriverBraked
 */
#define Vehicle_CAN_11_DriverBraked_Active              2

/**
 * Value table Vehicle_CAN_11_DriverBraked entry Inactive.
 *
 * @ingroup ENUM_Vehicle_CAN_11_DriverBraked
 */
#define Vehicle_CAN_11_DriverBraked_Inactive            1

/**
 * Value table Vehicle_CAN_11_DriverBraked entry Fault.
 *
 * @ingroup ENUM_Vehicle_CAN_11_DriverBraked
 */
#define Vehicle_CAN_11_DriverBraked_Fault               0

/**
 * @defgroup SIG_Vehicle_CAN_11_WiperRear Signal WiperRear of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_WiperRear.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal WiperRear configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_WiperRear and \ref GET_Vehicle_CAN_11_WiperRear instead.
 */
#define SIG_Vehicle_CAN_11_WiperRear                0, 0, 53, 3

/**
 * Signal WiperRear setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_WiperRear or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_WiperRear              0, 0, 53, 3, 0

/**
 * Get signal WiperRear from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_WiperRear(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 5) & 0x07) << 0) \
)

/**
 * Set signal WiperRear in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_WiperRear(buf, val) { \
	buf[6] &= ~(0x07 << 5); \
	buf[6] |= (((ubyte)(val) >> 0) & 0x07) << 5; \
}

/**
 * Set signal WiperRear in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_WiperRear(buf) \
	SET_Vehicle_CAN_11_WiperRear(buf, 0)

/**
 * Signal WiperRear value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_WiperRear(x, fmt) \
	((x) * fmt)

/**
 * Signal WiperRear raw initial value.
 */
#define START_Vehicle_CAN_11_WiperRear              0

/**
 * Signal WiperRear raw minimum value.
 */
#define MIN_Vehicle_CAN_11_WiperRear                0

/**
 * Signal WiperRear raw maximum value.
 */
#define MAX_Vehicle_CAN_11_WiperRear                3

/**
 * Signal WiperRear raw offset value.
 */
#define OFF_Vehicle_CAN_11_WiperRear                0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_WiperRear Value Table for Signal WiperRear in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_WiperRear.
 *
 * @ingroup SIG_Vehicle_CAN_11_WiperRear
 */

/**
 * Value table Vehicle_CAN_11_WiperRear entry level3Fast.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperRear
 */
#define Vehicle_CAN_11_WiperRear_level3Fast          3

/**
 * Value table Vehicle_CAN_11_WiperRear entry level2NormalSpeed.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperRear
 */
#define Vehicle_CAN_11_WiperRear_level2NormalSpeed    2

/**
 * Value table Vehicle_CAN_11_WiperRear entry level1Interval.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperRear
 */
#define Vehicle_CAN_11_WiperRear_level1Interval      1

/**
 * Value table Vehicle_CAN_11_WiperRear entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperRear
 */
#define Vehicle_CAN_11_WiperRear_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_WiperFront Signal WiperFront of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_WiperFront.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal WiperFront configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_WiperFront and \ref GET_Vehicle_CAN_11_WiperFront instead.
 */
#define SIG_Vehicle_CAN_11_WiperFront               0, 0, 50, 3

/**
 * Signal WiperFront setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_WiperFront or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_WiperFront             0, 0, 50, 3, 0

/**
 * Get signal WiperFront from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_WiperFront(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 2) & 0x07) << 0) \
)

/**
 * Set signal WiperFront in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_WiperFront(buf, val) { \
	buf[6] &= ~(0x07 << 2); \
	buf[6] |= (((ubyte)(val) >> 0) & 0x07) << 2; \
}

/**
 * Set signal WiperFront in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_WiperFront(buf) \
	SET_Vehicle_CAN_11_WiperFront(buf, 0)

/**
 * Signal WiperFront value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_WiperFront(x, fmt) \
	((x) * fmt)

/**
 * Signal WiperFront raw initial value.
 */
#define START_Vehicle_CAN_11_WiperFront             0

/**
 * Signal WiperFront raw minimum value.
 */
#define MIN_Vehicle_CAN_11_WiperFront               0

/**
 * Signal WiperFront raw maximum value.
 */
#define MAX_Vehicle_CAN_11_WiperFront               3

/**
 * Signal WiperFront raw offset value.
 */
#define OFF_Vehicle_CAN_11_WiperFront               0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_WiperFront Value Table for Signal WiperFront in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_WiperFront.
 *
 * @ingroup SIG_Vehicle_CAN_11_WiperFront
 */

/**
 * Value table Vehicle_CAN_11_WiperFront entry level3Fast.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperFront
 */
#define Vehicle_CAN_11_WiperFront_level3Fast          3

/**
 * Value table Vehicle_CAN_11_WiperFront entry level2NormalSpeed.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperFront
 */
#define Vehicle_CAN_11_WiperFront_level2NormalSpeed    2

/**
 * Value table Vehicle_CAN_11_WiperFront entry level1Interval.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperFront
 */
#define Vehicle_CAN_11_WiperFront_level1Interval      1

/**
 * Value table Vehicle_CAN_11_WiperFront entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_WiperFront
 */
#define Vehicle_CAN_11_WiperFront_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_TurnSignalLeverRight Signal TurnSignalLeverRight of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_TurnSignalLeverRight.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal TurnSignalLeverRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_TurnSignalLeverRight and \ref GET_Vehicle_CAN_11_TurnSignalLeverRight instead.
 */
#define SIG_Vehicle_CAN_11_TurnSignalLeverRight        0, 0, 15, 1

/**
 * Signal TurnSignalLeverRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_TurnSignalLeverRight or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_TurnSignalLeverRight      0, 0, 15, 1, 0

/**
 * Get signal TurnSignalLeverRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_TurnSignalLeverRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0) \
)

/**
 * Set signal TurnSignalLeverRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_TurnSignalLeverRight(buf, val) { \
	buf[1] &= ~(0x01 << 7); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal TurnSignalLeverRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_TurnSignalLeverRight(buf) \
	SET_Vehicle_CAN_11_TurnSignalLeverRight(buf, 0)

/**
 * Signal TurnSignalLeverRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_TurnSignalLeverRight(x, fmt) \
	((x) * fmt)

/**
 * Signal TurnSignalLeverRight raw initial value.
 */
#define START_Vehicle_CAN_11_TurnSignalLeverRight      0

/**
 * Signal TurnSignalLeverRight raw minimum value.
 */
#define MIN_Vehicle_CAN_11_TurnSignalLeverRight        0

/**
 * Signal TurnSignalLeverRight raw maximum value.
 */
#define MAX_Vehicle_CAN_11_TurnSignalLeverRight        1

/**
 * Signal TurnSignalLeverRight raw offset value.
 */
#define OFF_Vehicle_CAN_11_TurnSignalLeverRight        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_TurnSignalLeverRight Value Table for Signal TurnSignalLeverRight in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_TurnSignalLeverRight.
 *
 * @ingroup SIG_Vehicle_CAN_11_TurnSignalLeverRight
 */

/**
 * Value table Vehicle_CAN_11_TurnSignalLeverRight entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TurnSignalLeverRight
 */
#define Vehicle_CAN_11_TurnSignalLeverRight_on                  1

/**
 * Value table Vehicle_CAN_11_TurnSignalLeverRight entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TurnSignalLeverRight
 */
#define Vehicle_CAN_11_TurnSignalLeverRight_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_TurnSignalLeverLeft Signal TurnSignalLeverLeft of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_TurnSignalLeverLeft.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal TurnSignalLeverLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_TurnSignalLeverLeft and \ref GET_Vehicle_CAN_11_TurnSignalLeverLeft instead.
 */
#define SIG_Vehicle_CAN_11_TurnSignalLeverLeft        0, 0, 14, 1

/**
 * Signal TurnSignalLeverLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_TurnSignalLeverLeft or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_TurnSignalLeverLeft      0, 0, 14, 1, 0

/**
 * Get signal TurnSignalLeverLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_TurnSignalLeverLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0) \
)

/**
 * Set signal TurnSignalLeverLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_TurnSignalLeverLeft(buf, val) { \
	buf[1] &= ~(0x01 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal TurnSignalLeverLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_TurnSignalLeverLeft(buf) \
	SET_Vehicle_CAN_11_TurnSignalLeverLeft(buf, 0)

/**
 * Signal TurnSignalLeverLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_TurnSignalLeverLeft(x, fmt) \
	((x) * fmt)

/**
 * Signal TurnSignalLeverLeft raw initial value.
 */
#define START_Vehicle_CAN_11_TurnSignalLeverLeft      0

/**
 * Signal TurnSignalLeverLeft raw minimum value.
 */
#define MIN_Vehicle_CAN_11_TurnSignalLeverLeft        0

/**
 * Signal TurnSignalLeverLeft raw maximum value.
 */
#define MAX_Vehicle_CAN_11_TurnSignalLeverLeft        1

/**
 * Signal TurnSignalLeverLeft raw offset value.
 */
#define OFF_Vehicle_CAN_11_TurnSignalLeverLeft        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_TurnSignalLeverLeft Value Table for Signal TurnSignalLeverLeft in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_TurnSignalLeverLeft.
 *
 * @ingroup SIG_Vehicle_CAN_11_TurnSignalLeverLeft
 */

/**
 * Value table Vehicle_CAN_11_TurnSignalLeverLeft entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TurnSignalLeverLeft
 */
#define Vehicle_CAN_11_TurnSignalLeverLeft_on                  1

/**
 * Value table Vehicle_CAN_11_TurnSignalLeverLeft entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TurnSignalLeverLeft
 */
#define Vehicle_CAN_11_TurnSignalLeverLeft_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_TraficDirectionHeadLights Signal TraficDirectionHeadLights of Message Vehicle_CAN_11 (0x111)
 *
 * HandsOnTraffic
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_TraficDirectionHeadLights.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal TraficDirectionHeadLights configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_TraficDirectionHeadLights and \ref GET_Vehicle_CAN_11_TraficDirectionHeadLights instead.
 */
#define SIG_Vehicle_CAN_11_TraficDirectionHeadLights        0, 0, 35, 2

/**
 * Signal TraficDirectionHeadLights setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_TraficDirectionHeadLights or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_TraficDirectionHeadLights      0, 0, 35, 2, 0

/**
 * Get signal TraficDirectionHeadLights from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_TraficDirectionHeadLights(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 3) & 0x03) << 0) \
)

/**
 * Set signal TraficDirectionHeadLights in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_TraficDirectionHeadLights(buf, val) { \
	buf[4] &= ~(0x03 << 3); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x03) << 3; \
}

/**
 * Set signal TraficDirectionHeadLights in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_TraficDirectionHeadLights(buf) \
	SET_Vehicle_CAN_11_TraficDirectionHeadLights(buf, 0)

/**
 * Signal TraficDirectionHeadLights value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_TraficDirectionHeadLights(x, fmt) \
	((x) * fmt)

/**
 * Signal TraficDirectionHeadLights raw initial value.
 */
#define START_Vehicle_CAN_11_TraficDirectionHeadLights      0

/**
 * Signal TraficDirectionHeadLights raw minimum value.
 */
#define MIN_Vehicle_CAN_11_TraficDirectionHeadLights        0

/**
 * Signal TraficDirectionHeadLights raw maximum value.
 */
#define MAX_Vehicle_CAN_11_TraficDirectionHeadLights        3

/**
 * Signal TraficDirectionHeadLights raw offset value.
 */
#define OFF_Vehicle_CAN_11_TraficDirectionHeadLights        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_TraficDirectionHeadLights Value Table for Signal TraficDirectionHeadLights in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_TraficDirectionHeadLights.
 *
 * @ingroup SIG_Vehicle_CAN_11_TraficDirectionHeadLights
 */

/**
 * Value table Vehicle_CAN_11_TraficDirectionHeadLights entry reserved.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TraficDirectionHeadLights
 */
#define Vehicle_CAN_11_TraficDirectionHeadLights_reserved            3

/**
 * Value table Vehicle_CAN_11_TraficDirectionHeadLights entry leftHandTraffic.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TraficDirectionHeadLights
 */
#define Vehicle_CAN_11_TraficDirectionHeadLights_leftHandTraffic     2

/**
 * Value table Vehicle_CAN_11_TraficDirectionHeadLights entry rightHandTraffic.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TraficDirectionHeadLights
 */
#define Vehicle_CAN_11_TraficDirectionHeadLights_rightHandTraffic    1

/**
 * Value table Vehicle_CAN_11_TraficDirectionHeadLights entry uncertain.
 *
 * @ingroup ENUM_Vehicle_CAN_11_TraficDirectionHeadLights
 */
#define Vehicle_CAN_11_TraficDirectionHeadLights_uncertain           0

/**
 * @defgroup SIG_Vehicle_CAN_11_ThrottleRaw Signal ThrottleRaw of Message Vehicle_CAN_11 (0x111)
 *
 * Maximum = 100%
 * Kickdown = 102%
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal ThrottleRaw configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_ThrottleRaw and \ref GET_Vehicle_CAN_11_ThrottleRaw instead.
 */
#define SIG_Vehicle_CAN_11_ThrottleRaw              0, 0, 40, 8

/**
 * Signal ThrottleRaw setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_ThrottleRaw or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_ThrottleRaw            0, 0, 40, 8, 0

/**
 * Get signal ThrottleRaw from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_ThrottleRaw(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0) \
)

/**
 * Set signal ThrottleRaw in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_ThrottleRaw(buf, val) { \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal ThrottleRaw in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_ThrottleRaw(buf) \
	SET_Vehicle_CAN_11_ThrottleRaw(buf, 0)

/**
 * Signal ThrottleRaw value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_ThrottleRaw(x, fmt) \
	((x) * fmt * 2 / 5)

/**
 * Signal ThrottleRaw raw initial value.
 */
#define START_Vehicle_CAN_11_ThrottleRaw            0

/**
 * Signal ThrottleRaw raw minimum value.
 */
#define MIN_Vehicle_CAN_11_ThrottleRaw              0

/**
 * Signal ThrottleRaw raw maximum value.
 */
#define MAX_Vehicle_CAN_11_ThrottleRaw              255

/**
 * Signal ThrottleRaw raw offset value.
 */
#define OFF_Vehicle_CAN_11_ThrottleRaw              0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_11_SteeringType Signal SteeringType of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_SteeringType.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal SteeringType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_SteeringType and \ref GET_Vehicle_CAN_11_SteeringType instead.
 */
#define SIG_Vehicle_CAN_11_SteeringType             0, 0, 48, 2

/**
 * Signal SteeringType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_SteeringType or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_SteeringType           0, 0, 48, 2, 0

/**
 * Get signal SteeringType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_SteeringType(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0x03) << 0) \
)

/**
 * Set signal SteeringType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_SteeringType(buf, val) { \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal SteeringType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_SteeringType(buf) \
	SET_Vehicle_CAN_11_SteeringType(buf, 0)

/**
 * Signal SteeringType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_SteeringType(x, fmt) \
	((x) * fmt)

/**
 * Signal SteeringType raw initial value.
 */
#define START_Vehicle_CAN_11_SteeringType           0

/**
 * Signal SteeringType raw minimum value.
 */
#define MIN_Vehicle_CAN_11_SteeringType             0

/**
 * Signal SteeringType raw maximum value.
 */
#define MAX_Vehicle_CAN_11_SteeringType             3

/**
 * Signal SteeringType raw offset value.
 */
#define OFF_Vehicle_CAN_11_SteeringType             0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_SteeringType Value Table for Signal SteeringType in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_SteeringType.
 *
 * @ingroup SIG_Vehicle_CAN_11_SteeringType
 */

/**
 * Value table Vehicle_CAN_11_SteeringType entry lka.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SteeringType
 */
#define Vehicle_CAN_11_SteeringType_lka                 3

/**
 * Value table Vehicle_CAN_11_SteeringType entry ldwWithVibration.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SteeringType
 */
#define Vehicle_CAN_11_SteeringType_ldwWithVibration    2

/**
 * Value table Vehicle_CAN_11_SteeringType entry ldwOnly.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SteeringType
 */
#define Vehicle_CAN_11_SteeringType_ldwOnly             1

/**
 * Value table Vehicle_CAN_11_SteeringType entry noTypeSet.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SteeringType
 */
#define Vehicle_CAN_11_SteeringType_noTypeSet           0

/**
 * @defgroup SIG_Vehicle_CAN_11_SideCrashDriver Signal SideCrashDriver of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_SideCrashDriver.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal SideCrashDriver configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_SideCrashDriver and \ref GET_Vehicle_CAN_11_SideCrashDriver instead.
 */
#define SIG_Vehicle_CAN_11_SideCrashDriver          0, 0, 20, 1

/**
 * Signal SideCrashDriver setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_SideCrashDriver or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_SideCrashDriver        0, 0, 20, 1, 0

/**
 * Get signal SideCrashDriver from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_SideCrashDriver(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0) \
)

/**
 * Set signal SideCrashDriver in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_SideCrashDriver(buf, val) { \
	buf[2] &= ~(0x01 << 4); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal SideCrashDriver in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_SideCrashDriver(buf) \
	SET_Vehicle_CAN_11_SideCrashDriver(buf, 0)

/**
 * Signal SideCrashDriver value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_SideCrashDriver(x, fmt) \
	((x) * fmt)

/**
 * Signal SideCrashDriver raw initial value.
 */
#define START_Vehicle_CAN_11_SideCrashDriver        0

/**
 * Signal SideCrashDriver raw minimum value.
 */
#define MIN_Vehicle_CAN_11_SideCrashDriver          0

/**
 * Signal SideCrashDriver raw maximum value.
 */
#define MAX_Vehicle_CAN_11_SideCrashDriver          1

/**
 * Signal SideCrashDriver raw offset value.
 */
#define OFF_Vehicle_CAN_11_SideCrashDriver          0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_SideCrashDriver Value Table for Signal SideCrashDriver in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_SideCrashDriver.
 *
 * @ingroup SIG_Vehicle_CAN_11_SideCrashDriver
 */

/**
 * Value table Vehicle_CAN_11_SideCrashDriver entry crash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SideCrashDriver
 */
#define Vehicle_CAN_11_SideCrashDriver_crash               1

/**
 * Value table Vehicle_CAN_11_SideCrashDriver entry no.
 *
 * crash
 *
 * @ingroup ENUM_Vehicle_CAN_11_SideCrashDriver
 */
#define Vehicle_CAN_11_SideCrashDriver_no                  0

/**
 * @defgroup SIG_Vehicle_CAN_11_SideCrashCodriver Signal SideCrashCodriver of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_SideCrashCodriver.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal SideCrashCodriver configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_SideCrashCodriver and \ref GET_Vehicle_CAN_11_SideCrashCodriver instead.
 */
#define SIG_Vehicle_CAN_11_SideCrashCodriver        0, 0, 21, 1

/**
 * Signal SideCrashCodriver setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_SideCrashCodriver or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_SideCrashCodriver      0, 0, 21, 1, 0

/**
 * Get signal SideCrashCodriver from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_SideCrashCodriver(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 5) & 0x01) << 0) \
)

/**
 * Set signal SideCrashCodriver in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_SideCrashCodriver(buf, val) { \
	buf[2] &= ~(0x01 << 5); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal SideCrashCodriver in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_SideCrashCodriver(buf) \
	SET_Vehicle_CAN_11_SideCrashCodriver(buf, 0)

/**
 * Signal SideCrashCodriver value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_SideCrashCodriver(x, fmt) \
	((x) * fmt)

/**
 * Signal SideCrashCodriver raw initial value.
 */
#define START_Vehicle_CAN_11_SideCrashCodriver      0

/**
 * Signal SideCrashCodriver raw minimum value.
 */
#define MIN_Vehicle_CAN_11_SideCrashCodriver        0

/**
 * Signal SideCrashCodriver raw maximum value.
 */
#define MAX_Vehicle_CAN_11_SideCrashCodriver        1

/**
 * Signal SideCrashCodriver raw offset value.
 */
#define OFF_Vehicle_CAN_11_SideCrashCodriver        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_SideCrashCodriver Value Table for Signal SideCrashCodriver in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_SideCrashCodriver.
 *
 * @ingroup SIG_Vehicle_CAN_11_SideCrashCodriver
 */

/**
 * Value table Vehicle_CAN_11_SideCrashCodriver entry crash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SideCrashCodriver
 */
#define Vehicle_CAN_11_SideCrashCodriver_crash               1

/**
 * Value table Vehicle_CAN_11_SideCrashCodriver entry noCrash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_SideCrashCodriver
 */
#define Vehicle_CAN_11_SideCrashCodriver_noCrash             0

/**
 * @defgroup SIG_Vehicle_CAN_11_RolloverCrash Signal RolloverCrash of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_RolloverCrash.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal RolloverCrash configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_RolloverCrash and \ref GET_Vehicle_CAN_11_RolloverCrash instead.
 */
#define SIG_Vehicle_CAN_11_RolloverCrash            0, 0, 22, 1

/**
 * Signal RolloverCrash setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_RolloverCrash or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_RolloverCrash          0, 0, 22, 1, 0

/**
 * Get signal RolloverCrash from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_RolloverCrash(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 6) & 0x01) << 0) \
)

/**
 * Set signal RolloverCrash in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_RolloverCrash(buf, val) { \
	buf[2] &= ~(0x01 << 6); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal RolloverCrash in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_RolloverCrash(buf) \
	SET_Vehicle_CAN_11_RolloverCrash(buf, 0)

/**
 * Signal RolloverCrash value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_RolloverCrash(x, fmt) \
	((x) * fmt)

/**
 * Signal RolloverCrash raw initial value.
 */
#define START_Vehicle_CAN_11_RolloverCrash          0

/**
 * Signal RolloverCrash raw minimum value.
 */
#define MIN_Vehicle_CAN_11_RolloverCrash            0

/**
 * Signal RolloverCrash raw maximum value.
 */
#define MAX_Vehicle_CAN_11_RolloverCrash            1

/**
 * Signal RolloverCrash raw offset value.
 */
#define OFF_Vehicle_CAN_11_RolloverCrash            0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_RolloverCrash Value Table for Signal RolloverCrash in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_RolloverCrash.
 *
 * @ingroup SIG_Vehicle_CAN_11_RolloverCrash
 */

/**
 * Value table Vehicle_CAN_11_RolloverCrash entry crash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RolloverCrash
 */
#define Vehicle_CAN_11_RolloverCrash_crash               1

/**
 * Value table Vehicle_CAN_11_RolloverCrash entry noCrash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RolloverCrash
 */
#define Vehicle_CAN_11_RolloverCrash_noCrash             0

/**
 * @defgroup SIG_Vehicle_CAN_11_RearCrash Signal RearCrash of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_RearCrash.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal RearCrash configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_RearCrash and \ref GET_Vehicle_CAN_11_RearCrash instead.
 */
#define SIG_Vehicle_CAN_11_RearCrash                0, 0, 19, 1

/**
 * Signal RearCrash setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_RearCrash or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_RearCrash              0, 0, 19, 1, 0

/**
 * Get signal RearCrash from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_RearCrash(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal RearCrash in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_RearCrash(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal RearCrash in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_RearCrash(buf) \
	SET_Vehicle_CAN_11_RearCrash(buf, 0)

/**
 * Signal RearCrash value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_RearCrash(x, fmt) \
	((x) * fmt)

/**
 * Signal RearCrash raw initial value.
 */
#define START_Vehicle_CAN_11_RearCrash              0

/**
 * Signal RearCrash raw minimum value.
 */
#define MIN_Vehicle_CAN_11_RearCrash                0

/**
 * Signal RearCrash raw maximum value.
 */
#define MAX_Vehicle_CAN_11_RearCrash                1

/**
 * Signal RearCrash raw offset value.
 */
#define OFF_Vehicle_CAN_11_RearCrash                0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_RearCrash Value Table for Signal RearCrash in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_RearCrash.
 *
 * @ingroup SIG_Vehicle_CAN_11_RearCrash
 */

/**
 * Value table Vehicle_CAN_11_RearCrash entry crash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RearCrash
 */
#define Vehicle_CAN_11_RearCrash_crash               1

/**
 * Value table Vehicle_CAN_11_RearCrash entry noCrash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_RearCrash
 */
#define Vehicle_CAN_11_RearCrash_noCrash             0

/**
 * @defgroup SIG_Vehicle_CAN_11_IndicatorRight Signal IndicatorRight of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_IndicatorRight.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal IndicatorRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_IndicatorRight and \ref GET_Vehicle_CAN_11_IndicatorRight instead.
 */
#define SIG_Vehicle_CAN_11_IndicatorRight           0, 0, 13, 1

/**
 * Signal IndicatorRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_IndicatorRight or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_IndicatorRight         0, 0, 13, 1, 0

/**
 * Get signal IndicatorRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_IndicatorRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0) \
)

/**
 * Set signal IndicatorRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_IndicatorRight(buf, val) { \
	buf[1] &= ~(0x01 << 5); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal IndicatorRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_IndicatorRight(buf) \
	SET_Vehicle_CAN_11_IndicatorRight(buf, 0)

/**
 * Signal IndicatorRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_IndicatorRight(x, fmt) \
	((x) * fmt)

/**
 * Signal IndicatorRight raw initial value.
 */
#define START_Vehicle_CAN_11_IndicatorRight         0

/**
 * Signal IndicatorRight raw minimum value.
 */
#define MIN_Vehicle_CAN_11_IndicatorRight           0

/**
 * Signal IndicatorRight raw maximum value.
 */
#define MAX_Vehicle_CAN_11_IndicatorRight           1

/**
 * Signal IndicatorRight raw offset value.
 */
#define OFF_Vehicle_CAN_11_IndicatorRight           0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_IndicatorRight Value Table for Signal IndicatorRight in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_IndicatorRight.
 *
 * @ingroup SIG_Vehicle_CAN_11_IndicatorRight
 */

/**
 * Value table Vehicle_CAN_11_IndicatorRight entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_IndicatorRight
 */
#define Vehicle_CAN_11_IndicatorRight_on                  1

/**
 * Value table Vehicle_CAN_11_IndicatorRight entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_IndicatorRight
 */
#define Vehicle_CAN_11_IndicatorRight_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_IndicatorLeft Signal IndicatorLeft of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_IndicatorLeft.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal IndicatorLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_IndicatorLeft and \ref GET_Vehicle_CAN_11_IndicatorLeft instead.
 */
#define SIG_Vehicle_CAN_11_IndicatorLeft            0, 0, 12, 1

/**
 * Signal IndicatorLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_IndicatorLeft or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_IndicatorLeft          0, 0, 12, 1, 0

/**
 * Get signal IndicatorLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_IndicatorLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0) \
)

/**
 * Set signal IndicatorLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_IndicatorLeft(buf, val) { \
	buf[1] &= ~(0x01 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal IndicatorLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_IndicatorLeft(buf) \
	SET_Vehicle_CAN_11_IndicatorLeft(buf, 0)

/**
 * Signal IndicatorLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_IndicatorLeft(x, fmt) \
	((x) * fmt)

/**
 * Signal IndicatorLeft raw initial value.
 */
#define START_Vehicle_CAN_11_IndicatorLeft          0

/**
 * Signal IndicatorLeft raw minimum value.
 */
#define MIN_Vehicle_CAN_11_IndicatorLeft            0

/**
 * Signal IndicatorLeft raw maximum value.
 */
#define MAX_Vehicle_CAN_11_IndicatorLeft            1

/**
 * Signal IndicatorLeft raw offset value.
 */
#define OFF_Vehicle_CAN_11_IndicatorLeft            0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_IndicatorLeft Value Table for Signal IndicatorLeft in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_IndicatorLeft.
 *
 * @ingroup SIG_Vehicle_CAN_11_IndicatorLeft
 */

/**
 * Value table Vehicle_CAN_11_IndicatorLeft entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_11_IndicatorLeft
 */
#define Vehicle_CAN_11_IndicatorLeft_on                  1

/**
 * Value table Vehicle_CAN_11_IndicatorLeft entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_11_IndicatorLeft
 */
#define Vehicle_CAN_11_IndicatorLeft_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_11_FrontCrash Signal FrontCrash of Message Vehicle_CAN_11 (0x111)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_11_FrontCrash.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal FrontCrash configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_FrontCrash and \ref GET_Vehicle_CAN_11_FrontCrash instead.
 */
#define SIG_Vehicle_CAN_11_FrontCrash               0, 0, 18, 1

/**
 * Signal FrontCrash setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_FrontCrash or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_FrontCrash             0, 0, 18, 1, 0

/**
 * Get signal FrontCrash from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_FrontCrash(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 2) & 0x01) << 0) \
)

/**
 * Set signal FrontCrash in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_FrontCrash(buf, val) { \
	buf[2] &= ~(0x01 << 2); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 2; \
}

/**
 * Set signal FrontCrash in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_FrontCrash(buf) \
	SET_Vehicle_CAN_11_FrontCrash(buf, 0)

/**
 * Signal FrontCrash value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_FrontCrash(x, fmt) \
	((x) * fmt)

/**
 * Signal FrontCrash raw initial value.
 */
#define START_Vehicle_CAN_11_FrontCrash             0

/**
 * Signal FrontCrash raw minimum value.
 */
#define MIN_Vehicle_CAN_11_FrontCrash               0

/**
 * Signal FrontCrash raw maximum value.
 */
#define MAX_Vehicle_CAN_11_FrontCrash               1

/**
 * Signal FrontCrash raw offset value.
 */
#define OFF_Vehicle_CAN_11_FrontCrash               0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_11_FrontCrash Value Table for Signal FrontCrash in Message Vehicle_CAN_11 (0x111)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_11_FrontCrash.
 *
 * @ingroup SIG_Vehicle_CAN_11_FrontCrash
 */

/**
 * Value table Vehicle_CAN_11_FrontCrash entry crash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_FrontCrash
 */
#define Vehicle_CAN_11_FrontCrash_crash               1

/**
 * Value table Vehicle_CAN_11_FrontCrash entry noCrash.
 *
 * @ingroup ENUM_Vehicle_CAN_11_FrontCrash
 */
#define Vehicle_CAN_11_FrontCrash_noCrash             0

/**
 * @defgroup SIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC Signal Vehicle_CAN_11_CRC of Message Vehicle_CAN_11 (0x111)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal Vehicle_CAN_11_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_Vehicle_CAN_11_CRC and \ref GET_Vehicle_CAN_11_Vehicle_CAN_11_CRC instead.
 */
#define SIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_11_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_Vehicle_CAN_11_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_11_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_Vehicle_CAN_11_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_11_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_Vehicle_CAN_11_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_11_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_CRC(buf) \
	SET_Vehicle_CAN_11_Vehicle_CAN_11_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_11_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_Vehicle_CAN_11_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_11_CRC raw initial value.
 */
#define START_Vehicle_CAN_11_Vehicle_CAN_11_CRC      0

/**
 * Signal Vehicle_CAN_11_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_11_Vehicle_CAN_11_CRC        0

/**
 * Signal Vehicle_CAN_11_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_11_Vehicle_CAN_11_CRC        255

/**
 * Signal Vehicle_CAN_11_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_11_Vehicle_CAN_11_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter Signal Vehicle_CAN_11_Counter of Message Vehicle_CAN_11 (0x111)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_11
 * @{
 */

/**
 * Signal Vehicle_CAN_11_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_11_Vehicle_CAN_11_Counter and \ref GET_Vehicle_CAN_11_Vehicle_CAN_11_Counter instead.
 */
#define SIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_11_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter or \ref INIT_Vehicle_CAN_11 instead.
 */
#define SETUP_Vehicle_CAN_11_Vehicle_CAN_11_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_11_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_11_Vehicle_CAN_11_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_11_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_11_Vehicle_CAN_11_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_11_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_11_Vehicle_CAN_11_Counter(buf) \
	SET_Vehicle_CAN_11_Vehicle_CAN_11_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_11_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_11_Vehicle_CAN_11_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_11_Counter raw initial value.
 */
#define START_Vehicle_CAN_11_Vehicle_CAN_11_Counter      0

/**
 * Signal Vehicle_CAN_11_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_11_Vehicle_CAN_11_Counter        0

/**
 * Signal Vehicle_CAN_11_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_11_Vehicle_CAN_11_Counter        15

/**
 * Signal Vehicle_CAN_11_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_11_Vehicle_CAN_11_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_Rainfall Signal Rainfall of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal Rainfall configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_Rainfall and \ref GET_Vehicle_CAN_07_Rainfall instead.
 */
#define SIG_Vehicle_CAN_07_Rainfall                 0, 0, 60, 4

/**
 * Signal Rainfall setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_Rainfall or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_Rainfall               0, 0, 60, 4, 0

/**
 * Get signal Rainfall from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_Rainfall(buf) (0 \
	| (ubyte)(+(ubyte)((buf[7] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal Rainfall in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_Rainfall(buf, val) { \
	buf[7] &= ~(0x0f << 4); \
	buf[7] |= (((ubyte)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal Rainfall in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_Rainfall(buf) \
	SET_Vehicle_CAN_07_Rainfall(buf, 0)

/**
 * Signal Rainfall value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_Rainfall(x, fmt) \
	((x) * fmt * 10)

/**
 * Signal Rainfall raw initial value.
 */
#define START_Vehicle_CAN_07_Rainfall               0

/**
 * Signal Rainfall raw minimum value.
 */
#define MIN_Vehicle_CAN_07_Rainfall                 0

/**
 * Signal Rainfall raw maximum value.
 */
#define MAX_Vehicle_CAN_07_Rainfall                 15

/**
 * Signal Rainfall raw offset value.
 */
#define OFF_Vehicle_CAN_07_Rainfall                 0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_AccDesiredSpeed Signal AccDesiredSpeed of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal AccDesiredSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_AccDesiredSpeed and \ref GET_Vehicle_CAN_07_AccDesiredSpeed instead.
 */
#define SIG_Vehicle_CAN_07_AccDesiredSpeed          0, 0, 40, 10

/**
 * Signal AccDesiredSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_AccDesiredSpeed or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_AccDesiredSpeed        0, 0, 40, 10, 0

/**
 * Get signal AccDesiredSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_AccDesiredSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[6] >> 0) & 0x03) << 8) \
)

/**
 * Set signal AccDesiredSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_AccDesiredSpeed(buf, val) { \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0; \
}

/**
 * Set signal AccDesiredSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_AccDesiredSpeed(buf) \
	SET_Vehicle_CAN_07_AccDesiredSpeed(buf, 0)

/**
 * Signal AccDesiredSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_AccDesiredSpeed(x, fmt) \
	((x) * fmt * 8 / 25)

/**
 * Signal AccDesiredSpeed raw initial value.
 */
#define START_Vehicle_CAN_07_AccDesiredSpeed        0

/**
 * Signal AccDesiredSpeed raw minimum value.
 */
#define MIN_Vehicle_CAN_07_AccDesiredSpeed          0

/**
 * Signal AccDesiredSpeed raw maximum value.
 */
#define MAX_Vehicle_CAN_07_AccDesiredSpeed          1022

/**
 * Signal AccDesiredSpeed raw offset value.
 */
#define OFF_Vehicle_CAN_07_AccDesiredSpeed          0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_BrakePressure Signal BrakePressure of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal BrakePressure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_BrakePressure and \ref GET_Vehicle_CAN_07_BrakePressure instead.
 */
#define SIG_Vehicle_CAN_07_BrakePressure            0, 0, 12, 12

/**
 * Signal BrakePressure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_BrakePressure or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_BrakePressure          0, 0, 12, 12, 0

/**
 * Get signal BrakePressure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_BrakePressure(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x0f) << 0) \
	| (uword)(+(uword)((buf[2] >> 0) & 0xff) << 4) \
)

/**
 * Set signal BrakePressure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_BrakePressure(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 4; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((uword)(val) >> 4) & 0xff) << 0; \
}

/**
 * Set signal BrakePressure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_BrakePressure(buf) \
	SET_Vehicle_CAN_07_BrakePressure(buf, 0)

/**
 * Signal BrakePressure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_BrakePressure(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal BrakePressure raw initial value.
 */
#define START_Vehicle_CAN_07_BrakePressure          0

/**
 * Signal BrakePressure raw minimum value.
 */
#define MIN_Vehicle_CAN_07_BrakePressure            0

/**
 * Signal BrakePressure raw maximum value.
 */
#define MAX_Vehicle_CAN_07_BrakePressure            4095

/**
 * Signal BrakePressure raw offset value.
 */
#define OFF_Vehicle_CAN_07_BrakePressure            0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_VelocityOverGround Signal VelocityOverGround of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal VelocityOverGround configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_VelocityOverGround and \ref GET_Vehicle_CAN_07_VelocityOverGround instead.
 */
#define SIG_Vehicle_CAN_07_VelocityOverGround        0, 0, 24, 16

/**
 * Signal VelocityOverGround setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_VelocityOverGround or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_VelocityOverGround      0, 0, 24, 16, 32767

/**
 * Get signal VelocityOverGround from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_VelocityOverGround(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[4] >> 0) & 0xff) << 8) \
)

/**
 * Set signal VelocityOverGround in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_VelocityOverGround(buf, val) { \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal VelocityOverGround in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_VelocityOverGround(buf) \
	SET_Vehicle_CAN_07_VelocityOverGround(buf, 32767)

/**
 * Signal VelocityOverGround value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_VelocityOverGround(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal VelocityOverGround raw initial value.
 */
#define START_Vehicle_CAN_07_VelocityOverGround      32767

/**
 * Signal VelocityOverGround raw minimum value.
 */
#define MIN_Vehicle_CAN_07_VelocityOverGround        0

/**
 * Signal VelocityOverGround raw maximum value.
 */
#define MAX_Vehicle_CAN_07_VelocityOverGround        65534

/**
 * Signal VelocityOverGround raw offset value.
 */
#define OFF_Vehicle_CAN_07_VelocityOverGround        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC Signal Vehicle_CAN_07_CRC of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal Vehicle_CAN_07_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_Vehicle_CAN_07_CRC and \ref GET_Vehicle_CAN_07_Vehicle_CAN_07_CRC instead.
 */
#define SIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_07_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_Vehicle_CAN_07_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_07_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_Vehicle_CAN_07_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_07_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_Vehicle_CAN_07_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_07_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_CRC(buf) \
	SET_Vehicle_CAN_07_Vehicle_CAN_07_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_07_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_Vehicle_CAN_07_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_07_CRC raw initial value.
 */
#define START_Vehicle_CAN_07_Vehicle_CAN_07_CRC      0

/**
 * Signal Vehicle_CAN_07_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_07_Vehicle_CAN_07_CRC        0

/**
 * Signal Vehicle_CAN_07_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_07_Vehicle_CAN_07_CRC        255

/**
 * Signal Vehicle_CAN_07_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_07_Vehicle_CAN_07_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter Signal Vehicle_CAN_07_Counter of Message Vehicle_CAN_07 (0x107)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_07
 * @{
 */

/**
 * Signal Vehicle_CAN_07_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_07_Vehicle_CAN_07_Counter and \ref GET_Vehicle_CAN_07_Vehicle_CAN_07_Counter instead.
 */
#define SIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_07_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter or \ref INIT_Vehicle_CAN_07 instead.
 */
#define SETUP_Vehicle_CAN_07_Vehicle_CAN_07_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_07_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_07_Vehicle_CAN_07_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_07_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_07_Vehicle_CAN_07_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_07_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_07_Vehicle_CAN_07_Counter(buf) \
	SET_Vehicle_CAN_07_Vehicle_CAN_07_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_07_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_07_Vehicle_CAN_07_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_07_Counter raw initial value.
 */
#define START_Vehicle_CAN_07_Vehicle_CAN_07_Counter      0

/**
 * Signal Vehicle_CAN_07_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_07_Vehicle_CAN_07_Counter        0

/**
 * Signal Vehicle_CAN_07_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_07_Vehicle_CAN_07_Counter        15

/**
 * Signal Vehicle_CAN_07_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_07_Vehicle_CAN_07_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_05_FoggingRiskWindscreen Signal FoggingRiskWindscreen of Message Vehicle_CAN_05 (0x105)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_05_FoggingRiskWindscreen.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal FoggingRiskWindscreen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_FoggingRiskWindscreen and \ref GET_Vehicle_CAN_05_FoggingRiskWindscreen instead.
 */
#define SIG_Vehicle_CAN_05_FoggingRiskWindscreen        0, 0, 14, 1

/**
 * Signal FoggingRiskWindscreen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_FoggingRiskWindscreen or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_FoggingRiskWindscreen      0, 0, 14, 1, 0

/**
 * Get signal FoggingRiskWindscreen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_FoggingRiskWindscreen(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0) \
)

/**
 * Set signal FoggingRiskWindscreen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_FoggingRiskWindscreen(buf, val) { \
	buf[1] &= ~(0x01 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal FoggingRiskWindscreen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_FoggingRiskWindscreen(buf) \
	SET_Vehicle_CAN_05_FoggingRiskWindscreen(buf, 0)

/**
 * Signal FoggingRiskWindscreen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_FoggingRiskWindscreen(x, fmt) \
	((x) * fmt)

/**
 * Signal FoggingRiskWindscreen raw initial value.
 */
#define START_Vehicle_CAN_05_FoggingRiskWindscreen      0

/**
 * Signal FoggingRiskWindscreen raw minimum value.
 */
#define MIN_Vehicle_CAN_05_FoggingRiskWindscreen        0

/**
 * Signal FoggingRiskWindscreen raw maximum value.
 */
#define MAX_Vehicle_CAN_05_FoggingRiskWindscreen        1

/**
 * Signal FoggingRiskWindscreen raw offset value.
 */
#define OFF_Vehicle_CAN_05_FoggingRiskWindscreen        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_05_FoggingRiskWindscreen Value Table for Signal FoggingRiskWindscreen in Message Vehicle_CAN_05 (0x105)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_05_FoggingRiskWindscreen.
 *
 * @ingroup SIG_Vehicle_CAN_05_FoggingRiskWindscreen
 */

/**
 * Value table Vehicle_CAN_05_FoggingRiskWindscreen entry highRisk.
 *
 * @ingroup ENUM_Vehicle_CAN_05_FoggingRiskWindscreen
 */
#define Vehicle_CAN_05_FoggingRiskWindscreen_highRisk            1

/**
 * Value table Vehicle_CAN_05_FoggingRiskWindscreen entry noRisk.
 *
 * @ingroup ENUM_Vehicle_CAN_05_FoggingRiskWindscreen
 */
#define Vehicle_CAN_05_FoggingRiskWindscreen_noRisk              0

/**
 * @defgroup SIG_Vehicle_CAN_05_TrailerIdentified Signal TrailerIdentified of Message Vehicle_CAN_05 (0x105)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_05_TrailerIdentified.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal TrailerIdentified configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_TrailerIdentified and \ref GET_Vehicle_CAN_05_TrailerIdentified instead.
 */
#define SIG_Vehicle_CAN_05_TrailerIdentified        0, 0, 12, 2

/**
 * Signal TrailerIdentified setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_TrailerIdentified or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_TrailerIdentified      0, 0, 12, 2, 0

/**
 * Get signal TrailerIdentified from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_TrailerIdentified(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x03) << 0) \
)

/**
 * Set signal TrailerIdentified in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_TrailerIdentified(buf, val) { \
	buf[1] &= ~(0x03 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal TrailerIdentified in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_TrailerIdentified(buf) \
	SET_Vehicle_CAN_05_TrailerIdentified(buf, 0)

/**
 * Signal TrailerIdentified value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_TrailerIdentified(x, fmt) \
	((x) * fmt)

/**
 * Signal TrailerIdentified raw initial value.
 */
#define START_Vehicle_CAN_05_TrailerIdentified      0

/**
 * Signal TrailerIdentified raw minimum value.
 */
#define MIN_Vehicle_CAN_05_TrailerIdentified        0

/**
 * Signal TrailerIdentified raw maximum value.
 */
#define MAX_Vehicle_CAN_05_TrailerIdentified        3

/**
 * Signal TrailerIdentified raw offset value.
 */
#define OFF_Vehicle_CAN_05_TrailerIdentified        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_05_TrailerIdentified Value Table for Signal TrailerIdentified in Message Vehicle_CAN_05 (0x105)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_05_TrailerIdentified.
 *
 * @ingroup SIG_Vehicle_CAN_05_TrailerIdentified
 */

/**
 * Value table Vehicle_CAN_05_TrailerIdentified entry error.
 *
 * @ingroup ENUM_Vehicle_CAN_05_TrailerIdentified
 */
#define Vehicle_CAN_05_TrailerIdentified_error               3

/**
 * Value table Vehicle_CAN_05_TrailerIdentified entry trailerNotAttached.
 *
 * @ingroup ENUM_Vehicle_CAN_05_TrailerIdentified
 */
#define Vehicle_CAN_05_TrailerIdentified_trailerNotAttached    2

/**
 * Value table Vehicle_CAN_05_TrailerIdentified entry trailerAttached.
 *
 * @ingroup ENUM_Vehicle_CAN_05_TrailerIdentified
 */
#define Vehicle_CAN_05_TrailerIdentified_trailerAttached     1

/**
 * Value table Vehicle_CAN_05_TrailerIdentified entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_05_TrailerIdentified
 */
#define Vehicle_CAN_05_TrailerIdentified_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_05_SteeringWheelAngle Signal SteeringWheelAngle of Message Vehicle_CAN_05 (0x105)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal SteeringWheelAngle configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_SteeringWheelAngle and \ref GET_Vehicle_CAN_05_SteeringWheelAngle instead.
 */
#define SIG_Vehicle_CAN_05_SteeringWheelAngle        0, 0, 32, 16

/**
 * Signal SteeringWheelAngle setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_SteeringWheelAngle or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_SteeringWheelAngle      0, 0, 32, 16, 32768

/**
 * Get signal SteeringWheelAngle from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_SteeringWheelAngle(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[5] >> 0) & 0xff) << 8) \
)

/**
 * Set signal SteeringWheelAngle in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_SteeringWheelAngle(buf, val) { \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal SteeringWheelAngle in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_SteeringWheelAngle(buf) \
	SET_Vehicle_CAN_05_SteeringWheelAngle(buf, 32768)

/**
 * Signal SteeringWheelAngle value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_SteeringWheelAngle(x, fmt) \
	((x) * fmt / 10 + fmt * 32767 / (-10))

/**
 * Signal SteeringWheelAngle raw initial value.
 */
#define START_Vehicle_CAN_05_SteeringWheelAngle      32768

/**
 * Signal SteeringWheelAngle raw minimum value.
 */
#define MIN_Vehicle_CAN_05_SteeringWheelAngle        0

/**
 * Signal SteeringWheelAngle raw maximum value.
 */
#define MAX_Vehicle_CAN_05_SteeringWheelAngle        65534

/**
 * Signal SteeringWheelAngle raw offset value.
 */
#define OFF_Vehicle_CAN_05_SteeringWheelAngle        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_05_SteeringMomentum Signal SteeringMomentum of Message Vehicle_CAN_05 (0x105)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal SteeringMomentum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_SteeringMomentum and \ref GET_Vehicle_CAN_05_SteeringMomentum instead.
 */
#define SIG_Vehicle_CAN_05_SteeringMomentum         0, 0, 48, 16

/**
 * Signal SteeringMomentum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_SteeringMomentum or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_SteeringMomentum       0, 0, 48, 16, 32767

/**
 * Get signal SteeringMomentum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_SteeringMomentum(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[7] >> 0) & 0xff) << 8) \
)

/**
 * Set signal SteeringMomentum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_SteeringMomentum(buf, val) { \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal SteeringMomentum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_SteeringMomentum(buf) \
	SET_Vehicle_CAN_05_SteeringMomentum(buf, 32767)

/**
 * Signal SteeringMomentum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_SteeringMomentum(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal SteeringMomentum raw initial value.
 */
#define START_Vehicle_CAN_05_SteeringMomentum       32767

/**
 * Signal SteeringMomentum raw minimum value.
 */
#define MIN_Vehicle_CAN_05_SteeringMomentum         0

/**
 * Signal SteeringMomentum raw maximum value.
 */
#define MAX_Vehicle_CAN_05_SteeringMomentum         65534

/**
 * Signal SteeringMomentum raw offset value.
 */
#define OFF_Vehicle_CAN_05_SteeringMomentum         -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_05_SteeringAngluarSpeed Signal SteeringAngluarSpeed of Message Vehicle_CAN_05 (0x105)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal SteeringAngluarSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_SteeringAngluarSpeed and \ref GET_Vehicle_CAN_05_SteeringAngluarSpeed instead.
 */
#define SIG_Vehicle_CAN_05_SteeringAngluarSpeed        0, 0, 15, 17

/**
 * Signal SteeringAngluarSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_SteeringAngluarSpeed or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_SteeringAngluarSpeed      0, 0, 15, 17, 65535

/**
 * Get signal SteeringAngluarSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_SteeringAngluarSpeed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0) \
	| (uword)(+(uword)((buf[2] >> 0) & 0xff) << 1) \
	| (ulong)(+(ulong)((buf[3] >> 0) & 0xff) << 9) \
)

/**
 * Set signal SteeringAngluarSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_SteeringAngluarSpeed(buf, val) { \
	buf[1] &= ~(0x01 << 7); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= ((ubyte)((uword)(val) >> 1) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((ulong)(val) >> 9) & 0xff) << 0; \
}

/**
 * Set signal SteeringAngluarSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_SteeringAngluarSpeed(buf) \
	SET_Vehicle_CAN_05_SteeringAngluarSpeed(buf, 65535)

/**
 * Signal SteeringAngluarSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_SteeringAngluarSpeed(x, fmt) \
	((x) * fmt / 100 + fmt * 13107 / (-20))

/**
 * Signal SteeringAngluarSpeed raw initial value.
 */
#define START_Vehicle_CAN_05_SteeringAngluarSpeed      65535

/**
 * Signal SteeringAngluarSpeed raw minimum value.
 */
#define MIN_Vehicle_CAN_05_SteeringAngluarSpeed        0

/**
 * Signal SteeringAngluarSpeed raw maximum value.
 */
#define MAX_Vehicle_CAN_05_SteeringAngluarSpeed        131070

/**
 * Signal SteeringAngluarSpeed raw offset value.
 */
#define OFF_Vehicle_CAN_05_SteeringAngluarSpeed        -65535

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC Signal Vehicle_CAN_05_CRC of Message Vehicle_CAN_05 (0x105)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal Vehicle_CAN_05_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_Vehicle_CAN_05_CRC and \ref GET_Vehicle_CAN_05_Vehicle_CAN_05_CRC instead.
 */
#define SIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_05_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_Vehicle_CAN_05_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_05_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_Vehicle_CAN_05_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_05_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_Vehicle_CAN_05_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_05_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_CRC(buf) \
	SET_Vehicle_CAN_05_Vehicle_CAN_05_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_05_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_Vehicle_CAN_05_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_05_CRC raw initial value.
 */
#define START_Vehicle_CAN_05_Vehicle_CAN_05_CRC      0

/**
 * Signal Vehicle_CAN_05_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_05_Vehicle_CAN_05_CRC        0

/**
 * Signal Vehicle_CAN_05_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_05_Vehicle_CAN_05_CRC        255

/**
 * Signal Vehicle_CAN_05_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_05_Vehicle_CAN_05_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter Signal Vehicle_CAN_05_Counter of Message Vehicle_CAN_05 (0x105)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_05
 * @{
 */

/**
 * Signal Vehicle_CAN_05_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_05_Vehicle_CAN_05_Counter and \ref GET_Vehicle_CAN_05_Vehicle_CAN_05_Counter instead.
 */
#define SIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_05_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter or \ref INIT_Vehicle_CAN_05 instead.
 */
#define SETUP_Vehicle_CAN_05_Vehicle_CAN_05_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_05_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_05_Vehicle_CAN_05_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_05_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_05_Vehicle_CAN_05_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_05_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_05_Vehicle_CAN_05_Counter(buf) \
	SET_Vehicle_CAN_05_Vehicle_CAN_05_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_05_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_05_Vehicle_CAN_05_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_05_Counter raw initial value.
 */
#define START_Vehicle_CAN_05_Vehicle_CAN_05_Counter      0

/**
 * Signal Vehicle_CAN_05_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_05_Vehicle_CAN_05_Counter        0

/**
 * Signal Vehicle_CAN_05_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_05_Vehicle_CAN_05_Counter        15

/**
 * Signal Vehicle_CAN_05_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_05_Vehicle_CAN_05_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_03_EngineRunning Signal EngineRunning of Message Vehicle_CAN_03 (0x103)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_03_EngineRunning.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal EngineRunning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_EngineRunning and \ref GET_Vehicle_CAN_03_EngineRunning instead.
 */
#define SIG_Vehicle_CAN_03_EngineRunning            0, 0, 12, 3

/**
 * Signal EngineRunning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_EngineRunning or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_EngineRunning          0, 0, 12, 3, 0

/**
 * Get signal EngineRunning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_EngineRunning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x07) << 0) \
)

/**
 * Set signal EngineRunning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_EngineRunning(buf, val) { \
	buf[1] &= ~(0x07 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 4; \
}

/**
 * Set signal EngineRunning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_EngineRunning(buf) \
	SET_Vehicle_CAN_03_EngineRunning(buf, 0)

/**
 * Signal EngineRunning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_EngineRunning(x, fmt) \
	((x) * fmt)

/**
 * Signal EngineRunning raw initial value.
 */
#define START_Vehicle_CAN_03_EngineRunning          0

/**
 * Signal EngineRunning raw minimum value.
 */
#define MIN_Vehicle_CAN_03_EngineRunning            0

/**
 * Signal EngineRunning raw maximum value.
 */
#define MAX_Vehicle_CAN_03_EngineRunning            5

/**
 * Signal EngineRunning raw offset value.
 */
#define OFF_Vehicle_CAN_03_EngineRunning            0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_03_EngineRunning Value Table for Signal EngineRunning in Message Vehicle_CAN_03 (0x103)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_03_EngineRunning.
 *
 * @ingroup SIG_Vehicle_CAN_03_EngineRunning
 */

/**
 * Value table Vehicle_CAN_03_EngineRunning entry running.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_running             5

/**
 * Value table Vehicle_CAN_03_EngineRunning entry ignition.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_ignition            4

/**
 * Value table Vehicle_CAN_03_EngineRunning entry keyApproved.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_keyApproved         3

/**
 * Value table Vehicle_CAN_03_EngineRunning entry keyRecentlyOut.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_keyRecentlyOut      2

/**
 * Value table Vehicle_CAN_03_EngineRunning entry keyOut.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_keyOut              1

/**
 * Value table Vehicle_CAN_03_EngineRunning entry error.
 *
 * @ingroup ENUM_Vehicle_CAN_03_EngineRunning
 */
#define Vehicle_CAN_03_EngineRunning_error               0

/**
 * @defgroup SIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft Signal RotationWheelSpeedRearLeft of Message Vehicle_CAN_03 (0x103)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal RotationWheelSpeedRearLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_RotationWheelSpeedRearLeft and \ref GET_Vehicle_CAN_03_RotationWheelSpeedRearLeft instead.
 */
#define SIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft        0, 0, 48, 16

/**
 * Signal RotationWheelSpeedRearLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_RotationWheelSpeedRearLeft      0, 0, 48, 16, 32767

/**
 * Get signal RotationWheelSpeedRearLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_RotationWheelSpeedRearLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[7] >> 0) & 0xff) << 8) \
)

/**
 * Set signal RotationWheelSpeedRearLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_RotationWheelSpeedRearLeft(buf, val) { \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal RotationWheelSpeedRearLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearLeft(buf) \
	SET_Vehicle_CAN_03_RotationWheelSpeedRearLeft(buf, 32767)

/**
 * Signal RotationWheelSpeedRearLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_RotationWheelSpeedRearLeft(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal RotationWheelSpeedRearLeft raw initial value.
 */
#define START_Vehicle_CAN_03_RotationWheelSpeedRearLeft      32767

/**
 * Signal RotationWheelSpeedRearLeft raw minimum value.
 */
#define MIN_Vehicle_CAN_03_RotationWheelSpeedRearLeft        0

/**
 * Signal RotationWheelSpeedRearLeft raw maximum value.
 */
#define MAX_Vehicle_CAN_03_RotationWheelSpeedRearLeft        65534

/**
 * Signal RotationWheelSpeedRearLeft raw offset value.
 */
#define OFF_Vehicle_CAN_03_RotationWheelSpeedRearLeft        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_03_RotationWheelSpeedRearRight Signal RotationWheelSpeedRearRight of Message Vehicle_CAN_03 (0x103)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal RotationWheelSpeedRearRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_RotationWheelSpeedRearRight and \ref GET_Vehicle_CAN_03_RotationWheelSpeedRearRight instead.
 */
#define SIG_Vehicle_CAN_03_RotationWheelSpeedRearRight        0, 0, 32, 16

/**
 * Signal RotationWheelSpeedRearRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearRight or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_RotationWheelSpeedRearRight      0, 0, 32, 16, 32767

/**
 * Get signal RotationWheelSpeedRearRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_RotationWheelSpeedRearRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[5] >> 0) & 0xff) << 8) \
)

/**
 * Set signal RotationWheelSpeedRearRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_RotationWheelSpeedRearRight(buf, val) { \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal RotationWheelSpeedRearRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_RotationWheelSpeedRearRight(buf) \
	SET_Vehicle_CAN_03_RotationWheelSpeedRearRight(buf, 32767)

/**
 * Signal RotationWheelSpeedRearRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_RotationWheelSpeedRearRight(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal RotationWheelSpeedRearRight raw initial value.
 */
#define START_Vehicle_CAN_03_RotationWheelSpeedRearRight      32767

/**
 * Signal RotationWheelSpeedRearRight raw minimum value.
 */
#define MIN_Vehicle_CAN_03_RotationWheelSpeedRearRight        0

/**
 * Signal RotationWheelSpeedRearRight raw maximum value.
 */
#define MAX_Vehicle_CAN_03_RotationWheelSpeedRearRight        65534

/**
 * Signal RotationWheelSpeedRearRight raw offset value.
 */
#define OFF_Vehicle_CAN_03_RotationWheelSpeedRearRight        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_03_Velocity Signal Velocity of Message Vehicle_CAN_03 (0x103)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal Velocity configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_Velocity and \ref GET_Vehicle_CAN_03_Velocity instead.
 */
#define SIG_Vehicle_CAN_03_Velocity                 0, 0, 16, 16

/**
 * Signal Velocity setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_Velocity or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_Velocity               0, 0, 16, 16, 32767

/**
 * Get signal Velocity from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_Velocity(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) \
)

/**
 * Set signal Velocity in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_Velocity(buf, val) { \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal Velocity in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_Velocity(buf) \
	SET_Vehicle_CAN_03_Velocity(buf, 32767)

/**
 * Signal Velocity value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_Velocity(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal Velocity raw initial value.
 */
#define START_Vehicle_CAN_03_Velocity               32767

/**
 * Signal Velocity raw minimum value.
 */
#define MIN_Vehicle_CAN_03_Velocity                 0

/**
 * Signal Velocity raw maximum value.
 */
#define MAX_Vehicle_CAN_03_Velocity                 65534

/**
 * Signal Velocity raw offset value.
 */
#define OFF_Vehicle_CAN_03_Velocity                 -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC Signal Vehicle_CAN_03_CRC of Message Vehicle_CAN_03 (0x103)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal Vehicle_CAN_03_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_Vehicle_CAN_03_CRC and \ref GET_Vehicle_CAN_03_Vehicle_CAN_03_CRC instead.
 */
#define SIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_03_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_Vehicle_CAN_03_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_03_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_Vehicle_CAN_03_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_03_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_Vehicle_CAN_03_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_03_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_CRC(buf) \
	SET_Vehicle_CAN_03_Vehicle_CAN_03_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_03_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_Vehicle_CAN_03_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_03_CRC raw initial value.
 */
#define START_Vehicle_CAN_03_Vehicle_CAN_03_CRC      0

/**
 * Signal Vehicle_CAN_03_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_03_Vehicle_CAN_03_CRC        0

/**
 * Signal Vehicle_CAN_03_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_03_Vehicle_CAN_03_CRC        255

/**
 * Signal Vehicle_CAN_03_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_03_Vehicle_CAN_03_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter Signal Vehicle_CAN_03_Counter of Message Vehicle_CAN_03 (0x103)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_03
 * @{
 */

/**
 * Signal Vehicle_CAN_03_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_03_Vehicle_CAN_03_Counter and \ref GET_Vehicle_CAN_03_Vehicle_CAN_03_Counter instead.
 */
#define SIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_03_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter or \ref INIT_Vehicle_CAN_03 instead.
 */
#define SETUP_Vehicle_CAN_03_Vehicle_CAN_03_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_03_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_03_Vehicle_CAN_03_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_03_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_03_Vehicle_CAN_03_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_03_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_03_Vehicle_CAN_03_Counter(buf) \
	SET_Vehicle_CAN_03_Vehicle_CAN_03_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_03_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_03_Vehicle_CAN_03_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_03_Counter raw initial value.
 */
#define START_Vehicle_CAN_03_Vehicle_CAN_03_Counter      0

/**
 * Signal Vehicle_CAN_03_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_03_Vehicle_CAN_03_Counter        0

/**
 * Signal Vehicle_CAN_03_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_03_Vehicle_CAN_03_Counter        15

/**
 * Signal Vehicle_CAN_03_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_03_Vehicle_CAN_03_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_02_DisableRollerDynMode Signal DisableRollerDynMode of Message Vehicle_CAN_02 (0x102)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_02_DisableRollerDynMode.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal DisableRollerDynMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_DisableRollerDynMode and \ref GET_Vehicle_CAN_02_DisableRollerDynMode instead.
 */
#define SIG_Vehicle_CAN_02_DisableRollerDynMode        0, 0, 15, 1

/**
 * Signal DisableRollerDynMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_DisableRollerDynMode or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_DisableRollerDynMode      0, 0, 15, 1, 0

/**
 * Get signal DisableRollerDynMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_DisableRollerDynMode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0) \
)

/**
 * Set signal DisableRollerDynMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_DisableRollerDynMode(buf, val) { \
	buf[1] &= ~(0x01 << 7); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal DisableRollerDynMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_DisableRollerDynMode(buf) \
	SET_Vehicle_CAN_02_DisableRollerDynMode(buf, 0)

/**
 * Signal DisableRollerDynMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_DisableRollerDynMode(x, fmt) \
	((x) * fmt)

/**
 * Signal DisableRollerDynMode raw initial value.
 */
#define START_Vehicle_CAN_02_DisableRollerDynMode      0

/**
 * Signal DisableRollerDynMode raw minimum value.
 */
#define MIN_Vehicle_CAN_02_DisableRollerDynMode        0

/**
 * Signal DisableRollerDynMode raw maximum value.
 */
#define MAX_Vehicle_CAN_02_DisableRollerDynMode        1

/**
 * Signal DisableRollerDynMode raw offset value.
 */
#define OFF_Vehicle_CAN_02_DisableRollerDynMode        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_02_DisableRollerDynMode Value Table for Signal DisableRollerDynMode in Message Vehicle_CAN_02 (0x102)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_02_DisableRollerDynMode.
 *
 * @ingroup SIG_Vehicle_CAN_02_DisableRollerDynMode
 */

/**
 * Value table Vehicle_CAN_02_DisableRollerDynMode entry On.
 *
 * @ingroup ENUM_Vehicle_CAN_02_DisableRollerDynMode
 */
#define Vehicle_CAN_02_DisableRollerDynMode_On                  1

/**
 * Value table Vehicle_CAN_02_DisableRollerDynMode entry Off.
 *
 * @ingroup ENUM_Vehicle_CAN_02_DisableRollerDynMode
 */
#define Vehicle_CAN_02_DisableRollerDynMode_Off                 0

/**
 * @defgroup SIG_Vehicle_CAN_02_BrakeLightSwitch Signal BrakeLightSwitch of Message Vehicle_CAN_02 (0x102)
 *
 * Message to turn on brake lights
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_02_BrakeLightSwitch.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal BrakeLightSwitch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_BrakeLightSwitch and \ref GET_Vehicle_CAN_02_BrakeLightSwitch instead.
 */
#define SIG_Vehicle_CAN_02_BrakeLightSwitch         0, 0, 14, 1

/**
 * Signal BrakeLightSwitch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_BrakeLightSwitch or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_BrakeLightSwitch       0, 0, 14, 1, 0

/**
 * Get signal BrakeLightSwitch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_BrakeLightSwitch(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0) \
)

/**
 * Set signal BrakeLightSwitch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_BrakeLightSwitch(buf, val) { \
	buf[1] &= ~(0x01 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal BrakeLightSwitch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_BrakeLightSwitch(buf) \
	SET_Vehicle_CAN_02_BrakeLightSwitch(buf, 0)

/**
 * Signal BrakeLightSwitch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_BrakeLightSwitch(x, fmt) \
	((x) * fmt)

/**
 * Signal BrakeLightSwitch raw initial value.
 */
#define START_Vehicle_CAN_02_BrakeLightSwitch       0

/**
 * Signal BrakeLightSwitch raw minimum value.
 */
#define MIN_Vehicle_CAN_02_BrakeLightSwitch         0

/**
 * Signal BrakeLightSwitch raw maximum value.
 */
#define MAX_Vehicle_CAN_02_BrakeLightSwitch         1

/**
 * Signal BrakeLightSwitch raw offset value.
 */
#define OFF_Vehicle_CAN_02_BrakeLightSwitch         0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_02_BrakeLightSwitch Value Table for Signal BrakeLightSwitch in Message Vehicle_CAN_02 (0x102)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_02_BrakeLightSwitch.
 *
 * @ingroup SIG_Vehicle_CAN_02_BrakeLightSwitch
 */

/**
 * Value table Vehicle_CAN_02_BrakeLightSwitch entry Brake.
 *
 * light off
 *
 * @ingroup ENUM_Vehicle_CAN_02_BrakeLightSwitch
 */
#define Vehicle_CAN_02_BrakeLightSwitch_Brake               0

/**
 * Value table Vehicle_CAN_02_BrakeLightSwitch entry Driver.
 *
 * Braked - brakelight on
 *
 * @ingroup ENUM_Vehicle_CAN_02_BrakeLightSwitch
 */
#define Vehicle_CAN_02_BrakeLightSwitch_Driver              1

/**
 * @defgroup SIG_Vehicle_CAN_02_AsrSwitchPassive Signal AsrSwitchPassive of Message Vehicle_CAN_02 (0x102)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_02_AsrSwitchPassive.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal AsrSwitchPassive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_AsrSwitchPassive and \ref GET_Vehicle_CAN_02_AsrSwitchPassive instead.
 */
#define SIG_Vehicle_CAN_02_AsrSwitchPassive         0, 0, 13, 1

/**
 * Signal AsrSwitchPassive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_AsrSwitchPassive or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_AsrSwitchPassive       0, 0, 13, 1, 0

/**
 * Get signal AsrSwitchPassive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_AsrSwitchPassive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0) \
)

/**
 * Set signal AsrSwitchPassive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_AsrSwitchPassive(buf, val) { \
	buf[1] &= ~(0x01 << 5); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal AsrSwitchPassive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_AsrSwitchPassive(buf) \
	SET_Vehicle_CAN_02_AsrSwitchPassive(buf, 0)

/**
 * Signal AsrSwitchPassive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_AsrSwitchPassive(x, fmt) \
	((x) * fmt)

/**
 * Signal AsrSwitchPassive raw initial value.
 */
#define START_Vehicle_CAN_02_AsrSwitchPassive       0

/**
 * Signal AsrSwitchPassive raw minimum value.
 */
#define MIN_Vehicle_CAN_02_AsrSwitchPassive         0

/**
 * Signal AsrSwitchPassive raw maximum value.
 */
#define MAX_Vehicle_CAN_02_AsrSwitchPassive         1

/**
 * Signal AsrSwitchPassive raw offset value.
 */
#define OFF_Vehicle_CAN_02_AsrSwitchPassive         0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_02_AsrSwitchPassive Value Table for Signal AsrSwitchPassive in Message Vehicle_CAN_02 (0x102)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_02_AsrSwitchPassive.
 *
 * @ingroup SIG_Vehicle_CAN_02_AsrSwitchPassive
 */

/**
 * Value table Vehicle_CAN_02_AsrSwitchPassive entry Passive.
 *
 * @ingroup ENUM_Vehicle_CAN_02_AsrSwitchPassive
 */
#define Vehicle_CAN_02_AsrSwitchPassive_Passive             1

/**
 * Value table Vehicle_CAN_02_AsrSwitchPassive entry Active.
 *
 * @ingroup ENUM_Vehicle_CAN_02_AsrSwitchPassive
 */
#define Vehicle_CAN_02_AsrSwitchPassive_Active              0

/**
 * @defgroup SIG_Vehicle_CAN_02_AbsIntervention Signal AbsIntervention of Message Vehicle_CAN_02 (0x102)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_02_AbsIntervention.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal AbsIntervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_AbsIntervention and \ref GET_Vehicle_CAN_02_AbsIntervention instead.
 */
#define SIG_Vehicle_CAN_02_AbsIntervention          0, 0, 12, 1

/**
 * Signal AbsIntervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_AbsIntervention or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_AbsIntervention        0, 0, 12, 1, 0

/**
 * Get signal AbsIntervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_AbsIntervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0) \
)

/**
 * Set signal AbsIntervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_AbsIntervention(buf, val) { \
	buf[1] &= ~(0x01 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal AbsIntervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_AbsIntervention(buf) \
	SET_Vehicle_CAN_02_AbsIntervention(buf, 0)

/**
 * Signal AbsIntervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_AbsIntervention(x, fmt) \
	((x) * fmt)

/**
 * Signal AbsIntervention raw initial value.
 */
#define START_Vehicle_CAN_02_AbsIntervention        0

/**
 * Signal AbsIntervention raw minimum value.
 */
#define MIN_Vehicle_CAN_02_AbsIntervention          0

/**
 * Signal AbsIntervention raw maximum value.
 */
#define MAX_Vehicle_CAN_02_AbsIntervention          1

/**
 * Signal AbsIntervention raw offset value.
 */
#define OFF_Vehicle_CAN_02_AbsIntervention          0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_02_AbsIntervention Value Table for Signal AbsIntervention in Message Vehicle_CAN_02 (0x102)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_02_AbsIntervention.
 *
 * @ingroup SIG_Vehicle_CAN_02_AbsIntervention
 */

/**
 * Value table Vehicle_CAN_02_AbsIntervention entry intervention.
 *
 * @ingroup ENUM_Vehicle_CAN_02_AbsIntervention
 */
#define Vehicle_CAN_02_AbsIntervention_intervention        1

/**
 * Value table Vehicle_CAN_02_AbsIntervention entry noIntervention.
 *
 * @ingroup ENUM_Vehicle_CAN_02_AbsIntervention
 */
#define Vehicle_CAN_02_AbsIntervention_noIntervention      0

/**
 * @defgroup SIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight Signal RotationWheelSpeedFrontRight of Message Vehicle_CAN_02 (0x102)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal RotationWheelSpeedFrontRight configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_RotationWheelSpeedFrontRight and \ref GET_Vehicle_CAN_02_RotationWheelSpeedFrontRight instead.
 */
#define SIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight        0, 0, 48, 16

/**
 * Signal RotationWheelSpeedFrontRight setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_RotationWheelSpeedFrontRight      0, 0, 48, 16, 32767

/**
 * Get signal RotationWheelSpeedFrontRight from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_RotationWheelSpeedFrontRight(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[7] >> 0) & 0xff) << 8) \
)

/**
 * Set signal RotationWheelSpeedFrontRight in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_RotationWheelSpeedFrontRight(buf, val) { \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal RotationWheelSpeedFrontRight in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontRight(buf) \
	SET_Vehicle_CAN_02_RotationWheelSpeedFrontRight(buf, 32767)

/**
 * Signal RotationWheelSpeedFrontRight value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_RotationWheelSpeedFrontRight(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal RotationWheelSpeedFrontRight raw initial value.
 */
#define START_Vehicle_CAN_02_RotationWheelSpeedFrontRight      32767

/**
 * Signal RotationWheelSpeedFrontRight raw minimum value.
 */
#define MIN_Vehicle_CAN_02_RotationWheelSpeedFrontRight        0

/**
 * Signal RotationWheelSpeedFrontRight raw maximum value.
 */
#define MAX_Vehicle_CAN_02_RotationWheelSpeedFrontRight        65534

/**
 * Signal RotationWheelSpeedFrontRight raw offset value.
 */
#define OFF_Vehicle_CAN_02_RotationWheelSpeedFrontRight        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft Signal RotationWheelSpeedFrontLeft of Message Vehicle_CAN_02 (0x102)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal RotationWheelSpeedFrontLeft configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_RotationWheelSpeedFrontLeft and \ref GET_Vehicle_CAN_02_RotationWheelSpeedFrontLeft instead.
 */
#define SIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft        0, 0, 32, 16

/**
 * Signal RotationWheelSpeedFrontLeft setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_RotationWheelSpeedFrontLeft      0, 0, 32, 16, 32767

/**
 * Get signal RotationWheelSpeedFrontLeft from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[5] >> 0) & 0xff) << 8) \
)

/**
 * Set signal RotationWheelSpeedFrontLeft in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(buf, val) { \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal RotationWheelSpeedFrontLeft in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(buf) \
	SET_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(buf, 32767)

/**
 * Signal RotationWheelSpeedFrontLeft value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_RotationWheelSpeedFrontLeft(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal RotationWheelSpeedFrontLeft raw initial value.
 */
#define START_Vehicle_CAN_02_RotationWheelSpeedFrontLeft      32767

/**
 * Signal RotationWheelSpeedFrontLeft raw minimum value.
 */
#define MIN_Vehicle_CAN_02_RotationWheelSpeedFrontLeft        0

/**
 * Signal RotationWheelSpeedFrontLeft raw maximum value.
 */
#define MAX_Vehicle_CAN_02_RotationWheelSpeedFrontLeft        65534

/**
 * Signal RotationWheelSpeedFrontLeft raw offset value.
 */
#define OFF_Vehicle_CAN_02_RotationWheelSpeedFrontLeft        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_02_PitchRate Signal PitchRate of Message Vehicle_CAN_02 (0x102)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal PitchRate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_PitchRate and \ref GET_Vehicle_CAN_02_PitchRate instead.
 */
#define SIG_Vehicle_CAN_02_PitchRate                0, 0, 16, 16

/**
 * Signal PitchRate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_PitchRate or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_PitchRate              0, 0, 16, 16, 32768

/**
 * Get signal PitchRate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_PitchRate(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) \
)

/**
 * Set signal PitchRate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_PitchRate(buf, val) { \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal PitchRate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_PitchRate(buf) \
	SET_Vehicle_CAN_02_PitchRate(buf, 32768)

/**
 * Signal PitchRate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_PitchRate(x, fmt) \
	((x) * fmt / 200 + fmt * 4096 / (-25))

/**
 * Signal PitchRate raw initial value.
 */
#define START_Vehicle_CAN_02_PitchRate              32768

/**
 * Signal PitchRate raw minimum value.
 */
#define MIN_Vehicle_CAN_02_PitchRate                0

/**
 * Signal PitchRate raw maximum value.
 */
#define MAX_Vehicle_CAN_02_PitchRate                65534

/**
 * Signal PitchRate raw offset value.
 */
#define OFF_Vehicle_CAN_02_PitchRate                -32768

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC Signal Vehicle_CAN_02_CRC of Message Vehicle_CAN_02 (0x102)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal Vehicle_CAN_02_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_Vehicle_CAN_02_CRC and \ref GET_Vehicle_CAN_02_Vehicle_CAN_02_CRC instead.
 */
#define SIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_02_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_Vehicle_CAN_02_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_02_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_Vehicle_CAN_02_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_02_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_Vehicle_CAN_02_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_02_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_CRC(buf) \
	SET_Vehicle_CAN_02_Vehicle_CAN_02_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_02_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_Vehicle_CAN_02_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_02_CRC raw initial value.
 */
#define START_Vehicle_CAN_02_Vehicle_CAN_02_CRC      0

/**
 * Signal Vehicle_CAN_02_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_02_Vehicle_CAN_02_CRC        0

/**
 * Signal Vehicle_CAN_02_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_02_Vehicle_CAN_02_CRC        255

/**
 * Signal Vehicle_CAN_02_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_02_Vehicle_CAN_02_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter Signal Vehicle_CAN_02_Counter of Message Vehicle_CAN_02 (0x102)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_02
 * @{
 */

/**
 * Signal Vehicle_CAN_02_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_02_Vehicle_CAN_02_Counter and \ref GET_Vehicle_CAN_02_Vehicle_CAN_02_Counter instead.
 */
#define SIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_02_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter or \ref INIT_Vehicle_CAN_02 instead.
 */
#define SETUP_Vehicle_CAN_02_Vehicle_CAN_02_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_02_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_02_Vehicle_CAN_02_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_02_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_02_Vehicle_CAN_02_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_02_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_02_Vehicle_CAN_02_Counter(buf) \
	SET_Vehicle_CAN_02_Vehicle_CAN_02_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_02_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_02_Vehicle_CAN_02_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_02_Counter raw initial value.
 */
#define START_Vehicle_CAN_02_Vehicle_CAN_02_Counter      0

/**
 * Signal Vehicle_CAN_02_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_02_Vehicle_CAN_02_Counter        0

/**
 * Signal Vehicle_CAN_02_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_02_Vehicle_CAN_02_Counter        15

/**
 * Signal Vehicle_CAN_02_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_02_Vehicle_CAN_02_Counter        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_01_EspSystemState Signal EspSystemState of Message Vehicle_CAN_01 (0x101)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_01_EspSystemState.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal EspSystemState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_EspSystemState and \ref GET_Vehicle_CAN_01_EspSystemState instead.
 */
#define SIG_Vehicle_CAN_01_EspSystemState           0, 0, 14, 1

/**
 * Signal EspSystemState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_EspSystemState or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_EspSystemState         0, 0, 14, 1, 0

/**
 * Get signal EspSystemState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_EspSystemState(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0) \
)

/**
 * Set signal EspSystemState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_EspSystemState(buf, val) { \
	buf[1] &= ~(0x01 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal EspSystemState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_EspSystemState(buf) \
	SET_Vehicle_CAN_01_EspSystemState(buf, 0)

/**
 * Signal EspSystemState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_EspSystemState(x, fmt) \
	((x) * fmt)

/**
 * Signal EspSystemState raw initial value.
 */
#define START_Vehicle_CAN_01_EspSystemState         0

/**
 * Signal EspSystemState raw minimum value.
 */
#define MIN_Vehicle_CAN_01_EspSystemState           0

/**
 * Signal EspSystemState raw maximum value.
 */
#define MAX_Vehicle_CAN_01_EspSystemState           1

/**
 * Signal EspSystemState raw offset value.
 */
#define OFF_Vehicle_CAN_01_EspSystemState           0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_01_EspSystemState Value Table for Signal EspSystemState in Message Vehicle_CAN_01 (0x101)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_01_EspSystemState.
 *
 * @ingroup SIG_Vehicle_CAN_01_EspSystemState
 */

/**
 * Value table Vehicle_CAN_01_EspSystemState entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspSystemState
 */
#define Vehicle_CAN_01_EspSystemState_on                  1

/**
 * Value table Vehicle_CAN_01_EspSystemState entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspSystemState
 */
#define Vehicle_CAN_01_EspSystemState_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_01_EspSwitchPassive Signal EspSwitchPassive of Message Vehicle_CAN_01 (0x101)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_01_EspSwitchPassive.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal EspSwitchPassive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_EspSwitchPassive and \ref GET_Vehicle_CAN_01_EspSwitchPassive instead.
 */
#define SIG_Vehicle_CAN_01_EspSwitchPassive         0, 0, 13, 1

/**
 * Signal EspSwitchPassive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_EspSwitchPassive or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_EspSwitchPassive       0, 0, 13, 1, 0

/**
 * Get signal EspSwitchPassive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_EspSwitchPassive(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0) \
)

/**
 * Set signal EspSwitchPassive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_EspSwitchPassive(buf, val) { \
	buf[1] &= ~(0x01 << 5); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal EspSwitchPassive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_EspSwitchPassive(buf) \
	SET_Vehicle_CAN_01_EspSwitchPassive(buf, 0)

/**
 * Signal EspSwitchPassive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_EspSwitchPassive(x, fmt) \
	((x) * fmt)

/**
 * Signal EspSwitchPassive raw initial value.
 */
#define START_Vehicle_CAN_01_EspSwitchPassive       0

/**
 * Signal EspSwitchPassive raw minimum value.
 */
#define MIN_Vehicle_CAN_01_EspSwitchPassive         0

/**
 * Signal EspSwitchPassive raw maximum value.
 */
#define MAX_Vehicle_CAN_01_EspSwitchPassive         1

/**
 * Signal EspSwitchPassive raw offset value.
 */
#define OFF_Vehicle_CAN_01_EspSwitchPassive         0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_01_EspSwitchPassive Value Table for Signal EspSwitchPassive in Message Vehicle_CAN_01 (0x101)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_01_EspSwitchPassive.
 *
 * @ingroup SIG_Vehicle_CAN_01_EspSwitchPassive
 */

/**
 * Value table Vehicle_CAN_01_EspSwitchPassive entry on.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspSwitchPassive
 */
#define Vehicle_CAN_01_EspSwitchPassive_on                  1

/**
 * Value table Vehicle_CAN_01_EspSwitchPassive entry off.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspSwitchPassive
 */
#define Vehicle_CAN_01_EspSwitchPassive_off                 0

/**
 * @defgroup SIG_Vehicle_CAN_01_EspIntervention Signal EspIntervention of Message Vehicle_CAN_01 (0x101)
 *
 * Contains the value table \ref ENUM_Vehicle_CAN_01_EspIntervention.
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal EspIntervention configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_EspIntervention and \ref GET_Vehicle_CAN_01_EspIntervention instead.
 */
#define SIG_Vehicle_CAN_01_EspIntervention          0, 0, 12, 1

/**
 * Signal EspIntervention setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_EspIntervention or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_EspIntervention        0, 0, 12, 1, 0

/**
 * Get signal EspIntervention from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_EspIntervention(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0) \
)

/**
 * Set signal EspIntervention in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_EspIntervention(buf, val) { \
	buf[1] &= ~(0x01 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal EspIntervention in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_EspIntervention(buf) \
	SET_Vehicle_CAN_01_EspIntervention(buf, 0)

/**
 * Signal EspIntervention value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_EspIntervention(x, fmt) \
	((x) * fmt)

/**
 * Signal EspIntervention raw initial value.
 */
#define START_Vehicle_CAN_01_EspIntervention        0

/**
 * Signal EspIntervention raw minimum value.
 */
#define MIN_Vehicle_CAN_01_EspIntervention          0

/**
 * Signal EspIntervention raw maximum value.
 */
#define MAX_Vehicle_CAN_01_EspIntervention          1

/**
 * Signal EspIntervention raw offset value.
 */
#define OFF_Vehicle_CAN_01_EspIntervention          0

/**
 * @}
 */

/**
 * @defgroup ENUM_Vehicle_CAN_01_EspIntervention Value Table for Signal EspIntervention in Message Vehicle_CAN_01 (0x101)
 *
 * Enum values defined for \ref SIG_Vehicle_CAN_01_EspIntervention.
 *
 * @ingroup SIG_Vehicle_CAN_01_EspIntervention
 */

/**
 * Value table Vehicle_CAN_01_EspIntervention entry intervention.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspIntervention
 */
#define Vehicle_CAN_01_EspIntervention_intervention        1

/**
 * Value table Vehicle_CAN_01_EspIntervention entry noIntervention.
 *
 * @ingroup ENUM_Vehicle_CAN_01_EspIntervention
 */
#define Vehicle_CAN_01_EspIntervention_noIntervention      0

/**
 * @defgroup SIG_Vehicle_CAN_01_YawRate Signal YawRate of Message Vehicle_CAN_01 (0x101)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal YawRate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_YawRate and \ref GET_Vehicle_CAN_01_YawRate instead.
 */
#define SIG_Vehicle_CAN_01_YawRate                  0, 0, 48, 16

/**
 * Signal YawRate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_YawRate or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_YawRate                0, 0, 48, 16, 32767

/**
 * Get signal YawRate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_YawRate(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[7] >> 0) & 0xff) << 8) \
)

/**
 * Set signal YawRate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_YawRate(buf, val) { \
	buf[6] &= (ubyte)~(0xff << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[7] &= (ubyte)~(0xff << 0); \
	buf[7] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal YawRate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_YawRate(buf) \
	SET_Vehicle_CAN_01_YawRate(buf, 32767)

/**
 * Signal YawRate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_YawRate(x, fmt) \
	((x) * fmt / 100 + fmt * 32767 / (-100))

/**
 * Signal YawRate raw initial value.
 */
#define START_Vehicle_CAN_01_YawRate                32767

/**
 * Signal YawRate raw minimum value.
 */
#define MIN_Vehicle_CAN_01_YawRate                  0

/**
 * Signal YawRate raw maximum value.
 */
#define MAX_Vehicle_CAN_01_YawRate                  65534

/**
 * Signal YawRate raw offset value.
 */
#define OFF_Vehicle_CAN_01_YawRate                  -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_01_LongitudinalAccel Signal LongitudinalAccel of Message Vehicle_CAN_01 (0x101)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal LongitudinalAccel configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_LongitudinalAccel and \ref GET_Vehicle_CAN_01_LongitudinalAccel instead.
 */
#define SIG_Vehicle_CAN_01_LongitudinalAccel        0, 0, 32, 16

/**
 * Signal LongitudinalAccel setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_LongitudinalAccel or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_LongitudinalAccel      0, 0, 32, 16, 32767

/**
 * Get signal LongitudinalAccel from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_LongitudinalAccel(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[5] >> 0) & 0xff) << 8) \
)

/**
 * Set signal LongitudinalAccel in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_LongitudinalAccel(buf, val) { \
	buf[4] &= (ubyte)~(0xff << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[5] &= (ubyte)~(0xff << 0); \
	buf[5] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal LongitudinalAccel in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_LongitudinalAccel(buf) \
	SET_Vehicle_CAN_01_LongitudinalAccel(buf, 32767)

/**
 * Signal LongitudinalAccel value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_LongitudinalAccel(x, fmt) \
	((x) * fmt / 1000 + fmt * 32767 / (-1000))

/**
 * Signal LongitudinalAccel raw initial value.
 */
#define START_Vehicle_CAN_01_LongitudinalAccel      32767

/**
 * Signal LongitudinalAccel raw minimum value.
 */
#define MIN_Vehicle_CAN_01_LongitudinalAccel        0

/**
 * Signal LongitudinalAccel raw maximum value.
 */
#define MAX_Vehicle_CAN_01_LongitudinalAccel        65534

/**
 * Signal LongitudinalAccel raw offset value.
 */
#define OFF_Vehicle_CAN_01_LongitudinalAccel        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_01_LateralAcceleration Signal LateralAcceleration of Message Vehicle_CAN_01 (0x101)
 *
 * Received by the ECUs:
 * - \ref ECU_BoschVideo
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal LateralAcceleration configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_LateralAcceleration and \ref GET_Vehicle_CAN_01_LateralAcceleration instead.
 */
#define SIG_Vehicle_CAN_01_LateralAcceleration        0, 0, 16, 16

/**
 * Signal LateralAcceleration setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_LateralAcceleration or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_LateralAcceleration      0, 0, 16, 16, 32767

/**
 * Get signal LateralAcceleration from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_LateralAcceleration(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0) \
	| (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) \
)

/**
 * Set signal LateralAcceleration in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_LateralAcceleration(buf, val) { \
	buf[2] &= (ubyte)~(0xff << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
	buf[3] &= (ubyte)~(0xff << 0); \
	buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal LateralAcceleration in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_LateralAcceleration(buf) \
	SET_Vehicle_CAN_01_LateralAcceleration(buf, 32767)

/**
 * Signal LateralAcceleration value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_LateralAcceleration(x, fmt) \
	((x) * fmt / 1000 + fmt * 32767 / (-1000))

/**
 * Signal LateralAcceleration raw initial value.
 */
#define START_Vehicle_CAN_01_LateralAcceleration      32767

/**
 * Signal LateralAcceleration raw minimum value.
 */
#define MIN_Vehicle_CAN_01_LateralAcceleration        0

/**
 * Signal LateralAcceleration raw maximum value.
 */
#define MAX_Vehicle_CAN_01_LateralAcceleration        65534

/**
 * Signal LateralAcceleration raw offset value.
 */
#define OFF_Vehicle_CAN_01_LateralAcceleration        -32767

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC Signal Vehicle_CAN_01_CRC of Message Vehicle_CAN_01 (0x101)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal Vehicle_CAN_01_CRC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_Vehicle_CAN_01_CRC and \ref GET_Vehicle_CAN_01_Vehicle_CAN_01_CRC instead.
 */
#define SIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC        0, 0, 0, 8

/**
 * Signal Vehicle_CAN_01_CRC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_Vehicle_CAN_01_CRC      0, 0, 0, 8, 0

/**
 * Get signal Vehicle_CAN_01_CRC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_Vehicle_CAN_01_CRC(buf) (0 \
	| (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0) \
)

/**
 * Set signal Vehicle_CAN_01_CRC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_Vehicle_CAN_01_CRC(buf, val) { \
	buf[0] &= (ubyte)~(0xff << 0); \
	buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal Vehicle_CAN_01_CRC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_CRC(buf) \
	SET_Vehicle_CAN_01_Vehicle_CAN_01_CRC(buf, 0)

/**
 * Signal Vehicle_CAN_01_CRC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_Vehicle_CAN_01_CRC(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_01_CRC raw initial value.
 */
#define START_Vehicle_CAN_01_Vehicle_CAN_01_CRC      0

/**
 * Signal Vehicle_CAN_01_CRC raw minimum value.
 */
#define MIN_Vehicle_CAN_01_Vehicle_CAN_01_CRC        0

/**
 * Signal Vehicle_CAN_01_CRC raw maximum value.
 */
#define MAX_Vehicle_CAN_01_Vehicle_CAN_01_CRC        255

/**
 * Signal Vehicle_CAN_01_CRC raw offset value.
 */
#define OFF_Vehicle_CAN_01_Vehicle_CAN_01_CRC        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter Signal Vehicle_CAN_01_Counter of Message Vehicle_CAN_01 (0x101)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Vehicle_CAN_01
 * @{
 */

/**
 * Signal Vehicle_CAN_01_Counter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_CAN_01_Vehicle_CAN_01_Counter and \ref GET_Vehicle_CAN_01_Vehicle_CAN_01_Counter instead.
 */
#define SIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter        0, 0, 8, 4

/**
 * Signal Vehicle_CAN_01_Counter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter or \ref INIT_Vehicle_CAN_01 instead.
 */
#define SETUP_Vehicle_CAN_01_Vehicle_CAN_01_Counter      0, 0, 8, 4, 0

/**
 * Get signal Vehicle_CAN_01_Counter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_CAN_01_Vehicle_CAN_01_Counter(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal Vehicle_CAN_01_Counter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_CAN_01_Vehicle_CAN_01_Counter(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal Vehicle_CAN_01_Counter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_CAN_01_Vehicle_CAN_01_Counter(buf) \
	SET_Vehicle_CAN_01_Vehicle_CAN_01_Counter(buf, 0)

/**
 * Signal Vehicle_CAN_01_Counter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_CAN_01_Vehicle_CAN_01_Counter(x, fmt) \
	((x) * fmt)

/**
 * Signal Vehicle_CAN_01_Counter raw initial value.
 */
#define START_Vehicle_CAN_01_Vehicle_CAN_01_Counter      0

/**
 * Signal Vehicle_CAN_01_Counter raw minimum value.
 */
#define MIN_Vehicle_CAN_01_Vehicle_CAN_01_Counter        0

/**
 * Signal Vehicle_CAN_01_Counter raw maximum value.
 */
#define MAX_Vehicle_CAN_01_Vehicle_CAN_01_Counter        15

/**
 * Signal Vehicle_CAN_01_Counter raw offset value.
 */
#define OFF_Vehicle_CAN_01_Vehicle_CAN_01_Counter        0

/**
 * @}
 */

/**
 * @defgroup ENUM_NavCurrRoadType Value Table NavCurrRoadType
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table NavCurrRoadType entry reserved.
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_reserved            7

/**
 * Value table NavCurrRoadType entry reserved_6.
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_reserved_6          6

/**
 * Value table NavCurrRoadType entry Type.
 *
 * 5
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Type                5

/**
 * Value table NavCurrRoadType entry Type_4.
 *
 * 4
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Type_4              4

/**
 * Value table NavCurrRoadType entry Type_3.
 *
 * 3
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Type_3              3

/**
 * Value table NavCurrRoadType entry Type_2.
 *
 * 2
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Type_2              2

/**
 * Value table NavCurrRoadType entry Type_1.
 *
 * 1
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Type_1              1

/**
 * Value table NavCurrRoadType entry Unknown.
 *
 * @ingroup ENUM_NavCurrRoadType
 */
#define NavCurrRoadType_Unknown             0

/**
 * @defgroup ENUM_NavSpdLimitUnits Value Table NavSpdLimitUnits
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table NavSpdLimitUnits entry reserved.
 *
 * @ingroup ENUM_NavSpdLimitUnits
 */
#define NavSpdLimitUnits_reserved            3

/**
 * Value table NavSpdLimitUnits entry metric.
 *
 * @ingroup ENUM_NavSpdLimitUnits
 */
#define NavSpdLimitUnits_metric              2

/**
 * Value table NavSpdLimitUnits entry imperial.
 *
 * @ingroup ENUM_NavSpdLimitUnits
 */
#define NavSpdLimitUnits_imperial            1

/**
 * Value table NavSpdLimitUnits entry Unknown.
 *
 * @ingroup ENUM_NavSpdLimitUnits
 */
#define NavSpdLimitUnits_Unknown             0

/**
 * @defgroup ENUM_NavSpdLimitStatus Value Table NavSpdLimitStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table NavSpdLimitStatus entry Plural.
 *
 * data exists
 *
 * @ingroup ENUM_NavSpdLimitStatus
 */
#define NavSpdLimitStatus_Plural              3

/**
 * Value table NavSpdLimitStatus entry No.
 *
 * Limit
 *
 * @ingroup ENUM_NavSpdLimitStatus
 */
#define NavSpdLimitStatus_No                  2

/**
 * Value table NavSpdLimitStatus entry Exists.
 *
 * @ingroup ENUM_NavSpdLimitStatus
 */
#define NavSpdLimitStatus_Exists              1

/**
 * Value table NavSpdLimitStatus entry Unknown.
 *
 * @ingroup ENUM_NavSpdLimitStatus
 */
#define NavSpdLimitStatus_Unknown             0

/**
 * @defgroup ENUM_vehicleMovementStatus Value Table vehicleMovementStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table vehicleMovementStatus entry flipping.
 *
 * around
 *
 * @ingroup ENUM_vehicleMovementStatus
 */
#define vehicleMovementStatus_flipping            3

/**
 * Value table vehicleMovementStatus entry reverse.
 *
 * @ingroup ENUM_vehicleMovementStatus
 */
#define vehicleMovementStatus_reverse             2

/**
 * Value table vehicleMovementStatus entry forward.
 *
 * @ingroup ENUM_vehicleMovementStatus
 */
#define vehicleMovementStatus_forward             1

/**
 * Value table vehicleMovementStatus entry static.
 *
 * @ingroup ENUM_vehicleMovementStatus
 */
#define vehicleMovementStatus_static              0

/**
 * @defgroup ENUM_EspHillDescentControl Value Table EspHillDescentControl
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table EspHillDescentControl entry on.
 *
 * @ingroup ENUM_EspHillDescentControl
 */
#define EspHillDescentControl_on                  1

/**
 * Value table EspHillDescentControl entry off.
 *
 * @ingroup ENUM_EspHillDescentControl
 */
#define EspHillDescentControl_off                 0

/**
 * @defgroup ENUM_ESPSwitchPassive Value Table ESPSwitchPassive
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESPSwitchPassive entry Passive.
 *
 * @ingroup ENUM_ESPSwitchPassive
 */
#define ESPSwitchPassive_Passive             1

/**
 * Value table ESPSwitchPassive entry Active.
 *
 * @ingroup ENUM_ESPSwitchPassive
 */
#define ESPSwitchPassive_Active              0

/**
 * @defgroup ENUM_YawRateQuality Value Table YawRateQuality
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table YawRateQuality entry not.
 *
 * OK
 *
 * @ingroup ENUM_YawRateQuality
 */
#define YawRateQuality_not                 1

/**
 * Value table YawRateQuality entry OK.
 *
 * @ingroup ENUM_YawRateQuality
 */
#define YawRateQuality_OK                  0

/**
 * @defgroup ENUM_EspIntervention Value Table EspIntervention
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table EspIntervention entry intervention.
 *
 * @ingroup ENUM_EspIntervention
 */
#define EspIntervention_intervention        1

/**
 * Value table EspIntervention entry no.
 *
 * intervention
 *
 * @ingroup ENUM_EspIntervention
 */
#define EspIntervention_no                  0

/**
 * @defgroup ENUM_AbsIntervention Value Table AbsIntervention
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table AbsIntervention entry intervention.
 *
 * @ingroup ENUM_AbsIntervention
 */
#define AbsIntervention_intervention        1

/**
 * Value table AbsIntervention entry noIntervention.
 *
 * @ingroup ENUM_AbsIntervention
 */
#define AbsIntervention_noIntervention      0

/**
 * @defgroup ENUM_AsrSwitchPassive Value Table AsrSwitchPassive
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table AsrSwitchPassive entry Passive.
 *
 * @ingroup ENUM_AsrSwitchPassive
 */
#define AsrSwitchPassive_Passive             1

/**
 * Value table AsrSwitchPassive entry Active.
 *
 * @ingroup ENUM_AsrSwitchPassive
 */
#define AsrSwitchPassive_Active              0

/**
 * @defgroup ENUM_ESPSystemState Value Table ESPSystemState
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESPSystemState entry error.
 *
 * @ingroup ENUM_ESPSystemState
 */
#define ESPSystemState_error               1

/**
 * Value table ESPSystemState entry no.
 *
 * error
 *
 * @ingroup ENUM_ESPSystemState
 */
#define ESPSystemState_no                  0

/**
 * @defgroup ENUM_on_off Value Table on_off
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table on_off entry on.
 *
 * @ingroup ENUM_on_off
 */
#define on_off_on                  1

/**
 * Value table on_off entry off.
 *
 * @ingroup ENUM_on_off
 */
#define on_off_off                 0

/**
 * @defgroup ENUM_ReversingLight Value Table ReversingLight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ReversingLight entry light.
 *
 * on
 *
 * @ingroup ENUM_ReversingLight
 */
#define ReversingLight_light               1

/**
 * Value table ReversingLight entry light_0.
 *
 * off
 *
 * @ingroup ENUM_ReversingLight
 */
#define ReversingLight_light_0             0

/**
 * @defgroup ENUM_Crash Value Table Crash
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table Crash entry crash.
 *
 * @ingroup ENUM_Crash
 */
#define Crash_crash               1

/**
 * Value table Crash entry no.
 *
 * crash
 *
 * @ingroup ENUM_Crash
 */
#define Crash_no                  0

/**
 * @defgroup ENUM_FoggingRiskWindscreen Value Table FoggingRiskWindscreen
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table FoggingRiskWindscreen entry high.
 *
 * risk
 *
 * @ingroup ENUM_FoggingRiskWindscreen
 */
#define FoggingRiskWindscreen_high                1

/**
 * Value table FoggingRiskWindscreen entry no.
 *
 * risk
 *
 * @ingroup ENUM_FoggingRiskWindscreen
 */
#define FoggingRiskWindscreen_no                  0

/**
 * @defgroup ENUM_DisableRollerDynMode Value Table DisableRollerDynMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table DisableRollerDynMode entry On.
 *
 * @ingroup ENUM_DisableRollerDynMode
 */
#define DisableRollerDynMode_On                  1

/**
 * Value table DisableRollerDynMode entry Off.
 *
 * @ingroup ENUM_DisableRollerDynMode
 */
#define DisableRollerDynMode_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_VerticalAngleRight Value Table CAM_03_IHC_VerticalAngleRight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_VerticalAngleRight entry Main.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleRight
 */
#define CAM_03_IHC_VerticalAngleRight_Main                8191

/**
 * Value table CAM_03_IHC_VerticalAngleRight entry Low.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleRight
 */
#define CAM_03_IHC_VerticalAngleRight_Low                 8190

/**
 * Value table CAM_03_IHC_VerticalAngleRight entry Fault.
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleRight
 */
#define CAM_03_IHC_VerticalAngleRight_Fault               8189

/**
 * Value table CAM_03_IHC_VerticalAngleRight entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleRight
 */
#define CAM_03_IHC_VerticalAngleRight_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_VerticalAngleLeft Value Table CAM_03_IHC_VerticalAngleLeft
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_VerticalAngleLeft entry Main.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleLeft
 */
#define CAM_03_IHC_VerticalAngleLeft_Main                8191

/**
 * Value table CAM_03_IHC_VerticalAngleLeft entry Low.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleLeft
 */
#define CAM_03_IHC_VerticalAngleLeft_Low                 8190

/**
 * Value table CAM_03_IHC_VerticalAngleLeft entry Fault.
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleLeft
 */
#define CAM_03_IHC_VerticalAngleLeft_Fault               8189

/**
 * Value table CAM_03_IHC_VerticalAngleLeft entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_VerticalAngleLeft
 */
#define CAM_03_IHC_VerticalAngleLeft_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_HorizontalAngleLeft Value Table CAM_03_IHC_HorizontalAngleLeft
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_HorizontalAngleLeft entry Main.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleLeft
 */
#define CAM_03_IHC_HorizontalAngleLeft_Main                511

/**
 * Value table CAM_03_IHC_HorizontalAngleLeft entry Low.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleLeft
 */
#define CAM_03_IHC_HorizontalAngleLeft_Low                 510

/**
 * Value table CAM_03_IHC_HorizontalAngleLeft entry Fault.
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleLeft
 */
#define CAM_03_IHC_HorizontalAngleLeft_Fault               509

/**
 * Value table CAM_03_IHC_HorizontalAngleLeft entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleLeft
 */
#define CAM_03_IHC_HorizontalAngleLeft_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_HorizontalAngleRight Value Table CAM_03_IHC_HorizontalAngleRight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_HorizontalAngleRight entry Main.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleRight
 */
#define CAM_03_IHC_HorizontalAngleRight_Main                511

/**
 * Value table CAM_03_IHC_HorizontalAngleRight entry Low.
 *
 * Beam
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleRight
 */
#define CAM_03_IHC_HorizontalAngleRight_Low                 510

/**
 * Value table CAM_03_IHC_HorizontalAngleRight entry Fault.
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleRight
 */
#define CAM_03_IHC_HorizontalAngleRight_Fault               509

/**
 * Value table CAM_03_IHC_HorizontalAngleRight entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_HorizontalAngleRight
 */
#define CAM_03_IHC_HorizontalAngleRight_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_Status Value Table CAM_03_IHC_Status
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_Status entry Fault.
 *
 * @ingroup ENUM_CAM_03_IHC_Status
 */
#define CAM_03_IHC_Status_Fault               3

/**
 * Value table CAM_03_IHC_Status entry Active.
 *
 * @ingroup ENUM_CAM_03_IHC_Status
 */
#define CAM_03_IHC_Status_Active              2

/**
 * Value table CAM_03_IHC_Status entry Idle.
 *
 * @ingroup ENUM_CAM_03_IHC_Status
 */
#define CAM_03_IHC_Status_Idle                1

/**
 * Value table CAM_03_IHC_Status entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_Status
 */
#define CAM_03_IHC_Status_Off                 0

/**
 * @defgroup ENUM_CAM_03_IHC_Mode Value Table CAM_03_IHC_Mode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_03_IHC_Mode entry reserved.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_reserved            7

/**
 * Value table CAM_03_IHC_Mode entry reserved_6.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_reserved_6          6

/**
 * Value table CAM_03_IHC_Mode entry reserved_5.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_reserved_5          5

/**
 * Value table CAM_03_IHC_Mode entry MxB.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_MxB                 4

/**
 * Value table CAM_03_IHC_Mode entry CHB.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_CHB                 3

/**
 * Value table CAM_03_IHC_Mode entry IHB.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_IHB                 2

/**
 * Value table CAM_03_IHC_Mode entry AHB.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_AHB                 1

/**
 * Value table CAM_03_IHC_Mode entry Off.
 *
 * @ingroup ENUM_CAM_03_IHC_Mode
 */
#define CAM_03_IHC_Mode_Off                 0

/**
 * @defgroup ENUM_CAM_02_FCWText Value Table CAM_02_FCWText
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_FCWText entry reserved.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved            7

/**
 * Value table CAM_02_FCWText entry reserved_6.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_6          6

/**
 * Value table CAM_02_FCWText entry reserved_5.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_5          5

/**
 * Value table CAM_02_FCWText entry reserved_4.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_4          4

/**
 * Value table CAM_02_FCWText entry reserved_3.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_3          3

/**
 * Value table CAM_02_FCWText entry reserved_2.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_2          2

/**
 * Value table CAM_02_FCWText entry reserved_1.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_1          1

/**
 * Value table CAM_02_FCWText entry reserved_0.
 *
 * @ingroup ENUM_CAM_02_FCWText
 */
#define CAM_02_FCWText_reserved_0          0

/**
 * @defgroup ENUM_CAM_02_FCWMode Value Table CAM_02_FCWMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_FCWMode entry On.
 *
 * @ingroup ENUM_CAM_02_FCWMode
 */
#define CAM_02_FCWMode_On                  1

/**
 * Value table CAM_02_FCWMode entry Off.
 *
 * @ingroup ENUM_CAM_02_FCWMode
 */
#define CAM_02_FCWMode_Off                 0

/**
 * @defgroup ENUM_CAM_02_FCWStatus Value Table CAM_02_FCWStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_FCWStatus entry Warning.
 *
 * @ingroup ENUM_CAM_02_FCWStatus
 */
#define CAM_02_FCWStatus_Warning             3

/**
 * Value table CAM_02_FCWStatus entry Watching.
 *
 * @ingroup ENUM_CAM_02_FCWStatus
 */
#define CAM_02_FCWStatus_Watching            2

/**
 * Value table CAM_02_FCWStatus entry Idle.
 *
 * @ingroup ENUM_CAM_02_FCWStatus
 */
#define CAM_02_FCWStatus_Idle                1

/**
 * Value table CAM_02_FCWStatus entry Fault.
 *
 * @ingroup ENUM_CAM_02_FCWStatus
 */
#define CAM_02_FCWStatus_Fault               0

/**
 * @defgroup ENUM_CAM_02_LDSOperatingState Value Table CAM_02_LDSOperatingState
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_LDSOperatingState entry HighSensivity.
 *
 * @ingroup ENUM_CAM_02_LDSOperatingState
 */
#define CAM_02_LDSOperatingState_HighSensivity       1

/**
 * Value table CAM_02_LDSOperatingState entry LowSensivity.
 *
 * @ingroup ENUM_CAM_02_LDSOperatingState
 */
#define CAM_02_LDSOperatingState_LowSensivity        0

/**
 * @defgroup ENUM_CAM_02_LDSWarningLDW Value Table CAM_02_LDSWarningLDW
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_LDSWarningLDW entry Warning.
 *
 * Right
 *
 * @ingroup ENUM_CAM_02_LDSWarningLDW
 */
#define CAM_02_LDSWarningLDW_Warning             3

/**
 * Value table CAM_02_LDSWarningLDW entry Warning_2.
 *
 * Left
 *
 * @ingroup ENUM_CAM_02_LDSWarningLDW
 */
#define CAM_02_LDSWarningLDW_Warning_2           2

/**
 * Value table CAM_02_LDSWarningLDW entry Idle.
 *
 * @ingroup ENUM_CAM_02_LDSWarningLDW
 */
#define CAM_02_LDSWarningLDW_Idle                1

/**
 * Value table CAM_02_LDSWarningLDW entry Off.
 *
 * @ingroup ENUM_CAM_02_LDSWarningLDW
 */
#define CAM_02_LDSWarningLDW_Off                 0

/**
 * @defgroup ENUM_CAM_02_LDSStatus Value Table CAM_02_LDSStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_LDSStatus entry reserved.
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_reserved            7

/**
 * Value table CAM_02_LDSStatus entry External.
 *
 * System Override
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_External            6

/**
 * Value table CAM_02_LDSStatus entry Driver.
 *
 * Override
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Driver              5

/**
 * Value table CAM_02_LDSStatus entry Tracking.
 *
 * Left & Right
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Tracking            4

/**
 * Value table CAM_02_LDSStatus entry Tracking_3.
 *
 * Right
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Tracking_3          3

/**
 * Value table CAM_02_LDSStatus entry Tracking_2.
 *
 * Left
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Tracking_2          2

/**
 * Value table CAM_02_LDSStatus entry Idle.
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Idle                1

/**
 * Value table CAM_02_LDSStatus entry Fault.
 *
 * @ingroup ENUM_CAM_02_LDSStatus
 */
#define CAM_02_LDSStatus_Fault               0

/**
 * @defgroup ENUM_CAM_02_LDSMode Value Table CAM_02_LDSMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_LDSMode entry reserved.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_reserved            7

/**
 * Value table CAM_02_LDSMode entry reserved_6.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_reserved_6          6

/**
 * Value table CAM_02_LDSMode entry ASC.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_ASC                 5

/**
 * Value table CAM_02_LDSMode entry LKA.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_LKA                 4

/**
 * Value table CAM_02_LDSMode entry LDP.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_LDP                 3

/**
 * Value table CAM_02_LDSMode entry LDW.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_LDW                 2

/**
 * Value table CAM_02_LDSMode entry Init.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_Init                1

/**
 * Value table CAM_02_LDSMode entry Off.
 *
 * @ingroup ENUM_CAM_02_LDSMode
 */
#define CAM_02_LDSMode_Off                 0

/**
 * @defgroup ENUM_CAM_02_LDSTrqReqDir Value Table CAM_02_LDSTrqReqDir
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_LDSTrqReqDir entry Counterclockwise.
 *
 * @ingroup ENUM_CAM_02_LDSTrqReqDir
 */
#define CAM_02_LDSTrqReqDir_Counterclockwise    3

/**
 * Value table CAM_02_LDSTrqReqDir entry Clockwise.
 *
 * @ingroup ENUM_CAM_02_LDSTrqReqDir
 */
#define CAM_02_LDSTrqReqDir_Clockwise           2

/**
 * Value table CAM_02_LDSTrqReqDir entry Init.
 *
 * @ingroup ENUM_CAM_02_LDSTrqReqDir
 */
#define CAM_02_LDSTrqReqDir_Init                1

/**
 * Value table CAM_02_LDSTrqReqDir entry Fault.
 *
 * @ingroup ENUM_CAM_02_LDSTrqReqDir
 */
#define CAM_02_LDSTrqReqDir_Fault               0

/**
 * @defgroup ENUM_CAM_02_AEBMode Value Table CAM_02_AEBMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_AEBMode entry reserved.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved            7

/**
 * Value table CAM_02_AEBMode entry reserved_6.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved_6          6

/**
 * Value table CAM_02_AEBMode entry reserved_5.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved_5          5

/**
 * Value table CAM_02_AEBMode entry reserved_4.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved_4          4

/**
 * Value table CAM_02_AEBMode entry reserved_3.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved_3          3

/**
 * Value table CAM_02_AEBMode entry reserved_2.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_reserved_2          2

/**
 * Value table CAM_02_AEBMode entry Off.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_Off                 1

/**
 * Value table CAM_02_AEBMode entry Fault.
 *
 * @ingroup ENUM_CAM_02_AEBMode
 */
#define CAM_02_AEBMode_Fault               0

/**
 * @defgroup ENUM_CAM_02_AEBStatus Value Table CAM_02_AEBStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_02_AEBStatus entry Reserved.
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Reserved            7

/**
 * Value table CAM_02_AEBStatus entry External.
 *
 * System Override
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_External            6

/**
 * Value table CAM_02_AEBStatus entry Driver.
 *
 * Override
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Driver              5

/**
 * Value table CAM_02_AEBStatus entry AEB.
 *
 * aktivated
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_AEB                 4

/**
 * Value table CAM_02_AEBStatus entry Watching.
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Watching            3

/**
 * Value table CAM_02_AEBStatus entry Idle.
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Idle                2

/**
 * Value table CAM_02_AEBStatus entry Off.
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Off                 1

/**
 * Value table CAM_02_AEBStatus entry Fault.
 *
 * @ingroup ENUM_CAM_02_AEBStatus
 */
#define CAM_02_AEBStatus_Fault               0

/**
 * @defgroup ENUM_CAM_01_TSRMode Value Table CAM_01_TSRMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_01_TSRMode entry Reserved.
 *
 * @ingroup ENUM_CAM_01_TSRMode
 */
#define CAM_01_TSRMode_Reserved            3

/**
 * Value table CAM_01_TSRMode entry Fusion.
 *
 * @ingroup ENUM_CAM_01_TSRMode
 */
#define CAM_01_TSRMode_Fusion              2

/**
 * Value table CAM_01_TSRMode entry Vision.
 *
 * @ingroup ENUM_CAM_01_TSRMode
 */
#define CAM_01_TSRMode_Vision              1

/**
 * Value table CAM_01_TSRMode entry Off.
 *
 * @ingroup ENUM_CAM_01_TSRMode
 */
#define CAM_01_TSRMode_Off                 0

/**
 * @defgroup ENUM_CAM_01_TSRUnits Value Table CAM_01_TSRUnits
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CAM_01_TSRUnits entry Wierd.
 *
 * @ingroup ENUM_CAM_01_TSRUnits
 */
#define CAM_01_TSRUnits_Wierd               3

/**
 * Value table CAM_01_TSRUnits entry Imperial.
 *
 * @ingroup ENUM_CAM_01_TSRUnits
 */
#define CAM_01_TSRUnits_Imperial            2

/**
 * Value table CAM_01_TSRUnits entry Metric.
 *
 * @ingroup ENUM_CAM_01_TSRUnits
 */
#define CAM_01_TSRUnits_Metric              1

/**
 * Value table CAM_01_TSRUnits entry Fault.
 *
 * @ingroup ENUM_CAM_01_TSRUnits
 */
#define CAM_01_TSRUnits_Fault               0

/**
 * @defgroup ENUM_ShockAbsCalib Value Table ShockAbsCalib
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ShockAbsCalib entry Calibrated.
 *
 * @ingroup ENUM_ShockAbsCalib
 */
#define ShockAbsCalib_Calibrated          3

/**
 * Value table ShockAbsCalib entry Not.
 *
 * Calibrated
 *
 * @ingroup ENUM_ShockAbsCalib
 */
#define ShockAbsCalib_Not                 2

/**
 * Value table ShockAbsCalib entry Fault.
 *
 * @ingroup ENUM_ShockAbsCalib
 */
#define ShockAbsCalib_Fault               1

/**
 * Value table ShockAbsCalib entry Not_0.
 *
 * Supported
 *
 * @ingroup ENUM_ShockAbsCalib
 */
#define ShockAbsCalib_Not_0               0

/**
 * @defgroup ENUM_CruiseStatus Value Table CruiseStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table CruiseStatus entry reserved.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_reserved            7

/**
 * Value table CruiseStatus entry reserved_6.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_reserved_6          6

/**
 * Value table CruiseStatus entry externalFunctionOverride.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_externalFunctionOverride    5

/**
 * Value table CruiseStatus entry driverOverride.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_driverOverride      4

/**
 * Value table CruiseStatus entry inhibitingCruiseRequest.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_inhibitingCruiseRequest    3

/**
 * Value table CruiseStatus entry idle.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_idle                2

/**
 * Value table CruiseStatus entry fault.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_fault               1

/**
 * Value table CruiseStatus entry cruiseControlNotSupported.
 *
 * @ingroup ENUM_CruiseStatus
 */
#define CruiseStatus_cruiseControlNotSupported    0

/**
 * @defgroup ENUM_ESP_01_DriverBraking Value Table ESP_01_DriverBraking
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_DriverBraking entry External.
 *
 * Brake Activation
 *
 * @ingroup ENUM_ESP_01_DriverBraking
 */
#define ESP_01_DriverBraking_External            3

/**
 * Value table ESP_01_DriverBraking entry Active.
 *
 * @ingroup ENUM_ESP_01_DriverBraking
 */
#define ESP_01_DriverBraking_Active              2

/**
 * Value table ESP_01_DriverBraking entry Inactive.
 *
 * @ingroup ENUM_ESP_01_DriverBraking
 */
#define ESP_01_DriverBraking_Inactive            1

/**
 * Value table ESP_01_DriverBraking entry Fault.
 *
 * @ingroup ENUM_ESP_01_DriverBraking
 */
#define ESP_01_DriverBraking_Fault               0

/**
 * @defgroup ENUM_ESP_01_YawRateSensorStatus Value Table ESP_01_YawRateSensorStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_YawRateSensorStatus entry Working.
 *
 * @ingroup ENUM_ESP_01_YawRateSensorStatus
 */
#define ESP_01_YawRateSensorStatus_Working             3

/**
 * Value table ESP_01_YawRateSensorStatus entry Emulated.
 *
 * @ingroup ENUM_ESP_01_YawRateSensorStatus
 */
#define ESP_01_YawRateSensorStatus_Emulated            2

/**
 * Value table ESP_01_YawRateSensorStatus entry Init.
 *
 * @ingroup ENUM_ESP_01_YawRateSensorStatus
 */
#define ESP_01_YawRateSensorStatus_Init                1

/**
 * Value table ESP_01_YawRateSensorStatus entry Fault.
 *
 * @ingroup ENUM_ESP_01_YawRateSensorStatus
 */
#define ESP_01_YawRateSensorStatus_Fault               0

/**
 * @defgroup ENUM_ESP_01_LongAccSensorStatus Value Table ESP_01_LongAccSensorStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_LongAccSensorStatus entry Working.
 *
 * @ingroup ENUM_ESP_01_LongAccSensorStatus
 */
#define ESP_01_LongAccSensorStatus_Working             3

/**
 * Value table ESP_01_LongAccSensorStatus entry Emulated.
 *
 * @ingroup ENUM_ESP_01_LongAccSensorStatus
 */
#define ESP_01_LongAccSensorStatus_Emulated            2

/**
 * Value table ESP_01_LongAccSensorStatus entry Init.
 *
 * @ingroup ENUM_ESP_01_LongAccSensorStatus
 */
#define ESP_01_LongAccSensorStatus_Init                1

/**
 * Value table ESP_01_LongAccSensorStatus entry Fault.
 *
 * @ingroup ENUM_ESP_01_LongAccSensorStatus
 */
#define ESP_01_LongAccSensorStatus_Fault               0

/**
 * @defgroup ENUM_ESP_01_LatAccSensorStatus Value Table ESP_01_LatAccSensorStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_LatAccSensorStatus entry Working.
 *
 * @ingroup ENUM_ESP_01_LatAccSensorStatus
 */
#define ESP_01_LatAccSensorStatus_Working             3

/**
 * Value table ESP_01_LatAccSensorStatus entry Emulated.
 *
 * @ingroup ENUM_ESP_01_LatAccSensorStatus
 */
#define ESP_01_LatAccSensorStatus_Emulated            2

/**
 * Value table ESP_01_LatAccSensorStatus entry Init.
 *
 * @ingroup ENUM_ESP_01_LatAccSensorStatus
 */
#define ESP_01_LatAccSensorStatus_Init                1

/**
 * Value table ESP_01_LatAccSensorStatus entry Fault.
 *
 * @ingroup ENUM_ESP_01_LatAccSensorStatus
 */
#define ESP_01_LatAccSensorStatus_Fault               0

/**
 * @defgroup ENUM_TerrainMode Value Table TerrainMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table TerrainMode entry Reserved.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved            15

/**
 * Value table TerrainMode entry Reserved_E.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_E          14

/**
 * Value table TerrainMode entry Reserved_D.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_D          13

/**
 * Value table TerrainMode entry Reserved_C.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_C          12

/**
 * Value table TerrainMode entry Reserved_B.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_B          11

/**
 * Value table TerrainMode entry Reserved_A.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_A          10

/**
 * Value table TerrainMode entry Reserved_9.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_9          9

/**
 * Value table TerrainMode entry Reserved_8.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_8          8

/**
 * Value table TerrainMode entry Reserved_7.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_7          7

/**
 * Value table TerrainMode entry Reserved_6.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_6          6

/**
 * Value table TerrainMode entry Reserved_5.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_5          5

/**
 * Value table TerrainMode entry Reserved_4.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_4          4

/**
 * Value table TerrainMode entry Reserved_3.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_3          3

/**
 * Value table TerrainMode entry Reserved_2.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_2          2

/**
 * Value table TerrainMode entry Reserved_1.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_1          1

/**
 * Value table TerrainMode entry Reserved_0.
 *
 * @ingroup ENUM_TerrainMode
 */
#define TerrainMode_Reserved_0          0

/**
 * @defgroup ENUM_SuspensionMode Value Table SuspensionMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table SuspensionMode entry Reserved.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved            15

/**
 * Value table SuspensionMode entry Reserved_E.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_E          14

/**
 * Value table SuspensionMode entry Reserved_D.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_D          13

/**
 * Value table SuspensionMode entry Reserved_C.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_C          12

/**
 * Value table SuspensionMode entry Reserved_B.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_B          11

/**
 * Value table SuspensionMode entry Reserved_A.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_A          10

/**
 * Value table SuspensionMode entry Reserved_9.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_9          9

/**
 * Value table SuspensionMode entry Reserved_8.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_8          8

/**
 * Value table SuspensionMode entry Reserved_7.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_7          7

/**
 * Value table SuspensionMode entry Reserved_6.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_6          6

/**
 * Value table SuspensionMode entry Reserved_5.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_5          5

/**
 * Value table SuspensionMode entry Reserved_4.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_4          4

/**
 * Value table SuspensionMode entry Reserved_3.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_3          3

/**
 * Value table SuspensionMode entry Reserved_2.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_2          2

/**
 * Value table SuspensionMode entry Reserved_1.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_1          1

/**
 * Value table SuspensionMode entry Reserved_0.
 *
 * @ingroup ENUM_SuspensionMode
 */
#define SuspensionMode_Reserved_0          0

/**
 * @defgroup ENUM_SuspensionControl Value Table SuspensionControl
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table SuspensionControl entry Lifting.
 *
 * @ingroup ENUM_SuspensionControl
 */
#define SuspensionControl_Lifting             3

/**
 * Value table SuspensionControl entry Droping.
 *
 * @ingroup ENUM_SuspensionControl
 */
#define SuspensionControl_Droping             2

/**
 * Value table SuspensionControl entry Idle.
 *
 * @ingroup ENUM_SuspensionControl
 */
#define SuspensionControl_Idle                1

/**
 * Value table SuspensionControl entry Off.
 *
 * @ingroup ENUM_SuspensionControl
 */
#define SuspensionControl_Off                 0

/**
 * @defgroup ENUM_LKAStatus Value Table LKAStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table LKAStatus entry On.
 *
 * - Inhibiting Trq Request
 *
 * @ingroup ENUM_LKAStatus
 */
#define LKAStatus_On                  3

/**
 * Value table LKAStatus entry On_2.
 *
 * - Wating for Trq Request
 *
 * @ingroup ENUM_LKAStatus
 */
#define LKAStatus_On_2                2

/**
 * Value table LKAStatus entry Idle.
 *
 * @ingroup ENUM_LKAStatus
 */
#define LKAStatus_Idle                1

/**
 * Value table LKAStatus entry Off.
 *
 * @ingroup ENUM_LKAStatus
 */
#define LKAStatus_Off                 0

/**
 * @defgroup ENUM_BodyCntrl_02_TSR_ModeRequ Value Table BodyCntrl_02_TSR_ModeRequ
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_TSR_ModeRequ entry Fusion.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_ModeRequ
 */
#define BodyCntrl_02_TSR_ModeRequ_Fusion              3

/**
 * Value table BodyCntrl_02_TSR_ModeRequ entry Vision_Only.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_ModeRequ
 */
#define BodyCntrl_02_TSR_ModeRequ_Vision_Only         2

/**
 * Value table BodyCntrl_02_TSR_ModeRequ entry Navigation_Only.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_ModeRequ
 */
#define BodyCntrl_02_TSR_ModeRequ_Navigation_Only     1

/**
 * Value table BodyCntrl_02_TSR_ModeRequ entry Off.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_ModeRequ
 */
#define BodyCntrl_02_TSR_ModeRequ_Off                 0

/**
 * @defgroup ENUM_BodyCntrl_02_TSR_MenuRequ Value Table BodyCntrl_02_TSR_MenuRequ
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_TSR_MenuRequ entry On.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_MenuRequ
 */
#define BodyCntrl_02_TSR_MenuRequ_On                  1

/**
 * Value table BodyCntrl_02_TSR_MenuRequ entry Off.
 *
 * @ingroup ENUM_BodyCntrl_02_TSR_MenuRequ
 */
#define BodyCntrl_02_TSR_MenuRequ_Off                 0

/**
 * @defgroup ENUM_BodyCntrl_02_LDS_ModeReq Value Table BodyCntrl_02_LDS_ModeReq
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry Reserved.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_Reserved            7

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry Reserved_6.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_Reserved_6          6

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry Reserved_5.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_Reserved_5          5

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry ASC.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_ASC                 4

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry LKA.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_LKA                 3

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry LDP.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_LDP                 2

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry LDW.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_LDW                 1

/**
 * Value table BodyCntrl_02_LDS_ModeReq entry Off.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_ModeReq
 */
#define BodyCntrl_02_LDS_ModeReq_Off                 0

/**
 * @defgroup ENUM_BodyCntrl_02_LDS_MenuReq Value Table BodyCntrl_02_LDS_MenuReq
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_LDS_MenuReq entry On.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_MenuReq
 */
#define BodyCntrl_02_LDS_MenuReq_On                  1

/**
 * Value table BodyCntrl_02_LDS_MenuReq entry Off.
 *
 * @ingroup ENUM_BodyCntrl_02_LDS_MenuReq
 */
#define BodyCntrl_02_LDS_MenuReq_Off                 0

/**
 * @defgroup ENUM_AEBStatus Value Table AEBStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table AEBStatus entry reserved.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_reserved            7

/**
 * Value table AEBStatus entry reserved_6.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_reserved_6          6

/**
 * Value table AEBStatus entry reserved_5.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_reserved_5          5

/**
 * Value table AEBStatus entry level3.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_level3              4

/**
 * Value table AEBStatus entry level2.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_level2              3

/**
 * Value table AEBStatus entry level1.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_level1              2

/**
 * Value table AEBStatus entry fault.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_fault               1

/**
 * Value table AEBStatus entry notSupported.
 *
 * @ingroup ENUM_AEBStatus
 */
#define AEBStatus_notSupported        0

/**
 * @defgroup ENUM_FrontLightMode Value Table FrontLightMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table FrontLightMode entry Error.
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Error               7

/**
 * Value table FrontLightMode entry Matrix.
 *
 * Beam
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Matrix              6

/**
 * Value table FrontLightMode entry Adaptive.
 *
 * HighBeam
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Adaptive            5

/**
 * Value table FrontLightMode entry Automated.
 *
 * HighBeam
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Automated           4

/**
 * Value table FrontLightMode entry HighBeam.
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_HighBeam            3

/**
 * Value table FrontLightMode entry LowBeam.
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_LowBeam             2

/**
 * Value table FrontLightMode entry Running.
 *
 * Lights
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Running             1

/**
 * Value table FrontLightMode entry Headlights_Off.
 *
 * @ingroup ENUM_FrontLightMode
 */
#define FrontLightMode_Headlights_Off      0

/**
 * @defgroup ENUM_TrailerMode Value Table TrailerMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table TrailerMode entry Error.
 *
 * @ingroup ENUM_TrailerMode
 */
#define TrailerMode_Error               3

/**
 * Value table TrailerMode entry TrailerNotAttached.
 *
 * @ingroup ENUM_TrailerMode
 */
#define TrailerMode_TrailerNotAttached    2

/**
 * Value table TrailerMode entry TrailerAttached.
 *
 * @ingroup ENUM_TrailerMode
 */
#define TrailerMode_TrailerAttached     1

/**
 * Value table TrailerMode entry Off.
 *
 * @ingroup ENUM_TrailerMode
 */
#define TrailerMode_Off                 0

/**
 * @defgroup ENUM_PwrTrnAct Value Table PwrTrnAct
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table PwrTrnAct entry reserved.
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_reserved            7

/**
 * Value table PwrTrnAct entry reserved_6.
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_reserved_6          6

/**
 * Value table PwrTrnAct entry reserved_5.
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_reserved_5          5

/**
 * Value table PwrTrnAct entry Engine.
 *
 * stopped - Start/Stop Mode
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_Engine              4

/**
 * Value table PwrTrnAct entry Engine_3.
 *
 * running
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_Engine_3            3

/**
 * Value table PwrTrnAct entry Engine_2.
 *
 * starting
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_Engine_2            2

/**
 * Value table PwrTrnAct entry Engine_1.
 *
 * killed
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_Engine_1            1

/**
 * Value table PwrTrnAct entry Engine_0.
 *
 * Off
 *
 * @ingroup ENUM_PwrTrnAct
 */
#define PwrTrnAct_Engine_0            0

/**
 * @defgroup ENUM_SteeringOperationMode Value Table SteeringOperationMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table SteeringOperationMode entry reserved.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_reserved            8

/**
 * Value table SteeringOperationMode entry reserved_7.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_reserved_7          7

/**
 * Value table SteeringOperationMode entry reserved_6.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_reserved_6          6

/**
 * Value table SteeringOperationMode entry error.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_error               5

/**
 * Value table SteeringOperationMode entry Torque_Action2.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_Torque_Action2      4

/**
 * Value table SteeringOperationMode entry Torque_Action1.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_Torque_Action1      3

/**
 * Value table SteeringOperationMode entry operational.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_operational         2

/**
 * Value table SteeringOperationMode entry idle.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_idle                1

/**
 * Value table SteeringOperationMode entry deactivated.
 *
 * @ingroup ENUM_SteeringOperationMode
 */
#define SteeringOperationMode_deactivated         0

/**
 * @defgroup ENUM_SteeringType Value Table SteeringType
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table SteeringType entry LKA.
 *
 * @ingroup ENUM_SteeringType
 */
#define SteeringType_LKA                 3

/**
 * Value table SteeringType entry LDW.
 *
 * with Vibration
 *
 * @ingroup ENUM_SteeringType
 */
#define SteeringType_LDW                 2

/**
 * Value table SteeringType entry LDW_1.
 *
 * only
 *
 * @ingroup ENUM_SteeringType
 */
#define SteeringType_LDW_1               1

/**
 * Value table SteeringType entry No.
 *
 * Type set
 *
 * @ingroup ENUM_SteeringType
 */
#define SteeringType_No                  0

/**
 * @defgroup ENUM_BodyCntrl_03_SpeedLimitType Value Table BodyCntrl_03_SpeedLimitType
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_03_SpeedLimitType entry MPH.
 *
 * @ingroup ENUM_BodyCntrl_03_SpeedLimitType
 */
#define BodyCntrl_03_SpeedLimitType_MPH                 1

/**
 * Value table BodyCntrl_03_SpeedLimitType entry KPH.
 *
 * @ingroup ENUM_BodyCntrl_03_SpeedLimitType
 */
#define BodyCntrl_03_SpeedLimitType_KPH                 0

/**
 * @defgroup ENUM_BodyCntrl_03_DrivingSide Value Table BodyCntrl_03_DrivingSide
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_03_DrivingSide entry reserved.
 *
 * @ingroup ENUM_BodyCntrl_03_DrivingSide
 */
#define BodyCntrl_03_DrivingSide_reserved            3

/**
 * Value table BodyCntrl_03_DrivingSide entry left.
 *
 * hand traffic
 *
 * @ingroup ENUM_BodyCntrl_03_DrivingSide
 */
#define BodyCntrl_03_DrivingSide_left                2

/**
 * Value table BodyCntrl_03_DrivingSide entry right.
 *
 * hand traffic
 *
 * @ingroup ENUM_BodyCntrl_03_DrivingSide
 */
#define BodyCntrl_03_DrivingSide_right               1

/**
 * Value table BodyCntrl_03_DrivingSide entry uncertain.
 *
 * @ingroup ENUM_BodyCntrl_03_DrivingSide
 */
#define BodyCntrl_03_DrivingSide_uncertain           0

/**
 * @defgroup ENUM_BodyCntrl_03_GPS_Multiplex Value Table BodyCntrl_03_GPS_Multiplex
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_03_GPS_Multiplex entry Description.
 *
 * for the value '0x3'
 *
 * @ingroup ENUM_BodyCntrl_03_GPS_Multiplex
 */
#define BodyCntrl_03_GPS_Multiplex_Description         3

/**
 * Value table BodyCntrl_03_GPS_Multiplex entry Description_2.
 *
 * for the value '0x2'
 *
 * @ingroup ENUM_BodyCntrl_03_GPS_Multiplex
 */
#define BodyCntrl_03_GPS_Multiplex_Description_2       2

/**
 * Value table BodyCntrl_03_GPS_Multiplex entry Description_1.
 *
 * for the value '0x1'
 *
 * @ingroup ENUM_BodyCntrl_03_GPS_Multiplex
 */
#define BodyCntrl_03_GPS_Multiplex_Description_1       1

/**
 * Value table BodyCntrl_03_GPS_Multiplex entry Description_0.
 *
 * for the value '0x0'
 *
 * @ingroup ENUM_BodyCntrl_03_GPS_Multiplex
 */
#define BodyCntrl_03_GPS_Multiplex_Description_0       0

/**
 * @defgroup ENUM_ManualShiftReq Value Table ManualShiftReq
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ManualShiftReq entry reserved.
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_reserved            7

/**
 * Value table ManualShiftReq entry reserved_6.
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_reserved_6          6

/**
 * Value table ManualShiftReq entry reserved_5.
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_reserved_5          5

/**
 * Value table ManualShiftReq entry reserved_4.
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_reserved_4          4

/**
 * Value table ManualShiftReq entry reserved_3.
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_reserved_3          3

/**
 * Value table ManualShiftReq entry Manual.
 *
 * Upshift Request
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_Manual              2

/**
 * Value table ManualShiftReq entry Manual_1.
 *
 * Downshift Request
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_Manual_1            1

/**
 * Value table ManualShiftReq entry No.
 *
 * Manual Shift Request
 *
 * @ingroup ENUM_ManualShiftReq
 */
#define ManualShiftReq_No                  0

/**
 * @defgroup ENUM_MainBeamSwitch Value Table MainBeamSwitch
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table MainBeamSwitch entry reserved.
 *
 * @ingroup ENUM_MainBeamSwitch
 */
#define MainBeamSwitch_reserved            3

/**
 * Value table MainBeamSwitch entry Continious.
 *
 * Main Beam
 *
 * @ingroup ENUM_MainBeamSwitch
 */
#define MainBeamSwitch_Continious          2

/**
 * Value table MainBeamSwitch entry Toggle.
 *
 * @ingroup ENUM_MainBeamSwitch
 */
#define MainBeamSwitch_Toggle              1

/**
 * Value table MainBeamSwitch entry Neutral.
 *
 * @ingroup ENUM_MainBeamSwitch
 */
#define MainBeamSwitch_Neutral             0

/**
 * @defgroup ENUM_Ignition Value Table Ignition
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table Ignition entry Running.
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_Running             5

/**
 * Value table Ignition entry Ignition.
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_Ignition            4

/**
 * Value table Ignition entry KeyApproved.
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_KeyApproved         3

/**
 * Value table Ignition entry KeyRecentlyOut.
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_KeyRecentlyOut      2

/**
 * Value table Ignition entry Key.
 *
 * Out
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_Key                 1

/**
 * Value table Ignition entry error.
 *
 * @ingroup ENUM_Ignition
 */
#define Ignition_error               0

/**
 * @defgroup ENUM_AEB_Support Value Table AEB_Support
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table AEB_Support entry error.
 *
 * @ingroup ENUM_AEB_Support
 */
#define AEB_Support_error               3

/**
 * Value table AEB_Support entry fullSupport.
 *
 * @ingroup ENUM_AEB_Support
 */
#define AEB_Support_fullSupport         2

/**
 * Value table AEB_Support entry limitedSupport.
 *
 * @ingroup ENUM_AEB_Support
 */
#define AEB_Support_limitedSupport      1

/**
 * Value table AEB_Support entry noSupport.
 *
 * @ingroup ENUM_AEB_Support
 */
#define AEB_Support_noSupport           0

/**
 * @defgroup ENUM_BodyCntrl_02_HMA_ModeReq Value Table BodyCntrl_02_HMA_ModeReq
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry reserved.
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_reserved            7

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry reserved_6.
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_reserved_6          6

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry reserved_5.
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_reserved_5          5

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry reserved_4.
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_reserved_4          4

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry Matrix.
 *
 * Beam
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_Matrix              3

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry Dynamic.
 *
 * Light Assist
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_Dynamic             2

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry High.
 *
 * Beam Assist
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_High                1

/**
 * Value table BodyCntrl_02_HMA_ModeReq entry off.
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_ModeReq
 */
#define BodyCntrl_02_HMA_ModeReq_off                 0

/**
 * @defgroup ENUM_BodyCntrl_02_HMA_MenuReq Value Table BodyCntrl_02_HMA_MenuReq
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BodyCntrl_02_HMA_MenuReq entry High.
 *
 * Beam Assist ON
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_MenuReq
 */
#define BodyCntrl_02_HMA_MenuReq_High                1

/**
 * Value table BodyCntrl_02_HMA_MenuReq entry High_0.
 *
 * Beam Assist Off
 *
 * @ingroup ENUM_BodyCntrl_02_HMA_MenuReq
 */
#define BodyCntrl_02_HMA_MenuReq_High_0              0

/**
 * @defgroup ENUM_RollRateDir Value Table RollRateDir
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table RollRateDir entry negative.
 *
 * @ingroup ENUM_RollRateDir
 */
#define RollRateDir_negative            1

/**
 * Value table RollRateDir entry positive.
 *
 * @ingroup ENUM_RollRateDir
 */
#define RollRateDir_positive            0

/**
 * @defgroup ENUM_PitchRateDir Value Table PitchRateDir
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table PitchRateDir entry negative.
 *
 * @ingroup ENUM_PitchRateDir
 */
#define PitchRateDir_negative            1

/**
 * Value table PitchRateDir entry positive.
 *
 * @ingroup ENUM_PitchRateDir
 */
#define PitchRateDir_positive            0

/**
 * @defgroup ENUM_Gear Value Table Gear
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table Gear entry 14.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_14                  15

/**
 * Value table Gear entry 13.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_13                  14

/**
 * Value table Gear entry 12.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_12                  13

/**
 * Value table Gear entry 11.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_11                  12

/**
 * Value table Gear entry 10.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_10                  11

/**
 * Value table Gear entry 9.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_9                   10

/**
 * Value table Gear entry 8.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_8                   9

/**
 * Value table Gear entry 7.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_7                   8

/**
 * Value table Gear entry 6.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_6                   7

/**
 * Value table Gear entry 5.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_5                   6

/**
 * Value table Gear entry 4.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_4                   5

/**
 * Value table Gear entry 3.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_3                   4

/**
 * Value table Gear entry 2.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_2                   3

/**
 * Value table Gear entry 1.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_1                   2

/**
 * Value table Gear entry Neutral.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_Neutral             1

/**
 * Value table Gear entry Rear.
 *
 * @ingroup ENUM_Gear
 */
#define Gear_Rear                0

/**
 * @defgroup ENUM_GearMode Value Table GearMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table GearMode entry Automated.
 *
 * @ingroup ENUM_GearMode
 */
#define GearMode_Automated           1

/**
 * Value table GearMode entry Manual.
 *
 * @ingroup ENUM_GearMode
 */
#define GearMode_Manual              0

/**
 * @defgroup ENUM_GearLeverPosition Value Table GearLeverPosition
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table GearLeverPosition entry reserved.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_reserved            7

/**
 * Value table GearLeverPosition entry reserved_6.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_reserved_6          6

/**
 * Value table GearLeverPosition entry reserved_5.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_reserved_5          5

/**
 * Value table GearLeverPosition entry Manual.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_Manual              4

/**
 * Value table GearLeverPosition entry Sport.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_Sport               3

/**
 * Value table GearLeverPosition entry Drive.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_Drive               2

/**
 * Value table GearLeverPosition entry Neutral.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_Neutral             1

/**
 * Value table GearLeverPosition entry Park.
 *
 * @ingroup ENUM_GearLeverPosition
 */
#define GearLeverPosition_Park                0

/**
 * @defgroup ENUM_SteeringWhlAngleDir Value Table SteeringWhlAngleDir
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table SteeringWhlAngleDir entry Counterclockwise.
 *
 * @ingroup ENUM_SteeringWhlAngleDir
 */
#define SteeringWhlAngleDir_Counterclockwise    1

/**
 * Value table SteeringWhlAngleDir entry Clockwise.
 *
 * @ingroup ENUM_SteeringWhlAngleDir
 */
#define SteeringWhlAngleDir_Clockwise           0

/**
 * @defgroup ENUM_WiperFront Value Table WiperFront
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table WiperFront entry Single.
 *
 * Stroke
 *
 * @ingroup ENUM_WiperFront
 */
#define WiperFront_Single              4

/**
 * Value table WiperFront entry Level.
 *
 * - 3 Fast
 *
 * @ingroup ENUM_WiperFront
 */
#define WiperFront_Level               3

/**
 * Value table WiperFront entry Level_2.
 *
 * - 2 Normal Speed
 *
 * @ingroup ENUM_WiperFront
 */
#define WiperFront_Level_2             2

/**
 * Value table WiperFront entry Level_1.
 *
 * - 1 Interval
 *
 * @ingroup ENUM_WiperFront
 */
#define WiperFront_Level_1             1

/**
 * Value table WiperFront entry off.
 *
 * @ingroup ENUM_WiperFront
 */
#define WiperFront_off                 0

/**
 * @defgroup ENUM_OutsideTempStatus Value Table OutsideTempStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table OutsideTempStatus entry Negtive.
 *
 * (cold)
 *
 * @ingroup ENUM_OutsideTempStatus
 */
#define OutsideTempStatus_Negtive             1

/**
 * Value table OutsideTempStatus entry Positive.
 *
 * (hot)
 *
 * @ingroup ENUM_OutsideTempStatus
 */
#define OutsideTempStatus_Positive            0

/**
 * @defgroup ENUM_RearFogLight Value Table RearFogLight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table RearFogLight entry on.
 *
 * @ingroup ENUM_RearFogLight
 */
#define RearFogLight_on                  1

/**
 * Value table RearFogLight entry off.
 *
 * @ingroup ENUM_RearFogLight
 */
#define RearFogLight_off                 0

/**
 * @defgroup ENUM_FoglightMode Value Table FoglightMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table FoglightMode entry on.
 *
 * @ingroup ENUM_FoglightMode
 */
#define FoglightMode_on                  1

/**
 * Value table FoglightMode entry off.
 *
 * @ingroup ENUM_FoglightMode
 */
#define FoglightMode_off                 0

/**
 * @defgroup ENUM_HeadlightSwitch Value Table HeadlightSwitch
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table HeadlightSwitch entry Reserved.
 *
 * @ingroup ENUM_HeadlightSwitch
 */
#define HeadlightSwitch_Reserved            4

/**
 * Value table HeadlightSwitch entry Automated.
 *
 * @ingroup ENUM_HeadlightSwitch
 */
#define HeadlightSwitch_Automated           3

/**
 * Value table HeadlightSwitch entry Low.
 *
 * Beam
 *
 * @ingroup ENUM_HeadlightSwitch
 */
#define HeadlightSwitch_Low                 2

/**
 * Value table HeadlightSwitch entry Parking.
 *
 * lights
 *
 * @ingroup ENUM_HeadlightSwitch
 */
#define HeadlightSwitch_Parking             1

/**
 * Value table HeadlightSwitch entry Headlight.
 *
 * off
 *
 * @ingroup ENUM_HeadlightSwitch
 */
#define HeadlightSwitch_Headlight           0

/**
 * @defgroup ENUM_HazardLight Value Table HazardLight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table HazardLight entry on.
 *
 * @ingroup ENUM_HazardLight
 */
#define HazardLight_on                  1

/**
 * Value table HazardLight entry off.
 *
 * @ingroup ENUM_HazardLight
 */
#define HazardLight_off                 0

/**
 * @defgroup ENUM_IndicatorRight Value Table IndicatorRight
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table IndicatorRight entry on.
 *
 * @ingroup ENUM_IndicatorRight
 */
#define IndicatorRight_on                  1

/**
 * Value table IndicatorRight entry off.
 *
 * @ingroup ENUM_IndicatorRight
 */
#define IndicatorRight_off                 0

/**
 * @defgroup ENUM_IndicatorLeft Value Table IndicatorLeft
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table IndicatorLeft entry on.
 *
 * @ingroup ENUM_IndicatorLeft
 */
#define IndicatorLeft_on                  1

/**
 * Value table IndicatorLeft entry off.
 *
 * @ingroup ENUM_IndicatorLeft
 */
#define IndicatorLeft_off                 0

/**
 * @defgroup ENUM_BrakeLightSwitch Value Table BrakeLightSwitch
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table BrakeLightSwitch entry Undefined.
 *
 * @ingroup ENUM_BrakeLightSwitch
 */
#define BrakeLightSwitch_Undefined           3

/**
 * Value table BrakeLightSwitch entry BrakeSwitchFault.
 *
 * @ingroup ENUM_BrakeLightSwitch
 */
#define BrakeLightSwitch_BrakeSwitchFault    2

/**
 * Value table BrakeLightSwitch entry BrakePedalPressed.
 *
 * @ingroup ENUM_BrakeLightSwitch
 */
#define BrakeLightSwitch_BrakePedalPressed    1

/**
 * Value table BrakeLightSwitch entry Init.
 *
 * @ingroup ENUM_BrakeLightSwitch
 */
#define BrakeLightSwitch_Init                0

/**
 * @defgroup ENUM_ABSMode Value Table ABSMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ABSMode entry activatedIntervention.
 *
 * @ingroup ENUM_ABSMode
 */
#define ABSMode_activatedIntervention    3

/**
 * Value table ABSMode entry activatedPassive.
 *
 * @ingroup ENUM_ABSMode
 */
#define ABSMode_activatedPassive    2

/**
 * Value table ABSMode entry deactivatedInactive.
 *
 * @ingroup ENUM_ABSMode
 */
#define ABSMode_deactivatedInactive    1

/**
 * Value table ABSMode entry error.
 *
 * @ingroup ENUM_ABSMode
 */
#define ABSMode_error               0

/**
 * @defgroup ENUM_ASRMode Value Table ASRMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ASRMode entry activatedIntervention.
 *
 * @ingroup ENUM_ASRMode
 */
#define ASRMode_activatedIntervention    3

/**
 * Value table ASRMode entry activatedPassive.
 *
 * @ingroup ENUM_ASRMode
 */
#define ASRMode_activatedPassive    2

/**
 * Value table ASRMode entry deactivatedInactive.
 *
 * @ingroup ENUM_ASRMode
 */
#define ASRMode_deactivatedInactive    1

/**
 * Value table ASRMode entry error.
 *
 * @ingroup ENUM_ASRMode
 */
#define ASRMode_error               0

/**
 * @defgroup ENUM_ESPMode Value Table ESPMode
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESPMode entry Activated.
 *
 * - Intervention
 *
 * @ingroup ENUM_ESPMode
 */
#define ESPMode_Activated           3

/**
 * Value table ESPMode entry Activated_2.
 *
 * - Passive
 *
 * @ingroup ENUM_ESPMode
 */
#define ESPMode_Activated_2         2

/**
 * Value table ESPMode entry Deactivated.
 *
 * - Inactive
 *
 * @ingroup ENUM_ESPMode
 */
#define ESPMode_Deactivated         1

/**
 * Value table ESPMode entry Error.
 *
 * @ingroup ENUM_ESPMode
 */
#define ESPMode_Error               0

/**
 * @defgroup ENUM_ESP_03_WheelSpeedDir Value Table ESP_03_WheelSpeedDir
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_03_WheelSpeedDir entry Backwards.
 *
 * @ingroup ENUM_ESP_03_WheelSpeedDir
 */
#define ESP_03_WheelSpeedDir_Backwards           1

/**
 * Value table ESP_03_WheelSpeedDir entry Forward.
 *
 * @ingroup ENUM_ESP_03_WheelSpeedDir
 */
#define ESP_03_WheelSpeedDir_Forward             0

/**
 * @defgroup ENUM_MovementStatus Value Table MovementStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table MovementStatus entry Moving_Uncertain.
 *
 * @ingroup ENUM_MovementStatus
 */
#define MovementStatus_Moving_Uncertain    4

/**
 * Value table MovementStatus entry StandStill.
 *
 * @ingroup ENUM_MovementStatus
 */
#define MovementStatus_StandStill          3

/**
 * Value table MovementStatus entry Moving_Backwards.
 *
 * @ingroup ENUM_MovementStatus
 */
#define MovementStatus_Moving_Backwards    2

/**
 * Value table MovementStatus entry Moving_Forward.
 *
 * @ingroup ENUM_MovementStatus
 */
#define MovementStatus_Moving_Forward      1

/**
 * Value table MovementStatus entry Error.
 *
 * @ingroup ENUM_MovementStatus
 */
#define MovementStatus_Error               0

/**
 * @defgroup ENUM_Velocity_Direction Value Table Velocity_Direction
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table Velocity_Direction entry Reverse.
 *
 * @ingroup ENUM_Velocity_Direction
 */
#define Velocity_Direction_Reverse             1

/**
 * Value table Velocity_Direction entry Forward.
 *
 * @ingroup ENUM_Velocity_Direction
 */
#define Velocity_Direction_Forward             0

/**
 * @defgroup ENUM_WheelPulseSensorReStatus Value Table WheelPulseSensorReStatus
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table WheelPulseSensorReStatus entry Operational.
 *
 * @ingroup ENUM_WheelPulseSensorReStatus
 */
#define WheelPulseSensorReStatus_Operational         1

/**
 * Value table WheelPulseSensorReStatus entry Error.
 *
 * @ingroup ENUM_WheelPulseSensorReStatus
 */
#define WheelPulseSensorReStatus_Error               0

/**
 * @defgroup ENUM_ESP_01_YawRate_Direction Value Table ESP_01_YawRate_Direction
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_YawRate_Direction entry positive.
 *
 * @ingroup ENUM_ESP_01_YawRate_Direction
 */
#define ESP_01_YawRate_Direction_positive            1

/**
 * Value table ESP_01_YawRate_Direction entry negative.
 *
 * @ingroup ENUM_ESP_01_YawRate_Direction
 */
#define ESP_01_YawRate_Direction_negative            0

/**
 * @defgroup ENUM_ESP_01_LongLatACC_Direction Value Table ESP_01_LongLatACC_Direction
 *
 * Enum values defined in \ref DB_mpc_can_in.
 *
 * @ingroup DB_mpc_can_in
 */

/**
 * Value table ESP_01_LongLatACC_Direction entry positive.
 *
 * @ingroup ENUM_ESP_01_LongLatACC_Direction
 */
#define ESP_01_LongLatACC_Direction_positive            1

/**
 * Value table ESP_01_LongLatACC_Direction entry negative.
 *
 * @ingroup ENUM_ESP_01_LongLatACC_Direction
 */
#define ESP_01_LongLatACC_Direction_negative            0

#endif
