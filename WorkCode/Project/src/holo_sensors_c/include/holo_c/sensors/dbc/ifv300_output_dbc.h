#ifndef HOLO_C_SENSORS_IFV300_IFV300_OUTPUT_DBC_H
#define HOLO_C_SENSORS_IFV300_IFV300_OUTPUT_DBC_H

/** \file
 * CAN DBC C-Headers
 *
 * These headers were generated by dbc2c.awk on 2020年 03月 25日 星期三 14:02:45 CST.
 *
 * The dbc2c.awk script parses Vector .dbc files, and generates C-style
 * headers with Doxygen documentation from a set of templates.
 *
 * The following databases were parsed:
 * - \ref DB_ifv300_inst_can
 */

/**
 * @defgroup DB_ifv300_inst_can CAN Database ifv300_inst_can
 *
 * Path to file: output/ifv300_inst_can.dbc
 *
 * Provides the following ECUs:
 * - \ref ECU_IFV_CWMP
 * - \ref ECU_External
 * - \ref ECU_IFV_VFP
 */

/**
 * @defgroup ECU_IFV_CWMP Electronics Control Unit IFV_CWMP
 *
 * This ECU was defined in \ref DB_ifv300_inst_can.
 *
 * TX messages:
 * - \ref MSG_System_Status
 * - \ref MSG_VIS_OBS_MSG_2
 * - \ref MSG_VIS_OBS_MSG_3
 * - \ref MSG_VIS_OBS_MSG_1
 * - \ref MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * - \ref MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * - \ref MSG_VIS_LANE_NEIGHBOR_RIGHT
 * - \ref MSG_VIS_LANE_NEIGHBOR_LEFT
 * - \ref MSG_VIS_LANE_INFORMATION
 *
 * RX signals:
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * @defgroup ECU_External Electronics Control Unit External
 *
 * This ECU was defined in \ref DB_ifv300_inst_can.
 *
 * TX messages:
 *
 * RX signals:
 * - \ref SIG_System_Status_VFP_State
 * - \ref SIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE
 * - \ref SIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * @defgroup ECU_IFV_VFP Electronics Control Unit IFV_VFP
 *
 * This ECU was defined in \ref DB_ifv300_inst_can.
 *
 * TX messages:
 * - \ref MSG_Vehicle_State_Info_1
 *
 * RX signals:
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * @defgroup MSG_VECTOR__INDEPENDENT_SIG_MSG Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * This is a message for not used signals, created by Vector CANdb++ DBC OLE DB Provider.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02
 * - \ref SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01
 *
 * @{
 */

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG configuration tuple.
 */
#define MSG_VECTOR__INDEPENDENT_SIG_MSG             0x40000000, 1, 0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG id.
 */
#define ID_VECTOR__INDEPENDENT_SIG_MSG              0x40000000

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG extended id bit.
 */
#define EXT_VECTOR__INDEPENDENT_SIG_MSG             1

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG Data Length Count.
 */
#define DLC_VECTOR__INDEPENDENT_SIG_MSG             0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG cycle time.
 */
#define CYCLE_VECTOR__INDEPENDENT_SIG_MSG           0

/**
 * Message VECTOR__INDEPENDENT_SIG_MSG fast cycle time.
 */
#define FAST_VECTOR__INDEPENDENT_SIG_MSG            0

/**
 * Initialise message VECTOR__INDEPENDENT_SIG_MSG buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VECTOR__INDEPENDENT_SIG_MSG(buf) { \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(buf); \
	INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_System_Status Message System_Status (0x10)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_System_Status_VFP_State
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message System_Status configuration tuple.
 */
#define MSG_System_Status                           0x10, 0, 3

/**
 * Message System_Status id.
 */
#define ID_System_Status                            0x10

/**
 * Message System_Status extended id bit.
 */
#define EXT_System_Status                           0

/**
 * Message System_Status Data Length Count.
 */
#define DLC_System_Status                           3

/**
 * Message System_Status cycle time.
 */
#define CYCLE_System_Status                         5

/**
 * Message System_Status fast cycle time.
 */
#define FAST_System_Status                          0

/**
 * Initialise message System_Status buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_System_Status(buf) { \
	INITSIG_System_Status_VFP_State(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Vehicle_State_Info_1 Message Vehicle_State_Info_1 (0x440)
 *
 * Sent by \ref ECU_IFV_VFP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE
 * - \ref SIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED
 *
 * @ingroup ECU_IFV_VFP
 * @{
 */

/**
 * Message Vehicle_State_Info_1 configuration tuple.
 */
#define MSG_Vehicle_State_Info_1                    0x440, 0, 6

/**
 * Message Vehicle_State_Info_1 id.
 */
#define ID_Vehicle_State_Info_1                     0x440

/**
 * Message Vehicle_State_Info_1 extended id bit.
 */
#define EXT_Vehicle_State_Info_1                    0

/**
 * Message Vehicle_State_Info_1 Data Length Count.
 */
#define DLC_Vehicle_State_Info_1                    6

/**
 * Message Vehicle_State_Info_1 cycle time.
 */
#define CYCLE_Vehicle_State_Info_1                  25

/**
 * Message Vehicle_State_Info_1 fast cycle time.
 */
#define FAST_Vehicle_State_Info_1                   0

/**
 * Initialise message Vehicle_State_Info_1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Vehicle_State_Info_1(buf) { \
	INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(buf); \
	INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_OBS_MSG_2 Message VIS_OBS_MSG_2 (0x676)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2
 * - \ref SIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_OBS_MSG_2 configuration tuple.
 */
#define MSG_VIS_OBS_MSG_2                           0x676, 0, 5

/**
 * Message VIS_OBS_MSG_2 id.
 */
#define ID_VIS_OBS_MSG_2                            0x676

/**
 * Message VIS_OBS_MSG_2 extended id bit.
 */
#define EXT_VIS_OBS_MSG_2                           0

/**
 * Message VIS_OBS_MSG_2 Data Length Count.
 */
#define DLC_VIS_OBS_MSG_2                           5

/**
 * Message VIS_OBS_MSG_2 cycle time.
 */
#define CYCLE_VIS_OBS_MSG_2                         55

/**
 * Message VIS_OBS_MSG_2 fast cycle time.
 */
#define FAST_VIS_OBS_MSG_2                          0

/**
 * Initialise message VIS_OBS_MSG_2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_OBS_MSG_2(buf) { \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(buf); \
	INITSIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_OBS_MSG_3 Message VIS_OBS_MSG_3 (0x677)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01
 * - \ref SIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_OBS_MSG_3 configuration tuple.
 */
#define MSG_VIS_OBS_MSG_3                           0x677, 0, 8

/**
 * Message VIS_OBS_MSG_3 id.
 */
#define ID_VIS_OBS_MSG_3                            0x677

/**
 * Message VIS_OBS_MSG_3 extended id bit.
 */
#define EXT_VIS_OBS_MSG_3                           0

/**
 * Message VIS_OBS_MSG_3 Data Length Count.
 */
#define DLC_VIS_OBS_MSG_3                           8

/**
 * Message VIS_OBS_MSG_3 cycle time.
 */
#define CYCLE_VIS_OBS_MSG_3                         55

/**
 * Message VIS_OBS_MSG_3 fast cycle time.
 */
#define FAST_VIS_OBS_MSG_3                          0

/**
 * Initialise message VIS_OBS_MSG_3 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_OBS_MSG_3(buf) { \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(buf); \
	INITSIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_OBS_MSG_1 Message VIS_OBS_MSG_1 (0x675)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_ID_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 * - \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_OBS_MSG_1 configuration tuple.
 */
#define MSG_VIS_OBS_MSG_1                           0x675, 0, 8

/**
 * Message VIS_OBS_MSG_1 id.
 */
#define ID_VIS_OBS_MSG_1                            0x675

/**
 * Message VIS_OBS_MSG_1 extended id bit.
 */
#define EXT_VIS_OBS_MSG_1                           0

/**
 * Message VIS_OBS_MSG_1 Data Length Count.
 */
#define DLC_VIS_OBS_MSG_1                           8

/**
 * Message VIS_OBS_MSG_1 cycle time.
 */
#define CYCLE_VIS_OBS_MSG_1                         55

/**
 * Message VIS_OBS_MSG_1 fast cycle time.
 */
#define FAST_VIS_OBS_MSG_1                          0

/**
 * Initialise message VIS_OBS_MSG_1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_OBS_MSG_1(buf) { \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_01(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(buf); \
	INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0
 * - \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL configuration tuple.
 */
#define MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL          0x6ab, 0, 8

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL id.
 */
#define ID_VIS_LANE_NEAR_RIGHT_INDIVIDUAL           0x6ab

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL extended id bit.
 */
#define EXT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL          0

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL Data Length Count.
 */
#define DLC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL          8

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL cycle time.
 */
#define CYCLE_VIS_LANE_NEAR_RIGHT_INDIVIDUAL        55

/**
 * Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL fast cycle time.
 */
#define FAST_VIS_LANE_NEAR_RIGHT_INDIVIDUAL         0

/**
 * Initialise message VIS_LANE_NEAR_RIGHT_INDIVIDUAL buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL(buf) { \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(buf); \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(buf); \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(buf); \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(buf); \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(buf); \
	INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0
 * - \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL configuration tuple.
 */
#define MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL           0x6ac, 0, 8

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL id.
 */
#define ID_VIS_LANE_NEAR_LEFT_INDIVIDUAL            0x6ac

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL extended id bit.
 */
#define EXT_VIS_LANE_NEAR_LEFT_INDIVIDUAL           0

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL Data Length Count.
 */
#define DLC_VIS_LANE_NEAR_LEFT_INDIVIDUAL           8

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL cycle time.
 */
#define CYCLE_VIS_LANE_NEAR_LEFT_INDIVIDUAL         55

/**
 * Message VIS_LANE_NEAR_LEFT_INDIVIDUAL fast cycle time.
 */
#define FAST_VIS_LANE_NEAR_LEFT_INDIVIDUAL          0

/**
 * Initialise message VIS_LANE_NEAR_LEFT_INDIVIDUAL buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL(buf) { \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(buf); \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(buf); \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(buf); \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(buf); \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(buf); \
	INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_LANE_NEIGHBOR_RIGHT Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0
 * - \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT configuration tuple.
 */
#define MSG_VIS_LANE_NEIGHBOR_RIGHT                 0x6a8, 0, 8

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT id.
 */
#define ID_VIS_LANE_NEIGHBOR_RIGHT                  0x6a8

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT extended id bit.
 */
#define EXT_VIS_LANE_NEIGHBOR_RIGHT                 0

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT Data Length Count.
 */
#define DLC_VIS_LANE_NEIGHBOR_RIGHT                 8

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT cycle time.
 */
#define CYCLE_VIS_LANE_NEIGHBOR_RIGHT               55

/**
 * Message VIS_LANE_NEIGHBOR_RIGHT fast cycle time.
 */
#define FAST_VIS_LANE_NEIGHBOR_RIGHT                0

/**
 * Initialise message VIS_LANE_NEIGHBOR_RIGHT buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_LANE_NEIGHBOR_RIGHT(buf) { \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_LANE_NEIGHBOR_LEFT Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0
 * - \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_LANE_NEIGHBOR_LEFT configuration tuple.
 */
#define MSG_VIS_LANE_NEIGHBOR_LEFT                  0x6a9, 0, 8

/**
 * Message VIS_LANE_NEIGHBOR_LEFT id.
 */
#define ID_VIS_LANE_NEIGHBOR_LEFT                   0x6a9

/**
 * Message VIS_LANE_NEIGHBOR_LEFT extended id bit.
 */
#define EXT_VIS_LANE_NEIGHBOR_LEFT                  0

/**
 * Message VIS_LANE_NEIGHBOR_LEFT Data Length Count.
 */
#define DLC_VIS_LANE_NEIGHBOR_LEFT                  8

/**
 * Message VIS_LANE_NEIGHBOR_LEFT cycle time.
 */
#define CYCLE_VIS_LANE_NEIGHBOR_LEFT                55

/**
 * Message VIS_LANE_NEIGHBOR_LEFT fast cycle time.
 */
#define FAST_VIS_LANE_NEIGHBOR_LEFT                 0

/**
 * Initialise message VIS_LANE_NEIGHBOR_LEFT buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_LANE_NEIGHBOR_LEFT(buf) { \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(buf); \
	INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_VIS_LANE_INFORMATION Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Sent by \ref ECU_IFV_CWMP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 * - \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 *
 * @ingroup ECU_IFV_CWMP
 * @{
 */

/**
 * Message VIS_LANE_INFORMATION configuration tuple.
 */
#define MSG_VIS_LANE_INFORMATION                    0x6a4, 0, 8

/**
 * Message VIS_LANE_INFORMATION id.
 */
#define ID_VIS_LANE_INFORMATION                     0x6a4

/**
 * Message VIS_LANE_INFORMATION extended id bit.
 */
#define EXT_VIS_LANE_INFORMATION                    0

/**
 * Message VIS_LANE_INFORMATION Data Length Count.
 */
#define DLC_VIS_LANE_INFORMATION                    8

/**
 * Message VIS_LANE_INFORMATION cycle time.
 */
#define CYCLE_VIS_LANE_INFORMATION                  55

/**
 * Message VIS_LANE_INFORMATION fast cycle time.
 */
#define FAST_VIS_LANE_INFORMATION                   0

/**
 * Initialise message VIS_LANE_INFORMATION buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VIS_LANE_INFORMATION(buf) { \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(buf); \
	INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(buf); \
}

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15 Signal VIS_OBS_CIPO_15 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(buf, 0)

/**
 * Signal VIS_OBS_CIPO_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_15 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15      0

/**
 * Signal VIS_OBS_CIPO_15 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15        0

/**
 * Signal VIS_OBS_CIPO_15 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15        15

/**
 * Signal VIS_OBS_CIPO_15 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_15        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14 Signal VIS_OBS_CIPO_14 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(buf, 0)

/**
 * Signal VIS_OBS_CIPO_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_14 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14      0

/**
 * Signal VIS_OBS_CIPO_14 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14        0

/**
 * Signal VIS_OBS_CIPO_14 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14        15

/**
 * Signal VIS_OBS_CIPO_14 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_14        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13 Signal VIS_OBS_CIPO_13 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(buf, 0)

/**
 * Signal VIS_OBS_CIPO_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_13 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13      0

/**
 * Signal VIS_OBS_CIPO_13 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13        0

/**
 * Signal VIS_OBS_CIPO_13 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13        15

/**
 * Signal VIS_OBS_CIPO_13 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_13        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12 Signal VIS_OBS_CIPO_12 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(buf, 0)

/**
 * Signal VIS_OBS_CIPO_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_12 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12      0

/**
 * Signal VIS_OBS_CIPO_12 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12        0

/**
 * Signal VIS_OBS_CIPO_12 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12        15

/**
 * Signal VIS_OBS_CIPO_12 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_12        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11 Signal VIS_OBS_CIPO_11 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(buf, 0)

/**
 * Signal VIS_OBS_CIPO_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_11 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11      0

/**
 * Signal VIS_OBS_CIPO_11 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11        0

/**
 * Signal VIS_OBS_CIPO_11 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11        15

/**
 * Signal VIS_OBS_CIPO_11 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_11        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10 Signal VIS_OBS_CIPO_10 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(buf, 0)

/**
 * Signal VIS_OBS_CIPO_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_10 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10      0

/**
 * Signal VIS_OBS_CIPO_10 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10        0

/**
 * Signal VIS_OBS_CIPO_10 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10        15

/**
 * Signal VIS_OBS_CIPO_10 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_10        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09 Signal VIS_OBS_CIPO_09 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(buf, 0)

/**
 * Signal VIS_OBS_CIPO_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_09 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09      0

/**
 * Signal VIS_OBS_CIPO_09 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09        0

/**
 * Signal VIS_OBS_CIPO_09 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09        15

/**
 * Signal VIS_OBS_CIPO_09 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_09        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08 Signal VIS_OBS_CIPO_08 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(buf, 0)

/**
 * Signal VIS_OBS_CIPO_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_08 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08      0

/**
 * Signal VIS_OBS_CIPO_08 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08        0

/**
 * Signal VIS_OBS_CIPO_08 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08        15

/**
 * Signal VIS_OBS_CIPO_08 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_08        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07 Signal VIS_OBS_CIPO_07 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(buf, 0)

/**
 * Signal VIS_OBS_CIPO_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_07 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07      0

/**
 * Signal VIS_OBS_CIPO_07 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07        0

/**
 * Signal VIS_OBS_CIPO_07 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07        15

/**
 * Signal VIS_OBS_CIPO_07 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06 Signal VIS_OBS_CIPO_06 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(buf, 0)

/**
 * Signal VIS_OBS_CIPO_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_06 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06      0

/**
 * Signal VIS_OBS_CIPO_06 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06        0

/**
 * Signal VIS_OBS_CIPO_06 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06        15

/**
 * Signal VIS_OBS_CIPO_06 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05 Signal VIS_OBS_CIPO_05 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(buf, 0)

/**
 * Signal VIS_OBS_CIPO_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_05 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05      0

/**
 * Signal VIS_OBS_CIPO_05 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05        0

/**
 * Signal VIS_OBS_CIPO_05 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05        15

/**
 * Signal VIS_OBS_CIPO_05 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04 Signal VIS_OBS_CIPO_04 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(buf, 0)

/**
 * Signal VIS_OBS_CIPO_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_04 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04      0

/**
 * Signal VIS_OBS_CIPO_04 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04        0

/**
 * Signal VIS_OBS_CIPO_04 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04        15

/**
 * Signal VIS_OBS_CIPO_04 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03 Signal VIS_OBS_CIPO_03 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(buf, 0)

/**
 * Signal VIS_OBS_CIPO_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_03 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03      0

/**
 * Signal VIS_OBS_CIPO_03 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03        0

/**
 * Signal VIS_OBS_CIPO_03 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03        15

/**
 * Signal VIS_OBS_CIPO_03 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02 Signal VIS_OBS_CIPO_02 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(buf, 0)

/**
 * Signal VIS_OBS_CIPO_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_02 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02      0

/**
 * Signal VIS_OBS_CIPO_02 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02        0

/**
 * Signal VIS_OBS_CIPO_02 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02        15

/**
 * Signal VIS_OBS_CIPO_02 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01 Signal VIS_OBS_CIPO_01 of Message VECTOR__INDEPENDENT_SIG_MSG (0x40000000)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VECTOR__INDEPENDENT_SIG_MSG
 * @{
 */

/**
 * Signal VIS_OBS_CIPO_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01 and \ref GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01 instead.
 */
#define SIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01        0, 0, 0, 4

/**
 * Signal VIS_OBS_CIPO_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01 or \ref INIT_VECTOR__INDEPENDENT_SIG_MSG instead.
 */
#define SETUP_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01      0, 0, 0, 4, 0

/**
 * Get signal VIS_OBS_CIPO_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CIPO_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_CIPO_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(buf) \
	SET_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(buf, 0)

/**
 * Signal VIS_OBS_CIPO_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CIPO_01 raw initial value.
 */
#define START_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01      0

/**
 * Signal VIS_OBS_CIPO_01 raw minimum value.
 */
#define MIN_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01        0

/**
 * Signal VIS_OBS_CIPO_01 raw maximum value.
 */
#define MAX_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01        15

/**
 * Signal VIS_OBS_CIPO_01 raw offset value.
 */
#define OFF_VECTOR__INDEPENDENT_SIG_MSG_VIS_OBS_CIPO_01        0

/**
 * @}
 */

/**
 * @defgroup SIG_System_Status_VFP_State Signal VFP_State of Message System_Status (0x10)
 *
 * Contains the value table \ref ENUM_System_Status_VFP_State.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_System_Status
 * @{
 */

/**
 * Signal VFP_State configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_System_Status_VFP_State and \ref GET_System_Status_VFP_State instead.
 */
#define SIG_System_Status_VFP_State                 1, 0, 23, 8

/**
 * Signal VFP_State setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_System_Status_VFP_State or \ref INIT_System_Status instead.
 */
#define SETUP_System_Status_VFP_State               1, 0, 23, 8, 0

/**
 * Get signal VFP_State from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_System_Status_VFP_State(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 0) & 0xff) << 0) \
)

/**
 * Set signal VFP_State in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_System_Status_VFP_State(buf, val) { \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
}

/**
 * Set signal VFP_State in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_System_Status_VFP_State(buf) \
	SET_System_Status_VFP_State(buf, 0)

/**
 * Signal VFP_State value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_System_Status_VFP_State(x, fmt) \
	((x) * fmt)

/**
 * Signal VFP_State raw initial value.
 */
#define START_System_Status_VFP_State               0

/**
 * Signal VFP_State raw minimum value.
 */
#define MIN_System_Status_VFP_State                 0

/**
 * Signal VFP_State raw maximum value.
 */
#define MAX_System_Status_VFP_State                 0

/**
 * Signal VFP_State raw offset value.
 */
#define OFF_System_Status_VFP_State                 0

/**
 * @}
 */

/**
 * @defgroup ENUM_System_Status_VFP_State Value Table for Signal VFP_State in Message System_Status (0x10)
 *
 * Enum values defined for \ref SIG_System_Status_VFP_State.
 *
 * @ingroup SIG_System_Status_VFP_State
 */

/**
 * Value table System_Status_VFP_State entry eMAIN_STATE_RUNNING_DIAGNOSTICS.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eMAIN_STATE_RUNNING_DIAGNOSTICS    134

/**
 * Value table System_Status_VFP_State entry eMAIN_STATE_PENDING_SPC.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eMAIN_STATE_PENDING_SPC    132

/**
 * Value table System_Status_VFP_State entry eMAIN_STATE_PENDING_TAC.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eMAIN_STATE_PENDING_TAC    130

/**
 * Value table System_Status_VFP_State entry eMAIN_STATE_PENDING_VISION.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eMAIN_STATE_PENDING_VISION    128

/**
 * Value table System_Status_VFP_State entry eRUNNING_SPC.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eRUNNING_SPC        34

/**
 * Value table System_Status_VFP_State entry eRUNNING_TAC.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eRUNNING_TAC        32

/**
 * Value table System_Status_VFP_State entry eBOOT.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eBOOT               3

/**
 * Value table System_Status_VFP_State entry eRUNNING_VISON.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eRUNNING_VISON      2

/**
 * Value table System_Status_VFP_State entry ePENDING.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_ePENDING            1

/**
 * Value table System_Status_VFP_State entry eUKNOWN.
 *
 * @ingroup ENUM_System_Status_VFP_State
 */
#define System_Status_VFP_State_eUKNOWN             0

/**
 * @defgroup SIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE Signal CAN_VEHICLE_YAW_RATE of Message Vehicle_State_Info_1 (0x440)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_Vehicle_State_Info_1
 * @{
 */

/**
 * Signal CAN_VEHICLE_YAW_RATE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE and \ref GET_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE instead.
 */
#define SIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE        0, 1, 32, 16

/**
 * Signal CAN_VEHICLE_YAW_RATE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE or \ref INIT_Vehicle_State_Info_1 instead.
 */
#define SETUP_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE      0, 1, 32, 16, 0

/**
 * Get signal CAN_VEHICLE_YAW_RATE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 8) \
)

/**
 * Set signal CAN_VEHICLE_YAW_RATE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(buf, val) { \
	buf[4] &= ~(0xff << 0); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal CAN_VEHICLE_YAW_RATE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(buf) \
	SET_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(buf, 0)

/**
 * Signal CAN_VEHICLE_YAW_RATE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE(x, fmt) \
	((x) * fmt / 8192)

/**
 * Signal CAN_VEHICLE_YAW_RATE raw initial value.
 */
#define START_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE      0

/**
 * Signal CAN_VEHICLE_YAW_RATE raw minimum value.
 */
#define MIN_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE        -32768

/**
 * Signal CAN_VEHICLE_YAW_RATE raw maximum value.
 */
#define MAX_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE        32767

/**
 * Signal CAN_VEHICLE_YAW_RATE raw offset value.
 */
#define OFF_Vehicle_State_Info_1_CAN_VEHICLE_YAW_RATE        0

/**
 * @}
 */

/**
 * @defgroup SIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED Signal CAN_VEHICLE_SPEED of Message Vehicle_State_Info_1 (0x440)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_Vehicle_State_Info_1
 * @{
 */

/**
 * Signal CAN_VEHICLE_SPEED configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Vehicle_State_Info_1_CAN_VEHICLE_SPEED and \ref GET_Vehicle_State_Info_1_CAN_VEHICLE_SPEED instead.
 */
#define SIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED        0, 1, 16, 16

/**
 * Signal CAN_VEHICLE_SPEED setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED or \ref INIT_Vehicle_State_Info_1 instead.
 */
#define SETUP_Vehicle_State_Info_1_CAN_VEHICLE_SPEED      0, 1, 16, 16, 0

/**
 * Get signal CAN_VEHICLE_SPEED from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0xff) << 8) \
)

/**
 * Set signal CAN_VEHICLE_SPEED in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(buf, val) { \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[3] &= ~(0xff << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 8) & 0xff) << 0; \
}

/**
 * Set signal CAN_VEHICLE_SPEED in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(buf) \
	SET_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(buf, 0)

/**
 * Signal CAN_VEHICLE_SPEED value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Vehicle_State_Info_1_CAN_VEHICLE_SPEED(x, fmt) \
	((x) * fmt / 128)

/**
 * Signal CAN_VEHICLE_SPEED raw initial value.
 */
#define START_Vehicle_State_Info_1_CAN_VEHICLE_SPEED      0

/**
 * Signal CAN_VEHICLE_SPEED raw minimum value.
 */
#define MIN_Vehicle_State_Info_1_CAN_VEHICLE_SPEED        -32768

/**
 * Signal CAN_VEHICLE_SPEED raw maximum value.
 */
#define MAX_Vehicle_State_Info_1_CAN_VEHICLE_SPEED        32767

/**
 * Signal CAN_VEHICLE_SPEED raw offset value.
 */
#define OFF_Vehicle_State_Info_1_CAN_VEHICLE_SPEED        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 Signal VIS_OBS_CUT_IN_OUT_15 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 Value Table for Signal VIS_OBS_CUT_IN_OUT_15 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_15_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 Signal VIS_OBS_CUT_IN_OUT_14 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 Value Table for Signal VIS_OBS_CUT_IN_OUT_14 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_14_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 Signal VIS_OBS_CUT_IN_OUT_13 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 Value Table for Signal VIS_OBS_CUT_IN_OUT_13 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_13_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 Signal VIS_OBS_CUT_IN_OUT_12 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 Value Table for Signal VIS_OBS_CUT_IN_OUT_12 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_12_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 Signal VIS_OBS_CUT_IN_OUT_11 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 Value Table for Signal VIS_OBS_CUT_IN_OUT_11 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_11_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 Signal VIS_OBS_CUT_IN_OUT_10 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 Value Table for Signal VIS_OBS_CUT_IN_OUT_10 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_10_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 Signal VIS_OBS_CUT_IN_OUT_09 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 Value Table for Signal VIS_OBS_CUT_IN_OUT_09 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_09_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 Signal VIS_OBS_CUT_IN_OUT_08 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 Value Table for Signal VIS_OBS_CUT_IN_OUT_08 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_08_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 Signal VIS_OBS_CUT_IN_OUT_07 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 Value Table for Signal VIS_OBS_CUT_IN_OUT_07 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_07_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 Signal VIS_OBS_CUT_IN_OUT_06 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 Value Table for Signal VIS_OBS_CUT_IN_OUT_06 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_06_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 Signal VIS_OBS_CUT_IN_OUT_05 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 Value Table for Signal VIS_OBS_CUT_IN_OUT_05 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_05_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 Signal VIS_OBS_CUT_IN_OUT_04 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 Value Table for Signal VIS_OBS_CUT_IN_OUT_04 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_04_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 Signal VIS_OBS_CUT_IN_OUT_03 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 Value Table for Signal VIS_OBS_CUT_IN_OUT_03 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_03_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 Signal VIS_OBS_CUT_IN_OUT_02 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 Value Table for Signal VIS_OBS_CUT_IN_OUT_02 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_02_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 Signal VIS_OBS_CUT_IN_OUT_01 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01        0, 0, 33, 3

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01      0, 0, 33, 3, 0

/**
 * Get signal VIS_OBS_CUT_IN_OUT_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 1) & 0x07) << 0) \
)

/**
 * Set signal VIS_OBS_CUT_IN_OUT_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(buf, val) { \
	buf[4] &= ~(0x07 << 1); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 1; \
}

/**
 * Set signal VIS_OBS_CUT_IN_OUT_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(buf, 0)

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01      0

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01        0

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01        7

/**
 * Signal VIS_OBS_CUT_IN_OUT_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 Value Table for Signal VIS_OBS_CUT_IN_OUT_01 in Message VIS_OBS_MSG_2 (0x676)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01.
 *
 * @ingroup SIG_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_reserved            7

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry reserved_6.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_reserved_6          6

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_reserved_5          5

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry cut.
 *
 * out
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_cut                 4

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry cut_3.
 *
 * in
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_cut_3               3

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry out.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_out                 2

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry in.
 *
 * host lane
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_in                  1

/**
 * Value table VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01
 */
#define VIS_OBS_MSG_2_VIS_OBS_CUT_IN_OUT_01_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15 Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_15        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14 Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_14        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13 Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_13        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12 Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_12        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11 Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_11        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10 Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_10        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09 Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_09        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08 Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_08        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07 Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06 Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05 Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04 Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03 Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02 Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01 Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01        0, 0, 19, 10

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01      0, 0, 19, 10, 0

/**
 * Get signal VIS_OBS_TTC_CONST_ACC_MODEL_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x1f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x1f) << 5) \
)

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(buf, val) { \
	buf[2] &= ~(0x1f << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x1f) << 3; \
	buf[3] &= ~(0x1f << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 5) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_TTC_CONST_ACC_MODEL_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(buf, 0)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01(x, fmt) \
	((x) * fmt / 100)

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01      0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01        0

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01        700

/**
 * Signal VIS_OBS_TTC_CONST_ACC_MODEL_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_TTC_CONST_ACC_MODEL_01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15 Signal VIS_OBS_LONG_ACCEL_15 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_15 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15        0

/**
 * Signal VIS_OBS_LONG_ACCEL_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_15        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14 Signal VIS_OBS_LONG_ACCEL_14 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_14 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14        0

/**
 * Signal VIS_OBS_LONG_ACCEL_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_14        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13 Signal VIS_OBS_LONG_ACCEL_13 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_13 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13        0

/**
 * Signal VIS_OBS_LONG_ACCEL_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_13        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12 Signal VIS_OBS_LONG_ACCEL_12 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_12 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12        0

/**
 * Signal VIS_OBS_LONG_ACCEL_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_12        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11 Signal VIS_OBS_LONG_ACCEL_11 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_11 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11        0

/**
 * Signal VIS_OBS_LONG_ACCEL_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_11        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10 Signal VIS_OBS_LONG_ACCEL_10 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_10 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10        0

/**
 * Signal VIS_OBS_LONG_ACCEL_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_10        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09 Signal VIS_OBS_LONG_ACCEL_09 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_09 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09        0

/**
 * Signal VIS_OBS_LONG_ACCEL_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_09        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08 Signal VIS_OBS_LONG_ACCEL_08 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_08 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08        0

/**
 * Signal VIS_OBS_LONG_ACCEL_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_08        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07 Signal VIS_OBS_LONG_ACCEL_07 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_07 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07        0

/**
 * Signal VIS_OBS_LONG_ACCEL_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_07        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06 Signal VIS_OBS_LONG_ACCEL_06 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_06 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06        0

/**
 * Signal VIS_OBS_LONG_ACCEL_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_06        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05 Signal VIS_OBS_LONG_ACCEL_05 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_05 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05        0

/**
 * Signal VIS_OBS_LONG_ACCEL_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_05        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04 Signal VIS_OBS_LONG_ACCEL_04 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_04 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04        0

/**
 * Signal VIS_OBS_LONG_ACCEL_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_04        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03 Signal VIS_OBS_LONG_ACCEL_03 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_03 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03        0

/**
 * Signal VIS_OBS_LONG_ACCEL_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_03        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02 Signal VIS_OBS_LONG_ACCEL_02 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_02 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02        0

/**
 * Signal VIS_OBS_LONG_ACCEL_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_02        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01 Signal VIS_OBS_LONG_ACCEL_01 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_LONG_ACCEL_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01        0, 0, 6, 13

/**
 * Signal VIS_OBS_LONG_ACCEL_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01      0, 0, 6, 13, 2560

/**
 * Get signal VIS_OBS_LONG_ACCEL_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0x07) << 10) \
)

/**
 * Set signal VIS_OBS_LONG_ACCEL_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0xff << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[2] &= ~(0x07 << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x07) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_ACCEL_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(buf, 2560)

/**
 * Signal VIS_OBS_LONG_ACCEL_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01(x, fmt) \
	((x) * fmt / 128 + fmt * (-20))

/**
 * Signal VIS_OBS_LONG_ACCEL_01 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01      2560

/**
 * Signal VIS_OBS_LONG_ACCEL_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01        0

/**
 * Signal VIS_OBS_LONG_ACCEL_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01        5120

/**
 * Signal VIS_OBS_LONG_ACCEL_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_LONG_ACCEL_01        -2560

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2 Signal VIS_OBS_COUNT_MSG2 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_COUNT_MSG2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2        0, 0, 2, 4

/**
 * Signal VIS_OBS_COUNT_MSG2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2      0, 0, 2, 4, 0

/**
 * Get signal VIS_OBS_COUNT_MSG2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 2) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_COUNT_MSG2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(buf, val) { \
	buf[0] &= ~(0x0f << 2); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 2; \
}

/**
 * Set signal VIS_OBS_COUNT_MSG2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(buf, 0)

/**
 * Signal VIS_OBS_COUNT_MSG2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_COUNT_MSG2 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2      0

/**
 * Signal VIS_OBS_COUNT_MSG2 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2        0

/**
 * Signal VIS_OBS_COUNT_MSG2 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2        15

/**
 * Signal VIS_OBS_COUNT_MSG2 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_COUNT_MSG2        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2 Signal VIS_OBS_MESSAGE_COUNTER_MSG2 of Message VIS_OBS_MSG_2 (0x676)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_2
 * @{
 */

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2 and \ref GET_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2 instead.
 */
#define SIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2        0, 0, 0, 2

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2 or \ref INIT_VIS_OBS_MSG_2 instead.
 */
#define SETUP_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2      0, 0, 0, 2, 0

/**
 * Get signal VIS_OBS_MESSAGE_COUNTER_MSG2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(buf) \
	SET_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(buf, 0)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 raw initial value.
 */
#define START_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2      0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2        0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2        3

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG2 raw offset value.
 */
#define OFF_VIS_OBS_MSG_2_VIS_OBS_MESSAGE_COUNTER_MSG2        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15 Signal VIS_OBS_WIDTH_15 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_15 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15        0

/**
 * Signal VIS_OBS_WIDTH_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15          0

/**
 * Signal VIS_OBS_WIDTH_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15          60

/**
 * Signal VIS_OBS_WIDTH_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_15          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14 Signal VIS_OBS_WIDTH_14 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_14 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14        0

/**
 * Signal VIS_OBS_WIDTH_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14          0

/**
 * Signal VIS_OBS_WIDTH_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14          60

/**
 * Signal VIS_OBS_WIDTH_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_14          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13 Signal VIS_OBS_WIDTH_13 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_13 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13        0

/**
 * Signal VIS_OBS_WIDTH_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13          0

/**
 * Signal VIS_OBS_WIDTH_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13          60

/**
 * Signal VIS_OBS_WIDTH_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_13          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12 Signal VIS_OBS_WIDTH_12 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_12 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12        0

/**
 * Signal VIS_OBS_WIDTH_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12          0

/**
 * Signal VIS_OBS_WIDTH_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12          60

/**
 * Signal VIS_OBS_WIDTH_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_12          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11 Signal VIS_OBS_WIDTH_11 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_11 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11        0

/**
 * Signal VIS_OBS_WIDTH_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11          0

/**
 * Signal VIS_OBS_WIDTH_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11          60

/**
 * Signal VIS_OBS_WIDTH_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_11          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10 Signal VIS_OBS_WIDTH_10 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_10 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10        0

/**
 * Signal VIS_OBS_WIDTH_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10          0

/**
 * Signal VIS_OBS_WIDTH_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10          60

/**
 * Signal VIS_OBS_WIDTH_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_10          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09 Signal VIS_OBS_WIDTH_09 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_09 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09        0

/**
 * Signal VIS_OBS_WIDTH_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09          0

/**
 * Signal VIS_OBS_WIDTH_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09          60

/**
 * Signal VIS_OBS_WIDTH_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_09          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08 Signal VIS_OBS_WIDTH_08 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_08 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08        0

/**
 * Signal VIS_OBS_WIDTH_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08          0

/**
 * Signal VIS_OBS_WIDTH_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08          60

/**
 * Signal VIS_OBS_WIDTH_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_08          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07 Signal VIS_OBS_WIDTH_07 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_07 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07        0

/**
 * Signal VIS_OBS_WIDTH_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07          0

/**
 * Signal VIS_OBS_WIDTH_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07          60

/**
 * Signal VIS_OBS_WIDTH_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_07          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06 Signal VIS_OBS_WIDTH_06 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_06 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06        0

/**
 * Signal VIS_OBS_WIDTH_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06          0

/**
 * Signal VIS_OBS_WIDTH_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06          127

/**
 * Signal VIS_OBS_WIDTH_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_06          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05 Signal VIS_OBS_WIDTH_05 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_05 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05        0

/**
 * Signal VIS_OBS_WIDTH_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05          0

/**
 * Signal VIS_OBS_WIDTH_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05          60

/**
 * Signal VIS_OBS_WIDTH_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_05          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04 Signal VIS_OBS_WIDTH_04 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_04 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04        0

/**
 * Signal VIS_OBS_WIDTH_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04          0

/**
 * Signal VIS_OBS_WIDTH_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04          60

/**
 * Signal VIS_OBS_WIDTH_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_04          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03 Signal VIS_OBS_WIDTH_03 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_03 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03        0

/**
 * Signal VIS_OBS_WIDTH_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03          0

/**
 * Signal VIS_OBS_WIDTH_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03          60

/**
 * Signal VIS_OBS_WIDTH_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_03          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02 Signal VIS_OBS_WIDTH_02 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_02 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02        0

/**
 * Signal VIS_OBS_WIDTH_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02          0

/**
 * Signal VIS_OBS_WIDTH_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02          60

/**
 * Signal VIS_OBS_WIDTH_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_02          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15 Signal VIS_OBS_LONG_VEL_15 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_15 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15      2048

/**
 * Signal VIS_OBS_LONG_VEL_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15        0

/**
 * Signal VIS_OBS_LONG_VEL_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15        4095

/**
 * Signal VIS_OBS_LONG_VEL_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_15        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14 Signal VIS_OBS_LONG_VEL_14 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_14 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14      2048

/**
 * Signal VIS_OBS_LONG_VEL_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14        0

/**
 * Signal VIS_OBS_LONG_VEL_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14        4095

/**
 * Signal VIS_OBS_LONG_VEL_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_14        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13 Signal VIS_OBS_LONG_VEL_13 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_13 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13      2048

/**
 * Signal VIS_OBS_LONG_VEL_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13        0

/**
 * Signal VIS_OBS_LONG_VEL_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13        4095

/**
 * Signal VIS_OBS_LONG_VEL_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_13        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12 Signal VIS_OBS_LONG_VEL_12 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_12 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12      2048

/**
 * Signal VIS_OBS_LONG_VEL_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12        0

/**
 * Signal VIS_OBS_LONG_VEL_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12        4095

/**
 * Signal VIS_OBS_LONG_VEL_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_12        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11 Signal VIS_OBS_LONG_VEL_11 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_11 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11      2048

/**
 * Signal VIS_OBS_LONG_VEL_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11        0

/**
 * Signal VIS_OBS_LONG_VEL_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11        4095

/**
 * Signal VIS_OBS_LONG_VEL_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_11        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10 Signal VIS_OBS_LONG_VEL_10 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_10 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10      2048

/**
 * Signal VIS_OBS_LONG_VEL_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10        0

/**
 * Signal VIS_OBS_LONG_VEL_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10        4095

/**
 * Signal VIS_OBS_LONG_VEL_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_10        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09 Signal VIS_OBS_LONG_VEL_09 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_09 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09      2048

/**
 * Signal VIS_OBS_LONG_VEL_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09        0

/**
 * Signal VIS_OBS_LONG_VEL_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09        4095

/**
 * Signal VIS_OBS_LONG_VEL_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_09        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08 Signal VIS_OBS_LONG_VEL_08 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_08 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08      2048

/**
 * Signal VIS_OBS_LONG_VEL_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08        0

/**
 * Signal VIS_OBS_LONG_VEL_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08        4095

/**
 * Signal VIS_OBS_LONG_VEL_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_08        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07 Signal VIS_OBS_LONG_VEL_07 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_07 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07      2048

/**
 * Signal VIS_OBS_LONG_VEL_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07        0

/**
 * Signal VIS_OBS_LONG_VEL_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07        4095

/**
 * Signal VIS_OBS_LONG_VEL_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_07        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06 Signal VIS_OBS_LONG_VEL_06 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_06 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06      2048

/**
 * Signal VIS_OBS_LONG_VEL_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06        0

/**
 * Signal VIS_OBS_LONG_VEL_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06        4095

/**
 * Signal VIS_OBS_LONG_VEL_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_06        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05 Signal VIS_OBS_LONG_VEL_05 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_05 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05      2048

/**
 * Signal VIS_OBS_LONG_VEL_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05        0

/**
 * Signal VIS_OBS_LONG_VEL_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05        4095

/**
 * Signal VIS_OBS_LONG_VEL_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_05        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04 Signal VIS_OBS_LONG_VEL_04 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_04 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04      2048

/**
 * Signal VIS_OBS_LONG_VEL_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04        0

/**
 * Signal VIS_OBS_LONG_VEL_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04        4095

/**
 * Signal VIS_OBS_LONG_VEL_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_04        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03 Signal VIS_OBS_LONG_VEL_03 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_03 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03      2048

/**
 * Signal VIS_OBS_LONG_VEL_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03        0

/**
 * Signal VIS_OBS_LONG_VEL_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03        4095

/**
 * Signal VIS_OBS_LONG_VEL_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_03        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02 Signal VIS_OBS_LONG_VEL_02 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_02 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02      2048

/**
 * Signal VIS_OBS_LONG_VEL_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02        0

/**
 * Signal VIS_OBS_LONG_VEL_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02        4095

/**
 * Signal VIS_OBS_LONG_VEL_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_02        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15 Signal VIS_OBS_LONG_POS_15 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_15 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15      0

/**
 * Signal VIS_OBS_LONG_POS_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15        0

/**
 * Signal VIS_OBS_LONG_POS_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15        8160

/**
 * Signal VIS_OBS_LONG_POS_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_15        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14 Signal VIS_OBS_LONG_POS_14 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_14 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14      0

/**
 * Signal VIS_OBS_LONG_POS_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14        0

/**
 * Signal VIS_OBS_LONG_POS_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14        8160

/**
 * Signal VIS_OBS_LONG_POS_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_14        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13 Signal VIS_OBS_LONG_POS_13 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_13 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13      0

/**
 * Signal VIS_OBS_LONG_POS_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13        0

/**
 * Signal VIS_OBS_LONG_POS_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13        8160

/**
 * Signal VIS_OBS_LONG_POS_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_13        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12 Signal VIS_OBS_LONG_POS_12 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_12 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12      0

/**
 * Signal VIS_OBS_LONG_POS_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12        0

/**
 * Signal VIS_OBS_LONG_POS_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12        8160

/**
 * Signal VIS_OBS_LONG_POS_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_12        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11 Signal VIS_OBS_LONG_POS_11 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_11 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11      0

/**
 * Signal VIS_OBS_LONG_POS_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11        0

/**
 * Signal VIS_OBS_LONG_POS_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11        8160

/**
 * Signal VIS_OBS_LONG_POS_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_11        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10 Signal VIS_OBS_LONG_POS_10 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_10 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10      0

/**
 * Signal VIS_OBS_LONG_POS_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10        0

/**
 * Signal VIS_OBS_LONG_POS_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10        8160

/**
 * Signal VIS_OBS_LONG_POS_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_10        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09 Signal VIS_OBS_LONG_POS_09 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_09 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09      0

/**
 * Signal VIS_OBS_LONG_POS_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09        0

/**
 * Signal VIS_OBS_LONG_POS_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09        8160

/**
 * Signal VIS_OBS_LONG_POS_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_09        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08 Signal VIS_OBS_LONG_POS_08 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_08 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08      0

/**
 * Signal VIS_OBS_LONG_POS_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08        0

/**
 * Signal VIS_OBS_LONG_POS_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08        8160

/**
 * Signal VIS_OBS_LONG_POS_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_08        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07 Signal VIS_OBS_LONG_POS_07 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_07 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07      0

/**
 * Signal VIS_OBS_LONG_POS_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07        0

/**
 * Signal VIS_OBS_LONG_POS_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07        8160

/**
 * Signal VIS_OBS_LONG_POS_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_07        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06 Signal VIS_OBS_LONG_POS_06 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_06 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06      0

/**
 * Signal VIS_OBS_LONG_POS_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06        0

/**
 * Signal VIS_OBS_LONG_POS_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06        8160

/**
 * Signal VIS_OBS_LONG_POS_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_06        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05 Signal VIS_OBS_LONG_POS_05 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_05 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05      0

/**
 * Signal VIS_OBS_LONG_POS_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05        0

/**
 * Signal VIS_OBS_LONG_POS_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05        8160

/**
 * Signal VIS_OBS_LONG_POS_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_05        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04 Signal VIS_OBS_LONG_POS_04 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_04 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04      0

/**
 * Signal VIS_OBS_LONG_POS_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04        0

/**
 * Signal VIS_OBS_LONG_POS_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04        8160

/**
 * Signal VIS_OBS_LONG_POS_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_04        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03 Signal VIS_OBS_LONG_POS_03 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_03 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03      0

/**
 * Signal VIS_OBS_LONG_POS_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03        0

/**
 * Signal VIS_OBS_LONG_POS_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03        8160

/**
 * Signal VIS_OBS_LONG_POS_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_03        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02 Signal VIS_OBS_LONG_POS_02 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_02 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02      0

/**
 * Signal VIS_OBS_LONG_POS_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02        0

/**
 * Signal VIS_OBS_LONG_POS_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02        8160

/**
 * Signal VIS_OBS_LONG_POS_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_02        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15 Signal VIS_OBS_LAT_VEL_15 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_15 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15      2048

/**
 * Signal VIS_OBS_LAT_VEL_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15        0

/**
 * Signal VIS_OBS_LAT_VEL_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15        4095

/**
 * Signal VIS_OBS_LAT_VEL_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_15        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14 Signal VIS_OBS_LAT_VEL_14 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_14 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14      2048

/**
 * Signal VIS_OBS_LAT_VEL_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14        0

/**
 * Signal VIS_OBS_LAT_VEL_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14        4095

/**
 * Signal VIS_OBS_LAT_VEL_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_14        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13 Signal VIS_OBS_LAT_VEL_13 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_13 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13      2048

/**
 * Signal VIS_OBS_LAT_VEL_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13        0

/**
 * Signal VIS_OBS_LAT_VEL_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13        4095

/**
 * Signal VIS_OBS_LAT_VEL_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_13        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12 Signal VIS_OBS_LAT_VEL_12 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_12 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12      2048

/**
 * Signal VIS_OBS_LAT_VEL_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12        0

/**
 * Signal VIS_OBS_LAT_VEL_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12        4095

/**
 * Signal VIS_OBS_LAT_VEL_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_12        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11 Signal VIS_OBS_LAT_VEL_11 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_11 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11      2048

/**
 * Signal VIS_OBS_LAT_VEL_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11        0

/**
 * Signal VIS_OBS_LAT_VEL_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11        4095

/**
 * Signal VIS_OBS_LAT_VEL_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_11        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10 Signal VIS_OBS_LAT_VEL_10 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_10 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10      2048

/**
 * Signal VIS_OBS_LAT_VEL_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10        0

/**
 * Signal VIS_OBS_LAT_VEL_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10        4095

/**
 * Signal VIS_OBS_LAT_VEL_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_10        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09 Signal VIS_OBS_LAT_VEL_09 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_09 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09      2048

/**
 * Signal VIS_OBS_LAT_VEL_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09        0

/**
 * Signal VIS_OBS_LAT_VEL_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09        4095

/**
 * Signal VIS_OBS_LAT_VEL_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_09        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08 Signal VIS_OBS_LAT_VEL_08 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_08 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08      2048

/**
 * Signal VIS_OBS_LAT_VEL_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08        0

/**
 * Signal VIS_OBS_LAT_VEL_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08        4095

/**
 * Signal VIS_OBS_LAT_VEL_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_08        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07 Signal VIS_OBS_LAT_VEL_07 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_07 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07      2048

/**
 * Signal VIS_OBS_LAT_VEL_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07        0

/**
 * Signal VIS_OBS_LAT_VEL_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07        4095

/**
 * Signal VIS_OBS_LAT_VEL_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_07        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06 Signal VIS_OBS_LAT_VEL_06 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_06 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06      2048

/**
 * Signal VIS_OBS_LAT_VEL_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06        0

/**
 * Signal VIS_OBS_LAT_VEL_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06        4095

/**
 * Signal VIS_OBS_LAT_VEL_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_06        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05 Signal VIS_OBS_LAT_VEL_05 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_05 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05      2048

/**
 * Signal VIS_OBS_LAT_VEL_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05        0

/**
 * Signal VIS_OBS_LAT_VEL_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05        4095

/**
 * Signal VIS_OBS_LAT_VEL_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_05        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04 Signal VIS_OBS_LAT_VEL_04 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_04 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04      2048

/**
 * Signal VIS_OBS_LAT_VEL_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04        0

/**
 * Signal VIS_OBS_LAT_VEL_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04        4095

/**
 * Signal VIS_OBS_LAT_VEL_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_04        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03 Signal VIS_OBS_LAT_VEL_03 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_03 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03      2048

/**
 * Signal VIS_OBS_LAT_VEL_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03        0

/**
 * Signal VIS_OBS_LAT_VEL_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03        4095

/**
 * Signal VIS_OBS_LAT_VEL_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_03        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02 Signal VIS_OBS_LAT_VEL_02 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_02 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02      2048

/**
 * Signal VIS_OBS_LAT_VEL_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02        0

/**
 * Signal VIS_OBS_LAT_VEL_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02        4095

/**
 * Signal VIS_OBS_LAT_VEL_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_02        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15 Signal VIS_OBS_LAT_POS_15 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_15 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15      2048

/**
 * Signal VIS_OBS_LAT_POS_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15        0

/**
 * Signal VIS_OBS_LAT_POS_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15        4095

/**
 * Signal VIS_OBS_LAT_POS_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_15        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14 Signal VIS_OBS_LAT_POS_14 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_14 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14      2048

/**
 * Signal VIS_OBS_LAT_POS_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14        0

/**
 * Signal VIS_OBS_LAT_POS_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14        4095

/**
 * Signal VIS_OBS_LAT_POS_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_14        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13 Signal VIS_OBS_LAT_POS_13 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_13 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13      2048

/**
 * Signal VIS_OBS_LAT_POS_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13        0

/**
 * Signal VIS_OBS_LAT_POS_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13        4095

/**
 * Signal VIS_OBS_LAT_POS_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_13        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12 Signal VIS_OBS_LAT_POS_12 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_12 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12      2048

/**
 * Signal VIS_OBS_LAT_POS_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12        0

/**
 * Signal VIS_OBS_LAT_POS_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12        4095

/**
 * Signal VIS_OBS_LAT_POS_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_12        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11 Signal VIS_OBS_LAT_POS_11 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_11 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11      2048

/**
 * Signal VIS_OBS_LAT_POS_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11        0

/**
 * Signal VIS_OBS_LAT_POS_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11        4095

/**
 * Signal VIS_OBS_LAT_POS_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_11        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10 Signal VIS_OBS_LAT_POS_10 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_10 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10      2048

/**
 * Signal VIS_OBS_LAT_POS_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10        0

/**
 * Signal VIS_OBS_LAT_POS_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10        4095

/**
 * Signal VIS_OBS_LAT_POS_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_10        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09 Signal VIS_OBS_LAT_POS_09 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_09 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09      2048

/**
 * Signal VIS_OBS_LAT_POS_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09        0

/**
 * Signal VIS_OBS_LAT_POS_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09        4095

/**
 * Signal VIS_OBS_LAT_POS_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_09        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08 Signal VIS_OBS_LAT_POS_08 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_08 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08      2048

/**
 * Signal VIS_OBS_LAT_POS_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08        0

/**
 * Signal VIS_OBS_LAT_POS_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08        4095

/**
 * Signal VIS_OBS_LAT_POS_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_08        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07 Signal VIS_OBS_LAT_POS_07 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_07 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07      2048

/**
 * Signal VIS_OBS_LAT_POS_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07        0

/**
 * Signal VIS_OBS_LAT_POS_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07        4095

/**
 * Signal VIS_OBS_LAT_POS_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_07        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06 Signal VIS_OBS_LAT_POS_06 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_06 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06      2048

/**
 * Signal VIS_OBS_LAT_POS_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06        0

/**
 * Signal VIS_OBS_LAT_POS_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06        4095

/**
 * Signal VIS_OBS_LAT_POS_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_06        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05 Signal VIS_OBS_LAT_POS_05 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_05 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05      2048

/**
 * Signal VIS_OBS_LAT_POS_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05        0

/**
 * Signal VIS_OBS_LAT_POS_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05        4095

/**
 * Signal VIS_OBS_LAT_POS_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_05        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04 Signal VIS_OBS_LAT_POS_04 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_04 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04      2048

/**
 * Signal VIS_OBS_LAT_POS_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04        0

/**
 * Signal VIS_OBS_LAT_POS_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04        4095

/**
 * Signal VIS_OBS_LAT_POS_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_04        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03 Signal VIS_OBS_LAT_POS_03 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_03 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03      2048

/**
 * Signal VIS_OBS_LAT_POS_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03        0

/**
 * Signal VIS_OBS_LAT_POS_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03        4095

/**
 * Signal VIS_OBS_LAT_POS_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_03        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02 Signal VIS_OBS_LAT_POS_02 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_02 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02      2048

/**
 * Signal VIS_OBS_LAT_POS_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02        0

/**
 * Signal VIS_OBS_LAT_POS_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02        4095

/**
 * Signal VIS_OBS_LAT_POS_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_02        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01 Signal VIS_OBS_WIDTH_01 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_WIDTH_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01          0, 0, 6, 7

/**
 * Signal VIS_OBS_WIDTH_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01        0, 0, 6, 7, 0

/**
 * Get signal VIS_OBS_WIDTH_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 6) & 0x03) << 0) \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x1f) << 2) \
)

/**
 * Set signal VIS_OBS_WIDTH_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(buf, val) { \
	buf[0] &= ~(0x03 << 6); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[1] &= ~(0x1f << 0); \
	buf[1] |= (((uint8_t)(val) >> 2) & 0x1f) << 0; \
}

/**
 * Set signal VIS_OBS_WIDTH_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(buf, 0)

/**
 * Signal VIS_OBS_WIDTH_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_WIDTH_01 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01        0

/**
 * Signal VIS_OBS_WIDTH_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01          0

/**
 * Signal VIS_OBS_WIDTH_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01          60

/**
 * Signal VIS_OBS_WIDTH_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_WIDTH_01          0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3 Signal VIS_OBS_MESSAGE_COUNTER_MSG3 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3        0, 0, 0, 2

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3      0, 0, 0, 2, 0

/**
 * Get signal VIS_OBS_MESSAGE_COUNTER_MSG3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(buf, val) { \
	buf[0] &= ~(0x03 << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(buf, 0)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3      0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3        0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3        3

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG3 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_MESSAGE_COUNTER_MSG3        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01 Signal VIS_OBS_LONG_VEL_01 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_VEL_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01        0, 0, 26, 12

/**
 * Signal VIS_OBS_LONG_VEL_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01      0, 0, 26, 12, 2048

/**
 * Get signal VIS_OBS_LONG_VEL_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LONG_VEL_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x3f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_VEL_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(buf, 2048)

/**
 * Signal VIS_OBS_LONG_VEL_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LONG_VEL_01 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01      2048

/**
 * Signal VIS_OBS_LONG_VEL_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01        0

/**
 * Signal VIS_OBS_LONG_VEL_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01        4095

/**
 * Signal VIS_OBS_LONG_VEL_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_VEL_01        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01 Signal VIS_OBS_LONG_POS_01 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LONG_POS_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01        0, 0, 13, 13

/**
 * Signal VIS_OBS_LONG_POS_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01      0, 0, 13, 13, 0

/**
 * Get signal VIS_OBS_LONG_POS_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 3) \
	| (uint16_t)(+(uint16_t)((buf[3] >> 0) & 0x03) << 11) \
)

/**
 * Set signal VIS_OBS_LONG_POS_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(buf, val) { \
	buf[1] &= ~(0x07 << 5); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 3) & 0xff) << 0; \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= ((uint8_t)((uint16_t)(val) >> 11) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LONG_POS_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(buf, 0)

/**
 * Signal VIS_OBS_LONG_POS_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01(x, fmt) \
	((x) * fmt / 32)

/**
 * Signal VIS_OBS_LONG_POS_01 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01      0

/**
 * Signal VIS_OBS_LONG_POS_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01        0

/**
 * Signal VIS_OBS_LONG_POS_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01        8160

/**
 * Signal VIS_OBS_LONG_POS_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LONG_POS_01        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01 Signal VIS_OBS_LAT_VEL_01 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_VEL_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01        0, 0, 50, 12

/**
 * Signal VIS_OBS_LAT_VEL_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01      0, 0, 50, 12, 2048

/**
 * Get signal VIS_OBS_LAT_VEL_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 6) \
)

/**
 * Set signal VIS_OBS_LAT_VEL_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(buf, val) { \
	buf[6] &= ~(0x3f << 2); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x3f) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_VEL_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(buf, 2048)

/**
 * Signal VIS_OBS_LAT_VEL_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_VEL_01 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01      2048

/**
 * Signal VIS_OBS_LAT_VEL_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01        0

/**
 * Signal VIS_OBS_LAT_VEL_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01        4095

/**
 * Signal VIS_OBS_LAT_VEL_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_VEL_01        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01 Signal VIS_OBS_LAT_POS_01 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_LAT_POS_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01        0, 0, 38, 12

/**
 * Signal VIS_OBS_LAT_POS_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01      0, 0, 38, 12, 2048

/**
 * Get signal VIS_OBS_LAT_POS_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0x03) << 10) \
)

/**
 * Set signal VIS_OBS_LAT_POS_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(buf, val) { \
	buf[4] &= ~(0x03 << 6); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[5] &= ~(0xff << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_LAT_POS_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(buf, 2048)

/**
 * Signal VIS_OBS_LAT_POS_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01(x, fmt) \
	((x) * fmt / 16 + fmt * (-128))

/**
 * Signal VIS_OBS_LAT_POS_01 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01      2048

/**
 * Signal VIS_OBS_LAT_POS_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01        0

/**
 * Signal VIS_OBS_LAT_POS_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01        4095

/**
 * Signal VIS_OBS_LAT_POS_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_LAT_POS_01        -2048

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3 Signal VIS_OBS_COUNT_MSG3 of Message VIS_OBS_MSG_3 (0x677)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_3
 * @{
 */

/**
 * Signal VIS_OBS_COUNT_MSG3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3 and \ref GET_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3 instead.
 */
#define SIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3        0, 0, 2, 4

/**
 * Signal VIS_OBS_COUNT_MSG3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3 or \ref INIT_VIS_OBS_MSG_3 instead.
 */
#define SETUP_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3      0, 0, 2, 4, 0

/**
 * Get signal VIS_OBS_COUNT_MSG3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 2) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_COUNT_MSG3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(buf, val) { \
	buf[0] &= ~(0x0f << 2); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 2; \
}

/**
 * Set signal VIS_OBS_COUNT_MSG3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(buf) \
	SET_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(buf, 0)

/**
 * Signal VIS_OBS_COUNT_MSG3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_COUNT_MSG3 raw initial value.
 */
#define START_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3      0

/**
 * Signal VIS_OBS_COUNT_MSG3 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3        0

/**
 * Signal VIS_OBS_COUNT_MSG3 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3        15

/**
 * Signal VIS_OBS_COUNT_MSG3 raw offset value.
 */
#define OFF_VIS_OBS_MSG_3_VIS_OBS_COUNT_MSG3        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 Signal VIS_OBS_TURN_INDICATOR_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 Value Table for Signal VIS_OBS_TURN_INDICATOR_15 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_15_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 Signal VIS_OBS_TURN_INDICATOR_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 Value Table for Signal VIS_OBS_TURN_INDICATOR_14 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_14_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 Signal VIS_OBS_TURN_INDICATOR_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 Value Table for Signal VIS_OBS_TURN_INDICATOR_13 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_13_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 Signal VIS_OBS_TURN_INDICATOR_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 Value Table for Signal VIS_OBS_TURN_INDICATOR_12 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_12_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 Signal VIS_OBS_TURN_INDICATOR_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 Value Table for Signal VIS_OBS_TURN_INDICATOR_11 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_11_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 Signal VIS_OBS_TURN_INDICATOR_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 Value Table for Signal VIS_OBS_TURN_INDICATOR_10 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_10_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 Signal VIS_OBS_TURN_INDICATOR_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 Value Table for Signal VIS_OBS_TURN_INDICATOR_09 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_09_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 Signal VIS_OBS_TURN_INDICATOR_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 Value Table for Signal VIS_OBS_TURN_INDICATOR_08 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_08_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 Signal VIS_OBS_TURN_INDICATOR_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 Value Table for Signal VIS_OBS_TURN_INDICATOR_07 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_07_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 Signal VIS_OBS_TURN_INDICATOR_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 Value Table for Signal VIS_OBS_TURN_INDICATOR_06 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_06_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 Signal VIS_OBS_TURN_INDICATOR_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 Value Table for Signal VIS_OBS_TURN_INDICATOR_05 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_05_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 Signal VIS_OBS_TURN_INDICATOR_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 Value Table for Signal VIS_OBS_TURN_INDICATOR_04 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_04_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 Signal VIS_OBS_TURN_INDICATOR_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 Value Table for Signal VIS_OBS_TURN_INDICATOR_03 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_03_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 Signal VIS_OBS_TURN_INDICATOR_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 Value Table for Signal VIS_OBS_TURN_INDICATOR_02 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_02_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 Signal VIS_OBS_PED_WAIST_UP_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 Value Table for Signal VIS_OBS_PED_WAIST_UP_15 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_15_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 Signal VIS_OBS_PED_WAIST_UP_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 Value Table for Signal VIS_OBS_PED_WAIST_UP_14 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_14_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 Signal VIS_OBS_PED_WAIST_UP_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 Value Table for Signal VIS_OBS_PED_WAIST_UP_13 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_13_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 Signal VIS_OBS_PED_WAIST_UP_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 Value Table for Signal VIS_OBS_PED_WAIST_UP_12 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_12_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 Signal VIS_OBS_PED_WAIST_UP_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 Value Table for Signal VIS_OBS_PED_WAIST_UP_11 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_11_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 Signal VIS_OBS_PED_WAIST_UP_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 Value Table for Signal VIS_OBS_PED_WAIST_UP_10 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_10_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 Signal VIS_OBS_PED_WAIST_UP_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 Value Table for Signal VIS_OBS_PED_WAIST_UP_09 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_09_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 Signal VIS_OBS_PED_WAIST_UP_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 Value Table for Signal VIS_OBS_PED_WAIST_UP_08 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_08_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 Signal VIS_OBS_PED_WAIST_UP_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 Value Table for Signal VIS_OBS_PED_WAIST_UP_07 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_07_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 Signal VIS_OBS_PED_WAIST_UP_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 Value Table for Signal VIS_OBS_PED_WAIST_UP_06 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_06_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 Signal VIS_OBS_PED_WAIST_UP_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 Value Table for Signal VIS_OBS_PED_WAIST_UP_05 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_05_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 Signal VIS_OBS_PED_WAIST_UP_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 Value Table for Signal VIS_OBS_PED_WAIST_UP_04 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_04_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 Signal VIS_OBS_PED_WAIST_UP_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 Value Table for Signal VIS_OBS_PED_WAIST_UP_03 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_03_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 Signal VIS_OBS_PED_WAIST_UP_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 Value Table for Signal VIS_OBS_PED_WAIST_UP_02 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_02_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_15 Signal VIS_OBS_ID_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_15             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_15           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_15(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_15(buf, 0)

/**
 * Signal VIS_OBS_ID_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_15           0

/**
 * Signal VIS_OBS_ID_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_15             0

/**
 * Signal VIS_OBS_ID_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_15             15

/**
 * Signal VIS_OBS_ID_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_15             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_14 Signal VIS_OBS_ID_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_14             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_14           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_14(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_14(buf, 0)

/**
 * Signal VIS_OBS_ID_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_14           0

/**
 * Signal VIS_OBS_ID_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_14             0

/**
 * Signal VIS_OBS_ID_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_14             15

/**
 * Signal VIS_OBS_ID_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_14             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_13 Signal VIS_OBS_ID_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_13             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_13           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_13(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_13(buf, 0)

/**
 * Signal VIS_OBS_ID_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_13           0

/**
 * Signal VIS_OBS_ID_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_13             0

/**
 * Signal VIS_OBS_ID_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_13             15

/**
 * Signal VIS_OBS_ID_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_13             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_12 Signal VIS_OBS_ID_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_12             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_12           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_12(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_12(buf, 0)

/**
 * Signal VIS_OBS_ID_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_12           0

/**
 * Signal VIS_OBS_ID_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_12             0

/**
 * Signal VIS_OBS_ID_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_12             15

/**
 * Signal VIS_OBS_ID_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_12             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_11 Signal VIS_OBS_ID_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_11             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_11           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_11(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_11(buf, 0)

/**
 * Signal VIS_OBS_ID_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_11           0

/**
 * Signal VIS_OBS_ID_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_11             0

/**
 * Signal VIS_OBS_ID_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_11             15

/**
 * Signal VIS_OBS_ID_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_11             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_10 Signal VIS_OBS_ID_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_10             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_10           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_10(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_10(buf, 0)

/**
 * Signal VIS_OBS_ID_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_10           0

/**
 * Signal VIS_OBS_ID_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_10             0

/**
 * Signal VIS_OBS_ID_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_10             15

/**
 * Signal VIS_OBS_ID_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_10             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_09 Signal VIS_OBS_ID_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_09             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_09           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_09(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_09(buf, 0)

/**
 * Signal VIS_OBS_ID_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_09           0

/**
 * Signal VIS_OBS_ID_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_09             0

/**
 * Signal VIS_OBS_ID_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_09             15

/**
 * Signal VIS_OBS_ID_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_09             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_08 Signal VIS_OBS_ID_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_08             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_08           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_08(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_08(buf, 0)

/**
 * Signal VIS_OBS_ID_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_08           0

/**
 * Signal VIS_OBS_ID_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_08             0

/**
 * Signal VIS_OBS_ID_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_08             15

/**
 * Signal VIS_OBS_ID_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_08             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_07 Signal VIS_OBS_ID_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_07             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_07           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_07(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_07(buf, 0)

/**
 * Signal VIS_OBS_ID_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_07           0

/**
 * Signal VIS_OBS_ID_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_07             0

/**
 * Signal VIS_OBS_ID_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_07             15

/**
 * Signal VIS_OBS_ID_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_07             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_06 Signal VIS_OBS_ID_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_06             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_06           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_06(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_06(buf, 0)

/**
 * Signal VIS_OBS_ID_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_06           0

/**
 * Signal VIS_OBS_ID_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_06             0

/**
 * Signal VIS_OBS_ID_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_06             15

/**
 * Signal VIS_OBS_ID_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_06             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_05 Signal VIS_OBS_ID_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_05             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_05           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_05(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_05(buf, 0)

/**
 * Signal VIS_OBS_ID_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_05           0

/**
 * Signal VIS_OBS_ID_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_05             0

/**
 * Signal VIS_OBS_ID_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_05             15

/**
 * Signal VIS_OBS_ID_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_05             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_04 Signal VIS_OBS_ID_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_04             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_04           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_04(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_04(buf, 0)

/**
 * Signal VIS_OBS_ID_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_04           0

/**
 * Signal VIS_OBS_ID_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_04             0

/**
 * Signal VIS_OBS_ID_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_04             15

/**
 * Signal VIS_OBS_ID_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_04             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_03 Signal VIS_OBS_ID_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_03             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_03           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_03(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_03(buf, 0)

/**
 * Signal VIS_OBS_ID_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_03           0

/**
 * Signal VIS_OBS_ID_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_03             0

/**
 * Signal VIS_OBS_ID_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_03             15

/**
 * Signal VIS_OBS_ID_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_03             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_02 Signal VIS_OBS_ID_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_02             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_02           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_02(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_02(buf, 0)

/**
 * Signal VIS_OBS_ID_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_02           0

/**
 * Signal VIS_OBS_ID_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_02             0

/**
 * Signal VIS_OBS_ID_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_02             15

/**
 * Signal VIS_OBS_ID_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_02             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15 Signal VIS_OBS_HEIGHT_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15       0

/**
 * Signal VIS_OBS_HEIGHT_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15         0

/**
 * Signal VIS_OBS_HEIGHT_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15         30

/**
 * Signal VIS_OBS_HEIGHT_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_15         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14 Signal VIS_OBS_HEIGHT_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14       0

/**
 * Signal VIS_OBS_HEIGHT_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14         0

/**
 * Signal VIS_OBS_HEIGHT_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14         30

/**
 * Signal VIS_OBS_HEIGHT_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_14         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13 Signal VIS_OBS_HEIGHT_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13       0

/**
 * Signal VIS_OBS_HEIGHT_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13         0

/**
 * Signal VIS_OBS_HEIGHT_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13         30

/**
 * Signal VIS_OBS_HEIGHT_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_13         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12 Signal VIS_OBS_HEIGHT_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12       0

/**
 * Signal VIS_OBS_HEIGHT_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12         0

/**
 * Signal VIS_OBS_HEIGHT_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12         30

/**
 * Signal VIS_OBS_HEIGHT_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_12         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11 Signal VIS_OBS_HEIGHT_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11       0

/**
 * Signal VIS_OBS_HEIGHT_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11         0

/**
 * Signal VIS_OBS_HEIGHT_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11         30

/**
 * Signal VIS_OBS_HEIGHT_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_11         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10 Signal VIS_OBS_HEIGHT_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10       0

/**
 * Signal VIS_OBS_HEIGHT_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10         0

/**
 * Signal VIS_OBS_HEIGHT_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10         30

/**
 * Signal VIS_OBS_HEIGHT_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_10         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09 Signal VIS_OBS_HEIGHT_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09       0

/**
 * Signal VIS_OBS_HEIGHT_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09         0

/**
 * Signal VIS_OBS_HEIGHT_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09         30

/**
 * Signal VIS_OBS_HEIGHT_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_09         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08 Signal VIS_OBS_HEIGHT_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08       0

/**
 * Signal VIS_OBS_HEIGHT_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08         0

/**
 * Signal VIS_OBS_HEIGHT_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08         30

/**
 * Signal VIS_OBS_HEIGHT_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_08         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07 Signal VIS_OBS_HEIGHT_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07       0

/**
 * Signal VIS_OBS_HEIGHT_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07         0

/**
 * Signal VIS_OBS_HEIGHT_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07         30

/**
 * Signal VIS_OBS_HEIGHT_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_07         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06 Signal VIS_OBS_HEIGHT_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06       0

/**
 * Signal VIS_OBS_HEIGHT_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06         0

/**
 * Signal VIS_OBS_HEIGHT_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06         30

/**
 * Signal VIS_OBS_HEIGHT_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_06         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05 Signal VIS_OBS_HEIGHT_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05       0

/**
 * Signal VIS_OBS_HEIGHT_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05         0

/**
 * Signal VIS_OBS_HEIGHT_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05         30

/**
 * Signal VIS_OBS_HEIGHT_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_05         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04 Signal VIS_OBS_HEIGHT_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04       0

/**
 * Signal VIS_OBS_HEIGHT_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04         0

/**
 * Signal VIS_OBS_HEIGHT_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04         30

/**
 * Signal VIS_OBS_HEIGHT_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_04         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03 Signal VIS_OBS_HEIGHT_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03       0

/**
 * Signal VIS_OBS_HEIGHT_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03         0

/**
 * Signal VIS_OBS_HEIGHT_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03         30

/**
 * Signal VIS_OBS_HEIGHT_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_03         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02 Signal VIS_OBS_HEIGHT_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02       0

/**
 * Signal VIS_OBS_HEIGHT_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02         0

/**
 * Signal VIS_OBS_HEIGHT_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02         30

/**
 * Signal VIS_OBS_HEIGHT_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_02         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 Signal VIS_OBS_CLASSIFICATION_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15      0

/**
 * Signal VIS_OBS_CLASSIFICATION_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15        0

/**
 * Signal VIS_OBS_CLASSIFICATION_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15        10

/**
 * Signal VIS_OBS_CLASSIFICATION_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 Value Table for Signal VIS_OBS_CLASSIFICATION_15 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_15_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 Signal VIS_OBS_CLASSIFICATION_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14      0

/**
 * Signal VIS_OBS_CLASSIFICATION_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14        0

/**
 * Signal VIS_OBS_CLASSIFICATION_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14        10

/**
 * Signal VIS_OBS_CLASSIFICATION_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 Value Table for Signal VIS_OBS_CLASSIFICATION_14 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_14_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 Signal VIS_OBS_CLASSIFICATION_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13      0

/**
 * Signal VIS_OBS_CLASSIFICATION_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13        0

/**
 * Signal VIS_OBS_CLASSIFICATION_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13        10

/**
 * Signal VIS_OBS_CLASSIFICATION_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 Value Table for Signal VIS_OBS_CLASSIFICATION_13 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_13_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 Signal VIS_OBS_CLASSIFICATION_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12      0

/**
 * Signal VIS_OBS_CLASSIFICATION_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12        0

/**
 * Signal VIS_OBS_CLASSIFICATION_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12        10

/**
 * Signal VIS_OBS_CLASSIFICATION_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 Value Table for Signal VIS_OBS_CLASSIFICATION_12 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_12_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 Signal VIS_OBS_CLASSIFICATION_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11      0

/**
 * Signal VIS_OBS_CLASSIFICATION_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11        0

/**
 * Signal VIS_OBS_CLASSIFICATION_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11        10

/**
 * Signal VIS_OBS_CLASSIFICATION_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 Value Table for Signal VIS_OBS_CLASSIFICATION_11 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_11_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 Signal VIS_OBS_CLASSIFICATION_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10      0

/**
 * Signal VIS_OBS_CLASSIFICATION_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10        0

/**
 * Signal VIS_OBS_CLASSIFICATION_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10        10

/**
 * Signal VIS_OBS_CLASSIFICATION_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 Value Table for Signal VIS_OBS_CLASSIFICATION_10 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_10_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 Signal VIS_OBS_CLASSIFICATION_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09      0

/**
 * Signal VIS_OBS_CLASSIFICATION_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09        0

/**
 * Signal VIS_OBS_CLASSIFICATION_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09        10

/**
 * Signal VIS_OBS_CLASSIFICATION_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 Value Table for Signal VIS_OBS_CLASSIFICATION_09 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_09_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 Signal VIS_OBS_CLASSIFICATION_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08      0

/**
 * Signal VIS_OBS_CLASSIFICATION_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08        0

/**
 * Signal VIS_OBS_CLASSIFICATION_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08        10

/**
 * Signal VIS_OBS_CLASSIFICATION_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 Value Table for Signal VIS_OBS_CLASSIFICATION_08 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_08_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 Signal VIS_OBS_CLASSIFICATION_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07      0

/**
 * Signal VIS_OBS_CLASSIFICATION_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07        0

/**
 * Signal VIS_OBS_CLASSIFICATION_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07        10

/**
 * Signal VIS_OBS_CLASSIFICATION_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 Value Table for Signal VIS_OBS_CLASSIFICATION_07 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_07_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 Signal VIS_OBS_CLASSIFICATION_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06      0

/**
 * Signal VIS_OBS_CLASSIFICATION_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06        0

/**
 * Signal VIS_OBS_CLASSIFICATION_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06        10

/**
 * Signal VIS_OBS_CLASSIFICATION_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 Value Table for Signal VIS_OBS_CLASSIFICATION_06 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_06_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 Signal VIS_OBS_CLASSIFICATION_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05      0

/**
 * Signal VIS_OBS_CLASSIFICATION_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05        0

/**
 * Signal VIS_OBS_CLASSIFICATION_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05        10

/**
 * Signal VIS_OBS_CLASSIFICATION_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 Value Table for Signal VIS_OBS_CLASSIFICATION_05 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_05_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 Signal VIS_OBS_CLASSIFICATION_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04      0

/**
 * Signal VIS_OBS_CLASSIFICATION_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04        0

/**
 * Signal VIS_OBS_CLASSIFICATION_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04        10

/**
 * Signal VIS_OBS_CLASSIFICATION_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 Value Table for Signal VIS_OBS_CLASSIFICATION_04 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_04_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 Signal VIS_OBS_CLASSIFICATION_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03      0

/**
 * Signal VIS_OBS_CLASSIFICATION_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03        0

/**
 * Signal VIS_OBS_CLASSIFICATION_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03        10

/**
 * Signal VIS_OBS_CLASSIFICATION_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 Value Table for Signal VIS_OBS_CLASSIFICATION_03 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_03_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 Signal VIS_OBS_CLASSIFICATION_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02      0

/**
 * Signal VIS_OBS_CLASSIFICATION_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02        0

/**
 * Signal VIS_OBS_CLASSIFICATION_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02        10

/**
 * Signal VIS_OBS_CLASSIFICATION_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 Value Table for Signal VIS_OBS_CLASSIFICATION_02 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_02_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_15 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_15 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_15 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_15 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_15_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_14 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_14 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_14 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_14 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_14_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_13 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_13 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_13 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_13 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_13_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_12 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_12_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_11 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_11_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_10 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_10_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_09 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_09 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_09 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_09 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_09_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_08 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_08 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_08 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_08 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_08_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_07 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_07 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_07 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_07 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_07_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_06 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_06 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_06 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_06 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_06_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_05 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_05 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_05 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_05 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_05_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_04 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_04 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_04 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_04 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_04_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_03 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_03 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_03 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_03 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_03_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_02 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_02 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_02 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_02 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_02_unknown             0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 Signal VIS_OBS_TURN_INDICATOR_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01        0, 0, 22, 2

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01      0, 0, 22, 2, 0

/**
 * Get signal VIS_OBS_TURN_INDICATOR_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 6) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_TURN_INDICATOR_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(buf, val) { \
	buf[2] &= ~(0x03 << 6); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal VIS_OBS_TURN_INDICATOR_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(buf, 0)

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01      0

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01        0

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01        3

/**
 * Signal VIS_OBS_TURN_INDICATOR_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 Value Table for Signal VIS_OBS_TURN_INDICATOR_01 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01_unknown             3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 entry right.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01_right               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 entry left.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01_left                1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01 entry no.
 *
 * turn indicator active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_TURN_INDICATOR_01_no                  0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 Signal VIS_OBS_PED_WAIST_UP_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01        0, 0, 19, 1

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01      0, 0, 19, 1, 0

/**
 * Get signal VIS_OBS_PED_WAIST_UP_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal VIS_OBS_PED_WAIST_UP_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal VIS_OBS_PED_WAIST_UP_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(buf, 0)

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01      0

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01        0

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01        1

/**
 * Signal VIS_OBS_PED_WAIST_UP_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 Value Table for Signal VIS_OBS_PED_WAIST_UP_01 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 entry false.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01_false               1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01 entry true.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_PED_WAIST_UP_01_true                0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1 Signal VIS_OBS_MESSAGE_COUNTER_MSG1 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1        0, 0, 56, 2

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1      0, 0, 56, 2, 0

/**
 * Get signal VIS_OBS_MESSAGE_COUNTER_MSG1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(buf, val) { \
	buf[7] &= ~(0x03 << 0); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_OBS_MESSAGE_COUNTER_MSG1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(buf, 0)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1      0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1        0

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1        3

/**
 * Signal VIS_OBS_MESSAGE_COUNTER_MSG1 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_MESSAGE_COUNTER_MSG1        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_ID_01 Signal VIS_OBS_ID_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_ID_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_ID_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_ID_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_ID_01             0, 0, 8, 4

/**
 * Signal VIS_OBS_ID_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_ID_01           0, 0, 8, 4, 0

/**
 * Get signal VIS_OBS_ID_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_ID_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_ID_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_ID_01(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_OBS_ID_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_ID_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_ID_01(buf, 0)

/**
 * Signal VIS_OBS_ID_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_ID_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_ID_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_ID_01           0

/**
 * Signal VIS_OBS_ID_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_ID_01             0

/**
 * Signal VIS_OBS_ID_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_ID_01             15

/**
 * Signal VIS_OBS_ID_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_ID_01             0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01 Signal VIS_OBS_HEIGHT_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_HEIGHT_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01         0, 0, 58, 5

/**
 * Signal VIS_OBS_HEIGHT_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01       0, 0, 58, 5, 0

/**
 * Get signal VIS_OBS_HEIGHT_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 2) & 0x1f) << 0) \
)

/**
 * Set signal VIS_OBS_HEIGHT_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(buf, val) { \
	buf[7] &= ~(0x1f << 2); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x1f) << 2; \
}

/**
 * Set signal VIS_OBS_HEIGHT_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(buf, 0)

/**
 * Signal VIS_OBS_HEIGHT_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01(x, fmt) \
	((x) * fmt / 10)

/**
 * Signal VIS_OBS_HEIGHT_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01       0

/**
 * Signal VIS_OBS_HEIGHT_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01         0

/**
 * Signal VIS_OBS_HEIGHT_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01         30

/**
 * Signal VIS_OBS_HEIGHT_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_HEIGHT_01         0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1 Signal VIS_OBS_COUNT_MSG1 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_COUNT_MSG1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1        0, 0, 4, 4

/**
 * Signal VIS_OBS_COUNT_MSG1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1      0, 0, 4, 4, 0

/**
 * Get signal VIS_OBS_COUNT_MSG1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_COUNT_MSG1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(buf, val) { \
	buf[0] &= ~(0x0f << 4); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_COUNT_MSG1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(buf, 0)

/**
 * Signal VIS_OBS_COUNT_MSG1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_COUNT_MSG1 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1      0

/**
 * Signal VIS_OBS_COUNT_MSG1 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1        0

/**
 * Signal VIS_OBS_COUNT_MSG1 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1        15

/**
 * Signal VIS_OBS_COUNT_MSG1 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_COUNT_MSG1        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 Signal VIS_OBS_CLASSIFICATION_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_CLASSIFICATION_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01        0, 0, 12, 4

/**
 * Signal VIS_OBS_CLASSIFICATION_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01      0, 0, 12, 4, 0

/**
 * Get signal VIS_OBS_CLASSIFICATION_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_OBS_CLASSIFICATION_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_OBS_CLASSIFICATION_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(buf, 0)

/**
 * Signal VIS_OBS_CLASSIFICATION_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_CLASSIFICATION_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01      0

/**
 * Signal VIS_OBS_CLASSIFICATION_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01        0

/**
 * Signal VIS_OBS_CLASSIFICATION_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01        10

/**
 * Signal VIS_OBS_CLASSIFICATION_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 Value Table for Signal VIS_OBS_CLASSIFICATION_01 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry unidentified.
 *
 * vehicle
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_unidentified        10

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry bicycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_bicycle             9

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry general.
 *
 * on-road object
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_general             8

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry animal.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_animal              7

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry reserved.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_reserved            6

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry reserved_5.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_reserved_5          5

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry pedestrian.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_pedestrian          4

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry truck.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_truck               3

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry motorcycle.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_motorcycle          2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry car.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_car                 1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01 entry undetermined.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_CLASSIFICATION_01_undetermined        0

/**
 * @defgroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 of Message VIS_OBS_MSG_1 (0x675)
 *
 * Contains the value table \ref ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_OBS_MSG_1
 * @{
 */

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 and \ref GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 instead.
 */
#define SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01        0, 0, 20, 2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 or \ref INIT_VIS_OBS_MSG_1 instead.
 */
#define SETUP_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01      0, 0, 20, 2, 0

/**
 * Get signal VIS_OBS_BRAKE_LIGHT_INDIC_01 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_01 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(buf, val) { \
	buf[2] &= ~(0x03 << 4); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_OBS_BRAKE_LIGHT_INDIC_01 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(buf) \
	SET_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(buf, 0)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 raw initial value.
 */
#define START_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01      0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 raw minimum value.
 */
#define MIN_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01        0

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 raw maximum value.
 */
#define MAX_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01        2

/**
 * Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 raw offset value.
 */
#define OFF_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 Value Table for Signal VIS_OBS_BRAKE_LIGHT_INDIC_01 in Message VIS_OBS_MSG_1 (0x675)
 *
 * Enum values defined for \ref SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01.
 *
 * @ingroup SIG_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 */

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 entry brake.
 *
 * light is steady active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01_brake               2

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 entry no.
 *
 * brake light is active
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01_no                  1

/**
 * Value table VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01 entry unknown.
 *
 * @ingroup ENUM_VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01
 */
#define VIS_OBS_MSG_1_VIS_OBS_BRAKE_LIGHT_INDIC_01_unknown             0

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE Signal VIS_LANE_RIGHT_INDIVID_RANGE of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE        0, 0, 37, 9

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE      0, 0, 37, 9, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_RANGE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0x3f) << 3) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_RANGE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(buf, val) { \
	buf[4] &= ~(0x07 << 5); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[5] &= ~(0x3f << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 3) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_RANGE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE(x, fmt) \
	((x) * fmt / 4)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE        511

/**
 * Signal VIS_LANE_RIGHT_INDIVID_RANGE raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_RANGE        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3 Signal VIS_LANE_RIGHT_INDIVID_A3 of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3 and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3 instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3        0, 0, 46, 16

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3 or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3      0, 0, 46, 16, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_A3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[5] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 10) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(buf, val) { \
	buf[5] &= ~(0x03 << 6); \
	buf[5] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[6] &= ~(0xff << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3(x, fmt) \
	((x) * fmt / 100000000 + fmt * (-17) / 100000)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3        33700

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A3 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A3        -17000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2 Signal VIS_LANE_RIGHT_INDIVID_A2 of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2 and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2 instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2        0, 0, 12, 12

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2 or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2      0, 0, 12, 12, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_A2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 4) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 4) & 0xff) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2(x, fmt) \
	((x) * fmt / 200000 + fmt / (-100))

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2        4000

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A2 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A2        -2000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1 Signal VIS_LANE_RIGHT_INDIVID_A1 of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1 and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1 instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1        0, 0, 26, 11

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1 or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1      0, 0, 26, 11, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_A1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x1f) << 6) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x1f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x1f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1(x, fmt) \
	((x) * fmt * 9 / 10000 + fmt * (-9) / 10)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1        2000

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A1 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A1        -1000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0 Signal VIS_LANE_RIGHT_INDIVID_A0 of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0 and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0 instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0        0, 0, 0, 12

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0 or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0      0, 0, 0, 12, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_A0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(buf, val) { \
	buf[0] &= ~(0xff << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_A0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0(x, fmt) \
	((x) * fmt / 100 + fmt * (-16))

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0        3199

/**
 * Signal VIS_LANE_RIGHT_INDIVID_A0 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_INDIVID_A0        -1600

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR Signal VIS_LANE_RIGHT_IN_MARKER_COLOR of Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Contains the value table \ref ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR and \ref GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR instead.
 */
#define SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR        0, 0, 24, 2

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR or \ref INIT_VIS_LANE_NEAR_RIGHT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR      0, 0, 24, 2, 0

/**
 * Get signal VIS_LANE_RIGHT_IN_MARKER_COLOR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_IN_MARKER_COLOR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(buf, val) { \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_IN_MARKER_COLOR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(buf) \
	SET_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR raw initial value.
 */
#define START_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR      0

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR        0

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR        3

/**
 * Signal VIS_LANE_RIGHT_IN_MARKER_COLOR raw offset value.
 */
#define OFF_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR Value Table for Signal VIS_LANE_RIGHT_IN_MARKER_COLOR in Message VIS_LANE_NEAR_RIGHT_INDIVIDUAL (0x6ab)
 *
 * Enum values defined for \ref SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR.
 *
 * @ingroup SIG_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 */

/**
 * Value table VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR entry blue.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR_blue                3

/**
 * Value table VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR entry white.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR_white               2

/**
 * Value table VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR entry yellow.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR_yellow              1

/**
 * Value table VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR entry unknown.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_RIGHT_INDIVIDUAL_VIS_LANE_RIGHT_IN_MARKER_COLOR_unknown             0

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE Signal VIS_LANE_LEFT_INDIVID_RANGE of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE        0, 0, 37, 9

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE      0, 0, 37, 9, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_RANGE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0x3f) << 3) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_RANGE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(buf, val) { \
	buf[4] &= ~(0x07 << 5); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[5] &= ~(0x3f << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 3) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_RANGE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE(x, fmt) \
	((x) * fmt / 4)

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE        511

/**
 * Signal VIS_LANE_LEFT_INDIVID_RANGE raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_RANGE        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3 Signal VIS_LANE_LEFT_INDIVID_A3 of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3 and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3 instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3        0, 0, 46, 16

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3 or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3      0, 0, 46, 16, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_A3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[5] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 10) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(buf, val) { \
	buf[5] &= ~(0x03 << 6); \
	buf[5] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[6] &= ~(0xff << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3(x, fmt) \
	((x) * fmt / 100000000 + fmt * (-17) / 100000)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3        33700

/**
 * Signal VIS_LANE_LEFT_INDIVID_A3 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A3        -17000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2 Signal VIS_LANE_LEFT_INDIVID_A2 of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2 and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2 instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2        0, 0, 12, 12

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2 or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2      0, 0, 12, 12, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_A2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 4) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 4) & 0xff) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2(x, fmt) \
	((x) * fmt / 200000 + fmt / (-100))

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2        4000

/**
 * Signal VIS_LANE_LEFT_INDIVID_A2 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A2        -2000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1 Signal VIS_LANE_LEFT_INDIVID_A1 of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1 and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1 instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1        0, 0, 26, 11

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1 or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1      0, 0, 26, 11, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_A1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x1f) << 6) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x1f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x1f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1(x, fmt) \
	((x) * fmt * 9 / 10000 + fmt * (-9) / 10)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1        2000

/**
 * Signal VIS_LANE_LEFT_INDIVID_A1 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A1        -1000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0 Signal VIS_LANE_LEFT_INDIVID_A0 of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0 and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0 instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0        0, 0, 0, 12

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0 or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0      0, 0, 0, 12, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_A0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(buf, val) { \
	buf[0] &= ~(0xff << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_A0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0(x, fmt) \
	((x) * fmt / 100 + fmt * (-16))

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0        3199

/**
 * Signal VIS_LANE_LEFT_INDIVID_A0 raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_INDIVID_A0        -1600

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR Signal VIS_LANE_LEFT_IN_MARKER_COLOR of Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Contains the value table \ref ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEAR_LEFT_INDIVIDUAL
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR and \ref GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR instead.
 */
#define SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR        0, 0, 24, 2

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR or \ref INIT_VIS_LANE_NEAR_LEFT_INDIVIDUAL instead.
 */
#define SETUP_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR      0, 0, 24, 2, 0

/**
 * Get signal VIS_LANE_LEFT_IN_MARKER_COLOR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_IN_MARKER_COLOR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(buf, val) { \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_IN_MARKER_COLOR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(buf) \
	SET_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(buf, 0)

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR raw initial value.
 */
#define START_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR      0

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR raw minimum value.
 */
#define MIN_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR        0

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR raw maximum value.
 */
#define MAX_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR        3

/**
 * Signal VIS_LANE_LEFT_IN_MARKER_COLOR raw offset value.
 */
#define OFF_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR Value Table for Signal VIS_LANE_LEFT_IN_MARKER_COLOR in Message VIS_LANE_NEAR_LEFT_INDIVIDUAL (0x6ac)
 *
 * Enum values defined for \ref SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR.
 *
 * @ingroup SIG_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 */

/**
 * Value table VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR entry blue.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR_blue                3

/**
 * Value table VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR entry white.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR_white               2

/**
 * Value table VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR entry yellow.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR_yellow              1

/**
 * Value table VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR entry unknown.
 *
 * @ingroup ENUM_VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR
 */
#define VIS_LANE_NEAR_LEFT_INDIVIDUAL_VIS_LANE_LEFT_IN_MARKER_COLOR_unknown             0

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE        0, 0, 37, 9

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE      0, 0, 37, 9, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_RANGE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0x3f) << 3) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_RANGE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(buf, val) { \
	buf[4] &= ~(0x07 << 5); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[5] &= ~(0x3f << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 3) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_RANGE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE(x, fmt) \
	((x) * fmt / 4)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE        511

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_RANGE raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_RANGE        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3 Signal VIS_LANE_RIGHT_NEIGHBOR_A3 of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3 and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3        0, 0, 46, 16

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3 or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3      0, 0, 46, 16, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_A3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[5] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 10) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(buf, val) { \
	buf[5] &= ~(0x03 << 6); \
	buf[5] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[6] &= ~(0xff << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3(x, fmt) \
	((x) * fmt / 100000000 + fmt * (-17) / 100000)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3        33700

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A3 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A3        -17000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2 Signal VIS_LANE_RIGHT_NEIGHBOR_A2 of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2 and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2        0, 0, 12, 12

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2 or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2      0, 0, 12, 12, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_A2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 4) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 4) & 0xff) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2(x, fmt) \
	((x) * fmt / 200000 + fmt / (-100))

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2        4000

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A2 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A2        -2000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1 Signal VIS_LANE_RIGHT_NEIGHBOR_A1 of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1 and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1        0, 0, 26, 11

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1 or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1      0, 0, 26, 11, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_A1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x1f) << 6) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x1f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x1f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1(x, fmt) \
	((x) * fmt * 9 / 10000 + fmt * (-9) / 10)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1        2000

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A1 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A1        -1000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0 Signal VIS_LANE_RIGHT_NEIGHBOR_A0 of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0 and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0        0, 0, 0, 12

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0 or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0      0, 0, 0, 12, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_A0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(buf, val) { \
	buf[0] &= ~(0xff << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_A0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0(x, fmt) \
	((x) * fmt / 100 + fmt * (-16))

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0        3199

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_A0 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_A0        -1600

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR of Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Contains the value table \ref ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_RIGHT
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR and \ref GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR        0, 0, 24, 2

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR or \ref INIT_VIS_LANE_NEIGHBOR_RIGHT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR      0, 0, 24, 2, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_COLOR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_COLOR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(buf, val) { \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_COLOR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(buf) \
	SET_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR        3

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR Value Table for Signal VIS_LANE_RIGHT_NEIGHBOR_COLOR in Message VIS_LANE_NEIGHBOR_RIGHT (0x6a8)
 *
 * Enum values defined for \ref SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR.
 *
 * @ingroup SIG_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 */

/**
 * Value table VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR entry blue.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR_blue                3

/**
 * Value table VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR entry white.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR_white               2

/**
 * Value table VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR entry yellow.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR_yellow              1

/**
 * Value table VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR entry unknown.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_RIGHT_VIS_LANE_RIGHT_NEIGHBOR_COLOR_unknown             0

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE Signal VIS_LANE_LEFT_NEIGHBOR_RANGE of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE        0, 0, 37, 9

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE      0, 0, 37, 9, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_RANGE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 5) & 0x07) << 0) \
	| (uint16_t)(+(uint16_t)((buf[5] >> 0) & 0x3f) << 3) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_RANGE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(buf, val) { \
	buf[4] &= ~(0x07 << 5); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x07) << 5; \
	buf[5] &= ~(0x3f << 0); \
	buf[5] |= ((uint8_t)((uint16_t)(val) >> 3) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_RANGE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE(x, fmt) \
	((x) * fmt / 4)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE        511

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_RANGE raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_RANGE        0

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3 Signal VIS_LANE_LEFT_NEIGHBOR_A3 of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3 and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3        0, 0, 46, 16

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3 or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3      0, 0, 46, 16, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_A3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[5] >> 6) & 0x03) << 0) \
	| (uint16_t)(+(uint16_t)((buf[6] >> 0) & 0xff) << 2) \
	| (uint16_t)(+(uint16_t)((buf[7] >> 0) & 0x3f) << 10) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(buf, val) { \
	buf[5] &= ~(0x03 << 6); \
	buf[5] |= (((uint8_t)(val) >> 0) & 0x03) << 6; \
	buf[6] &= ~(0xff << 0); \
	buf[6] |= ((uint8_t)((uint16_t)(val) >> 2) & 0xff) << 0; \
	buf[7] &= ~(0x3f << 0); \
	buf[7] |= ((uint8_t)((uint16_t)(val) >> 10) & 0x3f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3(x, fmt) \
	((x) * fmt / 100000000 + fmt * (-17) / 100000)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3        33700

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A3 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A3        -17000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2 Signal VIS_LANE_LEFT_NEIGHBOR_A2 of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2 and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2        0, 0, 12, 12

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2 or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2      0, 0, 12, 12, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_A2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 4) & 0x0f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[2] >> 0) & 0xff) << 4) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(buf, val) { \
	buf[1] &= ~(0x0f << 4); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
	buf[2] &= ~(0xff << 0); \
	buf[2] |= ((uint8_t)((uint16_t)(val) >> 4) & 0xff) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2(x, fmt) \
	((x) * fmt / 200000 + fmt / (-100))

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2        4000

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A2 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A2        -2000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1 Signal VIS_LANE_LEFT_NEIGHBOR_A1 of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1 and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1        0, 0, 26, 11

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1 or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1      0, 0, 26, 11, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_A1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 2) & 0x3f) << 0) \
	| (uint16_t)(+(uint16_t)((buf[4] >> 0) & 0x1f) << 6) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(buf, val) { \
	buf[3] &= ~(0x3f << 2); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x3f) << 2; \
	buf[4] &= ~(0x1f << 0); \
	buf[4] |= ((uint8_t)((uint16_t)(val) >> 6) & 0x1f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1(x, fmt) \
	((x) * fmt * 9 / 10000 + fmt * (-9) / 10)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1        2000

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A1 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A1        -1000

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0 Signal VIS_LANE_LEFT_NEIGHBOR_A0 of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0 and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0 instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0        0, 0, 0, 12

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0 or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0      0, 0, 0, 12, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_A0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0xff) << 0) \
	| (uint16_t)(+(uint16_t)((buf[1] >> 0) & 0x0f) << 8) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(buf, val) { \
	buf[0] &= ~(0xff << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0xff) << 0; \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= ((uint8_t)((uint16_t)(val) >> 8) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_A0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0(x, fmt) \
	((x) * fmt / 100 + fmt * (-16))

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0        3199

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_A0 raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_A0        -1600

/**
 * @}
 */

/**
 * @defgroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR Signal VIS_LANE_LEFT_NEIGHBOR_COLOR of Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Contains the value table \ref ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_NEIGHBOR_LEFT
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR and \ref GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR instead.
 */
#define SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR        0, 0, 24, 2

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR or \ref INIT_VIS_LANE_NEIGHBOR_LEFT instead.
 */
#define SETUP_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR      0, 0, 24, 2, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_COLOR from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_COLOR in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(buf, val) { \
	buf[3] &= ~(0x03 << 0); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_COLOR in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(buf) \
	SET_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR raw initial value.
 */
#define START_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR raw minimum value.
 */
#define MIN_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR raw maximum value.
 */
#define MAX_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR        3

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_COLOR raw offset value.
 */
#define OFF_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR Value Table for Signal VIS_LANE_LEFT_NEIGHBOR_COLOR in Message VIS_LANE_NEIGHBOR_LEFT (0x6a9)
 *
 * Enum values defined for \ref SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR.
 *
 * @ingroup SIG_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 */

/**
 * Value table VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR entry blue.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR_blue                3

/**
 * Value table VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR entry white.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR_white               2

/**
 * Value table VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR entry yellow.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR_yellow              1

/**
 * Value table VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR entry unknown.
 *
 * @ingroup ENUM_VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR
 */
#define VIS_LANE_NEIGHBOR_LEFT_VIS_LANE_LEFT_NEIGHBOR_COLOR_unknown             0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE Signal VIS_LANE_LANE_CHANGE of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_LANE_CHANGE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE        0, 0, 56, 2

/**
 * Signal VIS_LANE_LANE_CHANGE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE      0, 0, 56, 2, 0

/**
 * Get signal VIS_LANE_LANE_CHANGE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[7] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_LANE_CHANGE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(buf, val) { \
	buf[7] &= ~(0x03 << 0); \
	buf[7] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_LANE_CHANGE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(buf, 0)

/**
 * Signal VIS_LANE_LANE_CHANGE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LANE_CHANGE raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE      0

/**
 * Signal VIS_LANE_LANE_CHANGE raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE        0

/**
 * Signal VIS_LANE_LANE_CHANGE raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE        3

/**
 * Signal VIS_LANE_LANE_CHANGE raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE Value Table for Signal VIS_LANE_LANE_CHANGE in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE entry lane.
 *
 * change to the right
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE_lane                2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE entry lane_1.
 *
 * change to the left
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE_lane_1              1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE entry no.
 *
 * lane change
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LANE_CHANGE_no                  0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF Signal VIS_LANE_RIGHT_INDIVID_LKACONF of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF        0, 0, 44, 2

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF      0, 0, 44, 2, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_LKACONF from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[5] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_LKACONF in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(buf, val) { \
	buf[5] &= ~(0x03 << 4); \
	buf[5] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_LKACONF in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF        2

/**
 * Signal VIS_LANE_RIGHT_INDIVID_LKACONF raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF Value Table for Signal VIS_LANE_RIGHT_INDIVID_LKACONF in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF entry best.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF_best                3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF entry good.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF_good                2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF entry middle.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF_middle              1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF entry bad.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_LKACONF_bad                 0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF Signal VIS_LANE_LEFT_INDIVID_LKACONF of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF        0, 0, 28, 2

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF      0, 0, 28, 2, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_LKACONF from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[3] >> 4) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_LKACONF in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(buf, val) { \
	buf[3] &= ~(0x03 << 4); \
	buf[3] |= (((uint8_t)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_LKACONF in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF        2

/**
 * Signal VIS_LANE_LEFT_INDIVID_LKACONF raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF Value Table for Signal VIS_LANE_LEFT_INDIVID_LKACONF in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF entry best.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF_best                3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF entry good.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF_good                2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF entry middle.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF_middle              1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF entry bad.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_LKACONF_bad                 0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE Signal VIS_LANE_RIGHT_INDIVID_TYPE of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE        0, 0, 8, 4

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE      0, 0, 8, 4, 0

/**
 * Get signal VIS_LANE_RIGHT_INDIVID_TYPE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[1] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_TYPE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(buf, val) { \
	buf[1] &= ~(0x0f << 0); \
	buf[1] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_INDIVID_TYPE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE      0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE        0

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE        8

/**
 * Signal VIS_LANE_RIGHT_INDIVID_TYPE raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE Value Table for Signal VIS_LANE_RIGHT_INDIVID_TYPE in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry double.
 *
 * lane mark 
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_double              8

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry undecided.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_undecided           7

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry invalid.
 *
 * (no classification)
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_invalid             6

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry reserved.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_reserved            5

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry botts.
 *
 * dots
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_botts               4

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry reserved_3.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_reserved_3          3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry dashed.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_dashed              2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry solid.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_solid               1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE entry none.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_INDIVID_TYPE_none                0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE Signal VIS_LANE_LEFT_INDIVID_TYPE of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE        0, 0, 0, 4

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE      0, 0, 0, 4, 0

/**
 * Get signal VIS_LANE_LEFT_INDIVID_TYPE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[0] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_INDIVID_TYPE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(buf, val) { \
	buf[0] &= ~(0x0f << 0); \
	buf[0] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_INDIVID_TYPE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(buf, 0)

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE      0

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE        0

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE        8

/**
 * Signal VIS_LANE_LEFT_INDIVID_TYPE raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE Value Table for Signal VIS_LANE_LEFT_INDIVID_TYPE in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry double.
 *
 * lane mark 
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_double              8

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry undecided.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_undecided           7

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry invalid.
 *
 * (no classification)
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_invalid             6

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry reserved.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_reserved            5

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry botts.
 *
 * dots
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_botts               4

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry reserved_3.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_reserved_3          3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry dashed.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_dashed              2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry solid.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_solid               1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE entry none.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_INDIVID_TYPE_none                0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE Signal VIS_LANE_LEFT_NEIGHBOR_TYPE of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE        0, 0, 48, 4

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE      0, 0, 48, 4, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_TYPE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_TYPE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(buf, val) { \
	buf[6] &= ~(0x0f << 0); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_TYPE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE        8

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_TYPE raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE Value Table for Signal VIS_LANE_LEFT_NEIGHBOR_TYPE in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry double.
 *
 * lane mark 
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_double              8

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry undecided.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_undecided           7

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry invalid.
 *
 * (no classification)
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_invalid             6

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry reserved.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_reserved            5

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry botts.
 *
 * dots
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_botts               4

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry reserved_3.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_reserved_3          3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry dashed.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_dashed              2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry solid.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_solid               1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE entry none.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_TYPE_none                0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE        0, 0, 52, 4

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE      0, 0, 52, 4, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_TYPE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[6] >> 4) & 0x0f) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_TYPE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(buf, val) { \
	buf[6] &= ~(0x0f << 4); \
	buf[6] |= (((uint8_t)(val) >> 0) & 0x0f) << 4; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_TYPE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE        8

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE Value Table for Signal VIS_LANE_RIGHT_NEIGHBOR_TYPE in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry double.
 *
 * lane mark 
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_double              8

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry undecided.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_undecided           7

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry invalid.
 *
 * (no classification)
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_invalid             6

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry reserved.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_reserved            5

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry botts.
 *
 * dots
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_botts               4

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry reserved_3.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_reserved_3          3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry dashed.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_dashed              2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry solid.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_solid               1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE entry none.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_TYPE_none                0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF        0, 0, 32, 2

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF      0, 0, 32, 2, 0

/**
 * Get signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[4] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(buf, val) { \
	buf[4] &= ~(0x03 << 0); \
	buf[4] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(buf, 0)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF      0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF        0

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF        2

/**
 * Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF Value Table for Signal VIS_LANE_RIGHT_NEIGHBOR_LKACONF in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF entry best.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF_best                3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF entry good.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF_good                2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF entry middle.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF_middle              1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF entry bad.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_RIGHT_NEIGHBOR_LKACONF_bad                 0

/**
 * @defgroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF of Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Contains the value table \ref ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF.
 *
 * Received by the ECUs:
 * - \ref ECU_External
 *
 * @ingroup MSG_VIS_LANE_INFORMATION
 * @{
 */

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF and \ref GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF instead.
 */
#define SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF        0, 0, 16, 2

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF or \ref INIT_VIS_LANE_INFORMATION instead.
 */
#define SETUP_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF      0, 0, 16, 2, 0

/**
 * Get signal VIS_LANE_LEFT_NEIGHBOR_LKACONF from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(buf) (0 \
	| (uint8_t)(+(uint8_t)((buf[2] >> 0) & 0x03) << 0) \
)

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_LKACONF in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(buf, val) { \
	buf[2] &= ~(0x03 << 0); \
	buf[2] |= (((uint8_t)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal VIS_LANE_LEFT_NEIGHBOR_LKACONF in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(buf) \
	SET_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(buf, 0)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF(x, fmt) \
	((x) * fmt)

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF raw initial value.
 */
#define START_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF      0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF raw minimum value.
 */
#define MIN_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF        0

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF raw maximum value.
 */
#define MAX_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF        2

/**
 * Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF raw offset value.
 */
#define OFF_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF        0

/**
 * @}
 */

/**
 * @defgroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF Value Table for Signal VIS_LANE_LEFT_NEIGHBOR_LKACONF in Message VIS_LANE_INFORMATION (0x6a4)
 *
 * Enum values defined for \ref SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF.
 *
 * @ingroup SIG_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 */

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF entry best.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF_best                3

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF entry good.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF_good                2

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF entry middle.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF_middle              1

/**
 * Value table VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF entry bad.
 *
 * @ingroup ENUM_VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF
 */
#define VIS_LANE_INFORMATION_VIS_LANE_LEFT_NEIGHBOR_LKACONF_bad                 0

/**
 * @defgroup ENUM_Status_Vision_Calib_Process_e Value Table Status_Vision_Calib_Process_e
 *
 * Enum values defined in \ref DB_ifv300_inst_can.
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * Value table Status_Vision_Calib_Process_e entry DES_BAD_PARAMS_TARGET_HORIZON.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_BAD_PARAMS_TARGET_HORIZON    8

/**
 * Value table Status_Vision_Calib_Process_e entry DES_BAD_PARAMS_TARGET_YAW.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_BAD_PARAMS_TARGET_YAW    7

/**
 * Value table Status_Vision_Calib_Process_e entry DES_TOO_MANY_TARGETS_FOUND.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_TOO_MANY_TARGETS_FOUND    6

/**
 * Value table Status_Vision_Calib_Process_e entry DES_BAD_PARAMS.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_BAD_PARAMS      5

/**
 * Value table Status_Vision_Calib_Process_e entry DES_BAD_PARAMS_SQUARE_SIDE_SIZE.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_BAD_PARAMS_SQUARE_SIDE_SIZE    4

/**
 * Value table Status_Vision_Calib_Process_e entry DES_BAD_PARAMS_DISTANCE.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_BAD_PARAMS_DISTANCE    3

/**
 * Value table Status_Vision_Calib_Process_e entry DES_NO_TARGET_FOUND.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_NO_TARGET_FOUND    2

/**
 * Value table Status_Vision_Calib_Process_e entry DES_SUCCESS.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_SUCCESS         1

/**
 * Value table Status_Vision_Calib_Process_e entry DES_VISION_CALIB_UNKNOWN.
 *
 * @ingroup ENUM_Status_Vision_Calib_Process_e
 */
#define Status_Vision_Calib_Process_e_DES_VISION_CALIB_UNKNOWN    0

/**
 * @defgroup ENUM_Vision_Align_State_T Value Table Vision_Align_State_T
 *
 * Enum values defined in \ref DB_ifv300_inst_can.
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * Value table Vision_Align_State_T entry eVISION_APP_MODE.
 *
 * @ingroup ENUM_Vision_Align_State_T
 */
#define Vision_Align_State_T_eVISION_APP_MODE    4

/**
 * Value table Vision_Align_State_T entry eWAIT_ALIGN_MSG.
 *
 * @ingroup ENUM_Vision_Align_State_T
 */
#define Vision_Align_State_T_eWAIT_ALIGN_MSG     3

/**
 * Value table Vision_Align_State_T entry eWAIT_ALIGN_STATE.
 *
 * @ingroup ENUM_Vision_Align_State_T
 */
#define Vision_Align_State_T_eWAIT_ALIGN_STATE    2

/**
 * Value table Vision_Align_State_T entry eVISION_UNALIGNED.
 *
 * @ingroup ENUM_Vision_Align_State_T
 */
#define Vision_Align_State_T_eVISION_UNALIGNED    1

/**
 * Value table Vision_Align_State_T entry eALIGNED_IDLE.
 *
 * @ingroup ENUM_Vision_Align_State_T
 */
#define Vision_Align_State_T_eALIGNED_IDLE       0

/**
 * @defgroup ENUM_Mesp_Return_Status_T Value Table Mesp_Return_Status_T
 *
 * Enum values defined in \ref DB_ifv300_inst_can.
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * Value table Mesp_Return_Status_T entry eDES_MESP_STATUS_ILLEGAL_CALL.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_MESP_STATUS_ILLEGAL_CALL    5

/**
 * Value table Mesp_Return_Status_T entry eDES_STATUS_SERVICE_INVALID.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_STATUS_SERVICE_INVALID    4

/**
 * Value table Mesp_Return_Status_T entry eDES_STATUS_INVALID_PARAMETER.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_STATUS_INVALID_PARAMETER    3

/**
 * Value table Mesp_Return_Status_T entry eDES_MESP_BUSY.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_MESP_BUSY      2

/**
 * Value table Mesp_Return_Status_T entry eDES_MESP_GENERAL_ERR.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_MESP_GENERAL_ERR    1

/**
 * Value table Mesp_Return_Status_T entry eDES_MESP_STATUS_OK.
 *
 * @ingroup ENUM_Mesp_Return_Status_T
 */
#define Mesp_Return_Status_T_eDES_MESP_STATUS_OK    0

/**
 * @defgroup ENUM_Mesp_MainState_T Value Table Mesp_MainState_T
 *
 * Enum values defined in \ref DB_ifv300_inst_can.
 *
 * @ingroup DB_ifv300_inst_can
 */

/**
 * Value table Mesp_MainState_T entry eMAIN_STATE_RUNNING_DIAGNOSTICS.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eMAIN_STATE_RUNNING_DIAGNOSTICS    134

/**
 * Value table Mesp_MainState_T entry eMAIN_STATE_PENDING_SPC.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eMAIN_STATE_PENDING_SPC    132

/**
 * Value table Mesp_MainState_T entry eMAIN_STATE_PENDING_TAC.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eMAIN_STATE_PENDING_TAC    130

/**
 * Value table Mesp_MainState_T entry eMAIN_STATE_PENDING_VISION.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eMAIN_STATE_PENDING_VISION    128

/**
 * Value table Mesp_MainState_T entry eRUNNING_SPC.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eRUNNING_SPC        34

/**
 * Value table Mesp_MainState_T entry eRUNNING_TAC.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eRUNNING_TAC        32

/**
 * Value table Mesp_MainState_T entry eBOOT.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eBOOT               3

/**
 * Value table Mesp_MainState_T entry eRUNNING_VISON.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eRUNNING_VISON      2

/**
 * Value table Mesp_MainState_T entry ePENDING.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_ePENDING            1

/**
 * Value table Mesp_MainState_T entry eUKNOWN.
 *
 * @ingroup ENUM_Mesp_MainState_T
 */
#define Mesp_MainState_T_eUKNOWN             0

#endif
