/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_element_h
#define impl_type_element_h





#include "impl_type_candata.h"
#include "impl_type_uint32.h"
#include "impl_type_systemtime.h"
#include "impl_type_uint8.h"


struct Element {
    ::Systemtime timeStamp;

    ::UInt32 canId;

    ::UInt8 validLen;

    ::CanData data;


    static bool IsPlane()
    {
        return false;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(timeStamp);
        fun(canId);
        fun(validLen);
        fun(data);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(timeStamp);
        fun(canId);
        fun(validLen);
        fun(data);
    }

    bool operator == (const ::Element& t) const {
        return (timeStamp == t.timeStamp) && (canId == t.canId) && (validLen == t.validLen) && (data == t.data);
    }
};


#endif // impl_type_element_h
