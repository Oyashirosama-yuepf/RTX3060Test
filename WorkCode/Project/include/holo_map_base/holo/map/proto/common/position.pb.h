// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/common/position.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2fposition_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2fposition_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fcommon_2fposition_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fcommon_2fposition_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fcommon_2fposition_2eproto
namespace holo {
namespace map {
namespace proto {
namespace common {
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
}  // namespace common
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::common::Position* Arena::CreateMaybeMessage<::holo::map::proto::common::Position>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace common {

enum Position_SuperElevation {
  Position_SuperElevation_SUPER_ELEVATION_UNDEFINED = 0,
  Position_SuperElevation_SUPER_ELEVATION_FLAT = 1,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_4_TOWARDS_CURB = 2,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_6_TOWARDS_CURB = 3,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_8_TOWARDS_CURB = 4,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_4_TOWARDS_MIDDLE = 5,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_6_TOWARDS_MIDDLE = 6,
  Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_8_TOWARDS_MIDDLE = 7
};
bool Position_SuperElevation_IsValid(int value);
const Position_SuperElevation Position_SuperElevation_SuperElevation_MIN = Position_SuperElevation_SUPER_ELEVATION_UNDEFINED;
const Position_SuperElevation Position_SuperElevation_SuperElevation_MAX = Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_8_TOWARDS_MIDDLE;
const int Position_SuperElevation_SuperElevation_ARRAYSIZE = Position_SuperElevation_SuperElevation_MAX + 1;

const ::google::protobuf::EnumDescriptor* Position_SuperElevation_descriptor();
inline const ::std::string& Position_SuperElevation_Name(Position_SuperElevation value) {
  return ::google::protobuf::internal::NameOfEnum(
    Position_SuperElevation_descriptor(), value);
}
inline bool Position_SuperElevation_Parse(
    const ::std::string& name, Position_SuperElevation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Position_SuperElevation>(
    Position_SuperElevation_descriptor(), name, value);
}
// ===================================================================

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.common.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(NULL);
  }

  Position* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Position_SuperElevation SuperElevation;
  static const SuperElevation SUPER_ELEVATION_UNDEFINED =
    Position_SuperElevation_SUPER_ELEVATION_UNDEFINED;
  static const SuperElevation SUPER_ELEVATION_FLAT =
    Position_SuperElevation_SUPER_ELEVATION_FLAT;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_4_TOWARDS_CURB =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_4_TOWARDS_CURB;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_6_TOWARDS_CURB =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_6_TOWARDS_CURB;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_8_TOWARDS_CURB =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_8_TOWARDS_CURB;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_4_TOWARDS_MIDDLE =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_4_TOWARDS_MIDDLE;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_6_TOWARDS_MIDDLE =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_6_TOWARDS_MIDDLE;
  static const SuperElevation SUPER_ELEVATION_MORE_THAN_8_TOWARDS_MIDDLE =
    Position_SuperElevation_SUPER_ELEVATION_MORE_THAN_8_TOWARDS_MIDDLE;
  static inline bool SuperElevation_IsValid(int value) {
    return Position_SuperElevation_IsValid(value);
  }
  static const SuperElevation SuperElevation_MIN =
    Position_SuperElevation_SuperElevation_MIN;
  static const SuperElevation SuperElevation_MAX =
    Position_SuperElevation_SuperElevation_MAX;
  static const int SuperElevation_ARRAYSIZE =
    Position_SuperElevation_SuperElevation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SuperElevation_descriptor() {
    return Position_SuperElevation_descriptor();
  }
  static inline const ::std::string& SuperElevation_Name(SuperElevation value) {
    return Position_SuperElevation_Name(value);
  }
  static inline bool SuperElevation_Parse(const ::std::string& name,
      SuperElevation* value) {
    return Position_SuperElevation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 road_id = 1;
  bool has_road_id() const;
  void clear_road_id();
  static const int kRoadIdFieldNumber = 1;
  ::google::protobuf::uint64 road_id() const;
  void set_road_id(::google::protobuf::uint64 value);

  // optional int64 height_cm = 2;
  bool has_height_cm() const;
  void clear_height_cm();
  static const int kHeightCmFieldNumber = 2;
  ::google::protobuf::int64 height_cm() const;
  void set_height_cm(::google::protobuf::int64 value);

  // optional int64 slope = 3;
  bool has_slope() const;
  void clear_slope();
  static const int kSlopeFieldNumber = 3;
  ::google::protobuf::int64 slope() const;
  void set_slope(::google::protobuf::int64 value);

  // optional int64 curvature = 4;
  bool has_curvature() const;
  void clear_curvature();
  static const int kCurvatureFieldNumber = 4;
  ::google::protobuf::int64 curvature() const;
  void set_curvature(::google::protobuf::int64 value);

  // optional double x = 5;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 5;
  double x() const;
  void set_x(double value);

  // optional double y = 6;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 6;
  double y() const;
  void set_y(double value);

  // optional .holo.map.proto.common.Position.SuperElevation super_elevation = 7;
  bool has_super_elevation() const;
  void clear_super_elevation();
  static const int kSuperElevationFieldNumber = 7;
  ::holo::map::proto::common::Position_SuperElevation super_elevation() const;
  void set_super_elevation(::holo::map::proto::common::Position_SuperElevation value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.common.Position)
 private:
  void set_has_road_id();
  void clear_has_road_id();
  void set_has_height_cm();
  void clear_has_height_cm();
  void set_has_slope();
  void clear_has_slope();
  void set_has_curvature();
  void clear_has_curvature();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_super_elevation();
  void clear_has_super_elevation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 road_id_;
  ::google::protobuf::int64 height_cm_;
  ::google::protobuf::int64 slope_;
  ::google::protobuf::int64 curvature_;
  double x_;
  double y_;
  int super_elevation_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fcommon_2fposition_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Position

// optional uint64 road_id = 1;
inline bool Position::has_road_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_road_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_road_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_road_id() {
  road_id_ = GOOGLE_ULONGLONG(0);
  clear_has_road_id();
}
inline ::google::protobuf::uint64 Position::road_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.road_id)
  return road_id_;
}
inline void Position::set_road_id(::google::protobuf::uint64 value) {
  set_has_road_id();
  road_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.road_id)
}

// optional int64 height_cm = 2;
inline bool Position::has_height_cm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_height_cm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_height_cm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_height_cm() {
  height_cm_ = GOOGLE_LONGLONG(0);
  clear_has_height_cm();
}
inline ::google::protobuf::int64 Position::height_cm() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.height_cm)
  return height_cm_;
}
inline void Position::set_height_cm(::google::protobuf::int64 value) {
  set_has_height_cm();
  height_cm_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.height_cm)
}

// optional int64 slope = 3;
inline bool Position::has_slope() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_slope() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_slope() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_slope() {
  slope_ = GOOGLE_LONGLONG(0);
  clear_has_slope();
}
inline ::google::protobuf::int64 Position::slope() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.slope)
  return slope_;
}
inline void Position::set_slope(::google::protobuf::int64 value) {
  set_has_slope();
  slope_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.slope)
}

// optional int64 curvature = 4;
inline bool Position::has_curvature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Position::set_has_curvature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Position::clear_has_curvature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Position::clear_curvature() {
  curvature_ = GOOGLE_LONGLONG(0);
  clear_has_curvature();
}
inline ::google::protobuf::int64 Position::curvature() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.curvature)
  return curvature_;
}
inline void Position::set_curvature(::google::protobuf::int64 value) {
  set_has_curvature();
  curvature_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.curvature)
}

// optional double x = 5;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Position::x() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.x)
  return x_;
}
inline void Position::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.x)
}

// optional double y = 6;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Position::y() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.y)
  return y_;
}
inline void Position::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.y)
}

// optional .holo.map.proto.common.Position.SuperElevation super_elevation = 7;
inline bool Position::has_super_elevation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Position::set_has_super_elevation() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Position::clear_has_super_elevation() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Position::clear_super_elevation() {
  super_elevation_ = 0;
  clear_has_super_elevation();
}
inline ::holo::map::proto::common::Position_SuperElevation Position::super_elevation() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.Position.super_elevation)
  return static_cast< ::holo::map::proto::common::Position_SuperElevation >(super_elevation_);
}
inline void Position::set_super_elevation(::holo::map::proto::common::Position_SuperElevation value) {
  assert(::holo::map::proto::common::Position_SuperElevation_IsValid(value));
  set_has_super_elevation();
  super_elevation_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.Position.super_elevation)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace proto
}  // namespace map
}  // namespace holo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::holo::map::proto::common::Position_SuperElevation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::holo::map::proto::common::Position_SuperElevation>() {
  return ::holo::map::proto::common::Position_SuperElevation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2fposition_2eproto
