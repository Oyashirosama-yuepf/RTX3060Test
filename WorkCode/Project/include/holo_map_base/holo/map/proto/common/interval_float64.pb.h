// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/common/interval_float64.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto
namespace holo {
namespace map {
namespace proto {
namespace common {
class IntervalFloat64;
class IntervalFloat64DefaultTypeInternal;
extern IntervalFloat64DefaultTypeInternal _IntervalFloat64_default_instance_;
}  // namespace common
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::common::IntervalFloat64* Arena::CreateMaybeMessage<::holo::map::proto::common::IntervalFloat64>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace common {

// ===================================================================

class IntervalFloat64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.common.IntervalFloat64) */ {
 public:
  IntervalFloat64();
  virtual ~IntervalFloat64();

  IntervalFloat64(const IntervalFloat64& from);

  inline IntervalFloat64& operator=(const IntervalFloat64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntervalFloat64(IntervalFloat64&& from) noexcept
    : IntervalFloat64() {
    *this = ::std::move(from);
  }

  inline IntervalFloat64& operator=(IntervalFloat64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntervalFloat64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalFloat64* internal_default_instance() {
    return reinterpret_cast<const IntervalFloat64*>(
               &_IntervalFloat64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(IntervalFloat64* other);
  friend void swap(IntervalFloat64& a, IntervalFloat64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntervalFloat64* New() const final {
    return CreateMaybeMessage<IntervalFloat64>(NULL);
  }

  IntervalFloat64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntervalFloat64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntervalFloat64& from);
  void MergeFrom(const IntervalFloat64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntervalFloat64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float first_value = 1;
  bool has_first_value() const;
  void clear_first_value();
  static const int kFirstValueFieldNumber = 1;
  float first_value() const;
  void set_first_value(float value);

  // optional float second_value = 2;
  bool has_second_value() const;
  void clear_second_value();
  static const int kSecondValueFieldNumber = 2;
  float second_value() const;
  void set_second_value(float value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.common.IntervalFloat64)
 private:
  void set_has_first_value();
  void clear_has_first_value();
  void set_has_second_value();
  void clear_has_second_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float first_value_;
  float second_value_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IntervalFloat64

// optional float first_value = 1;
inline bool IntervalFloat64::has_first_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntervalFloat64::set_has_first_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntervalFloat64::clear_has_first_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntervalFloat64::clear_first_value() {
  first_value_ = 0;
  clear_has_first_value();
}
inline float IntervalFloat64::first_value() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.IntervalFloat64.first_value)
  return first_value_;
}
inline void IntervalFloat64::set_first_value(float value) {
  set_has_first_value();
  first_value_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.IntervalFloat64.first_value)
}

// optional float second_value = 2;
inline bool IntervalFloat64::has_second_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntervalFloat64::set_has_second_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntervalFloat64::clear_has_second_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntervalFloat64::clear_second_value() {
  second_value_ = 0;
  clear_has_second_value();
}
inline float IntervalFloat64::second_value() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.common.IntervalFloat64.second_value)
  return second_value_;
}
inline void IntervalFloat64::set_second_value(float value) {
  set_has_second_value();
  second_value_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.common.IntervalFloat64.second_value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace proto
}  // namespace map
}  // namespace holo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fcommon_2finterval_5ffloat64_2eproto
