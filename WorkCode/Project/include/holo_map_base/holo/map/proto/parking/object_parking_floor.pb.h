// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/parking/object_parking_floor.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "holo/map/proto/common/coordinate.pb.h"
#include "holo/map/proto/common/geo_point.pb.h"
#include "holo/map/proto/common/geo_line.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto
namespace holo {
namespace map {
namespace proto {
namespace parking {
class ObjectParkingFloor;
class ObjectParkingFloorDefaultTypeInternal;
extern ObjectParkingFloorDefaultTypeInternal _ObjectParkingFloor_default_instance_;
class ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse;
class ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUseDefaultTypeInternal;
extern ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUseDefaultTypeInternal _ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse_default_instance_;
}  // namespace parking
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::parking::ObjectParkingFloor* Arena::CreateMaybeMessage<::holo::map::proto::parking::ObjectParkingFloor>(Arena*);
template<> ::holo::map::proto::parking::ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse* Arena::CreateMaybeMessage<::holo::map::proto::parking::ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace parking {

// ===================================================================

class ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse();
  ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse& other);
  static const ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse*>(&_ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ObjectParkingFloor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.parking.ObjectParkingFloor) */ {
 public:
  ObjectParkingFloor();
  virtual ~ObjectParkingFloor();

  ObjectParkingFloor(const ObjectParkingFloor& from);

  inline ObjectParkingFloor& operator=(const ObjectParkingFloor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObjectParkingFloor(ObjectParkingFloor&& from) noexcept
    : ObjectParkingFloor() {
    *this = ::std::move(from);
  }

  inline ObjectParkingFloor& operator=(ObjectParkingFloor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectParkingFloor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectParkingFloor* internal_default_instance() {
    return reinterpret_cast<const ObjectParkingFloor*>(
               &_ObjectParkingFloor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ObjectParkingFloor* other);
  friend void swap(ObjectParkingFloor& a, ObjectParkingFloor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObjectParkingFloor* New() const final {
    return CreateMaybeMessage<ObjectParkingFloor>(NULL);
  }

  ObjectParkingFloor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObjectParkingFloor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObjectParkingFloor& from);
  void MergeFrom(const ObjectParkingFloor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectParkingFloor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint64 associated_enter_exit_ids = 7 [packed = true];
  int associated_enter_exit_ids_size() const;
  void clear_associated_enter_exit_ids();
  static const int kAssociatedEnterExitIdsFieldNumber = 7;
  ::google::protobuf::uint64 associated_enter_exit_ids(int index) const;
  void set_associated_enter_exit_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_enter_exit_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_enter_exit_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_enter_exit_ids();

  // repeated uint64 associated_background_ids = 8 [packed = true];
  int associated_background_ids_size() const;
  void clear_associated_background_ids();
  static const int kAssociatedBackgroundIdsFieldNumber = 8;
  ::google::protobuf::uint64 associated_background_ids(int index) const;
  void set_associated_background_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_background_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_background_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_background_ids();

  // repeated uint64 associated_road_ids = 9 [packed = true];
  int associated_road_ids_size() const;
  void clear_associated_road_ids();
  static const int kAssociatedRoadIdsFieldNumber = 9;
  ::google::protobuf::uint64 associated_road_ids(int index) const;
  void set_associated_road_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_road_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_road_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_road_ids();

  // repeated uint64 associated_lane_group_ids = 10 [packed = true];
  int associated_lane_group_ids_size() const;
  void clear_associated_lane_group_ids();
  static const int kAssociatedLaneGroupIdsFieldNumber = 10;
  ::google::protobuf::uint64 associated_lane_group_ids(int index) const;
  void set_associated_lane_group_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_lane_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_lane_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_lane_group_ids();

  // repeated uint64 associated_lane_ids = 11 [packed = true];
  int associated_lane_ids_size() const;
  void clear_associated_lane_ids();
  static const int kAssociatedLaneIdsFieldNumber = 11;
  ::google::protobuf::uint64 associated_lane_ids(int index) const;
  void set_associated_lane_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_lane_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_lane_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_lane_ids();

  // repeated uint64 associated_boundary_ids = 12 [packed = true];
  int associated_boundary_ids_size() const;
  void clear_associated_boundary_ids();
  static const int kAssociatedBoundaryIdsFieldNumber = 12;
  ::google::protobuf::uint64 associated_boundary_ids(int index) const;
  void set_associated_boundary_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_boundary_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_boundary_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_boundary_ids();

  // repeated uint64 associated_parking_poi_ids = 13 [packed = true];
  int associated_parking_poi_ids_size() const;
  void clear_associated_parking_poi_ids();
  static const int kAssociatedParkingPoiIdsFieldNumber = 13;
  ::google::protobuf::uint64 associated_parking_poi_ids(int index) const;
  void set_associated_parking_poi_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_parking_poi_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_parking_poi_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_parking_poi_ids();

  // repeated uint64 associated_parking_background_ids = 14 [packed = true];
  int associated_parking_background_ids_size() const;
  void clear_associated_parking_background_ids();
  static const int kAssociatedParkingBackgroundIdsFieldNumber = 14;
  ::google::protobuf::uint64 associated_parking_background_ids(int index) const;
  void set_associated_parking_background_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_parking_background_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_parking_background_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_parking_background_ids();

  // repeated uint64 associated_parking_space_ids = 15 [packed = true];
  int associated_parking_space_ids_size() const;
  void clear_associated_parking_space_ids();
  static const int kAssociatedParkingSpaceIdsFieldNumber = 15;
  ::google::protobuf::uint64 associated_parking_space_ids(int index) const;
  void set_associated_parking_space_ids(int index, ::google::protobuf::uint64 value);
  void add_associated_parking_space_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      associated_parking_space_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_associated_parking_space_ids();

  // repeated uint64 tile_ids = 20 [packed = true];
  int tile_ids_size() const;
  void clear_tile_ids();
  static const int kTileIdsFieldNumber = 20;
  ::google::protobuf::uint64 tile_ids(int index) const;
  void set_tile_ids(int index, ::google::protobuf::uint64 value);
  void add_tile_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tile_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tile_ids();

  // repeated uint64 object_linear_info_ids = 21 [packed = true];
  int object_linear_info_ids_size() const;
  void clear_object_linear_info_ids();
  static const int kObjectLinearInfoIdsFieldNumber = 21;
  ::google::protobuf::uint64 object_linear_info_ids(int index) const;
  void set_object_linear_info_ids(int index, ::google::protobuf::uint64 value);
  void add_object_linear_info_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_linear_info_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_linear_info_ids();

  // repeated uint64 object_regional_info_ids = 22 [packed = true];
  int object_regional_info_ids_size() const;
  void clear_object_regional_info_ids();
  static const int kObjectRegionalInfoIdsFieldNumber = 22;
  ::google::protobuf::uint64 object_regional_info_ids(int index) const;
  void set_object_regional_info_ids(int index, ::google::protobuf::uint64 value);
  void add_object_regional_info_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_regional_info_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_regional_info_ids();

  // repeated uint64 object_stop_line_ids = 23 [packed = true];
  int object_stop_line_ids_size() const;
  void clear_object_stop_line_ids();
  static const int kObjectStopLineIdsFieldNumber = 23;
  ::google::protobuf::uint64 object_stop_line_ids(int index) const;
  void set_object_stop_line_ids(int index, ::google::protobuf::uint64 value);
  void add_object_stop_line_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_stop_line_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_stop_line_ids();

  // repeated uint64 object_traffic_light_ids = 24 [packed = true];
  int object_traffic_light_ids_size() const;
  void clear_object_traffic_light_ids();
  static const int kObjectTrafficLightIdsFieldNumber = 24;
  ::google::protobuf::uint64 object_traffic_light_ids(int index) const;
  void set_object_traffic_light_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_light_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_light_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_light_ids();

  // repeated uint64 object_traffic_light_group_ids = 25 [packed = true];
  int object_traffic_light_group_ids_size() const;
  void clear_object_traffic_light_group_ids();
  static const int kObjectTrafficLightGroupIdsFieldNumber = 25;
  ::google::protobuf::uint64 object_traffic_light_group_ids(int index) const;
  void set_object_traffic_light_group_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_light_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_light_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_light_group_ids();

  // repeated uint64 object_pedestrian_crossing_ids = 26 [packed = true];
  int object_pedestrian_crossing_ids_size() const;
  void clear_object_pedestrian_crossing_ids();
  static const int kObjectPedestrianCrossingIdsFieldNumber = 26;
  ::google::protobuf::uint64 object_pedestrian_crossing_ids(int index) const;
  void set_object_pedestrian_crossing_ids(int index, ::google::protobuf::uint64 value);
  void add_object_pedestrian_crossing_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_pedestrian_crossing_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_pedestrian_crossing_ids();

  // repeated uint64 object_traffic_sign_ids = 27 [packed = true];
  int object_traffic_sign_ids_size() const;
  void clear_object_traffic_sign_ids();
  static const int kObjectTrafficSignIdsFieldNumber = 27;
  ::google::protobuf::uint64 object_traffic_sign_ids(int index) const;
  void set_object_traffic_sign_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_sign_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_sign_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_sign_ids();

  // repeated uint64 object_intersection_ids = 28 [packed = true];
  int object_intersection_ids_size() const;
  void clear_object_intersection_ids();
  static const int kObjectIntersectionIdsFieldNumber = 28;
  ::google::protobuf::uint64 object_intersection_ids(int index) const;
  void set_object_intersection_ids(int index, ::google::protobuf::uint64 value);
  void add_object_intersection_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_intersection_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_intersection_ids();

  // repeated .holo.map.proto.common.GeoPoint geometry_points = 34;
  int geometry_points_size() const;
  void clear_geometry_points();
  static const int kGeometryPointsFieldNumber = 34;
  ::holo::map::proto::common::GeoPoint* mutable_geometry_points(int index);
  ::google::protobuf::RepeatedPtrField< ::holo::map::proto::common::GeoPoint >*
      mutable_geometry_points();
  const ::holo::map::proto::common::GeoPoint& geometry_points(int index) const;
  ::holo::map::proto::common::GeoPoint* add_geometry_points();
  const ::google::protobuf::RepeatedPtrField< ::holo::map::proto::common::GeoPoint >&
      geometry_points() const;

  // map<uint32, .holo.map.proto.common.GeoLine> extra_geometry_points = 35;
  int extra_geometry_points_size() const;
  void clear_extra_geometry_points();
  static const int kExtraGeometryPointsFieldNumber = 35;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine >&
      extra_geometry_points() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine >*
      mutable_extra_geometry_points();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .holo.map.proto.common.Coordinate coordinate = 30;
  bool has_coordinate() const;
  void clear_coordinate();
  static const int kCoordinateFieldNumber = 30;
  private:
  const ::holo::map::proto::common::Coordinate& _internal_coordinate() const;
  public:
  const ::holo::map::proto::common::Coordinate& coordinate() const;
  ::holo::map::proto::common::Coordinate* release_coordinate();
  ::holo::map::proto::common::Coordinate* mutable_coordinate();
  void set_allocated_coordinate(::holo::map::proto::common::Coordinate* coordinate);

  // optional uint64 object_parking_floor_id = 1;
  bool has_object_parking_floor_id() const;
  void clear_object_parking_floor_id();
  static const int kObjectParkingFloorIdFieldNumber = 1;
  ::google::protobuf::uint64 object_parking_floor_id() const;
  void set_object_parking_floor_id(::google::protobuf::uint64 value);

  // optional uint64 object_parking_lot_id = 4;
  bool has_object_parking_lot_id() const;
  void clear_object_parking_lot_id();
  static const int kObjectParkingLotIdFieldNumber = 4;
  ::google::protobuf::uint64 object_parking_lot_id() const;
  void set_object_parking_lot_id(::google::protobuf::uint64 value);

  // optional uint32 floor_seq = 2;
  bool has_floor_seq() const;
  void clear_floor_seq();
  static const int kFloorSeqFieldNumber = 2;
  ::google::protobuf::uint32 floor_seq() const;
  void set_floor_seq(::google::protobuf::uint32 value);

  // optional uint32 height_cm = 6;
  bool has_height_cm() const;
  void clear_height_cm();
  static const int kHeightCmFieldNumber = 6;
  ::google::protobuf::uint32 height_cm() const;
  void set_height_cm(::google::protobuf::uint32 value);

  // optional bool is_use = 5;
  bool has_is_use() const;
  void clear_is_use();
  static const int kIsUseFieldNumber = 5;
  bool is_use() const;
  void set_is_use(bool value);

  // optional bool south_flag = 33;
  bool has_south_flag() const;
  void clear_south_flag();
  static const int kSouthFlagFieldNumber = 33;
  bool south_flag() const;
  void set_south_flag(bool value);

  // optional uint32 zone_id = 31;
  bool has_zone_id() const;
  void clear_zone_id();
  static const int kZoneIdFieldNumber = 31;
  ::google::protobuf::uint32 zone_id() const;
  void set_zone_id(::google::protobuf::uint32 value);

  // optional uint32 extra_zone_id = 32;
  bool has_extra_zone_id() const;
  void clear_extra_zone_id();
  static const int kExtraZoneIdFieldNumber = 32;
  ::google::protobuf::uint32 extra_zone_id() const;
  void set_extra_zone_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.parking.ObjectParkingFloor)
 private:
  void set_has_object_parking_floor_id();
  void clear_has_object_parking_floor_id();
  void set_has_floor_seq();
  void clear_has_floor_seq();
  void set_has_name();
  void clear_has_name();
  void set_has_object_parking_lot_id();
  void clear_has_object_parking_lot_id();
  void set_has_is_use();
  void clear_has_is_use();
  void set_has_height_cm();
  void clear_has_height_cm();
  void set_has_coordinate();
  void clear_has_coordinate();
  void set_has_zone_id();
  void clear_has_zone_id();
  void set_has_extra_zone_id();
  void clear_has_extra_zone_id();
  void set_has_south_flag();
  void clear_has_south_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_enter_exit_ids_;
  mutable int _associated_enter_exit_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_background_ids_;
  mutable int _associated_background_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_road_ids_;
  mutable int _associated_road_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_lane_group_ids_;
  mutable int _associated_lane_group_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_lane_ids_;
  mutable int _associated_lane_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_boundary_ids_;
  mutable int _associated_boundary_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_parking_poi_ids_;
  mutable int _associated_parking_poi_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_parking_background_ids_;
  mutable int _associated_parking_background_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > associated_parking_space_ids_;
  mutable int _associated_parking_space_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tile_ids_;
  mutable int _tile_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_linear_info_ids_;
  mutable int _object_linear_info_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_regional_info_ids_;
  mutable int _object_regional_info_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_stop_line_ids_;
  mutable int _object_stop_line_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_light_ids_;
  mutable int _object_traffic_light_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_light_group_ids_;
  mutable int _object_traffic_light_group_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_pedestrian_crossing_ids_;
  mutable int _object_pedestrian_crossing_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_sign_ids_;
  mutable int _object_traffic_sign_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_intersection_ids_;
  mutable int _object_intersection_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::holo::map::proto::common::GeoPoint > geometry_points_;
  ::google::protobuf::internal::MapField<
      ObjectParkingFloor_ExtraGeometryPointsEntry_DoNotUse,
      ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > extra_geometry_points_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::holo::map::proto::common::Coordinate* coordinate_;
  ::google::protobuf::uint64 object_parking_floor_id_;
  ::google::protobuf::uint64 object_parking_lot_id_;
  ::google::protobuf::uint32 floor_seq_;
  ::google::protobuf::uint32 height_cm_;
  bool is_use_;
  bool south_flag_;
  ::google::protobuf::uint32 zone_id_;
  ::google::protobuf::uint32 extra_zone_id_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ObjectParkingFloor

// optional uint64 object_parking_floor_id = 1;
inline bool ObjectParkingFloor::has_object_parking_floor_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObjectParkingFloor::set_has_object_parking_floor_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ObjectParkingFloor::clear_has_object_parking_floor_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ObjectParkingFloor::clear_object_parking_floor_id() {
  object_parking_floor_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_parking_floor_id();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_parking_floor_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_parking_floor_id)
  return object_parking_floor_id_;
}
inline void ObjectParkingFloor::set_object_parking_floor_id(::google::protobuf::uint64 value) {
  set_has_object_parking_floor_id();
  object_parking_floor_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_parking_floor_id)
}

// optional uint32 floor_seq = 2;
inline bool ObjectParkingFloor::has_floor_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ObjectParkingFloor::set_has_floor_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ObjectParkingFloor::clear_has_floor_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ObjectParkingFloor::clear_floor_seq() {
  floor_seq_ = 0u;
  clear_has_floor_seq();
}
inline ::google::protobuf::uint32 ObjectParkingFloor::floor_seq() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.floor_seq)
  return floor_seq_;
}
inline void ObjectParkingFloor::set_floor_seq(::google::protobuf::uint32 value) {
  set_has_floor_seq();
  floor_seq_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.floor_seq)
}

// optional string name = 3;
inline bool ObjectParkingFloor::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectParkingFloor::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectParkingFloor::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectParkingFloor::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ObjectParkingFloor::name() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.name)
  return name_.GetNoArena();
}
inline void ObjectParkingFloor::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.name)
}
#if LANG_CXX11
inline void ObjectParkingFloor::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.map.proto.parking.ObjectParkingFloor.name)
}
#endif
inline void ObjectParkingFloor::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.map.proto.parking.ObjectParkingFloor.name)
}
inline void ObjectParkingFloor::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.map.proto.parking.ObjectParkingFloor.name)
}
inline ::std::string* ObjectParkingFloor::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:holo.map.proto.parking.ObjectParkingFloor.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjectParkingFloor::release_name() {
  // @@protoc_insertion_point(field_release:holo.map.proto.parking.ObjectParkingFloor.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectParkingFloor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.parking.ObjectParkingFloor.name)
}

// optional uint64 object_parking_lot_id = 4;
inline bool ObjectParkingFloor::has_object_parking_lot_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObjectParkingFloor::set_has_object_parking_lot_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ObjectParkingFloor::clear_has_object_parking_lot_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ObjectParkingFloor::clear_object_parking_lot_id() {
  object_parking_lot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_parking_lot_id();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_parking_lot_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_parking_lot_id)
  return object_parking_lot_id_;
}
inline void ObjectParkingFloor::set_object_parking_lot_id(::google::protobuf::uint64 value) {
  set_has_object_parking_lot_id();
  object_parking_lot_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_parking_lot_id)
}

// optional bool is_use = 5;
inline bool ObjectParkingFloor::has_is_use() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ObjectParkingFloor::set_has_is_use() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ObjectParkingFloor::clear_has_is_use() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ObjectParkingFloor::clear_is_use() {
  is_use_ = false;
  clear_has_is_use();
}
inline bool ObjectParkingFloor::is_use() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.is_use)
  return is_use_;
}
inline void ObjectParkingFloor::set_is_use(bool value) {
  set_has_is_use();
  is_use_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.is_use)
}

// optional uint32 height_cm = 6;
inline bool ObjectParkingFloor::has_height_cm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ObjectParkingFloor::set_has_height_cm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ObjectParkingFloor::clear_has_height_cm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ObjectParkingFloor::clear_height_cm() {
  height_cm_ = 0u;
  clear_has_height_cm();
}
inline ::google::protobuf::uint32 ObjectParkingFloor::height_cm() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.height_cm)
  return height_cm_;
}
inline void ObjectParkingFloor::set_height_cm(::google::protobuf::uint32 value) {
  set_has_height_cm();
  height_cm_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.height_cm)
}

// repeated uint64 associated_enter_exit_ids = 7 [packed = true];
inline int ObjectParkingFloor::associated_enter_exit_ids_size() const {
  return associated_enter_exit_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_enter_exit_ids() {
  associated_enter_exit_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_enter_exit_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_enter_exit_ids)
  return associated_enter_exit_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_enter_exit_ids(int index, ::google::protobuf::uint64 value) {
  associated_enter_exit_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_enter_exit_ids)
}
inline void ObjectParkingFloor::add_associated_enter_exit_ids(::google::protobuf::uint64 value) {
  associated_enter_exit_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_enter_exit_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_enter_exit_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_enter_exit_ids)
  return associated_enter_exit_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_enter_exit_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_enter_exit_ids)
  return &associated_enter_exit_ids_;
}

// repeated uint64 associated_background_ids = 8 [packed = true];
inline int ObjectParkingFloor::associated_background_ids_size() const {
  return associated_background_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_background_ids() {
  associated_background_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_background_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_background_ids)
  return associated_background_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_background_ids(int index, ::google::protobuf::uint64 value) {
  associated_background_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_background_ids)
}
inline void ObjectParkingFloor::add_associated_background_ids(::google::protobuf::uint64 value) {
  associated_background_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_background_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_background_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_background_ids)
  return associated_background_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_background_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_background_ids)
  return &associated_background_ids_;
}

// repeated uint64 associated_road_ids = 9 [packed = true];
inline int ObjectParkingFloor::associated_road_ids_size() const {
  return associated_road_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_road_ids() {
  associated_road_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_road_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_road_ids)
  return associated_road_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_road_ids(int index, ::google::protobuf::uint64 value) {
  associated_road_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_road_ids)
}
inline void ObjectParkingFloor::add_associated_road_ids(::google::protobuf::uint64 value) {
  associated_road_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_road_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_road_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_road_ids)
  return associated_road_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_road_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_road_ids)
  return &associated_road_ids_;
}

// repeated uint64 associated_lane_group_ids = 10 [packed = true];
inline int ObjectParkingFloor::associated_lane_group_ids_size() const {
  return associated_lane_group_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_lane_group_ids() {
  associated_lane_group_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_lane_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_lane_group_ids)
  return associated_lane_group_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_lane_group_ids(int index, ::google::protobuf::uint64 value) {
  associated_lane_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_lane_group_ids)
}
inline void ObjectParkingFloor::add_associated_lane_group_ids(::google::protobuf::uint64 value) {
  associated_lane_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_lane_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_lane_group_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_lane_group_ids)
  return associated_lane_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_lane_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_lane_group_ids)
  return &associated_lane_group_ids_;
}

// repeated uint64 associated_lane_ids = 11 [packed = true];
inline int ObjectParkingFloor::associated_lane_ids_size() const {
  return associated_lane_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_lane_ids() {
  associated_lane_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_lane_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_lane_ids)
  return associated_lane_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_lane_ids(int index, ::google::protobuf::uint64 value) {
  associated_lane_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_lane_ids)
}
inline void ObjectParkingFloor::add_associated_lane_ids(::google::protobuf::uint64 value) {
  associated_lane_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_lane_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_lane_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_lane_ids)
  return associated_lane_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_lane_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_lane_ids)
  return &associated_lane_ids_;
}

// repeated uint64 associated_boundary_ids = 12 [packed = true];
inline int ObjectParkingFloor::associated_boundary_ids_size() const {
  return associated_boundary_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_boundary_ids() {
  associated_boundary_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_boundary_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_boundary_ids)
  return associated_boundary_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_boundary_ids(int index, ::google::protobuf::uint64 value) {
  associated_boundary_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_boundary_ids)
}
inline void ObjectParkingFloor::add_associated_boundary_ids(::google::protobuf::uint64 value) {
  associated_boundary_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_boundary_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_boundary_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_boundary_ids)
  return associated_boundary_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_boundary_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_boundary_ids)
  return &associated_boundary_ids_;
}

// repeated uint64 associated_parking_poi_ids = 13 [packed = true];
inline int ObjectParkingFloor::associated_parking_poi_ids_size() const {
  return associated_parking_poi_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_parking_poi_ids() {
  associated_parking_poi_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_parking_poi_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_parking_poi_ids)
  return associated_parking_poi_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_parking_poi_ids(int index, ::google::protobuf::uint64 value) {
  associated_parking_poi_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_parking_poi_ids)
}
inline void ObjectParkingFloor::add_associated_parking_poi_ids(::google::protobuf::uint64 value) {
  associated_parking_poi_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_parking_poi_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_parking_poi_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_poi_ids)
  return associated_parking_poi_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_parking_poi_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_poi_ids)
  return &associated_parking_poi_ids_;
}

// repeated uint64 associated_parking_background_ids = 14 [packed = true];
inline int ObjectParkingFloor::associated_parking_background_ids_size() const {
  return associated_parking_background_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_parking_background_ids() {
  associated_parking_background_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_parking_background_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_parking_background_ids)
  return associated_parking_background_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_parking_background_ids(int index, ::google::protobuf::uint64 value) {
  associated_parking_background_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_parking_background_ids)
}
inline void ObjectParkingFloor::add_associated_parking_background_ids(::google::protobuf::uint64 value) {
  associated_parking_background_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_parking_background_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_parking_background_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_background_ids)
  return associated_parking_background_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_parking_background_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_background_ids)
  return &associated_parking_background_ids_;
}

// repeated uint64 associated_parking_space_ids = 15 [packed = true];
inline int ObjectParkingFloor::associated_parking_space_ids_size() const {
  return associated_parking_space_ids_.size();
}
inline void ObjectParkingFloor::clear_associated_parking_space_ids() {
  associated_parking_space_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::associated_parking_space_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.associated_parking_space_ids)
  return associated_parking_space_ids_.Get(index);
}
inline void ObjectParkingFloor::set_associated_parking_space_ids(int index, ::google::protobuf::uint64 value) {
  associated_parking_space_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.associated_parking_space_ids)
}
inline void ObjectParkingFloor::add_associated_parking_space_ids(::google::protobuf::uint64 value) {
  associated_parking_space_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.associated_parking_space_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::associated_parking_space_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_space_ids)
  return associated_parking_space_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_associated_parking_space_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.associated_parking_space_ids)
  return &associated_parking_space_ids_;
}

// repeated uint64 tile_ids = 20 [packed = true];
inline int ObjectParkingFloor::tile_ids_size() const {
  return tile_ids_.size();
}
inline void ObjectParkingFloor::clear_tile_ids() {
  tile_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::tile_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.tile_ids)
  return tile_ids_.Get(index);
}
inline void ObjectParkingFloor::set_tile_ids(int index, ::google::protobuf::uint64 value) {
  tile_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.tile_ids)
}
inline void ObjectParkingFloor::add_tile_ids(::google::protobuf::uint64 value) {
  tile_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.tile_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::tile_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.tile_ids)
  return tile_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_tile_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.tile_ids)
  return &tile_ids_;
}

// repeated uint64 object_linear_info_ids = 21 [packed = true];
inline int ObjectParkingFloor::object_linear_info_ids_size() const {
  return object_linear_info_ids_.size();
}
inline void ObjectParkingFloor::clear_object_linear_info_ids() {
  object_linear_info_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_linear_info_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_linear_info_ids)
  return object_linear_info_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_linear_info_ids(int index, ::google::protobuf::uint64 value) {
  object_linear_info_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_linear_info_ids)
}
inline void ObjectParkingFloor::add_object_linear_info_ids(::google::protobuf::uint64 value) {
  object_linear_info_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_linear_info_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_linear_info_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_linear_info_ids)
  return object_linear_info_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_linear_info_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_linear_info_ids)
  return &object_linear_info_ids_;
}

// repeated uint64 object_regional_info_ids = 22 [packed = true];
inline int ObjectParkingFloor::object_regional_info_ids_size() const {
  return object_regional_info_ids_.size();
}
inline void ObjectParkingFloor::clear_object_regional_info_ids() {
  object_regional_info_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_regional_info_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_regional_info_ids)
  return object_regional_info_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_regional_info_ids(int index, ::google::protobuf::uint64 value) {
  object_regional_info_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_regional_info_ids)
}
inline void ObjectParkingFloor::add_object_regional_info_ids(::google::protobuf::uint64 value) {
  object_regional_info_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_regional_info_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_regional_info_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_regional_info_ids)
  return object_regional_info_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_regional_info_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_regional_info_ids)
  return &object_regional_info_ids_;
}

// repeated uint64 object_stop_line_ids = 23 [packed = true];
inline int ObjectParkingFloor::object_stop_line_ids_size() const {
  return object_stop_line_ids_.size();
}
inline void ObjectParkingFloor::clear_object_stop_line_ids() {
  object_stop_line_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_stop_line_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_stop_line_ids)
  return object_stop_line_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_stop_line_ids(int index, ::google::protobuf::uint64 value) {
  object_stop_line_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_stop_line_ids)
}
inline void ObjectParkingFloor::add_object_stop_line_ids(::google::protobuf::uint64 value) {
  object_stop_line_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_stop_line_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_stop_line_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_stop_line_ids)
  return object_stop_line_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_stop_line_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_stop_line_ids)
  return &object_stop_line_ids_;
}

// repeated uint64 object_traffic_light_ids = 24 [packed = true];
inline int ObjectParkingFloor::object_traffic_light_ids_size() const {
  return object_traffic_light_ids_.size();
}
inline void ObjectParkingFloor::clear_object_traffic_light_ids() {
  object_traffic_light_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_traffic_light_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_ids)
  return object_traffic_light_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_traffic_light_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_light_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_ids)
}
inline void ObjectParkingFloor::add_object_traffic_light_ids(::google::protobuf::uint64 value) {
  object_traffic_light_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_traffic_light_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_ids)
  return object_traffic_light_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_traffic_light_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_ids)
  return &object_traffic_light_ids_;
}

// repeated uint64 object_traffic_light_group_ids = 25 [packed = true];
inline int ObjectParkingFloor::object_traffic_light_group_ids_size() const {
  return object_traffic_light_group_ids_.size();
}
inline void ObjectParkingFloor::clear_object_traffic_light_group_ids() {
  object_traffic_light_group_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_traffic_light_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_group_ids)
  return object_traffic_light_group_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_traffic_light_group_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_light_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_group_ids)
}
inline void ObjectParkingFloor::add_object_traffic_light_group_ids(::google::protobuf::uint64 value) {
  object_traffic_light_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_traffic_light_group_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_group_ids)
  return object_traffic_light_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_traffic_light_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_light_group_ids)
  return &object_traffic_light_group_ids_;
}

// repeated uint64 object_pedestrian_crossing_ids = 26 [packed = true];
inline int ObjectParkingFloor::object_pedestrian_crossing_ids_size() const {
  return object_pedestrian_crossing_ids_.size();
}
inline void ObjectParkingFloor::clear_object_pedestrian_crossing_ids() {
  object_pedestrian_crossing_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_pedestrian_crossing_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_pedestrian_crossing_ids)
  return object_pedestrian_crossing_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_pedestrian_crossing_ids(int index, ::google::protobuf::uint64 value) {
  object_pedestrian_crossing_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_pedestrian_crossing_ids)
}
inline void ObjectParkingFloor::add_object_pedestrian_crossing_ids(::google::protobuf::uint64 value) {
  object_pedestrian_crossing_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_pedestrian_crossing_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_pedestrian_crossing_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_pedestrian_crossing_ids)
  return object_pedestrian_crossing_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_pedestrian_crossing_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_pedestrian_crossing_ids)
  return &object_pedestrian_crossing_ids_;
}

// repeated uint64 object_traffic_sign_ids = 27 [packed = true];
inline int ObjectParkingFloor::object_traffic_sign_ids_size() const {
  return object_traffic_sign_ids_.size();
}
inline void ObjectParkingFloor::clear_object_traffic_sign_ids() {
  object_traffic_sign_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_traffic_sign_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_traffic_sign_ids)
  return object_traffic_sign_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_traffic_sign_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_sign_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_traffic_sign_ids)
}
inline void ObjectParkingFloor::add_object_traffic_sign_ids(::google::protobuf::uint64 value) {
  object_traffic_sign_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_traffic_sign_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_traffic_sign_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_sign_ids)
  return object_traffic_sign_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_traffic_sign_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_traffic_sign_ids)
  return &object_traffic_sign_ids_;
}

// repeated uint64 object_intersection_ids = 28 [packed = true];
inline int ObjectParkingFloor::object_intersection_ids_size() const {
  return object_intersection_ids_.size();
}
inline void ObjectParkingFloor::clear_object_intersection_ids() {
  object_intersection_ids_.Clear();
}
inline ::google::protobuf::uint64 ObjectParkingFloor::object_intersection_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.object_intersection_ids)
  return object_intersection_ids_.Get(index);
}
inline void ObjectParkingFloor::set_object_intersection_ids(int index, ::google::protobuf::uint64 value) {
  object_intersection_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.object_intersection_ids)
}
inline void ObjectParkingFloor::add_object_intersection_ids(::google::protobuf::uint64 value) {
  object_intersection_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.object_intersection_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ObjectParkingFloor::object_intersection_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.object_intersection_ids)
  return object_intersection_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ObjectParkingFloor::mutable_object_intersection_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.object_intersection_ids)
  return &object_intersection_ids_;
}

// optional .holo.map.proto.common.Coordinate coordinate = 30;
inline bool ObjectParkingFloor::has_coordinate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectParkingFloor::set_has_coordinate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectParkingFloor::clear_has_coordinate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::holo::map::proto::common::Coordinate& ObjectParkingFloor::_internal_coordinate() const {
  return *coordinate_;
}
inline const ::holo::map::proto::common::Coordinate& ObjectParkingFloor::coordinate() const {
  const ::holo::map::proto::common::Coordinate* p = coordinate_;
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.coordinate)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::common::Coordinate*>(
      &::holo::map::proto::common::_Coordinate_default_instance_);
}
inline ::holo::map::proto::common::Coordinate* ObjectParkingFloor::release_coordinate() {
  // @@protoc_insertion_point(field_release:holo.map.proto.parking.ObjectParkingFloor.coordinate)
  clear_has_coordinate();
  ::holo::map::proto::common::Coordinate* temp = coordinate_;
  coordinate_ = NULL;
  return temp;
}
inline ::holo::map::proto::common::Coordinate* ObjectParkingFloor::mutable_coordinate() {
  set_has_coordinate();
  if (coordinate_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::common::Coordinate>(GetArenaNoVirtual());
    coordinate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.parking.ObjectParkingFloor.coordinate)
  return coordinate_;
}
inline void ObjectParkingFloor::set_allocated_coordinate(::holo::map::proto::common::Coordinate* coordinate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(coordinate_);
  }
  if (coordinate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinate, submessage_arena);
    }
    set_has_coordinate();
  } else {
    clear_has_coordinate();
  }
  coordinate_ = coordinate;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.parking.ObjectParkingFloor.coordinate)
}

// optional uint32 zone_id = 31;
inline bool ObjectParkingFloor::has_zone_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ObjectParkingFloor::set_has_zone_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ObjectParkingFloor::clear_has_zone_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ObjectParkingFloor::clear_zone_id() {
  zone_id_ = 0u;
  clear_has_zone_id();
}
inline ::google::protobuf::uint32 ObjectParkingFloor::zone_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.zone_id)
  return zone_id_;
}
inline void ObjectParkingFloor::set_zone_id(::google::protobuf::uint32 value) {
  set_has_zone_id();
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.zone_id)
}

// optional uint32 extra_zone_id = 32;
inline bool ObjectParkingFloor::has_extra_zone_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ObjectParkingFloor::set_has_extra_zone_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ObjectParkingFloor::clear_has_extra_zone_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ObjectParkingFloor::clear_extra_zone_id() {
  extra_zone_id_ = 0u;
  clear_has_extra_zone_id();
}
inline ::google::protobuf::uint32 ObjectParkingFloor::extra_zone_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.extra_zone_id)
  return extra_zone_id_;
}
inline void ObjectParkingFloor::set_extra_zone_id(::google::protobuf::uint32 value) {
  set_has_extra_zone_id();
  extra_zone_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.extra_zone_id)
}

// optional bool south_flag = 33;
inline bool ObjectParkingFloor::has_south_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ObjectParkingFloor::set_has_south_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ObjectParkingFloor::clear_has_south_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ObjectParkingFloor::clear_south_flag() {
  south_flag_ = false;
  clear_has_south_flag();
}
inline bool ObjectParkingFloor::south_flag() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.south_flag)
  return south_flag_;
}
inline void ObjectParkingFloor::set_south_flag(bool value) {
  set_has_south_flag();
  south_flag_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.parking.ObjectParkingFloor.south_flag)
}

// repeated .holo.map.proto.common.GeoPoint geometry_points = 34;
inline int ObjectParkingFloor::geometry_points_size() const {
  return geometry_points_.size();
}
inline ::holo::map::proto::common::GeoPoint* ObjectParkingFloor::mutable_geometry_points(int index) {
  // @@protoc_insertion_point(field_mutable:holo.map.proto.parking.ObjectParkingFloor.geometry_points)
  return geometry_points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::holo::map::proto::common::GeoPoint >*
ObjectParkingFloor::mutable_geometry_points() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.parking.ObjectParkingFloor.geometry_points)
  return &geometry_points_;
}
inline const ::holo::map::proto::common::GeoPoint& ObjectParkingFloor::geometry_points(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.parking.ObjectParkingFloor.geometry_points)
  return geometry_points_.Get(index);
}
inline ::holo::map::proto::common::GeoPoint* ObjectParkingFloor::add_geometry_points() {
  // @@protoc_insertion_point(field_add:holo.map.proto.parking.ObjectParkingFloor.geometry_points)
  return geometry_points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::holo::map::proto::common::GeoPoint >&
ObjectParkingFloor::geometry_points() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.parking.ObjectParkingFloor.geometry_points)
  return geometry_points_;
}

// map<uint32, .holo.map.proto.common.GeoLine> extra_geometry_points = 35;
inline int ObjectParkingFloor::extra_geometry_points_size() const {
  return extra_geometry_points_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine >&
ObjectParkingFloor::extra_geometry_points() const {
  // @@protoc_insertion_point(field_map:holo.map.proto.parking.ObjectParkingFloor.extra_geometry_points)
  return extra_geometry_points_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::holo::map::proto::common::GeoLine >*
ObjectParkingFloor::mutable_extra_geometry_points() {
  // @@protoc_insertion_point(field_mutable_map:holo.map.proto.parking.ObjectParkingFloor.extra_geometry_points)
  return extra_geometry_points_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace parking
}  // namespace proto
}  // namespace map
}  // namespace holo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fparking_2fobject_5fparking_5ffloor_2eproto
