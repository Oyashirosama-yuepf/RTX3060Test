// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/navigation/routing_request.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "holo/map/proto/navigation/routing_position.pb.h"
#include "holo/map/proto/common/interval_type.pb.h"
#include "holo/map/proto/common/interval_float64.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto
namespace holo {
namespace map {
namespace proto {
namespace navigation {
class RoutingRequest;
class RoutingRequestDefaultTypeInternal;
extern RoutingRequestDefaultTypeInternal _RoutingRequest_default_instance_;
}  // namespace navigation
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::navigation::RoutingRequest* Arena::CreateMaybeMessage<::holo::map::proto::navigation::RoutingRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace navigation {

enum RoutingRequest_Type {
  RoutingRequest_Type_TYPE_FULL_PATH = 1,
  RoutingRequest_Type_TYPE_PART_PATH = 2
};
bool RoutingRequest_Type_IsValid(int value);
const RoutingRequest_Type RoutingRequest_Type_Type_MIN = RoutingRequest_Type_TYPE_FULL_PATH;
const RoutingRequest_Type RoutingRequest_Type_Type_MAX = RoutingRequest_Type_TYPE_PART_PATH;
const int RoutingRequest_Type_Type_ARRAYSIZE = RoutingRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoutingRequest_Type_descriptor();
inline const ::std::string& RoutingRequest_Type_Name(RoutingRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoutingRequest_Type_descriptor(), value);
}
inline bool RoutingRequest_Type_Parse(
    const ::std::string& name, RoutingRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoutingRequest_Type>(
    RoutingRequest_Type_descriptor(), name, value);
}
enum RoutingRequest_Policy {
  RoutingRequest_Policy_POLICY_RECOMMEND = 0,
  RoutingRequest_Policy_POLICY_SHORTEST_DISTANCE = 1,
  RoutingRequest_Policy_POLICY_SHORTEST_TIME = 2,
  RoutingRequest_Policy_POLICY_SHORTEST_TOLL = 3,
  RoutingRequest_Policy_POLICY_SHORTEST_HIGHWAY = 4
};
bool RoutingRequest_Policy_IsValid(int value);
const RoutingRequest_Policy RoutingRequest_Policy_Policy_MIN = RoutingRequest_Policy_POLICY_RECOMMEND;
const RoutingRequest_Policy RoutingRequest_Policy_Policy_MAX = RoutingRequest_Policy_POLICY_SHORTEST_HIGHWAY;
const int RoutingRequest_Policy_Policy_ARRAYSIZE = RoutingRequest_Policy_Policy_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoutingRequest_Policy_descriptor();
inline const ::std::string& RoutingRequest_Policy_Name(RoutingRequest_Policy value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoutingRequest_Policy_descriptor(), value);
}
inline bool RoutingRequest_Policy_Parse(
    const ::std::string& name, RoutingRequest_Policy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoutingRequest_Policy>(
    RoutingRequest_Policy_descriptor(), name, value);
}
// ===================================================================

class RoutingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.navigation.RoutingRequest) */ {
 public:
  RoutingRequest();
  virtual ~RoutingRequest();

  RoutingRequest(const RoutingRequest& from);

  inline RoutingRequest& operator=(const RoutingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutingRequest(RoutingRequest&& from) noexcept
    : RoutingRequest() {
    *this = ::std::move(from);
  }

  inline RoutingRequest& operator=(RoutingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoutingRequest* internal_default_instance() {
    return reinterpret_cast<const RoutingRequest*>(
               &_RoutingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RoutingRequest* other);
  friend void swap(RoutingRequest& a, RoutingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutingRequest* New() const final {
    return CreateMaybeMessage<RoutingRequest>(NULL);
  }

  RoutingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoutingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoutingRequest& from);
  void MergeFrom(const RoutingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RoutingRequest_Type Type;
  static const Type TYPE_FULL_PATH =
    RoutingRequest_Type_TYPE_FULL_PATH;
  static const Type TYPE_PART_PATH =
    RoutingRequest_Type_TYPE_PART_PATH;
  static inline bool Type_IsValid(int value) {
    return RoutingRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    RoutingRequest_Type_Type_MIN;
  static const Type Type_MAX =
    RoutingRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    RoutingRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return RoutingRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return RoutingRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return RoutingRequest_Type_Parse(name, value);
  }

  typedef RoutingRequest_Policy Policy;
  static const Policy POLICY_RECOMMEND =
    RoutingRequest_Policy_POLICY_RECOMMEND;
  static const Policy POLICY_SHORTEST_DISTANCE =
    RoutingRequest_Policy_POLICY_SHORTEST_DISTANCE;
  static const Policy POLICY_SHORTEST_TIME =
    RoutingRequest_Policy_POLICY_SHORTEST_TIME;
  static const Policy POLICY_SHORTEST_TOLL =
    RoutingRequest_Policy_POLICY_SHORTEST_TOLL;
  static const Policy POLICY_SHORTEST_HIGHWAY =
    RoutingRequest_Policy_POLICY_SHORTEST_HIGHWAY;
  static inline bool Policy_IsValid(int value) {
    return RoutingRequest_Policy_IsValid(value);
  }
  static const Policy Policy_MIN =
    RoutingRequest_Policy_Policy_MIN;
  static const Policy Policy_MAX =
    RoutingRequest_Policy_Policy_MAX;
  static const int Policy_ARRAYSIZE =
    RoutingRequest_Policy_Policy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Policy_descriptor() {
    return RoutingRequest_Policy_descriptor();
  }
  static inline const ::std::string& Policy_Name(Policy value) {
    return RoutingRequest_Policy_Name(value);
  }
  static inline bool Policy_Parse(const ::std::string& name,
      Policy* value) {
    return RoutingRequest_Policy_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .holo.map.proto.navigation.RoutingPosition middle_position = 4;
  int middle_position_size() const;
  void clear_middle_position();
  static const int kMiddlePositionFieldNumber = 4;
  ::holo::map::proto::navigation::RoutingPosition* mutable_middle_position(int index);
  ::google::protobuf::RepeatedPtrField< ::holo::map::proto::navigation::RoutingPosition >*
      mutable_middle_position();
  const ::holo::map::proto::navigation::RoutingPosition& middle_position(int index) const;
  ::holo::map::proto::navigation::RoutingPosition* add_middle_position();
  const ::google::protobuf::RepeatedPtrField< ::holo::map::proto::navigation::RoutingPosition >&
      middle_position() const;

  // optional .holo.map.proto.navigation.RoutingPosition start_position = 2;
  bool has_start_position() const;
  void clear_start_position();
  static const int kStartPositionFieldNumber = 2;
  private:
  const ::holo::map::proto::navigation::RoutingPosition& _internal_start_position() const;
  public:
  const ::holo::map::proto::navigation::RoutingPosition& start_position() const;
  ::holo::map::proto::navigation::RoutingPosition* release_start_position();
  ::holo::map::proto::navigation::RoutingPosition* mutable_start_position();
  void set_allocated_start_position(::holo::map::proto::navigation::RoutingPosition* start_position);

  // optional .holo.map.proto.navigation.RoutingPosition end_position = 3;
  bool has_end_position() const;
  void clear_end_position();
  static const int kEndPositionFieldNumber = 3;
  private:
  const ::holo::map::proto::navigation::RoutingPosition& _internal_end_position() const;
  public:
  const ::holo::map::proto::navigation::RoutingPosition& end_position() const;
  ::holo::map::proto::navigation::RoutingPosition* release_end_position();
  ::holo::map::proto::navigation::RoutingPosition* mutable_end_position();
  void set_allocated_end_position(::holo::map::proto::navigation::RoutingPosition* end_position);

  // optional .holo.map.proto.common.IntervalType part_path_type = 12;
  bool has_part_path_type() const;
  void clear_part_path_type();
  static const int kPartPathTypeFieldNumber = 12;
  private:
  const ::holo::map::proto::common::IntervalType& _internal_part_path_type() const;
  public:
  const ::holo::map::proto::common::IntervalType& part_path_type() const;
  ::holo::map::proto::common::IntervalType* release_part_path_type();
  ::holo::map::proto::common::IntervalType* mutable_part_path_type();
  void set_allocated_part_path_type(::holo::map::proto::common::IntervalType* part_path_type);

  // optional .holo.map.proto.common.IntervalFloat64 part_path_range = 13;
  bool has_part_path_range() const;
  void clear_part_path_range();
  static const int kPartPathRangeFieldNumber = 13;
  private:
  const ::holo::map::proto::common::IntervalFloat64& _internal_part_path_range() const;
  public:
  const ::holo::map::proto::common::IntervalFloat64& part_path_range() const;
  ::holo::map::proto::common::IntervalFloat64* release_part_path_range();
  ::holo::map::proto::common::IntervalFloat64* mutable_part_path_range();
  void set_allocated_part_path_range(::holo::map::proto::common::IntervalFloat64* part_path_range);

  // optional uint64 routing_request_id = 1;
  bool has_routing_request_id() const;
  void clear_routing_request_id();
  static const int kRoutingRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 routing_request_id() const;
  void set_routing_request_id(::google::protobuf::uint64 value);

  // optional .holo.map.proto.navigation.RoutingRequest.Policy policy = 10;
  bool has_policy() const;
  void clear_policy();
  static const int kPolicyFieldNumber = 10;
  ::holo::map::proto::navigation::RoutingRequest_Policy policy() const;
  void set_policy(::holo::map::proto::navigation::RoutingRequest_Policy value);

  // optional uint32 result_count = 11;
  bool has_result_count() const;
  void clear_result_count();
  static const int kResultCountFieldNumber = 11;
  ::google::protobuf::uint32 result_count() const;
  void set_result_count(::google::protobuf::uint32 value);

  // optional .holo.map.proto.navigation.RoutingRequest.Type type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::holo::map::proto::navigation::RoutingRequest_Type type() const;
  void set_type(::holo::map::proto::navigation::RoutingRequest_Type value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.navigation.RoutingRequest)
 private:
  void set_has_routing_request_id();
  void clear_has_routing_request_id();
  void set_has_start_position();
  void clear_has_start_position();
  void set_has_end_position();
  void clear_has_end_position();
  void set_has_type();
  void clear_has_type();
  void set_has_policy();
  void clear_has_policy();
  void set_has_result_count();
  void clear_has_result_count();
  void set_has_part_path_type();
  void clear_has_part_path_type();
  void set_has_part_path_range();
  void clear_has_part_path_range();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::holo::map::proto::navigation::RoutingPosition > middle_position_;
  ::holo::map::proto::navigation::RoutingPosition* start_position_;
  ::holo::map::proto::navigation::RoutingPosition* end_position_;
  ::holo::map::proto::common::IntervalType* part_path_type_;
  ::holo::map::proto::common::IntervalFloat64* part_path_range_;
  ::google::protobuf::uint64 routing_request_id_;
  int policy_;
  ::google::protobuf::uint32 result_count_;
  int type_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoutingRequest

// optional uint64 routing_request_id = 1;
inline bool RoutingRequest::has_routing_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoutingRequest::set_has_routing_request_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoutingRequest::clear_has_routing_request_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoutingRequest::clear_routing_request_id() {
  routing_request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_routing_request_id();
}
inline ::google::protobuf::uint64 RoutingRequest::routing_request_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.routing_request_id)
  return routing_request_id_;
}
inline void RoutingRequest::set_routing_request_id(::google::protobuf::uint64 value) {
  set_has_routing_request_id();
  routing_request_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingRequest.routing_request_id)
}

// optional .holo.map.proto.navigation.RoutingPosition start_position = 2;
inline bool RoutingRequest::has_start_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoutingRequest::set_has_start_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoutingRequest::clear_has_start_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::holo::map::proto::navigation::RoutingPosition& RoutingRequest::_internal_start_position() const {
  return *start_position_;
}
inline const ::holo::map::proto::navigation::RoutingPosition& RoutingRequest::start_position() const {
  const ::holo::map::proto::navigation::RoutingPosition* p = start_position_;
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.start_position)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::navigation::RoutingPosition*>(
      &::holo::map::proto::navigation::_RoutingPosition_default_instance_);
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::release_start_position() {
  // @@protoc_insertion_point(field_release:holo.map.proto.navigation.RoutingRequest.start_position)
  clear_has_start_position();
  ::holo::map::proto::navigation::RoutingPosition* temp = start_position_;
  start_position_ = NULL;
  return temp;
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::mutable_start_position() {
  set_has_start_position();
  if (start_position_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::navigation::RoutingPosition>(GetArenaNoVirtual());
    start_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingRequest.start_position)
  return start_position_;
}
inline void RoutingRequest::set_allocated_start_position(::holo::map::proto::navigation::RoutingPosition* start_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_position_);
  }
  if (start_position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_position, submessage_arena);
    }
    set_has_start_position();
  } else {
    clear_has_start_position();
  }
  start_position_ = start_position;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.navigation.RoutingRequest.start_position)
}

// optional .holo.map.proto.navigation.RoutingPosition end_position = 3;
inline bool RoutingRequest::has_end_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoutingRequest::set_has_end_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoutingRequest::clear_has_end_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::holo::map::proto::navigation::RoutingPosition& RoutingRequest::_internal_end_position() const {
  return *end_position_;
}
inline const ::holo::map::proto::navigation::RoutingPosition& RoutingRequest::end_position() const {
  const ::holo::map::proto::navigation::RoutingPosition* p = end_position_;
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.end_position)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::navigation::RoutingPosition*>(
      &::holo::map::proto::navigation::_RoutingPosition_default_instance_);
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::release_end_position() {
  // @@protoc_insertion_point(field_release:holo.map.proto.navigation.RoutingRequest.end_position)
  clear_has_end_position();
  ::holo::map::proto::navigation::RoutingPosition* temp = end_position_;
  end_position_ = NULL;
  return temp;
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::mutable_end_position() {
  set_has_end_position();
  if (end_position_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::navigation::RoutingPosition>(GetArenaNoVirtual());
    end_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingRequest.end_position)
  return end_position_;
}
inline void RoutingRequest::set_allocated_end_position(::holo::map::proto::navigation::RoutingPosition* end_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_position_);
  }
  if (end_position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_position, submessage_arena);
    }
    set_has_end_position();
  } else {
    clear_has_end_position();
  }
  end_position_ = end_position;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.navigation.RoutingRequest.end_position)
}

// repeated .holo.map.proto.navigation.RoutingPosition middle_position = 4;
inline int RoutingRequest::middle_position_size() const {
  return middle_position_.size();
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::mutable_middle_position(int index) {
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingRequest.middle_position)
  return middle_position_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::holo::map::proto::navigation::RoutingPosition >*
RoutingRequest::mutable_middle_position() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.navigation.RoutingRequest.middle_position)
  return &middle_position_;
}
inline const ::holo::map::proto::navigation::RoutingPosition& RoutingRequest::middle_position(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.middle_position)
  return middle_position_.Get(index);
}
inline ::holo::map::proto::navigation::RoutingPosition* RoutingRequest::add_middle_position() {
  // @@protoc_insertion_point(field_add:holo.map.proto.navigation.RoutingRequest.middle_position)
  return middle_position_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::holo::map::proto::navigation::RoutingPosition >&
RoutingRequest::middle_position() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.navigation.RoutingRequest.middle_position)
  return middle_position_;
}

// optional .holo.map.proto.navigation.RoutingRequest.Type type = 5;
inline bool RoutingRequest::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoutingRequest::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoutingRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoutingRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::holo::map::proto::navigation::RoutingRequest_Type RoutingRequest::type() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.type)
  return static_cast< ::holo::map::proto::navigation::RoutingRequest_Type >(type_);
}
inline void RoutingRequest::set_type(::holo::map::proto::navigation::RoutingRequest_Type value) {
  assert(::holo::map::proto::navigation::RoutingRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingRequest.type)
}

// optional .holo.map.proto.navigation.RoutingRequest.Policy policy = 10;
inline bool RoutingRequest::has_policy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoutingRequest::set_has_policy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoutingRequest::clear_has_policy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoutingRequest::clear_policy() {
  policy_ = 0;
  clear_has_policy();
}
inline ::holo::map::proto::navigation::RoutingRequest_Policy RoutingRequest::policy() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.policy)
  return static_cast< ::holo::map::proto::navigation::RoutingRequest_Policy >(policy_);
}
inline void RoutingRequest::set_policy(::holo::map::proto::navigation::RoutingRequest_Policy value) {
  assert(::holo::map::proto::navigation::RoutingRequest_Policy_IsValid(value));
  set_has_policy();
  policy_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingRequest.policy)
}

// optional uint32 result_count = 11;
inline bool RoutingRequest::has_result_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoutingRequest::set_has_result_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoutingRequest::clear_has_result_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoutingRequest::clear_result_count() {
  result_count_ = 0u;
  clear_has_result_count();
}
inline ::google::protobuf::uint32 RoutingRequest::result_count() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.result_count)
  return result_count_;
}
inline void RoutingRequest::set_result_count(::google::protobuf::uint32 value) {
  set_has_result_count();
  result_count_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingRequest.result_count)
}

// optional .holo.map.proto.common.IntervalType part_path_type = 12;
inline bool RoutingRequest::has_part_path_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoutingRequest::set_has_part_path_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoutingRequest::clear_has_part_path_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::holo::map::proto::common::IntervalType& RoutingRequest::_internal_part_path_type() const {
  return *part_path_type_;
}
inline const ::holo::map::proto::common::IntervalType& RoutingRequest::part_path_type() const {
  const ::holo::map::proto::common::IntervalType* p = part_path_type_;
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.part_path_type)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::common::IntervalType*>(
      &::holo::map::proto::common::_IntervalType_default_instance_);
}
inline ::holo::map::proto::common::IntervalType* RoutingRequest::release_part_path_type() {
  // @@protoc_insertion_point(field_release:holo.map.proto.navigation.RoutingRequest.part_path_type)
  clear_has_part_path_type();
  ::holo::map::proto::common::IntervalType* temp = part_path_type_;
  part_path_type_ = NULL;
  return temp;
}
inline ::holo::map::proto::common::IntervalType* RoutingRequest::mutable_part_path_type() {
  set_has_part_path_type();
  if (part_path_type_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::common::IntervalType>(GetArenaNoVirtual());
    part_path_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingRequest.part_path_type)
  return part_path_type_;
}
inline void RoutingRequest::set_allocated_part_path_type(::holo::map::proto::common::IntervalType* part_path_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(part_path_type_);
  }
  if (part_path_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      part_path_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, part_path_type, submessage_arena);
    }
    set_has_part_path_type();
  } else {
    clear_has_part_path_type();
  }
  part_path_type_ = part_path_type;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.navigation.RoutingRequest.part_path_type)
}

// optional .holo.map.proto.common.IntervalFloat64 part_path_range = 13;
inline bool RoutingRequest::has_part_path_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoutingRequest::set_has_part_path_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoutingRequest::clear_has_part_path_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::holo::map::proto::common::IntervalFloat64& RoutingRequest::_internal_part_path_range() const {
  return *part_path_range_;
}
inline const ::holo::map::proto::common::IntervalFloat64& RoutingRequest::part_path_range() const {
  const ::holo::map::proto::common::IntervalFloat64* p = part_path_range_;
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingRequest.part_path_range)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::common::IntervalFloat64*>(
      &::holo::map::proto::common::_IntervalFloat64_default_instance_);
}
inline ::holo::map::proto::common::IntervalFloat64* RoutingRequest::release_part_path_range() {
  // @@protoc_insertion_point(field_release:holo.map.proto.navigation.RoutingRequest.part_path_range)
  clear_has_part_path_range();
  ::holo::map::proto::common::IntervalFloat64* temp = part_path_range_;
  part_path_range_ = NULL;
  return temp;
}
inline ::holo::map::proto::common::IntervalFloat64* RoutingRequest::mutable_part_path_range() {
  set_has_part_path_range();
  if (part_path_range_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::common::IntervalFloat64>(GetArenaNoVirtual());
    part_path_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingRequest.part_path_range)
  return part_path_range_;
}
inline void RoutingRequest::set_allocated_part_path_range(::holo::map::proto::common::IntervalFloat64* part_path_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(part_path_range_);
  }
  if (part_path_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      part_path_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, part_path_range, submessage_arena);
    }
    set_has_part_path_range();
  } else {
    clear_has_part_path_range();
  }
  part_path_range_ = part_path_range;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.navigation.RoutingRequest.part_path_range)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace navigation
}  // namespace proto
}  // namespace map
}  // namespace holo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::holo::map::proto::navigation::RoutingRequest_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::holo::map::proto::navigation::RoutingRequest_Type>() {
  return ::holo::map::proto::navigation::RoutingRequest_Type_descriptor();
}
template <> struct is_proto_enum< ::holo::map::proto::navigation::RoutingRequest_Policy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::holo::map::proto::navigation::RoutingRequest_Policy>() {
  return ::holo::map::proto::navigation::RoutingRequest_Policy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5frequest_2eproto
