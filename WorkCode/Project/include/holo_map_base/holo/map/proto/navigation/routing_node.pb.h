// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/navigation/routing_node.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "holo/map/proto/common/geo_point.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto
namespace holo {
namespace map {
namespace proto {
namespace navigation {
class RoutingNode;
class RoutingNodeDefaultTypeInternal;
extern RoutingNodeDefaultTypeInternal _RoutingNode_default_instance_;
}  // namespace navigation
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::navigation::RoutingNode* Arena::CreateMaybeMessage<::holo::map::proto::navigation::RoutingNode>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace navigation {

// ===================================================================

class RoutingNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.navigation.RoutingNode) */ {
 public:
  RoutingNode();
  virtual ~RoutingNode();

  RoutingNode(const RoutingNode& from);

  inline RoutingNode& operator=(const RoutingNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutingNode(RoutingNode&& from) noexcept
    : RoutingNode() {
    *this = ::std::move(from);
  }

  inline RoutingNode& operator=(RoutingNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoutingNode* internal_default_instance() {
    return reinterpret_cast<const RoutingNode*>(
               &_RoutingNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RoutingNode* other);
  friend void swap(RoutingNode& a, RoutingNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutingNode* New() const final {
    return CreateMaybeMessage<RoutingNode>(NULL);
  }

  RoutingNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoutingNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoutingNode& from);
  void MergeFrom(const RoutingNode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutingNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 incoming_routing_edge_ids = 4 [packed = true];
  int incoming_routing_edge_ids_size() const;
  void clear_incoming_routing_edge_ids();
  static const int kIncomingRoutingEdgeIdsFieldNumber = 4;
  ::google::protobuf::uint64 incoming_routing_edge_ids(int index) const;
  void set_incoming_routing_edge_ids(int index, ::google::protobuf::uint64 value);
  void add_incoming_routing_edge_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      incoming_routing_edge_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_incoming_routing_edge_ids();

  // repeated uint64 outgoing_routing_edge_ids = 5 [packed = true];
  int outgoing_routing_edge_ids_size() const;
  void clear_outgoing_routing_edge_ids();
  static const int kOutgoingRoutingEdgeIdsFieldNumber = 5;
  ::google::protobuf::uint64 outgoing_routing_edge_ids(int index) const;
  void set_outgoing_routing_edge_ids(int index, ::google::protobuf::uint64 value);
  void add_outgoing_routing_edge_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      outgoing_routing_edge_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_outgoing_routing_edge_ids();

  // optional .holo.map.proto.common.GeoPoint position = 9;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 9;
  private:
  const ::holo::map::proto::common::GeoPoint& _internal_position() const;
  public:
  const ::holo::map::proto::common::GeoPoint& position() const;
  ::holo::map::proto::common::GeoPoint* release_position();
  ::holo::map::proto::common::GeoPoint* mutable_position();
  void set_allocated_position(::holo::map::proto::common::GeoPoint* position);

  // optional uint64 routing_node_id = 1;
  bool has_routing_node_id() const;
  void clear_routing_node_id();
  static const int kRoutingNodeIdFieldNumber = 1;
  ::google::protobuf::uint64 routing_node_id() const;
  void set_routing_node_id(::google::protobuf::uint64 value);

  // optional uint64 lane_id = 2;
  bool has_lane_id() const;
  void clear_lane_id();
  static const int kLaneIdFieldNumber = 2;
  ::google::protobuf::uint64 lane_id() const;
  void set_lane_id(::google::protobuf::uint64 value);

  // optional uint64 link_id = 3;
  bool has_link_id() const;
  void clear_link_id();
  static const int kLinkIdFieldNumber = 3;
  ::google::protobuf::uint64 link_id() const;
  void set_link_id(::google::protobuf::uint64 value);

  // optional double in_cost = 6;
  bool has_in_cost() const;
  void clear_in_cost();
  static const int kInCostFieldNumber = 6;
  double in_cost() const;
  void set_in_cost(double value);

  // optional double out_cost = 7;
  bool has_out_cost() const;
  void clear_out_cost();
  static const int kOutCostFieldNumber = 7;
  double out_cost() const;
  void set_out_cost(double value);

  // optional uint64 routing_graph_id = 8;
  bool has_routing_graph_id() const;
  void clear_routing_graph_id();
  static const int kRoutingGraphIdFieldNumber = 8;
  ::google::protobuf::uint64 routing_graph_id() const;
  void set_routing_graph_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.navigation.RoutingNode)
 private:
  void set_has_routing_node_id();
  void clear_has_routing_node_id();
  void set_has_lane_id();
  void clear_has_lane_id();
  void set_has_link_id();
  void clear_has_link_id();
  void set_has_in_cost();
  void clear_has_in_cost();
  void set_has_out_cost();
  void clear_has_out_cost();
  void set_has_routing_graph_id();
  void clear_has_routing_graph_id();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > incoming_routing_edge_ids_;
  mutable int _incoming_routing_edge_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > outgoing_routing_edge_ids_;
  mutable int _outgoing_routing_edge_ids_cached_byte_size_;
  ::holo::map::proto::common::GeoPoint* position_;
  ::google::protobuf::uint64 routing_node_id_;
  ::google::protobuf::uint64 lane_id_;
  ::google::protobuf::uint64 link_id_;
  double in_cost_;
  double out_cost_;
  ::google::protobuf::uint64 routing_graph_id_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoutingNode

// optional uint64 routing_node_id = 1;
inline bool RoutingNode::has_routing_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoutingNode::set_has_routing_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoutingNode::clear_has_routing_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoutingNode::clear_routing_node_id() {
  routing_node_id_ = GOOGLE_ULONGLONG(0);
  clear_has_routing_node_id();
}
inline ::google::protobuf::uint64 RoutingNode::routing_node_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.routing_node_id)
  return routing_node_id_;
}
inline void RoutingNode::set_routing_node_id(::google::protobuf::uint64 value) {
  set_has_routing_node_id();
  routing_node_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.routing_node_id)
}

// optional uint64 lane_id = 2;
inline bool RoutingNode::has_lane_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoutingNode::set_has_lane_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoutingNode::clear_has_lane_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoutingNode::clear_lane_id() {
  lane_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lane_id();
}
inline ::google::protobuf::uint64 RoutingNode::lane_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.lane_id)
  return lane_id_;
}
inline void RoutingNode::set_lane_id(::google::protobuf::uint64 value) {
  set_has_lane_id();
  lane_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.lane_id)
}

// optional uint64 link_id = 3;
inline bool RoutingNode::has_link_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoutingNode::set_has_link_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoutingNode::clear_has_link_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoutingNode::clear_link_id() {
  link_id_ = GOOGLE_ULONGLONG(0);
  clear_has_link_id();
}
inline ::google::protobuf::uint64 RoutingNode::link_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.link_id)
  return link_id_;
}
inline void RoutingNode::set_link_id(::google::protobuf::uint64 value) {
  set_has_link_id();
  link_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.link_id)
}

// repeated uint64 incoming_routing_edge_ids = 4 [packed = true];
inline int RoutingNode::incoming_routing_edge_ids_size() const {
  return incoming_routing_edge_ids_.size();
}
inline void RoutingNode::clear_incoming_routing_edge_ids() {
  incoming_routing_edge_ids_.Clear();
}
inline ::google::protobuf::uint64 RoutingNode::incoming_routing_edge_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.incoming_routing_edge_ids)
  return incoming_routing_edge_ids_.Get(index);
}
inline void RoutingNode::set_incoming_routing_edge_ids(int index, ::google::protobuf::uint64 value) {
  incoming_routing_edge_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.incoming_routing_edge_ids)
}
inline void RoutingNode::add_incoming_routing_edge_ids(::google::protobuf::uint64 value) {
  incoming_routing_edge_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.navigation.RoutingNode.incoming_routing_edge_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RoutingNode::incoming_routing_edge_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.navigation.RoutingNode.incoming_routing_edge_ids)
  return incoming_routing_edge_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RoutingNode::mutable_incoming_routing_edge_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.navigation.RoutingNode.incoming_routing_edge_ids)
  return &incoming_routing_edge_ids_;
}

// repeated uint64 outgoing_routing_edge_ids = 5 [packed = true];
inline int RoutingNode::outgoing_routing_edge_ids_size() const {
  return outgoing_routing_edge_ids_.size();
}
inline void RoutingNode::clear_outgoing_routing_edge_ids() {
  outgoing_routing_edge_ids_.Clear();
}
inline ::google::protobuf::uint64 RoutingNode::outgoing_routing_edge_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.outgoing_routing_edge_ids)
  return outgoing_routing_edge_ids_.Get(index);
}
inline void RoutingNode::set_outgoing_routing_edge_ids(int index, ::google::protobuf::uint64 value) {
  outgoing_routing_edge_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.outgoing_routing_edge_ids)
}
inline void RoutingNode::add_outgoing_routing_edge_ids(::google::protobuf::uint64 value) {
  outgoing_routing_edge_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.navigation.RoutingNode.outgoing_routing_edge_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RoutingNode::outgoing_routing_edge_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.navigation.RoutingNode.outgoing_routing_edge_ids)
  return outgoing_routing_edge_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RoutingNode::mutable_outgoing_routing_edge_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.navigation.RoutingNode.outgoing_routing_edge_ids)
  return &outgoing_routing_edge_ids_;
}

// optional double in_cost = 6;
inline bool RoutingNode::has_in_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoutingNode::set_has_in_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoutingNode::clear_has_in_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoutingNode::clear_in_cost() {
  in_cost_ = 0;
  clear_has_in_cost();
}
inline double RoutingNode::in_cost() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.in_cost)
  return in_cost_;
}
inline void RoutingNode::set_in_cost(double value) {
  set_has_in_cost();
  in_cost_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.in_cost)
}

// optional double out_cost = 7;
inline bool RoutingNode::has_out_cost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoutingNode::set_has_out_cost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoutingNode::clear_has_out_cost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoutingNode::clear_out_cost() {
  out_cost_ = 0;
  clear_has_out_cost();
}
inline double RoutingNode::out_cost() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.out_cost)
  return out_cost_;
}
inline void RoutingNode::set_out_cost(double value) {
  set_has_out_cost();
  out_cost_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.out_cost)
}

// optional uint64 routing_graph_id = 8;
inline bool RoutingNode::has_routing_graph_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoutingNode::set_has_routing_graph_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoutingNode::clear_has_routing_graph_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoutingNode::clear_routing_graph_id() {
  routing_graph_id_ = GOOGLE_ULONGLONG(0);
  clear_has_routing_graph_id();
}
inline ::google::protobuf::uint64 RoutingNode::routing_graph_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.routing_graph_id)
  return routing_graph_id_;
}
inline void RoutingNode::set_routing_graph_id(::google::protobuf::uint64 value) {
  set_has_routing_graph_id();
  routing_graph_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.navigation.RoutingNode.routing_graph_id)
}

// optional .holo.map.proto.common.GeoPoint position = 9;
inline bool RoutingNode::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoutingNode::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoutingNode::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::holo::map::proto::common::GeoPoint& RoutingNode::_internal_position() const {
  return *position_;
}
inline const ::holo::map::proto::common::GeoPoint& RoutingNode::position() const {
  const ::holo::map::proto::common::GeoPoint* p = position_;
  // @@protoc_insertion_point(field_get:holo.map.proto.navigation.RoutingNode.position)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::common::GeoPoint*>(
      &::holo::map::proto::common::_GeoPoint_default_instance_);
}
inline ::holo::map::proto::common::GeoPoint* RoutingNode::release_position() {
  // @@protoc_insertion_point(field_release:holo.map.proto.navigation.RoutingNode.position)
  clear_has_position();
  ::holo::map::proto::common::GeoPoint* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::holo::map::proto::common::GeoPoint* RoutingNode::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::common::GeoPoint>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.navigation.RoutingNode.position)
  return position_;
}
inline void RoutingNode::set_allocated_position(::holo::map::proto::common::GeoPoint* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
  } else {
    clear_has_position();
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.navigation.RoutingNode.position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace navigation
}  // namespace proto
}  // namespace map
}  // namespace holo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fnavigation_2frouting_5fnode_2eproto
