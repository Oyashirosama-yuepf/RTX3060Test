// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: holo/map/proto/base/tile.proto

#ifndef PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fbase_2ftile_2eproto
#define PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fbase_2ftile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "holo/map/proto/common/geo_box.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_holo_2fmap_2fproto_2fbase_2ftile_2eproto 

namespace protobuf_holo_2fmap_2fproto_2fbase_2ftile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_holo_2fmap_2fproto_2fbase_2ftile_2eproto
namespace holo {
namespace map {
namespace proto {
namespace base {
class Tile;
class TileDefaultTypeInternal;
extern TileDefaultTypeInternal _Tile_default_instance_;
}  // namespace base
}  // namespace proto
}  // namespace map
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::map::proto::base::Tile* Arena::CreateMaybeMessage<::holo::map::proto::base::Tile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace map {
namespace proto {
namespace base {

// ===================================================================

class Tile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.map.proto.base.Tile) */ {
 public:
  Tile();
  virtual ~Tile();

  Tile(const Tile& from);

  inline Tile& operator=(const Tile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tile(Tile&& from) noexcept
    : Tile() {
    *this = ::std::move(from);
  }

  inline Tile& operator=(Tile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tile* internal_default_instance() {
    return reinterpret_cast<const Tile*>(
               &_Tile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Tile* other);
  friend void swap(Tile& a, Tile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tile* New() const final {
    return CreateMaybeMessage<Tile>(NULL);
  }

  Tile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Tile& from);
  void MergeFrom(const Tile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Tile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 road_ids = 3 [packed = true];
  int road_ids_size() const;
  void clear_road_ids();
  static const int kRoadIdsFieldNumber = 3;
  ::google::protobuf::uint64 road_ids(int index) const;
  void set_road_ids(int index, ::google::protobuf::uint64 value);
  void add_road_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      road_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_road_ids();

  // repeated uint64 lane_ids = 4 [packed = true];
  int lane_ids_size() const;
  void clear_lane_ids();
  static const int kLaneIdsFieldNumber = 4;
  ::google::protobuf::uint64 lane_ids(int index) const;
  void set_lane_ids(int index, ::google::protobuf::uint64 value);
  void add_lane_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      lane_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_lane_ids();

  // repeated uint64 lane_boundary_ids = 5 [packed = true];
  int lane_boundary_ids_size() const;
  void clear_lane_boundary_ids();
  static const int kLaneBoundaryIdsFieldNumber = 5;
  ::google::protobuf::uint64 lane_boundary_ids(int index) const;
  void set_lane_boundary_ids(int index, ::google::protobuf::uint64 value);
  void add_lane_boundary_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      lane_boundary_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_lane_boundary_ids();

  // repeated uint64 object_info_ids = 6 [packed = true];
  int object_info_ids_size() const;
  void clear_object_info_ids();
  static const int kObjectInfoIdsFieldNumber = 6;
  ::google::protobuf::uint64 object_info_ids(int index) const;
  void set_object_info_ids(int index, ::google::protobuf::uint64 value);
  void add_object_info_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_info_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_info_ids();

  // repeated uint64 position_ids = 10 [packed = true];
  int position_ids_size() const;
  void clear_position_ids();
  static const int kPositionIdsFieldNumber = 10;
  ::google::protobuf::uint64 position_ids(int index) const;
  void set_position_ids(int index, ::google::protobuf::uint64 value);
  void add_position_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      position_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_position_ids();

  // repeated uint64 ground_roi_ids = 11 [packed = true];
  int ground_roi_ids_size() const;
  void clear_ground_roi_ids();
  static const int kGroundRoiIdsFieldNumber = 11;
  ::google::protobuf::uint64 ground_roi_ids(int index) const;
  void set_ground_roi_ids(int index, ::google::protobuf::uint64 value);
  void add_ground_roi_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ground_roi_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ground_roi_ids();

  // repeated uint64 ground_ids = 12 [packed = true];
  int ground_ids_size() const;
  void clear_ground_ids();
  static const int kGroundIdsFieldNumber = 12;
  ::google::protobuf::uint64 ground_ids(int index) const;
  void set_ground_ids(int index, ::google::protobuf::uint64 value);
  void add_ground_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ground_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ground_ids();

  // repeated uint64 connection_ids = 13 [packed = true];
  int connection_ids_size() const;
  void clear_connection_ids();
  static const int kConnectionIdsFieldNumber = 13;
  ::google::protobuf::uint64 connection_ids(int index) const;
  void set_connection_ids(int index, ::google::protobuf::uint64 value);
  void add_connection_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      connection_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_connection_ids();

  // repeated uint64 junction_ids = 16 [packed = true];
  int junction_ids_size() const;
  void clear_junction_ids();
  static const int kJunctionIdsFieldNumber = 16;
  ::google::protobuf::uint64 junction_ids(int index) const;
  void set_junction_ids(int index, ::google::protobuf::uint64 value);
  void add_junction_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      junction_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_junction_ids();

  // repeated uint64 routing_edge_ids = 17 [packed = true];
  int routing_edge_ids_size() const;
  void clear_routing_edge_ids();
  static const int kRoutingEdgeIdsFieldNumber = 17;
  ::google::protobuf::uint64 routing_edge_ids(int index) const;
  void set_routing_edge_ids(int index, ::google::protobuf::uint64 value);
  void add_routing_edge_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      routing_edge_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_routing_edge_ids();

  // repeated uint64 routing_node_ids = 18 [packed = true];
  int routing_node_ids_size() const;
  void clear_routing_node_ids();
  static const int kRoutingNodeIdsFieldNumber = 18;
  ::google::protobuf::uint64 routing_node_ids(int index) const;
  void set_routing_node_ids(int index, ::google::protobuf::uint64 value);
  void add_routing_node_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      routing_node_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_routing_node_ids();

  // repeated uint64 routing_graph_ids = 19 [packed = true];
  int routing_graph_ids_size() const;
  void clear_routing_graph_ids();
  static const int kRoutingGraphIdsFieldNumber = 19;
  ::google::protobuf::uint64 routing_graph_ids(int index) const;
  void set_routing_graph_ids(int index, ::google::protobuf::uint64 value);
  void add_routing_graph_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      routing_graph_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_routing_graph_ids();

  // repeated uint64 sd_node_ids = 20 [packed = true];
  int sd_node_ids_size() const;
  void clear_sd_node_ids();
  static const int kSdNodeIdsFieldNumber = 20;
  ::google::protobuf::uint64 sd_node_ids(int index) const;
  void set_sd_node_ids(int index, ::google::protobuf::uint64 value);
  void add_sd_node_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      sd_node_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_sd_node_ids();

  // repeated uint64 sd_road_ids = 21 [packed = true];
  int sd_road_ids_size() const;
  void clear_sd_road_ids();
  static const int kSdRoadIdsFieldNumber = 21;
  ::google::protobuf::uint64 sd_road_ids(int index) const;
  void set_sd_road_ids(int index, ::google::protobuf::uint64 value);
  void add_sd_road_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      sd_road_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_sd_road_ids();

  // repeated uint64 lane_group_ids = 29 [packed = true];
  int lane_group_ids_size() const;
  void clear_lane_group_ids();
  static const int kLaneGroupIdsFieldNumber = 29;
  ::google::protobuf::uint64 lane_group_ids(int index) const;
  void set_lane_group_ids(int index, ::google::protobuf::uint64 value);
  void add_lane_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      lane_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_lane_group_ids();

  // repeated uint64 geofence_ids = 30 [packed = true];
  int geofence_ids_size() const;
  void clear_geofence_ids();
  static const int kGeofenceIdsFieldNumber = 30;
  ::google::protobuf::uint64 geofence_ids(int index) const;
  void set_geofence_ids(int index, ::google::protobuf::uint64 value);
  void add_geofence_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      geofence_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_geofence_ids();

  // repeated uint64 object_linear_info_ids = 40 [packed = true];
  int object_linear_info_ids_size() const;
  void clear_object_linear_info_ids();
  static const int kObjectLinearInfoIdsFieldNumber = 40;
  ::google::protobuf::uint64 object_linear_info_ids(int index) const;
  void set_object_linear_info_ids(int index, ::google::protobuf::uint64 value);
  void add_object_linear_info_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_linear_info_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_linear_info_ids();

  // repeated uint64 object_regional_info_ids = 41 [packed = true];
  int object_regional_info_ids_size() const;
  void clear_object_regional_info_ids();
  static const int kObjectRegionalInfoIdsFieldNumber = 41;
  ::google::protobuf::uint64 object_regional_info_ids(int index) const;
  void set_object_regional_info_ids(int index, ::google::protobuf::uint64 value);
  void add_object_regional_info_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_regional_info_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_regional_info_ids();

  // repeated uint64 object_stop_line_ids = 42 [packed = true];
  int object_stop_line_ids_size() const;
  void clear_object_stop_line_ids();
  static const int kObjectStopLineIdsFieldNumber = 42;
  ::google::protobuf::uint64 object_stop_line_ids(int index) const;
  void set_object_stop_line_ids(int index, ::google::protobuf::uint64 value);
  void add_object_stop_line_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_stop_line_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_stop_line_ids();

  // repeated uint64 object_traffic_light_ids = 43 [packed = true];
  int object_traffic_light_ids_size() const;
  void clear_object_traffic_light_ids();
  static const int kObjectTrafficLightIdsFieldNumber = 43;
  ::google::protobuf::uint64 object_traffic_light_ids(int index) const;
  void set_object_traffic_light_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_light_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_light_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_light_ids();

  // repeated uint64 object_traffic_light_group_ids = 44 [packed = true];
  int object_traffic_light_group_ids_size() const;
  void clear_object_traffic_light_group_ids();
  static const int kObjectTrafficLightGroupIdsFieldNumber = 44;
  ::google::protobuf::uint64 object_traffic_light_group_ids(int index) const;
  void set_object_traffic_light_group_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_light_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_light_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_light_group_ids();

  // repeated uint64 object_pedestrian_crossing_ids = 45 [packed = true];
  int object_pedestrian_crossing_ids_size() const;
  void clear_object_pedestrian_crossing_ids();
  static const int kObjectPedestrianCrossingIdsFieldNumber = 45;
  ::google::protobuf::uint64 object_pedestrian_crossing_ids(int index) const;
  void set_object_pedestrian_crossing_ids(int index, ::google::protobuf::uint64 value);
  void add_object_pedestrian_crossing_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_pedestrian_crossing_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_pedestrian_crossing_ids();

  // repeated uint64 object_traffic_sign_ids = 46 [packed = true];
  int object_traffic_sign_ids_size() const;
  void clear_object_traffic_sign_ids();
  static const int kObjectTrafficSignIdsFieldNumber = 46;
  ::google::protobuf::uint64 object_traffic_sign_ids(int index) const;
  void set_object_traffic_sign_ids(int index, ::google::protobuf::uint64 value);
  void add_object_traffic_sign_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_traffic_sign_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_traffic_sign_ids();

  // repeated uint64 object_parking_lot_ids = 47 [packed = true];
  int object_parking_lot_ids_size() const;
  void clear_object_parking_lot_ids();
  static const int kObjectParkingLotIdsFieldNumber = 47;
  ::google::protobuf::uint64 object_parking_lot_ids(int index) const;
  void set_object_parking_lot_ids(int index, ::google::protobuf::uint64 value);
  void add_object_parking_lot_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_parking_lot_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_parking_lot_ids();

  // repeated uint64 object_parking_floor_ids = 48 [packed = true];
  int object_parking_floor_ids_size() const;
  void clear_object_parking_floor_ids();
  static const int kObjectParkingFloorIdsFieldNumber = 48;
  ::google::protobuf::uint64 object_parking_floor_ids(int index) const;
  void set_object_parking_floor_ids(int index, ::google::protobuf::uint64 value);
  void add_object_parking_floor_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_parking_floor_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_parking_floor_ids();

  // repeated uint64 object_parking_poi_ids = 49 [packed = true];
  int object_parking_poi_ids_size() const;
  void clear_object_parking_poi_ids();
  static const int kObjectParkingPoiIdsFieldNumber = 49;
  ::google::protobuf::uint64 object_parking_poi_ids(int index) const;
  void set_object_parking_poi_ids(int index, ::google::protobuf::uint64 value);
  void add_object_parking_poi_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_parking_poi_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_parking_poi_ids();

  // repeated uint64 object_parking_background_ids = 50 [packed = true];
  int object_parking_background_ids_size() const;
  void clear_object_parking_background_ids();
  static const int kObjectParkingBackgroundIdsFieldNumber = 50;
  ::google::protobuf::uint64 object_parking_background_ids(int index) const;
  void set_object_parking_background_ids(int index, ::google::protobuf::uint64 value);
  void add_object_parking_background_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_parking_background_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_parking_background_ids();

  // repeated uint64 quasi_dynamic_lane_ids = 51 [packed = true];
  int quasi_dynamic_lane_ids_size() const;
  void clear_quasi_dynamic_lane_ids();
  static const int kQuasiDynamicLaneIdsFieldNumber = 51;
  ::google::protobuf::uint64 quasi_dynamic_lane_ids(int index) const;
  void set_quasi_dynamic_lane_ids(int index, ::google::protobuf::uint64 value);
  void add_quasi_dynamic_lane_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      quasi_dynamic_lane_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_quasi_dynamic_lane_ids();

  // repeated uint64 quasi_dynamic_lane_group_ids = 52 [packed = true];
  int quasi_dynamic_lane_group_ids_size() const;
  void clear_quasi_dynamic_lane_group_ids();
  static const int kQuasiDynamicLaneGroupIdsFieldNumber = 52;
  ::google::protobuf::uint64 quasi_dynamic_lane_group_ids(int index) const;
  void set_quasi_dynamic_lane_group_ids(int index, ::google::protobuf::uint64 value);
  void add_quasi_dynamic_lane_group_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      quasi_dynamic_lane_group_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_quasi_dynamic_lane_group_ids();

  // repeated uint64 quasi_dynamic_region_ids = 53 [packed = true];
  int quasi_dynamic_region_ids_size() const;
  void clear_quasi_dynamic_region_ids();
  static const int kQuasiDynamicRegionIdsFieldNumber = 53;
  ::google::protobuf::uint64 quasi_dynamic_region_ids(int index) const;
  void set_quasi_dynamic_region_ids(int index, ::google::protobuf::uint64 value);
  void add_quasi_dynamic_region_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      quasi_dynamic_region_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_quasi_dynamic_region_ids();

  // repeated uint64 object_parking_space_ids = 54 [packed = true];
  int object_parking_space_ids_size() const;
  void clear_object_parking_space_ids();
  static const int kObjectParkingSpaceIdsFieldNumber = 54;
  ::google::protobuf::uint64 object_parking_space_ids(int index) const;
  void set_object_parking_space_ids(int index, ::google::protobuf::uint64 value);
  void add_object_parking_space_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_parking_space_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_parking_space_ids();

  // repeated uint64 routing_path_ids = 55 [packed = true];
  int routing_path_ids_size() const;
  void clear_routing_path_ids();
  static const int kRoutingPathIdsFieldNumber = 55;
  ::google::protobuf::uint64 routing_path_ids(int index) const;
  void set_routing_path_ids(int index, ::google::protobuf::uint64 value);
  void add_routing_path_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      routing_path_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_routing_path_ids();

  // repeated uint64 intersection_ids = 56 [packed = true];
  int intersection_ids_size() const;
  void clear_intersection_ids();
  static const int kIntersectionIdsFieldNumber = 56;
  ::google::protobuf::uint64 intersection_ids(int index) const;
  void set_intersection_ids(int index, ::google::protobuf::uint64 value);
  void add_intersection_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      intersection_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_intersection_ids();

  // repeated uint64 object_safe_island_ids = 57 [packed = true];
  int object_safe_island_ids_size() const;
  void clear_object_safe_island_ids();
  static const int kObjectSafeIslandIdsFieldNumber = 57;
  ::google::protobuf::uint64 object_safe_island_ids(int index) const;
  void set_object_safe_island_ids(int index, ::google::protobuf::uint64 value);
  void add_object_safe_island_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      object_safe_island_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_object_safe_island_ids();

  // optional .holo.map.proto.common.GeoBox region = 33;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 33;
  private:
  const ::holo::map::proto::common::GeoBox& _internal_region() const;
  public:
  const ::holo::map::proto::common::GeoBox& region() const;
  ::holo::map::proto::common::GeoBox* release_region();
  ::holo::map::proto::common::GeoBox* mutable_region();
  void set_allocated_region(::holo::map::proto::common::GeoBox* region);

  // optional uint64 tile_id = 1;
  bool has_tile_id() const;
  void clear_tile_id();
  static const int kTileIdFieldNumber = 1;
  ::google::protobuf::uint64 tile_id() const;
  void set_tile_id(::google::protobuf::uint64 value);

  // optional uint32 level = 26;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 26;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:holo.map.proto.base.Tile)
 private:
  void set_has_tile_id();
  void clear_has_tile_id();
  void set_has_level();
  void clear_has_level();
  void set_has_region();
  void clear_has_region();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > road_ids_;
  mutable int _road_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > lane_ids_;
  mutable int _lane_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > lane_boundary_ids_;
  mutable int _lane_boundary_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_info_ids_;
  mutable int _object_info_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > position_ids_;
  mutable int _position_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ground_roi_ids_;
  mutable int _ground_roi_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ground_ids_;
  mutable int _ground_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > connection_ids_;
  mutable int _connection_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > junction_ids_;
  mutable int _junction_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > routing_edge_ids_;
  mutable int _routing_edge_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > routing_node_ids_;
  mutable int _routing_node_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > routing_graph_ids_;
  mutable int _routing_graph_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > sd_node_ids_;
  mutable int _sd_node_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > sd_road_ids_;
  mutable int _sd_road_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > lane_group_ids_;
  mutable int _lane_group_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > geofence_ids_;
  mutable int _geofence_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_linear_info_ids_;
  mutable int _object_linear_info_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_regional_info_ids_;
  mutable int _object_regional_info_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_stop_line_ids_;
  mutable int _object_stop_line_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_light_ids_;
  mutable int _object_traffic_light_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_light_group_ids_;
  mutable int _object_traffic_light_group_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_pedestrian_crossing_ids_;
  mutable int _object_pedestrian_crossing_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_traffic_sign_ids_;
  mutable int _object_traffic_sign_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_parking_lot_ids_;
  mutable int _object_parking_lot_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_parking_floor_ids_;
  mutable int _object_parking_floor_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_parking_poi_ids_;
  mutable int _object_parking_poi_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_parking_background_ids_;
  mutable int _object_parking_background_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > quasi_dynamic_lane_ids_;
  mutable int _quasi_dynamic_lane_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > quasi_dynamic_lane_group_ids_;
  mutable int _quasi_dynamic_lane_group_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > quasi_dynamic_region_ids_;
  mutable int _quasi_dynamic_region_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_parking_space_ids_;
  mutable int _object_parking_space_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > routing_path_ids_;
  mutable int _routing_path_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > intersection_ids_;
  mutable int _intersection_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > object_safe_island_ids_;
  mutable int _object_safe_island_ids_cached_byte_size_;
  ::holo::map::proto::common::GeoBox* region_;
  ::google::protobuf::uint64 tile_id_;
  ::google::protobuf::uint32 level_;
  friend struct ::protobuf_holo_2fmap_2fproto_2fbase_2ftile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Tile

// optional uint64 tile_id = 1;
inline bool Tile::has_tile_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tile::set_has_tile_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tile::clear_has_tile_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tile::clear_tile_id() {
  tile_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tile_id();
}
inline ::google::protobuf::uint64 Tile::tile_id() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.tile_id)
  return tile_id_;
}
inline void Tile::set_tile_id(::google::protobuf::uint64 value) {
  set_has_tile_id();
  tile_id_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.tile_id)
}

// repeated uint64 road_ids = 3 [packed = true];
inline int Tile::road_ids_size() const {
  return road_ids_.size();
}
inline void Tile::clear_road_ids() {
  road_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::road_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.road_ids)
  return road_ids_.Get(index);
}
inline void Tile::set_road_ids(int index, ::google::protobuf::uint64 value) {
  road_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.road_ids)
}
inline void Tile::add_road_ids(::google::protobuf::uint64 value) {
  road_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.road_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::road_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.road_ids)
  return road_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_road_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.road_ids)
  return &road_ids_;
}

// repeated uint64 lane_ids = 4 [packed = true];
inline int Tile::lane_ids_size() const {
  return lane_ids_.size();
}
inline void Tile::clear_lane_ids() {
  lane_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::lane_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.lane_ids)
  return lane_ids_.Get(index);
}
inline void Tile::set_lane_ids(int index, ::google::protobuf::uint64 value) {
  lane_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.lane_ids)
}
inline void Tile::add_lane_ids(::google::protobuf::uint64 value) {
  lane_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.lane_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::lane_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.lane_ids)
  return lane_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_lane_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.lane_ids)
  return &lane_ids_;
}

// repeated uint64 lane_boundary_ids = 5 [packed = true];
inline int Tile::lane_boundary_ids_size() const {
  return lane_boundary_ids_.size();
}
inline void Tile::clear_lane_boundary_ids() {
  lane_boundary_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::lane_boundary_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.lane_boundary_ids)
  return lane_boundary_ids_.Get(index);
}
inline void Tile::set_lane_boundary_ids(int index, ::google::protobuf::uint64 value) {
  lane_boundary_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.lane_boundary_ids)
}
inline void Tile::add_lane_boundary_ids(::google::protobuf::uint64 value) {
  lane_boundary_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.lane_boundary_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::lane_boundary_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.lane_boundary_ids)
  return lane_boundary_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_lane_boundary_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.lane_boundary_ids)
  return &lane_boundary_ids_;
}

// repeated uint64 object_info_ids = 6 [packed = true];
inline int Tile::object_info_ids_size() const {
  return object_info_ids_.size();
}
inline void Tile::clear_object_info_ids() {
  object_info_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_info_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_info_ids)
  return object_info_ids_.Get(index);
}
inline void Tile::set_object_info_ids(int index, ::google::protobuf::uint64 value) {
  object_info_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_info_ids)
}
inline void Tile::add_object_info_ids(::google::protobuf::uint64 value) {
  object_info_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_info_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_info_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_info_ids)
  return object_info_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_info_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_info_ids)
  return &object_info_ids_;
}

// repeated uint64 position_ids = 10 [packed = true];
inline int Tile::position_ids_size() const {
  return position_ids_.size();
}
inline void Tile::clear_position_ids() {
  position_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::position_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.position_ids)
  return position_ids_.Get(index);
}
inline void Tile::set_position_ids(int index, ::google::protobuf::uint64 value) {
  position_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.position_ids)
}
inline void Tile::add_position_ids(::google::protobuf::uint64 value) {
  position_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.position_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::position_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.position_ids)
  return position_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_position_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.position_ids)
  return &position_ids_;
}

// repeated uint64 ground_roi_ids = 11 [packed = true];
inline int Tile::ground_roi_ids_size() const {
  return ground_roi_ids_.size();
}
inline void Tile::clear_ground_roi_ids() {
  ground_roi_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::ground_roi_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.ground_roi_ids)
  return ground_roi_ids_.Get(index);
}
inline void Tile::set_ground_roi_ids(int index, ::google::protobuf::uint64 value) {
  ground_roi_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.ground_roi_ids)
}
inline void Tile::add_ground_roi_ids(::google::protobuf::uint64 value) {
  ground_roi_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.ground_roi_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::ground_roi_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.ground_roi_ids)
  return ground_roi_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_ground_roi_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.ground_roi_ids)
  return &ground_roi_ids_;
}

// repeated uint64 ground_ids = 12 [packed = true];
inline int Tile::ground_ids_size() const {
  return ground_ids_.size();
}
inline void Tile::clear_ground_ids() {
  ground_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::ground_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.ground_ids)
  return ground_ids_.Get(index);
}
inline void Tile::set_ground_ids(int index, ::google::protobuf::uint64 value) {
  ground_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.ground_ids)
}
inline void Tile::add_ground_ids(::google::protobuf::uint64 value) {
  ground_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.ground_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::ground_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.ground_ids)
  return ground_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_ground_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.ground_ids)
  return &ground_ids_;
}

// repeated uint64 connection_ids = 13 [packed = true];
inline int Tile::connection_ids_size() const {
  return connection_ids_.size();
}
inline void Tile::clear_connection_ids() {
  connection_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::connection_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.connection_ids)
  return connection_ids_.Get(index);
}
inline void Tile::set_connection_ids(int index, ::google::protobuf::uint64 value) {
  connection_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.connection_ids)
}
inline void Tile::add_connection_ids(::google::protobuf::uint64 value) {
  connection_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.connection_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::connection_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.connection_ids)
  return connection_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_connection_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.connection_ids)
  return &connection_ids_;
}

// repeated uint64 junction_ids = 16 [packed = true];
inline int Tile::junction_ids_size() const {
  return junction_ids_.size();
}
inline void Tile::clear_junction_ids() {
  junction_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::junction_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.junction_ids)
  return junction_ids_.Get(index);
}
inline void Tile::set_junction_ids(int index, ::google::protobuf::uint64 value) {
  junction_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.junction_ids)
}
inline void Tile::add_junction_ids(::google::protobuf::uint64 value) {
  junction_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.junction_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::junction_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.junction_ids)
  return junction_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_junction_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.junction_ids)
  return &junction_ids_;
}

// repeated uint64 routing_edge_ids = 17 [packed = true];
inline int Tile::routing_edge_ids_size() const {
  return routing_edge_ids_.size();
}
inline void Tile::clear_routing_edge_ids() {
  routing_edge_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::routing_edge_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.routing_edge_ids)
  return routing_edge_ids_.Get(index);
}
inline void Tile::set_routing_edge_ids(int index, ::google::protobuf::uint64 value) {
  routing_edge_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.routing_edge_ids)
}
inline void Tile::add_routing_edge_ids(::google::protobuf::uint64 value) {
  routing_edge_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.routing_edge_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::routing_edge_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.routing_edge_ids)
  return routing_edge_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_routing_edge_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.routing_edge_ids)
  return &routing_edge_ids_;
}

// repeated uint64 routing_node_ids = 18 [packed = true];
inline int Tile::routing_node_ids_size() const {
  return routing_node_ids_.size();
}
inline void Tile::clear_routing_node_ids() {
  routing_node_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::routing_node_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.routing_node_ids)
  return routing_node_ids_.Get(index);
}
inline void Tile::set_routing_node_ids(int index, ::google::protobuf::uint64 value) {
  routing_node_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.routing_node_ids)
}
inline void Tile::add_routing_node_ids(::google::protobuf::uint64 value) {
  routing_node_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.routing_node_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::routing_node_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.routing_node_ids)
  return routing_node_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_routing_node_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.routing_node_ids)
  return &routing_node_ids_;
}

// repeated uint64 routing_graph_ids = 19 [packed = true];
inline int Tile::routing_graph_ids_size() const {
  return routing_graph_ids_.size();
}
inline void Tile::clear_routing_graph_ids() {
  routing_graph_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::routing_graph_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.routing_graph_ids)
  return routing_graph_ids_.Get(index);
}
inline void Tile::set_routing_graph_ids(int index, ::google::protobuf::uint64 value) {
  routing_graph_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.routing_graph_ids)
}
inline void Tile::add_routing_graph_ids(::google::protobuf::uint64 value) {
  routing_graph_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.routing_graph_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::routing_graph_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.routing_graph_ids)
  return routing_graph_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_routing_graph_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.routing_graph_ids)
  return &routing_graph_ids_;
}

// repeated uint64 sd_node_ids = 20 [packed = true];
inline int Tile::sd_node_ids_size() const {
  return sd_node_ids_.size();
}
inline void Tile::clear_sd_node_ids() {
  sd_node_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::sd_node_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.sd_node_ids)
  return sd_node_ids_.Get(index);
}
inline void Tile::set_sd_node_ids(int index, ::google::protobuf::uint64 value) {
  sd_node_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.sd_node_ids)
}
inline void Tile::add_sd_node_ids(::google::protobuf::uint64 value) {
  sd_node_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.sd_node_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::sd_node_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.sd_node_ids)
  return sd_node_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_sd_node_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.sd_node_ids)
  return &sd_node_ids_;
}

// repeated uint64 sd_road_ids = 21 [packed = true];
inline int Tile::sd_road_ids_size() const {
  return sd_road_ids_.size();
}
inline void Tile::clear_sd_road_ids() {
  sd_road_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::sd_road_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.sd_road_ids)
  return sd_road_ids_.Get(index);
}
inline void Tile::set_sd_road_ids(int index, ::google::protobuf::uint64 value) {
  sd_road_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.sd_road_ids)
}
inline void Tile::add_sd_road_ids(::google::protobuf::uint64 value) {
  sd_road_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.sd_road_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::sd_road_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.sd_road_ids)
  return sd_road_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_sd_road_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.sd_road_ids)
  return &sd_road_ids_;
}

// optional uint32 level = 26;
inline bool Tile::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tile::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tile::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tile::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Tile::level() const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.level)
  return level_;
}
inline void Tile::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.level)
}

// repeated uint64 lane_group_ids = 29 [packed = true];
inline int Tile::lane_group_ids_size() const {
  return lane_group_ids_.size();
}
inline void Tile::clear_lane_group_ids() {
  lane_group_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::lane_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.lane_group_ids)
  return lane_group_ids_.Get(index);
}
inline void Tile::set_lane_group_ids(int index, ::google::protobuf::uint64 value) {
  lane_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.lane_group_ids)
}
inline void Tile::add_lane_group_ids(::google::protobuf::uint64 value) {
  lane_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.lane_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::lane_group_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.lane_group_ids)
  return lane_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_lane_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.lane_group_ids)
  return &lane_group_ids_;
}

// repeated uint64 geofence_ids = 30 [packed = true];
inline int Tile::geofence_ids_size() const {
  return geofence_ids_.size();
}
inline void Tile::clear_geofence_ids() {
  geofence_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::geofence_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.geofence_ids)
  return geofence_ids_.Get(index);
}
inline void Tile::set_geofence_ids(int index, ::google::protobuf::uint64 value) {
  geofence_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.geofence_ids)
}
inline void Tile::add_geofence_ids(::google::protobuf::uint64 value) {
  geofence_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.geofence_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::geofence_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.geofence_ids)
  return geofence_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_geofence_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.geofence_ids)
  return &geofence_ids_;
}

// optional .holo.map.proto.common.GeoBox region = 33;
inline bool Tile::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tile::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tile::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::holo::map::proto::common::GeoBox& Tile::_internal_region() const {
  return *region_;
}
inline const ::holo::map::proto::common::GeoBox& Tile::region() const {
  const ::holo::map::proto::common::GeoBox* p = region_;
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.region)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::map::proto::common::GeoBox*>(
      &::holo::map::proto::common::_GeoBox_default_instance_);
}
inline ::holo::map::proto::common::GeoBox* Tile::release_region() {
  // @@protoc_insertion_point(field_release:holo.map.proto.base.Tile.region)
  clear_has_region();
  ::holo::map::proto::common::GeoBox* temp = region_;
  region_ = NULL;
  return temp;
}
inline ::holo::map::proto::common::GeoBox* Tile::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::map::proto::common::GeoBox>(GetArenaNoVirtual());
    region_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.map.proto.base.Tile.region)
  return region_;
}
inline void Tile::set_allocated_region(::holo::map::proto::common::GeoBox* region) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(region_);
  }
  if (region) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      region = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, region, submessage_arena);
    }
    set_has_region();
  } else {
    clear_has_region();
  }
  region_ = region;
  // @@protoc_insertion_point(field_set_allocated:holo.map.proto.base.Tile.region)
}

// repeated uint64 object_linear_info_ids = 40 [packed = true];
inline int Tile::object_linear_info_ids_size() const {
  return object_linear_info_ids_.size();
}
inline void Tile::clear_object_linear_info_ids() {
  object_linear_info_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_linear_info_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_linear_info_ids)
  return object_linear_info_ids_.Get(index);
}
inline void Tile::set_object_linear_info_ids(int index, ::google::protobuf::uint64 value) {
  object_linear_info_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_linear_info_ids)
}
inline void Tile::add_object_linear_info_ids(::google::protobuf::uint64 value) {
  object_linear_info_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_linear_info_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_linear_info_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_linear_info_ids)
  return object_linear_info_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_linear_info_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_linear_info_ids)
  return &object_linear_info_ids_;
}

// repeated uint64 object_regional_info_ids = 41 [packed = true];
inline int Tile::object_regional_info_ids_size() const {
  return object_regional_info_ids_.size();
}
inline void Tile::clear_object_regional_info_ids() {
  object_regional_info_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_regional_info_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_regional_info_ids)
  return object_regional_info_ids_.Get(index);
}
inline void Tile::set_object_regional_info_ids(int index, ::google::protobuf::uint64 value) {
  object_regional_info_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_regional_info_ids)
}
inline void Tile::add_object_regional_info_ids(::google::protobuf::uint64 value) {
  object_regional_info_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_regional_info_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_regional_info_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_regional_info_ids)
  return object_regional_info_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_regional_info_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_regional_info_ids)
  return &object_regional_info_ids_;
}

// repeated uint64 object_stop_line_ids = 42 [packed = true];
inline int Tile::object_stop_line_ids_size() const {
  return object_stop_line_ids_.size();
}
inline void Tile::clear_object_stop_line_ids() {
  object_stop_line_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_stop_line_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_stop_line_ids)
  return object_stop_line_ids_.Get(index);
}
inline void Tile::set_object_stop_line_ids(int index, ::google::protobuf::uint64 value) {
  object_stop_line_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_stop_line_ids)
}
inline void Tile::add_object_stop_line_ids(::google::protobuf::uint64 value) {
  object_stop_line_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_stop_line_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_stop_line_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_stop_line_ids)
  return object_stop_line_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_stop_line_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_stop_line_ids)
  return &object_stop_line_ids_;
}

// repeated uint64 object_traffic_light_ids = 43 [packed = true];
inline int Tile::object_traffic_light_ids_size() const {
  return object_traffic_light_ids_.size();
}
inline void Tile::clear_object_traffic_light_ids() {
  object_traffic_light_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_traffic_light_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_traffic_light_ids)
  return object_traffic_light_ids_.Get(index);
}
inline void Tile::set_object_traffic_light_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_light_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_traffic_light_ids)
}
inline void Tile::add_object_traffic_light_ids(::google::protobuf::uint64 value) {
  object_traffic_light_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_traffic_light_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_traffic_light_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_traffic_light_ids)
  return object_traffic_light_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_traffic_light_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_traffic_light_ids)
  return &object_traffic_light_ids_;
}

// repeated uint64 object_traffic_light_group_ids = 44 [packed = true];
inline int Tile::object_traffic_light_group_ids_size() const {
  return object_traffic_light_group_ids_.size();
}
inline void Tile::clear_object_traffic_light_group_ids() {
  object_traffic_light_group_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_traffic_light_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_traffic_light_group_ids)
  return object_traffic_light_group_ids_.Get(index);
}
inline void Tile::set_object_traffic_light_group_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_light_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_traffic_light_group_ids)
}
inline void Tile::add_object_traffic_light_group_ids(::google::protobuf::uint64 value) {
  object_traffic_light_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_traffic_light_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_traffic_light_group_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_traffic_light_group_ids)
  return object_traffic_light_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_traffic_light_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_traffic_light_group_ids)
  return &object_traffic_light_group_ids_;
}

// repeated uint64 object_pedestrian_crossing_ids = 45 [packed = true];
inline int Tile::object_pedestrian_crossing_ids_size() const {
  return object_pedestrian_crossing_ids_.size();
}
inline void Tile::clear_object_pedestrian_crossing_ids() {
  object_pedestrian_crossing_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_pedestrian_crossing_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_pedestrian_crossing_ids)
  return object_pedestrian_crossing_ids_.Get(index);
}
inline void Tile::set_object_pedestrian_crossing_ids(int index, ::google::protobuf::uint64 value) {
  object_pedestrian_crossing_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_pedestrian_crossing_ids)
}
inline void Tile::add_object_pedestrian_crossing_ids(::google::protobuf::uint64 value) {
  object_pedestrian_crossing_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_pedestrian_crossing_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_pedestrian_crossing_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_pedestrian_crossing_ids)
  return object_pedestrian_crossing_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_pedestrian_crossing_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_pedestrian_crossing_ids)
  return &object_pedestrian_crossing_ids_;
}

// repeated uint64 object_traffic_sign_ids = 46 [packed = true];
inline int Tile::object_traffic_sign_ids_size() const {
  return object_traffic_sign_ids_.size();
}
inline void Tile::clear_object_traffic_sign_ids() {
  object_traffic_sign_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_traffic_sign_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_traffic_sign_ids)
  return object_traffic_sign_ids_.Get(index);
}
inline void Tile::set_object_traffic_sign_ids(int index, ::google::protobuf::uint64 value) {
  object_traffic_sign_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_traffic_sign_ids)
}
inline void Tile::add_object_traffic_sign_ids(::google::protobuf::uint64 value) {
  object_traffic_sign_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_traffic_sign_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_traffic_sign_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_traffic_sign_ids)
  return object_traffic_sign_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_traffic_sign_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_traffic_sign_ids)
  return &object_traffic_sign_ids_;
}

// repeated uint64 object_parking_lot_ids = 47 [packed = true];
inline int Tile::object_parking_lot_ids_size() const {
  return object_parking_lot_ids_.size();
}
inline void Tile::clear_object_parking_lot_ids() {
  object_parking_lot_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_parking_lot_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_parking_lot_ids)
  return object_parking_lot_ids_.Get(index);
}
inline void Tile::set_object_parking_lot_ids(int index, ::google::protobuf::uint64 value) {
  object_parking_lot_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_parking_lot_ids)
}
inline void Tile::add_object_parking_lot_ids(::google::protobuf::uint64 value) {
  object_parking_lot_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_parking_lot_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_parking_lot_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_parking_lot_ids)
  return object_parking_lot_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_parking_lot_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_parking_lot_ids)
  return &object_parking_lot_ids_;
}

// repeated uint64 object_parking_floor_ids = 48 [packed = true];
inline int Tile::object_parking_floor_ids_size() const {
  return object_parking_floor_ids_.size();
}
inline void Tile::clear_object_parking_floor_ids() {
  object_parking_floor_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_parking_floor_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_parking_floor_ids)
  return object_parking_floor_ids_.Get(index);
}
inline void Tile::set_object_parking_floor_ids(int index, ::google::protobuf::uint64 value) {
  object_parking_floor_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_parking_floor_ids)
}
inline void Tile::add_object_parking_floor_ids(::google::protobuf::uint64 value) {
  object_parking_floor_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_parking_floor_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_parking_floor_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_parking_floor_ids)
  return object_parking_floor_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_parking_floor_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_parking_floor_ids)
  return &object_parking_floor_ids_;
}

// repeated uint64 object_parking_poi_ids = 49 [packed = true];
inline int Tile::object_parking_poi_ids_size() const {
  return object_parking_poi_ids_.size();
}
inline void Tile::clear_object_parking_poi_ids() {
  object_parking_poi_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_parking_poi_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_parking_poi_ids)
  return object_parking_poi_ids_.Get(index);
}
inline void Tile::set_object_parking_poi_ids(int index, ::google::protobuf::uint64 value) {
  object_parking_poi_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_parking_poi_ids)
}
inline void Tile::add_object_parking_poi_ids(::google::protobuf::uint64 value) {
  object_parking_poi_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_parking_poi_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_parking_poi_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_parking_poi_ids)
  return object_parking_poi_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_parking_poi_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_parking_poi_ids)
  return &object_parking_poi_ids_;
}

// repeated uint64 object_parking_background_ids = 50 [packed = true];
inline int Tile::object_parking_background_ids_size() const {
  return object_parking_background_ids_.size();
}
inline void Tile::clear_object_parking_background_ids() {
  object_parking_background_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_parking_background_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_parking_background_ids)
  return object_parking_background_ids_.Get(index);
}
inline void Tile::set_object_parking_background_ids(int index, ::google::protobuf::uint64 value) {
  object_parking_background_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_parking_background_ids)
}
inline void Tile::add_object_parking_background_ids(::google::protobuf::uint64 value) {
  object_parking_background_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_parking_background_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_parking_background_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_parking_background_ids)
  return object_parking_background_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_parking_background_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_parking_background_ids)
  return &object_parking_background_ids_;
}

// repeated uint64 quasi_dynamic_lane_ids = 51 [packed = true];
inline int Tile::quasi_dynamic_lane_ids_size() const {
  return quasi_dynamic_lane_ids_.size();
}
inline void Tile::clear_quasi_dynamic_lane_ids() {
  quasi_dynamic_lane_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::quasi_dynamic_lane_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.quasi_dynamic_lane_ids)
  return quasi_dynamic_lane_ids_.Get(index);
}
inline void Tile::set_quasi_dynamic_lane_ids(int index, ::google::protobuf::uint64 value) {
  quasi_dynamic_lane_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.quasi_dynamic_lane_ids)
}
inline void Tile::add_quasi_dynamic_lane_ids(::google::protobuf::uint64 value) {
  quasi_dynamic_lane_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.quasi_dynamic_lane_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::quasi_dynamic_lane_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.quasi_dynamic_lane_ids)
  return quasi_dynamic_lane_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_quasi_dynamic_lane_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.quasi_dynamic_lane_ids)
  return &quasi_dynamic_lane_ids_;
}

// repeated uint64 quasi_dynamic_lane_group_ids = 52 [packed = true];
inline int Tile::quasi_dynamic_lane_group_ids_size() const {
  return quasi_dynamic_lane_group_ids_.size();
}
inline void Tile::clear_quasi_dynamic_lane_group_ids() {
  quasi_dynamic_lane_group_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::quasi_dynamic_lane_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.quasi_dynamic_lane_group_ids)
  return quasi_dynamic_lane_group_ids_.Get(index);
}
inline void Tile::set_quasi_dynamic_lane_group_ids(int index, ::google::protobuf::uint64 value) {
  quasi_dynamic_lane_group_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.quasi_dynamic_lane_group_ids)
}
inline void Tile::add_quasi_dynamic_lane_group_ids(::google::protobuf::uint64 value) {
  quasi_dynamic_lane_group_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.quasi_dynamic_lane_group_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::quasi_dynamic_lane_group_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.quasi_dynamic_lane_group_ids)
  return quasi_dynamic_lane_group_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_quasi_dynamic_lane_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.quasi_dynamic_lane_group_ids)
  return &quasi_dynamic_lane_group_ids_;
}

// repeated uint64 quasi_dynamic_region_ids = 53 [packed = true];
inline int Tile::quasi_dynamic_region_ids_size() const {
  return quasi_dynamic_region_ids_.size();
}
inline void Tile::clear_quasi_dynamic_region_ids() {
  quasi_dynamic_region_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::quasi_dynamic_region_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.quasi_dynamic_region_ids)
  return quasi_dynamic_region_ids_.Get(index);
}
inline void Tile::set_quasi_dynamic_region_ids(int index, ::google::protobuf::uint64 value) {
  quasi_dynamic_region_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.quasi_dynamic_region_ids)
}
inline void Tile::add_quasi_dynamic_region_ids(::google::protobuf::uint64 value) {
  quasi_dynamic_region_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.quasi_dynamic_region_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::quasi_dynamic_region_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.quasi_dynamic_region_ids)
  return quasi_dynamic_region_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_quasi_dynamic_region_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.quasi_dynamic_region_ids)
  return &quasi_dynamic_region_ids_;
}

// repeated uint64 object_parking_space_ids = 54 [packed = true];
inline int Tile::object_parking_space_ids_size() const {
  return object_parking_space_ids_.size();
}
inline void Tile::clear_object_parking_space_ids() {
  object_parking_space_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_parking_space_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_parking_space_ids)
  return object_parking_space_ids_.Get(index);
}
inline void Tile::set_object_parking_space_ids(int index, ::google::protobuf::uint64 value) {
  object_parking_space_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_parking_space_ids)
}
inline void Tile::add_object_parking_space_ids(::google::protobuf::uint64 value) {
  object_parking_space_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_parking_space_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_parking_space_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_parking_space_ids)
  return object_parking_space_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_parking_space_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_parking_space_ids)
  return &object_parking_space_ids_;
}

// repeated uint64 routing_path_ids = 55 [packed = true];
inline int Tile::routing_path_ids_size() const {
  return routing_path_ids_.size();
}
inline void Tile::clear_routing_path_ids() {
  routing_path_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::routing_path_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.routing_path_ids)
  return routing_path_ids_.Get(index);
}
inline void Tile::set_routing_path_ids(int index, ::google::protobuf::uint64 value) {
  routing_path_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.routing_path_ids)
}
inline void Tile::add_routing_path_ids(::google::protobuf::uint64 value) {
  routing_path_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.routing_path_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::routing_path_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.routing_path_ids)
  return routing_path_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_routing_path_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.routing_path_ids)
  return &routing_path_ids_;
}

// repeated uint64 intersection_ids = 56 [packed = true];
inline int Tile::intersection_ids_size() const {
  return intersection_ids_.size();
}
inline void Tile::clear_intersection_ids() {
  intersection_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::intersection_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.intersection_ids)
  return intersection_ids_.Get(index);
}
inline void Tile::set_intersection_ids(int index, ::google::protobuf::uint64 value) {
  intersection_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.intersection_ids)
}
inline void Tile::add_intersection_ids(::google::protobuf::uint64 value) {
  intersection_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.intersection_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::intersection_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.intersection_ids)
  return intersection_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_intersection_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.intersection_ids)
  return &intersection_ids_;
}

// repeated uint64 object_safe_island_ids = 57 [packed = true];
inline int Tile::object_safe_island_ids_size() const {
  return object_safe_island_ids_.size();
}
inline void Tile::clear_object_safe_island_ids() {
  object_safe_island_ids_.Clear();
}
inline ::google::protobuf::uint64 Tile::object_safe_island_ids(int index) const {
  // @@protoc_insertion_point(field_get:holo.map.proto.base.Tile.object_safe_island_ids)
  return object_safe_island_ids_.Get(index);
}
inline void Tile::set_object_safe_island_ids(int index, ::google::protobuf::uint64 value) {
  object_safe_island_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:holo.map.proto.base.Tile.object_safe_island_ids)
}
inline void Tile::add_object_safe_island_ids(::google::protobuf::uint64 value) {
  object_safe_island_ids_.Add(value);
  // @@protoc_insertion_point(field_add:holo.map.proto.base.Tile.object_safe_island_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Tile::object_safe_island_ids() const {
  // @@protoc_insertion_point(field_list:holo.map.proto.base.Tile.object_safe_island_ids)
  return object_safe_island_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Tile::mutable_object_safe_island_ids() {
  // @@protoc_insertion_point(field_mutable_list:holo.map.proto.base.Tile.object_safe_island_ids)
  return &object_safe_island_ids_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace base
}  // namespace proto
}  // namespace map
}  // namespace holo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_holo_2fmap_2fproto_2fbase_2ftile_2eproto
