// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_GNSSTYPESUPPORTC_XB974Z_H_
#define _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_GNSSTYPESUPPORTC_XB974Z_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "GnssC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::GnssPvt, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> GnssPvtSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPvtSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTTYPESUPPORT__VAR_OUT_CH_

    class GnssPvtTypeSupport;
    typedef GnssPvtTypeSupport *GnssPvtTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPvtTypeSupport
        >
      GnssPvtTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPvtTypeSupport
        >
      GnssPvtTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPvtTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPvtTypeSupport_ptr _ptr_type;
      typedef GnssPvtTypeSupport_var _var_type;
      typedef GnssPvtTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPvtTypeSupport_ptr _duplicate (GnssPvtTypeSupport_ptr obj);

      static void _tao_release (GnssPvtTypeSupport_ptr obj);

      static GnssPvtTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPvtTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPvtTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPvtTypeSupport (void);

      

      virtual ~GnssPvtTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPvtTypeSupport (const GnssPvtTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtTypeSupport (GnssPvtTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPvtTypeSupport &operator= (const GnssPvtTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtTypeSupport &operator= (GnssPvtTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPvtTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTDATAWRITER__VAR_OUT_CH_

    class GnssPvtDataWriter;
    typedef GnssPvtDataWriter *GnssPvtDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPvtDataWriter
        >
      GnssPvtDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPvtDataWriter
        >
      GnssPvtDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPvtDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPvtDataWriter_ptr _ptr_type;
      typedef GnssPvtDataWriter_var _var_type;
      typedef GnssPvtDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPvtDataWriter_ptr _duplicate (GnssPvtDataWriter_ptr obj);

      static void _tao_release (GnssPvtDataWriter_ptr obj);

      static GnssPvtDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPvtDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPvtDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::GnssPvt & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::GnssPvt & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::GnssPvt & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::GnssPvt & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::GnssPvt & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::GnssPvt & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::GnssPvt & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::GnssPvt & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssPvt & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssPvt & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPvtDataWriter (void);

      

      virtual ~GnssPvtDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataWriter (const GnssPvtDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataWriter (GnssPvtDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataWriter &operator= (const GnssPvtDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataWriter &operator= (GnssPvtDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPvtDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTDATAREADER__VAR_OUT_CH_

    class GnssPvtDataReader;
    typedef GnssPvtDataReader *GnssPvtDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPvtDataReader
        >
      GnssPvtDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPvtDataReader
        >
      GnssPvtDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPvtDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPvtDataReader_ptr _ptr_type;
      typedef GnssPvtDataReader_var _var_type;
      typedef GnssPvtDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPvtDataReader_ptr _duplicate (GnssPvtDataReader_ptr obj);

      static void _tao_release (GnssPvtDataReader_ptr obj);

      static GnssPvtDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPvtDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPvtDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::GnssPvt & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::GnssPvt & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::GnssPvtSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::GnssPvtSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssPvt & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssPvt & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPvtDataReader (void);

      

      virtual ~GnssPvtDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataReader (const GnssPvtDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataReader (GnssPvtDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataReader &operator= (const GnssPvtDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPvtDataReader &operator= (GnssPvtDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPvtDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::GnssPosition, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> GnssPositionSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPositionSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONTYPESUPPORT__VAR_OUT_CH_

    class GnssPositionTypeSupport;
    typedef GnssPositionTypeSupport *GnssPositionTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPositionTypeSupport
        >
      GnssPositionTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPositionTypeSupport
        >
      GnssPositionTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPositionTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPositionTypeSupport_ptr _ptr_type;
      typedef GnssPositionTypeSupport_var _var_type;
      typedef GnssPositionTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPositionTypeSupport_ptr _duplicate (GnssPositionTypeSupport_ptr obj);

      static void _tao_release (GnssPositionTypeSupport_ptr obj);

      static GnssPositionTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPositionTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPositionTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPositionTypeSupport (void);

      

      virtual ~GnssPositionTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPositionTypeSupport (const GnssPositionTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionTypeSupport (GnssPositionTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPositionTypeSupport &operator= (const GnssPositionTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionTypeSupport &operator= (GnssPositionTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPositionTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAWRITER__VAR_OUT_CH_

    class GnssPositionDataWriter;
    typedef GnssPositionDataWriter *GnssPositionDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPositionDataWriter
        >
      GnssPositionDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPositionDataWriter
        >
      GnssPositionDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPositionDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPositionDataWriter_ptr _ptr_type;
      typedef GnssPositionDataWriter_var _var_type;
      typedef GnssPositionDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPositionDataWriter_ptr _duplicate (GnssPositionDataWriter_ptr obj);

      static void _tao_release (GnssPositionDataWriter_ptr obj);

      static GnssPositionDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPositionDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPositionDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::GnssPosition & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::GnssPosition & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::GnssPosition & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::GnssPosition & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::GnssPosition & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::GnssPosition & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::GnssPosition & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::GnssPosition & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssPosition & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssPosition & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPositionDataWriter (void);

      

      virtual ~GnssPositionDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataWriter (const GnssPositionDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataWriter (GnssPositionDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataWriter &operator= (const GnssPositionDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataWriter &operator= (GnssPositionDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPositionDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAREADER__VAR_OUT_CH_

    class GnssPositionDataReader;
    typedef GnssPositionDataReader *GnssPositionDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssPositionDataReader
        >
      GnssPositionDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssPositionDataReader
        >
      GnssPositionDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssPositionDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssPositionDataReader_ptr _ptr_type;
      typedef GnssPositionDataReader_var _var_type;
      typedef GnssPositionDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssPositionDataReader_ptr _duplicate (GnssPositionDataReader_ptr obj);

      static void _tao_release (GnssPositionDataReader_ptr obj);

      static GnssPositionDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssPositionDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssPositionDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::GnssPosition & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::GnssPosition & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::GnssPositionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::GnssPositionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssPosition & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssPosition & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssPositionDataReader (void);

      

      virtual ~GnssPositionDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataReader (const GnssPositionDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataReader (GnssPositionDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataReader &operator= (const GnssPositionDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssPositionDataReader &operator= (GnssPositionDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssPositionDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::GnssRawMeasurement, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> GnssRawMeasurementSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssRawMeasurementSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTTYPESUPPORT__VAR_OUT_CH_

    class GnssRawMeasurementTypeSupport;
    typedef GnssRawMeasurementTypeSupport *GnssRawMeasurementTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssRawMeasurementTypeSupport
        >
      GnssRawMeasurementTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssRawMeasurementTypeSupport
        >
      GnssRawMeasurementTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssRawMeasurementTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssRawMeasurementTypeSupport_ptr _ptr_type;
      typedef GnssRawMeasurementTypeSupport_var _var_type;
      typedef GnssRawMeasurementTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssRawMeasurementTypeSupport_ptr _duplicate (GnssRawMeasurementTypeSupport_ptr obj);

      static void _tao_release (GnssRawMeasurementTypeSupport_ptr obj);

      static GnssRawMeasurementTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssRawMeasurementTypeSupport (void);

      

      virtual ~GnssRawMeasurementTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementTypeSupport (const GnssRawMeasurementTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementTypeSupport (GnssRawMeasurementTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementTypeSupport &operator= (const GnssRawMeasurementTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementTypeSupport &operator= (GnssRawMeasurementTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssRawMeasurementTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAWRITER__VAR_OUT_CH_

    class GnssRawMeasurementDataWriter;
    typedef GnssRawMeasurementDataWriter *GnssRawMeasurementDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssRawMeasurementDataWriter
        >
      GnssRawMeasurementDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssRawMeasurementDataWriter
        >
      GnssRawMeasurementDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssRawMeasurementDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssRawMeasurementDataWriter_ptr _ptr_type;
      typedef GnssRawMeasurementDataWriter_var _var_type;
      typedef GnssRawMeasurementDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssRawMeasurementDataWriter_ptr _duplicate (GnssRawMeasurementDataWriter_ptr obj);

      static void _tao_release (GnssRawMeasurementDataWriter_ptr obj);

      static GnssRawMeasurementDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::GnssRawMeasurement & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::GnssRawMeasurement & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::GnssRawMeasurement & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::GnssRawMeasurement & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssRawMeasurement & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssRawMeasurementDataWriter (void);

      

      virtual ~GnssRawMeasurementDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataWriter (const GnssRawMeasurementDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataWriter (GnssRawMeasurementDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataWriter &operator= (const GnssRawMeasurementDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataWriter &operator= (GnssRawMeasurementDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssRawMeasurementDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAREADER__VAR_OUT_CH_

    class GnssRawMeasurementDataReader;
    typedef GnssRawMeasurementDataReader *GnssRawMeasurementDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          GnssRawMeasurementDataReader
        >
      GnssRawMeasurementDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          GnssRawMeasurementDataReader
        >
      GnssRawMeasurementDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  GnssRawMeasurementDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef GnssRawMeasurementDataReader_ptr _ptr_type;
      typedef GnssRawMeasurementDataReader_var _var_type;
      typedef GnssRawMeasurementDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static GnssRawMeasurementDataReader_ptr _duplicate (GnssRawMeasurementDataReader_ptr obj);

      static void _tao_release (GnssRawMeasurementDataReader_ptr obj);

      static GnssRawMeasurementDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static GnssRawMeasurementDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::GnssRawMeasurement & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::GnssRawMeasurement & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::GnssRawMeasurementSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::GnssRawMeasurementSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::GnssRawMeasurement & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::GnssRawMeasurement & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      GnssRawMeasurementDataReader (void);

      

      virtual ~GnssRawMeasurementDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataReader (const GnssRawMeasurementDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataReader (GnssRawMeasurementDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataReader &operator= (const GnssRawMeasurementDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (GnssRawMeasurementDataReader &operator= (GnssRawMeasurementDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_GnssRawMeasurementDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPvtTypeSupport>
  {
    static ::holo_base_msg::common::GnssPvtTypeSupport_ptr duplicate (
        ::holo_base_msg::common::GnssPvtTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPvtTypeSupport_ptr p);
    static ::holo_base_msg::common::GnssPvtTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPvtTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPvtDataWriter>
  {
    static ::holo_base_msg::common::GnssPvtDataWriter_ptr duplicate (
        ::holo_base_msg::common::GnssPvtDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPvtDataWriter_ptr p);
    static ::holo_base_msg::common::GnssPvtDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPvtDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPVTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPVTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPvtDataReader>
  {
    static ::holo_base_msg::common::GnssPvtDataReader_ptr duplicate (
        ::holo_base_msg::common::GnssPvtDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPvtDataReader_ptr p);
    static ::holo_base_msg::common::GnssPvtDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPvtDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPositionTypeSupport>
  {
    static ::holo_base_msg::common::GnssPositionTypeSupport_ptr duplicate (
        ::holo_base_msg::common::GnssPositionTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPositionTypeSupport_ptr p);
    static ::holo_base_msg::common::GnssPositionTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPositionTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPositionDataWriter>
  {
    static ::holo_base_msg::common::GnssPositionDataWriter_ptr duplicate (
        ::holo_base_msg::common::GnssPositionDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPositionDataWriter_ptr p);
    static ::holo_base_msg::common::GnssPositionDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPositionDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSPOSITIONDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssPositionDataReader>
  {
    static ::holo_base_msg::common::GnssPositionDataReader_ptr duplicate (
        ::holo_base_msg::common::GnssPositionDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::GnssPositionDataReader_ptr p);
    static ::holo_base_msg::common::GnssPositionDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssPositionDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssRawMeasurementTypeSupport>
  {
    static ::holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr duplicate (
        ::holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr p);
    static ::holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssRawMeasurementDataWriter>
  {
    static ::holo_base_msg::common::GnssRawMeasurementDataWriter_ptr duplicate (
        ::holo_base_msg::common::GnssRawMeasurementDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::GnssRawMeasurementDataWriter_ptr p);
    static ::holo_base_msg::common::GnssRawMeasurementDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssRawMeasurementDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_GNSSRAWMEASUREMENTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::GnssRawMeasurementDataReader>
  {
    static ::holo_base_msg::common::GnssRawMeasurementDataReader_ptr duplicate (
        ::holo_base_msg::common::GnssRawMeasurementDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::GnssRawMeasurementDataReader_ptr p);
    static ::holo_base_msg::common::GnssRawMeasurementDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::GnssRawMeasurementDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPvtTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPvtTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPvtTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPvtTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPvtDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPvtDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPvtDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPvtDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPvtDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPvtDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPvtDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPvtDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPvtDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPositionTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPositionTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPositionTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPositionTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPositionDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPositionDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPositionDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPositionDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssPositionDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssPositionDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssPositionDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssPositionDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssPositionDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssRawMeasurementTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssRawMeasurementDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, GnssRawMeasurementDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GnssRawMeasurementDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::GnssRawMeasurementDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "GnssTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

