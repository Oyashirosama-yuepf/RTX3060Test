// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_ODOMETRYC_3LXCN9_H_
#define _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_ODOMETRYC_3LXCN9_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "holo_base_msg/common/CommonC.h"
#include "holo_base_msg/geometry/PoseC.h"
#include "holo_base_msg/numerics/VectorC.h"
#include "holo_base_msg/numerics/MatrixC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef holo_base_msg::core::uint16_t OdometrySource;
    typedef holo_base_msg::core::uint16_t_out OdometrySource_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_OdometrySource;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef holo_base_msg::core::uint16_t OdometryStatus;
    typedef holo_base_msg::core::uint16_t_out OdometryStatus_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_OdometryStatus;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Odometryf;

    typedef
      ::TAO_Fixed_Var_T<
          Odometryf
        >
      Odometryf_var;

    typedef
      Odometryf &
      Odometryf_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Odometryf
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Odometryf_var _var_type;
      typedef Odometryf_out _out_type;

      static void _tao_any_destructor (void *);
      
      holo_base_msg::common::Timestamp stamp;
      holo_base_msg::common::Coordinate coord;
      holo_base_msg::common::Coordinate child_coord;
      holo_base_msg::common::OdometryStatus status;
      holo_base_msg::common::OdometrySource source;
      holo_base_msg::core::uint32_t precision;
      holo_base_msg::geometry::Pose3f pose;
      holo_base_msg::numerics::Vector6f velocity;
      holo_base_msg::numerics::Matrix66f pose_covariance;
      holo_base_msg::numerics::Matrix66f velocity_covariance;
      holo_base_msg::numerics::Vector3f linear_acceleration;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Odometryf;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Odometryd;

    typedef
      ::TAO_Fixed_Var_T<
          Odometryd
        >
      Odometryd_var;

    typedef
      Odometryd &
      Odometryd_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Odometryd
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Odometryd_var _var_type;
      typedef Odometryd_out _out_type;

      static void _tao_any_destructor (void *);
      
      holo_base_msg::common::Timestamp stamp;
      holo_base_msg::common::Coordinate coord;
      holo_base_msg::common::Coordinate child_coord;
      holo_base_msg::common::OdometryStatus status;
      holo_base_msg::common::OdometrySource source;
      holo_base_msg::core::uint32_t precision;
      holo_base_msg::geometry::Pose3d pose;
      holo_base_msg::numerics::Vector6d velocity;
      holo_base_msg::numerics::Matrix66d pose_covariance;
      holo_base_msg::numerics::Matrix66d velocity_covariance;
      holo_base_msg::numerics::Vector3d linear_acceleration;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Odometryd;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::holo_base_msg::common::Odometryf>
    : public
        Fixed_Size_Arg_Traits_T<
            ::holo_base_msg::common::Odometryf,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::holo_base_msg::common::Odometryd>
    : public
        Fixed_Size_Arg_Traits_T<
            ::holo_base_msg::common::Odometryd,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= (::CORBA::Any &, const ::holo_base_msg::common::Odometryf &); // copying version
     void operator<<= (::CORBA::Any &, ::holo_base_msg::common::Odometryf*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::common::Odometryf *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::common::Odometryf *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::common::Odometryf &); // copying version
 void operator<<= (::CORBA::Any &, holo_base_msg::common::Odometryf*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::Odometryf *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::common::Odometryf *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= (::CORBA::Any &, const ::holo_base_msg::common::Odometryd &); // copying version
     void operator<<= (::CORBA::Any &, ::holo_base_msg::common::Odometryd*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::common::Odometryd *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::common::Odometryd *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::common::Odometryd &); // copying version
 void operator<<= (::CORBA::Any &, holo_base_msg::common::Odometryd*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::Odometryd *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::common::Odometryd *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const holo_base_msg::common::Odometryf &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::common::Odometryf &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const holo_base_msg::common::Odometryd &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::common::Odometryd &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "OdometryC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

