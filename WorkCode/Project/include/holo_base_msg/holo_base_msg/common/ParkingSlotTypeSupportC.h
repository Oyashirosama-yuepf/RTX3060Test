// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_PARKINGSLOTTYPESUPPORTC_5OR6Y8_H_
#define _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_COMMON_PARKINGSLOTTYPESUPPORTC_5OR6Y8_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ParkingSlotC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::ParkingSlotf, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ParkingSlotfSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotfSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFTYPESUPPORT__VAR_OUT_CH_

    class ParkingSlotfTypeSupport;
    typedef ParkingSlotfTypeSupport *ParkingSlotfTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotfTypeSupport
        >
      ParkingSlotfTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotfTypeSupport
        >
      ParkingSlotfTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotfTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotfTypeSupport_ptr _ptr_type;
      typedef ParkingSlotfTypeSupport_var _var_type;
      typedef ParkingSlotfTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotfTypeSupport_ptr _duplicate (ParkingSlotfTypeSupport_ptr obj);

      static void _tao_release (ParkingSlotfTypeSupport_ptr obj);

      static ParkingSlotfTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotfTypeSupport (void);

      

      virtual ~ParkingSlotfTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfTypeSupport (const ParkingSlotfTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfTypeSupport (ParkingSlotfTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfTypeSupport &operator= (const ParkingSlotfTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfTypeSupport &operator= (ParkingSlotfTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotfTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAWRITER__VAR_OUT_CH_

    class ParkingSlotfDataWriter;
    typedef ParkingSlotfDataWriter *ParkingSlotfDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotfDataWriter
        >
      ParkingSlotfDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotfDataWriter
        >
      ParkingSlotfDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotfDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotfDataWriter_ptr _ptr_type;
      typedef ParkingSlotfDataWriter_var _var_type;
      typedef ParkingSlotfDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotfDataWriter_ptr _duplicate (ParkingSlotfDataWriter_ptr obj);

      static void _tao_release (ParkingSlotfDataWriter_ptr obj);

      static ParkingSlotfDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::ParkingSlotf & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotf & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::ParkingSlotf & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotf & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::ParkingSlotf & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotf & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::ParkingSlotf & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotf & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotf & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotf & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotfDataWriter (void);

      

      virtual ~ParkingSlotfDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataWriter (const ParkingSlotfDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataWriter (ParkingSlotfDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataWriter &operator= (const ParkingSlotfDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataWriter &operator= (ParkingSlotfDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotfDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAREADER__VAR_OUT_CH_

    class ParkingSlotfDataReader;
    typedef ParkingSlotfDataReader *ParkingSlotfDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotfDataReader
        >
      ParkingSlotfDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotfDataReader
        >
      ParkingSlotfDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotfDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotfDataReader_ptr _ptr_type;
      typedef ParkingSlotfDataReader_var _var_type;
      typedef ParkingSlotfDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotfDataReader_ptr _duplicate (ParkingSlotfDataReader_ptr obj);

      static void _tao_release (ParkingSlotfDataReader_ptr obj);

      static ParkingSlotfDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotfDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::ParkingSlotf & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::ParkingSlotf & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotfSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::ParkingSlotfSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotf & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotf & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotfDataReader (void);

      

      virtual ~ParkingSlotfDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataReader (const ParkingSlotfDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataReader (ParkingSlotfDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataReader &operator= (const ParkingSlotfDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotfDataReader &operator= (ParkingSlotfDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotfDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::ParkingSlotd, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ParkingSlotdSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotdSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDTYPESUPPORT__VAR_OUT_CH_

    class ParkingSlotdTypeSupport;
    typedef ParkingSlotdTypeSupport *ParkingSlotdTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotdTypeSupport
        >
      ParkingSlotdTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotdTypeSupport
        >
      ParkingSlotdTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotdTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotdTypeSupport_ptr _ptr_type;
      typedef ParkingSlotdTypeSupport_var _var_type;
      typedef ParkingSlotdTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotdTypeSupport_ptr _duplicate (ParkingSlotdTypeSupport_ptr obj);

      static void _tao_release (ParkingSlotdTypeSupport_ptr obj);

      static ParkingSlotdTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotdTypeSupport (void);

      

      virtual ~ParkingSlotdTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdTypeSupport (const ParkingSlotdTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdTypeSupport (ParkingSlotdTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdTypeSupport &operator= (const ParkingSlotdTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdTypeSupport &operator= (ParkingSlotdTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotdTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAWRITER__VAR_OUT_CH_

    class ParkingSlotdDataWriter;
    typedef ParkingSlotdDataWriter *ParkingSlotdDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotdDataWriter
        >
      ParkingSlotdDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotdDataWriter
        >
      ParkingSlotdDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotdDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotdDataWriter_ptr _ptr_type;
      typedef ParkingSlotdDataWriter_var _var_type;
      typedef ParkingSlotdDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotdDataWriter_ptr _duplicate (ParkingSlotdDataWriter_ptr obj);

      static void _tao_release (ParkingSlotdDataWriter_ptr obj);

      static ParkingSlotdDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::ParkingSlotd & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotd & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::ParkingSlotd & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotd & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::ParkingSlotd & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotd & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::ParkingSlotd & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotd & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotd & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotd & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotdDataWriter (void);

      

      virtual ~ParkingSlotdDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataWriter (const ParkingSlotdDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataWriter (ParkingSlotdDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataWriter &operator= (const ParkingSlotdDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataWriter &operator= (ParkingSlotdDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotdDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAREADER__VAR_OUT_CH_

    class ParkingSlotdDataReader;
    typedef ParkingSlotdDataReader *ParkingSlotdDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotdDataReader
        >
      ParkingSlotdDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotdDataReader
        >
      ParkingSlotdDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotdDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotdDataReader_ptr _ptr_type;
      typedef ParkingSlotdDataReader_var _var_type;
      typedef ParkingSlotdDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotdDataReader_ptr _duplicate (ParkingSlotdDataReader_ptr obj);

      static void _tao_release (ParkingSlotdDataReader_ptr obj);

      static ParkingSlotdDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotdDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::ParkingSlotd & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::ParkingSlotd & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotdSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::ParkingSlotdSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotd & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotd & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotdDataReader (void);

      

      virtual ~ParkingSlotdDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataReader (const ParkingSlotdDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataReader (ParkingSlotdDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataReader &operator= (const ParkingSlotdDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotdDataReader &operator= (ParkingSlotdDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotdDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::ParkingSlotFramef, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ParkingSlotFramefSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramefSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFTYPESUPPORT__VAR_OUT_CH_

    class ParkingSlotFramefTypeSupport;
    typedef ParkingSlotFramefTypeSupport *ParkingSlotFramefTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramefTypeSupport
        >
      ParkingSlotFramefTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramefTypeSupport
        >
      ParkingSlotFramefTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramefTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramefTypeSupport_ptr _ptr_type;
      typedef ParkingSlotFramefTypeSupport_var _var_type;
      typedef ParkingSlotFramefTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramefTypeSupport_ptr _duplicate (ParkingSlotFramefTypeSupport_ptr obj);

      static void _tao_release (ParkingSlotFramefTypeSupport_ptr obj);

      static ParkingSlotFramefTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramefTypeSupport (void);

      

      virtual ~ParkingSlotFramefTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefTypeSupport (const ParkingSlotFramefTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefTypeSupport (ParkingSlotFramefTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefTypeSupport &operator= (const ParkingSlotFramefTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefTypeSupport &operator= (ParkingSlotFramefTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramefTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAWRITER__VAR_OUT_CH_

    class ParkingSlotFramefDataWriter;
    typedef ParkingSlotFramefDataWriter *ParkingSlotFramefDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramefDataWriter
        >
      ParkingSlotFramefDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramefDataWriter
        >
      ParkingSlotFramefDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramefDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramefDataWriter_ptr _ptr_type;
      typedef ParkingSlotFramefDataWriter_var _var_type;
      typedef ParkingSlotFramefDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramefDataWriter_ptr _duplicate (ParkingSlotFramefDataWriter_ptr obj);

      static void _tao_release (ParkingSlotFramefDataWriter_ptr obj);

      static ParkingSlotFramefDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::ParkingSlotFramef & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramef & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::ParkingSlotFramef & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramef & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotFramef & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramefDataWriter (void);

      

      virtual ~ParkingSlotFramefDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataWriter (const ParkingSlotFramefDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataWriter (ParkingSlotFramefDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataWriter &operator= (const ParkingSlotFramefDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataWriter &operator= (ParkingSlotFramefDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramefDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAREADER__VAR_OUT_CH_

    class ParkingSlotFramefDataReader;
    typedef ParkingSlotFramefDataReader *ParkingSlotFramefDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramefDataReader
        >
      ParkingSlotFramefDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramefDataReader
        >
      ParkingSlotFramefDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramefDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramefDataReader_ptr _ptr_type;
      typedef ParkingSlotFramefDataReader_var _var_type;
      typedef ParkingSlotFramefDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramefDataReader_ptr _duplicate (ParkingSlotFramefDataReader_ptr obj);

      static void _tao_release (ParkingSlotFramefDataReader_ptr obj);

      static ParkingSlotFramefDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramefDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::ParkingSlotFramef & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::ParkingSlotFramef & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramefSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::ParkingSlotFramefSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotFramef & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotFramef & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramefDataReader (void);

      

      virtual ~ParkingSlotFramefDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataReader (const ParkingSlotFramefDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataReader (ParkingSlotFramefDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataReader &operator= (const ParkingSlotFramefDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramefDataReader &operator= (ParkingSlotFramefDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramefDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace common
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::common::ParkingSlotFramed, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ParkingSlotFramedSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramedSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDTYPESUPPORT__VAR_OUT_CH_

    class ParkingSlotFramedTypeSupport;
    typedef ParkingSlotFramedTypeSupport *ParkingSlotFramedTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramedTypeSupport
        >
      ParkingSlotFramedTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramedTypeSupport
        >
      ParkingSlotFramedTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramedTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramedTypeSupport_ptr _ptr_type;
      typedef ParkingSlotFramedTypeSupport_var _var_type;
      typedef ParkingSlotFramedTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramedTypeSupport_ptr _duplicate (ParkingSlotFramedTypeSupport_ptr obj);

      static void _tao_release (ParkingSlotFramedTypeSupport_ptr obj);

      static ParkingSlotFramedTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramedTypeSupport (void);

      

      virtual ~ParkingSlotFramedTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedTypeSupport (const ParkingSlotFramedTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedTypeSupport (ParkingSlotFramedTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedTypeSupport &operator= (const ParkingSlotFramedTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedTypeSupport &operator= (ParkingSlotFramedTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramedTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAWRITER__VAR_OUT_CH_

    class ParkingSlotFramedDataWriter;
    typedef ParkingSlotFramedDataWriter *ParkingSlotFramedDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramedDataWriter
        >
      ParkingSlotFramedDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramedDataWriter
        >
      ParkingSlotFramedDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramedDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramedDataWriter_ptr _ptr_type;
      typedef ParkingSlotFramedDataWriter_var _var_type;
      typedef ParkingSlotFramedDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramedDataWriter_ptr _duplicate (ParkingSlotFramedDataWriter_ptr obj);

      static void _tao_release (ParkingSlotFramedDataWriter_ptr obj);

      static ParkingSlotFramedDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::common::ParkingSlotFramed & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramed & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::common::ParkingSlotFramed & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramed & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotFramed & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramedDataWriter (void);

      

      virtual ~ParkingSlotFramedDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataWriter (const ParkingSlotFramedDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataWriter (ParkingSlotFramedDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataWriter &operator= (const ParkingSlotFramedDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataWriter &operator= (ParkingSlotFramedDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramedDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAREADER__VAR_OUT_CH_

    class ParkingSlotFramedDataReader;
    typedef ParkingSlotFramedDataReader *ParkingSlotFramedDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ParkingSlotFramedDataReader
        >
      ParkingSlotFramedDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ParkingSlotFramedDataReader
        >
      ParkingSlotFramedDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ParkingSlotFramedDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ParkingSlotFramedDataReader_ptr _ptr_type;
      typedef ParkingSlotFramedDataReader_var _var_type;
      typedef ParkingSlotFramedDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ParkingSlotFramedDataReader_ptr _duplicate (ParkingSlotFramedDataReader_ptr obj);

      static void _tao_release (ParkingSlotFramedDataReader_ptr obj);

      static ParkingSlotFramedDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ParkingSlotFramedDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::common::ParkingSlotFramed & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::common::ParkingSlotFramed & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::common::ParkingSlotFramedSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::common::ParkingSlotFramedSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::common::ParkingSlotFramed & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::common::ParkingSlotFramed & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ParkingSlotFramedDataReader (void);

      

      virtual ~ParkingSlotFramedDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataReader (const ParkingSlotFramedDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataReader (ParkingSlotFramedDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataReader &operator= (const ParkingSlotFramedDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ParkingSlotFramedDataReader &operator= (ParkingSlotFramedDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ParkingSlotFramedDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::common

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotfTypeSupport>
  {
    static ::holo_base_msg::common::ParkingSlotfTypeSupport_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotfTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotfTypeSupport_ptr p);
    static ::holo_base_msg::common::ParkingSlotfTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotfTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotfDataWriter>
  {
    static ::holo_base_msg::common::ParkingSlotfDataWriter_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotfDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotfDataWriter_ptr p);
    static ::holo_base_msg::common::ParkingSlotfDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotfDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotfDataReader>
  {
    static ::holo_base_msg::common::ParkingSlotfDataReader_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotfDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotfDataReader_ptr p);
    static ::holo_base_msg::common::ParkingSlotfDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotfDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotdTypeSupport>
  {
    static ::holo_base_msg::common::ParkingSlotdTypeSupport_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotdTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotdTypeSupport_ptr p);
    static ::holo_base_msg::common::ParkingSlotdTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotdTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotdDataWriter>
  {
    static ::holo_base_msg::common::ParkingSlotdDataWriter_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotdDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotdDataWriter_ptr p);
    static ::holo_base_msg::common::ParkingSlotdDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotdDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTDDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotdDataReader>
  {
    static ::holo_base_msg::common::ParkingSlotdDataReader_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotdDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotdDataReader_ptr p);
    static ::holo_base_msg::common::ParkingSlotdDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotdDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramefTypeSupport>
  {
    static ::holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramefDataWriter>
  {
    static ::holo_base_msg::common::ParkingSlotFramefDataWriter_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramefDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramefDataWriter_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramefDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramefDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEFDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramefDataReader>
  {
    static ::holo_base_msg::common::ParkingSlotFramefDataReader_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramefDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramefDataReader_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramefDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramefDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramedTypeSupport>
  {
    static ::holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramedDataWriter>
  {
    static ::holo_base_msg::common::ParkingSlotFramedDataWriter_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramedDataWriter_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramedDataWriter_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramedDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramedDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_COMMON_PARKINGSLOTFRAMEDDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::common::ParkingSlotFramedDataReader>
  {
    static ::holo_base_msg::common::ParkingSlotFramedDataReader_ptr duplicate (
        ::holo_base_msg::common::ParkingSlotFramedDataReader_ptr p);
    static void release (
        ::holo_base_msg::common::ParkingSlotFramedDataReader_ptr p);
    static ::holo_base_msg::common::ParkingSlotFramedDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::common::ParkingSlotFramedDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotfTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotfTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotfTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotfTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotfDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotfDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotfDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotfDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotfDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotfDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotfDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotdTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotdTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotdTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotdTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotdDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotdDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotdDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotdDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotdDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotdDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotdDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramefTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramefDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramefDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramefDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramefDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramedTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramedDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace common
  {
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ParkingSlotFramedDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ParkingSlotFramedDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::common::ParkingSlotFramedDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "ParkingSlotTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

