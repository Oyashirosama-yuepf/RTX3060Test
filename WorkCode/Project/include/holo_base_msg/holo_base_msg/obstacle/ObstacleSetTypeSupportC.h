// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_OBSTACLE_OBSTACLESETTYPESUPPORTC_B4M7XI_H_
#define _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_OBSTACLE_OBSTACLESETTYPESUPPORTC_B4M7XI_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ObstacleSetC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleGeneral, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleGeneralSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALTYPESUPPORT__VAR_OUT_CH_

    class ObstacleGeneralTypeSupport;
    typedef ObstacleGeneralTypeSupport *ObstacleGeneralTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralTypeSupport
        >
      ObstacleGeneralTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralTypeSupport
        >
      ObstacleGeneralTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralTypeSupport_ptr _ptr_type;
      typedef ObstacleGeneralTypeSupport_var _var_type;
      typedef ObstacleGeneralTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralTypeSupport_ptr _duplicate (ObstacleGeneralTypeSupport_ptr obj);

      static void _tao_release (ObstacleGeneralTypeSupport_ptr obj);

      static ObstacleGeneralTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralTypeSupport (void);

      

      virtual ~ObstacleGeneralTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralTypeSupport (const ObstacleGeneralTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralTypeSupport (ObstacleGeneralTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralTypeSupport &operator= (const ObstacleGeneralTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralTypeSupport &operator= (ObstacleGeneralTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAWRITER__VAR_OUT_CH_

    class ObstacleGeneralDataWriter;
    typedef ObstacleGeneralDataWriter *ObstacleGeneralDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralDataWriter
        >
      ObstacleGeneralDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralDataWriter
        >
      ObstacleGeneralDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralDataWriter_ptr _ptr_type;
      typedef ObstacleGeneralDataWriter_var _var_type;
      typedef ObstacleGeneralDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralDataWriter_ptr _duplicate (ObstacleGeneralDataWriter_ptr obj);

      static void _tao_release (ObstacleGeneralDataWriter_ptr obj);

      static ObstacleGeneralDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleGeneral & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralDataWriter (void);

      

      virtual ~ObstacleGeneralDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataWriter (const ObstacleGeneralDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataWriter (ObstacleGeneralDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataWriter &operator= (const ObstacleGeneralDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataWriter &operator= (ObstacleGeneralDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAREADER__VAR_OUT_CH_

    class ObstacleGeneralDataReader;
    typedef ObstacleGeneralDataReader *ObstacleGeneralDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralDataReader
        >
      ObstacleGeneralDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralDataReader
        >
      ObstacleGeneralDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralDataReader_ptr _ptr_type;
      typedef ObstacleGeneralDataReader_var _var_type;
      typedef ObstacleGeneralDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralDataReader_ptr _duplicate (ObstacleGeneralDataReader_ptr obj);

      static void _tao_release (ObstacleGeneralDataReader_ptr obj);

      static ObstacleGeneralDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleGeneral & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleGeneral & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleGeneralSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleGeneral & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneral & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralDataReader (void);

      

      virtual ~ObstacleGeneralDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataReader (const ObstacleGeneralDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataReader (ObstacleGeneralDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataReader &operator= (const ObstacleGeneralDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralDataReader &operator= (ObstacleGeneralDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleGeneralList, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleGeneralListSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralListSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTTYPESUPPORT__VAR_OUT_CH_

    class ObstacleGeneralListTypeSupport;
    typedef ObstacleGeneralListTypeSupport *ObstacleGeneralListTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralListTypeSupport
        >
      ObstacleGeneralListTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralListTypeSupport
        >
      ObstacleGeneralListTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralListTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralListTypeSupport_ptr _ptr_type;
      typedef ObstacleGeneralListTypeSupport_var _var_type;
      typedef ObstacleGeneralListTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralListTypeSupport_ptr _duplicate (ObstacleGeneralListTypeSupport_ptr obj);

      static void _tao_release (ObstacleGeneralListTypeSupport_ptr obj);

      static ObstacleGeneralListTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralListTypeSupport (void);

      

      virtual ~ObstacleGeneralListTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListTypeSupport (const ObstacleGeneralListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListTypeSupport (ObstacleGeneralListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListTypeSupport &operator= (const ObstacleGeneralListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListTypeSupport &operator= (ObstacleGeneralListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralListTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAWRITER__VAR_OUT_CH_

    class ObstacleGeneralListDataWriter;
    typedef ObstacleGeneralListDataWriter *ObstacleGeneralListDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralListDataWriter
        >
      ObstacleGeneralListDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralListDataWriter
        >
      ObstacleGeneralListDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralListDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralListDataWriter_ptr _ptr_type;
      typedef ObstacleGeneralListDataWriter_var _var_type;
      typedef ObstacleGeneralListDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralListDataWriter_ptr _duplicate (ObstacleGeneralListDataWriter_ptr obj);

      static void _tao_release (ObstacleGeneralListDataWriter_ptr obj);

      static ObstacleGeneralListDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleGeneralList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralListDataWriter (void);

      

      virtual ~ObstacleGeneralListDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataWriter (const ObstacleGeneralListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataWriter (ObstacleGeneralListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataWriter &operator= (const ObstacleGeneralListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataWriter &operator= (ObstacleGeneralListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralListDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAREADER__VAR_OUT_CH_

    class ObstacleGeneralListDataReader;
    typedef ObstacleGeneralListDataReader *ObstacleGeneralListDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleGeneralListDataReader
        >
      ObstacleGeneralListDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleGeneralListDataReader
        >
      ObstacleGeneralListDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleGeneralListDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleGeneralListDataReader_ptr _ptr_type;
      typedef ObstacleGeneralListDataReader_var _var_type;
      typedef ObstacleGeneralListDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleGeneralListDataReader_ptr _duplicate (ObstacleGeneralListDataReader_ptr obj);

      static void _tao_release (ObstacleGeneralListDataReader_ptr obj);

      static ObstacleGeneralListDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleGeneralListDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleGeneralList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleGeneralList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleGeneralListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleGeneralList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleGeneralList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleGeneralListDataReader (void);

      

      virtual ~ObstacleGeneralListDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataReader (const ObstacleGeneralListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataReader (ObstacleGeneralListDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataReader &operator= (const ObstacleGeneralListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleGeneralListDataReader &operator= (ObstacleGeneralListDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleGeneralListDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleRadar, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleRadarSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARTYPESUPPORT__VAR_OUT_CH_

    class ObstacleRadarTypeSupport;
    typedef ObstacleRadarTypeSupport *ObstacleRadarTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarTypeSupport
        >
      ObstacleRadarTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarTypeSupport
        >
      ObstacleRadarTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarTypeSupport_ptr _ptr_type;
      typedef ObstacleRadarTypeSupport_var _var_type;
      typedef ObstacleRadarTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarTypeSupport_ptr _duplicate (ObstacleRadarTypeSupport_ptr obj);

      static void _tao_release (ObstacleRadarTypeSupport_ptr obj);

      static ObstacleRadarTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarTypeSupport (void);

      

      virtual ~ObstacleRadarTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarTypeSupport (const ObstacleRadarTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarTypeSupport (ObstacleRadarTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarTypeSupport &operator= (const ObstacleRadarTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarTypeSupport &operator= (ObstacleRadarTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAWRITER__VAR_OUT_CH_

    class ObstacleRadarDataWriter;
    typedef ObstacleRadarDataWriter *ObstacleRadarDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarDataWriter
        >
      ObstacleRadarDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarDataWriter
        >
      ObstacleRadarDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarDataWriter_ptr _ptr_type;
      typedef ObstacleRadarDataWriter_var _var_type;
      typedef ObstacleRadarDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarDataWriter_ptr _duplicate (ObstacleRadarDataWriter_ptr obj);

      static void _tao_release (ObstacleRadarDataWriter_ptr obj);

      static ObstacleRadarDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleRadar & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarDataWriter (void);

      

      virtual ~ObstacleRadarDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataWriter (const ObstacleRadarDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataWriter (ObstacleRadarDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataWriter &operator= (const ObstacleRadarDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataWriter &operator= (ObstacleRadarDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAREADER__VAR_OUT_CH_

    class ObstacleRadarDataReader;
    typedef ObstacleRadarDataReader *ObstacleRadarDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarDataReader
        >
      ObstacleRadarDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarDataReader
        >
      ObstacleRadarDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarDataReader_ptr _ptr_type;
      typedef ObstacleRadarDataReader_var _var_type;
      typedef ObstacleRadarDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarDataReader_ptr _duplicate (ObstacleRadarDataReader_ptr obj);

      static void _tao_release (ObstacleRadarDataReader_ptr obj);

      static ObstacleRadarDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleRadar & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleRadar & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleRadarSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleRadar & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleRadar & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarDataReader (void);

      

      virtual ~ObstacleRadarDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataReader (const ObstacleRadarDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataReader (ObstacleRadarDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataReader &operator= (const ObstacleRadarDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarDataReader &operator= (ObstacleRadarDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleRadarList, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleRadarListSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarListSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTTYPESUPPORT__VAR_OUT_CH_

    class ObstacleRadarListTypeSupport;
    typedef ObstacleRadarListTypeSupport *ObstacleRadarListTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarListTypeSupport
        >
      ObstacleRadarListTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarListTypeSupport
        >
      ObstacleRadarListTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarListTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarListTypeSupport_ptr _ptr_type;
      typedef ObstacleRadarListTypeSupport_var _var_type;
      typedef ObstacleRadarListTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarListTypeSupport_ptr _duplicate (ObstacleRadarListTypeSupport_ptr obj);

      static void _tao_release (ObstacleRadarListTypeSupport_ptr obj);

      static ObstacleRadarListTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarListTypeSupport (void);

      

      virtual ~ObstacleRadarListTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListTypeSupport (const ObstacleRadarListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListTypeSupport (ObstacleRadarListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListTypeSupport &operator= (const ObstacleRadarListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListTypeSupport &operator= (ObstacleRadarListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarListTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAWRITER__VAR_OUT_CH_

    class ObstacleRadarListDataWriter;
    typedef ObstacleRadarListDataWriter *ObstacleRadarListDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarListDataWriter
        >
      ObstacleRadarListDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarListDataWriter
        >
      ObstacleRadarListDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarListDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarListDataWriter_ptr _ptr_type;
      typedef ObstacleRadarListDataWriter_var _var_type;
      typedef ObstacleRadarListDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarListDataWriter_ptr _duplicate (ObstacleRadarListDataWriter_ptr obj);

      static void _tao_release (ObstacleRadarListDataWriter_ptr obj);

      static ObstacleRadarListDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleRadarList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarListDataWriter (void);

      

      virtual ~ObstacleRadarListDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataWriter (const ObstacleRadarListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataWriter (ObstacleRadarListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataWriter &operator= (const ObstacleRadarListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataWriter &operator= (ObstacleRadarListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarListDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAREADER__VAR_OUT_CH_

    class ObstacleRadarListDataReader;
    typedef ObstacleRadarListDataReader *ObstacleRadarListDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleRadarListDataReader
        >
      ObstacleRadarListDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleRadarListDataReader
        >
      ObstacleRadarListDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleRadarListDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleRadarListDataReader_ptr _ptr_type;
      typedef ObstacleRadarListDataReader_var _var_type;
      typedef ObstacleRadarListDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleRadarListDataReader_ptr _duplicate (ObstacleRadarListDataReader_ptr obj);

      static void _tao_release (ObstacleRadarListDataReader_ptr obj);

      static ObstacleRadarListDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleRadarListDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleRadarList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleRadarList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleRadarListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleRadarList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleRadarList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleRadarListDataReader (void);

      

      virtual ~ObstacleRadarListDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataReader (const ObstacleRadarListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataReader (ObstacleRadarListDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataReader &operator= (const ObstacleRadarListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleRadarListDataReader &operator= (ObstacleRadarListDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleRadarListDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleUss, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleUssSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSTYPESUPPORT__VAR_OUT_CH_

    class ObstacleUssTypeSupport;
    typedef ObstacleUssTypeSupport *ObstacleUssTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssTypeSupport
        >
      ObstacleUssTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssTypeSupport
        >
      ObstacleUssTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssTypeSupport_ptr _ptr_type;
      typedef ObstacleUssTypeSupport_var _var_type;
      typedef ObstacleUssTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssTypeSupport_ptr _duplicate (ObstacleUssTypeSupport_ptr obj);

      static void _tao_release (ObstacleUssTypeSupport_ptr obj);

      static ObstacleUssTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssTypeSupport (void);

      

      virtual ~ObstacleUssTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssTypeSupport (const ObstacleUssTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssTypeSupport (ObstacleUssTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssTypeSupport &operator= (const ObstacleUssTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssTypeSupport &operator= (ObstacleUssTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAWRITER__VAR_OUT_CH_

    class ObstacleUssDataWriter;
    typedef ObstacleUssDataWriter *ObstacleUssDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssDataWriter
        >
      ObstacleUssDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssDataWriter
        >
      ObstacleUssDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssDataWriter_ptr _ptr_type;
      typedef ObstacleUssDataWriter_var _var_type;
      typedef ObstacleUssDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssDataWriter_ptr _duplicate (ObstacleUssDataWriter_ptr obj);

      static void _tao_release (ObstacleUssDataWriter_ptr obj);

      static ObstacleUssDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleUss & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUss & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleUss & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUss & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleUss & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssDataWriter (void);

      

      virtual ~ObstacleUssDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataWriter (const ObstacleUssDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataWriter (ObstacleUssDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataWriter &operator= (const ObstacleUssDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataWriter &operator= (ObstacleUssDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAREADER__VAR_OUT_CH_

    class ObstacleUssDataReader;
    typedef ObstacleUssDataReader *ObstacleUssDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssDataReader
        >
      ObstacleUssDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssDataReader
        >
      ObstacleUssDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssDataReader_ptr _ptr_type;
      typedef ObstacleUssDataReader_var _var_type;
      typedef ObstacleUssDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssDataReader_ptr _duplicate (ObstacleUssDataReader_ptr obj);

      static void _tao_release (ObstacleUssDataReader_ptr obj);

      static ObstacleUssDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleUss & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleUss & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleUssSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleUss & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleUss & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssDataReader (void);

      

      virtual ~ObstacleUssDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataReader (const ObstacleUssDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataReader (ObstacleUssDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataReader &operator= (const ObstacleUssDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssDataReader &operator= (ObstacleUssDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleUssList, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleUssListSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssListSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTTYPESUPPORT__VAR_OUT_CH_

    class ObstacleUssListTypeSupport;
    typedef ObstacleUssListTypeSupport *ObstacleUssListTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssListTypeSupport
        >
      ObstacleUssListTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssListTypeSupport
        >
      ObstacleUssListTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssListTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssListTypeSupport_ptr _ptr_type;
      typedef ObstacleUssListTypeSupport_var _var_type;
      typedef ObstacleUssListTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssListTypeSupport_ptr _duplicate (ObstacleUssListTypeSupport_ptr obj);

      static void _tao_release (ObstacleUssListTypeSupport_ptr obj);

      static ObstacleUssListTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssListTypeSupport (void);

      

      virtual ~ObstacleUssListTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListTypeSupport (const ObstacleUssListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListTypeSupport (ObstacleUssListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListTypeSupport &operator= (const ObstacleUssListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListTypeSupport &operator= (ObstacleUssListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssListTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAWRITER__VAR_OUT_CH_

    class ObstacleUssListDataWriter;
    typedef ObstacleUssListDataWriter *ObstacleUssListDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssListDataWriter
        >
      ObstacleUssListDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssListDataWriter
        >
      ObstacleUssListDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssListDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssListDataWriter_ptr _ptr_type;
      typedef ObstacleUssListDataWriter_var _var_type;
      typedef ObstacleUssListDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssListDataWriter_ptr _duplicate (ObstacleUssListDataWriter_ptr obj);

      static void _tao_release (ObstacleUssListDataWriter_ptr obj);

      static ObstacleUssListDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleUssList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssListDataWriter (void);

      

      virtual ~ObstacleUssListDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataWriter (const ObstacleUssListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataWriter (ObstacleUssListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataWriter &operator= (const ObstacleUssListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataWriter &operator= (ObstacleUssListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssListDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAREADER__VAR_OUT_CH_

    class ObstacleUssListDataReader;
    typedef ObstacleUssListDataReader *ObstacleUssListDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleUssListDataReader
        >
      ObstacleUssListDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleUssListDataReader
        >
      ObstacleUssListDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleUssListDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleUssListDataReader_ptr _ptr_type;
      typedef ObstacleUssListDataReader_var _var_type;
      typedef ObstacleUssListDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleUssListDataReader_ptr _duplicate (ObstacleUssListDataReader_ptr obj);

      static void _tao_release (ObstacleUssListDataReader_ptr obj);

      static ObstacleUssListDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleUssListDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleUssList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleUssList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleUssListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleUssList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleUssList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleUssListDataReader (void);

      

      virtual ~ObstacleUssListDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataReader (const ObstacleUssListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataReader (ObstacleUssListDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataReader &operator= (const ObstacleUssListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleUssListDataReader &operator= (ObstacleUssListDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleUssListDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleVision, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleVisionSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONTYPESUPPORT__VAR_OUT_CH_

    class ObstacleVisionTypeSupport;
    typedef ObstacleVisionTypeSupport *ObstacleVisionTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionTypeSupport
        >
      ObstacleVisionTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionTypeSupport
        >
      ObstacleVisionTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionTypeSupport_ptr _ptr_type;
      typedef ObstacleVisionTypeSupport_var _var_type;
      typedef ObstacleVisionTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionTypeSupport_ptr _duplicate (ObstacleVisionTypeSupport_ptr obj);

      static void _tao_release (ObstacleVisionTypeSupport_ptr obj);

      static ObstacleVisionTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionTypeSupport (void);

      

      virtual ~ObstacleVisionTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionTypeSupport (const ObstacleVisionTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionTypeSupport (ObstacleVisionTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionTypeSupport &operator= (const ObstacleVisionTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionTypeSupport &operator= (ObstacleVisionTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAWRITER__VAR_OUT_CH_

    class ObstacleVisionDataWriter;
    typedef ObstacleVisionDataWriter *ObstacleVisionDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionDataWriter
        >
      ObstacleVisionDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionDataWriter
        >
      ObstacleVisionDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionDataWriter_ptr _ptr_type;
      typedef ObstacleVisionDataWriter_var _var_type;
      typedef ObstacleVisionDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionDataWriter_ptr _duplicate (ObstacleVisionDataWriter_ptr obj);

      static void _tao_release (ObstacleVisionDataWriter_ptr obj);

      static ObstacleVisionDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleVision & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVision & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleVision & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVision & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleVision & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionDataWriter (void);

      

      virtual ~ObstacleVisionDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataWriter (const ObstacleVisionDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataWriter (ObstacleVisionDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataWriter &operator= (const ObstacleVisionDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataWriter &operator= (ObstacleVisionDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAREADER__VAR_OUT_CH_

    class ObstacleVisionDataReader;
    typedef ObstacleVisionDataReader *ObstacleVisionDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionDataReader
        >
      ObstacleVisionDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionDataReader
        >
      ObstacleVisionDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionDataReader_ptr _ptr_type;
      typedef ObstacleVisionDataReader_var _var_type;
      typedef ObstacleVisionDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionDataReader_ptr _duplicate (ObstacleVisionDataReader_ptr obj);

      static void _tao_release (ObstacleVisionDataReader_ptr obj);

      static ObstacleVisionDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleVision & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleVision & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleVisionSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleVision & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleVision & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionDataReader (void);

      

      virtual ~ObstacleVisionDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataReader (const ObstacleVisionDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataReader (ObstacleVisionDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataReader &operator= (const ObstacleVisionDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionDataReader &operator= (ObstacleVisionDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace obstacle
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< holo_base_msg::obstacle::ObstacleVisionList, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ObstacleVisionListSeq;
    

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionListSeq;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTTYPESUPPORT__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTTYPESUPPORT__VAR_OUT_CH_

    class ObstacleVisionListTypeSupport;
    typedef ObstacleVisionListTypeSupport *ObstacleVisionListTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionListTypeSupport
        >
      ObstacleVisionListTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionListTypeSupport
        >
      ObstacleVisionListTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionListTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionListTypeSupport_ptr _ptr_type;
      typedef ObstacleVisionListTypeSupport_var _var_type;
      typedef ObstacleVisionListTypeSupport_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionListTypeSupport_ptr _duplicate (ObstacleVisionListTypeSupport_ptr obj);

      static void _tao_release (ObstacleVisionListTypeSupport_ptr obj);

      static ObstacleVisionListTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionListTypeSupport (void);

      

      virtual ~ObstacleVisionListTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListTypeSupport (const ObstacleVisionListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListTypeSupport (ObstacleVisionListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListTypeSupport &operator= (const ObstacleVisionListTypeSupport &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListTypeSupport &operator= (ObstacleVisionListTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionListTypeSupport;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAWRITER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAWRITER__VAR_OUT_CH_

    class ObstacleVisionListDataWriter;
    typedef ObstacleVisionListDataWriter *ObstacleVisionListDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionListDataWriter
        >
      ObstacleVisionListDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionListDataWriter
        >
      ObstacleVisionListDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionListDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionListDataWriter_ptr _ptr_type;
      typedef ObstacleVisionListDataWriter_var _var_type;
      typedef ObstacleVisionListDataWriter_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionListDataWriter_ptr _duplicate (ObstacleVisionListDataWriter_ptr obj);

      static void _tao_release (ObstacleVisionListDataWriter_ptr obj);

      static ObstacleVisionListDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleVisionList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionListDataWriter (void);

      

      virtual ~ObstacleVisionListDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataWriter (const ObstacleVisionListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataWriter (ObstacleVisionListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataWriter &operator= (const ObstacleVisionListDataWriter &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataWriter &operator= (ObstacleVisionListDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionListDataWriter;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAREADER__VAR_OUT_CH_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAREADER__VAR_OUT_CH_

    class ObstacleVisionListDataReader;
    typedef ObstacleVisionListDataReader *ObstacleVisionListDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          ObstacleVisionListDataReader
        >
      ObstacleVisionListDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          ObstacleVisionListDataReader
        >
      ObstacleVisionListDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class  ObstacleVisionListDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef ObstacleVisionListDataReader_ptr _ptr_type;
      typedef ObstacleVisionListDataReader_var _var_type;
      typedef ObstacleVisionListDataReader_out _out_type;

      static void _tao_any_destructor (void *);

      // The static operations.
      static ObstacleVisionListDataReader_ptr _duplicate (ObstacleVisionListDataReader_ptr obj);

      static void _tao_release (ObstacleVisionListDataReader_ptr obj);

      static ObstacleVisionListDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static ObstacleVisionListDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::holo_base_msg::obstacle::ObstacleVisionList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::holo_base_msg::obstacle::ObstacleVisionList & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::holo_base_msg::obstacle::ObstacleVisionListSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::holo_base_msg::obstacle::ObstacleVisionList & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::holo_base_msg::obstacle::ObstacleVisionList & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      ObstacleVisionListDataReader (void);

      

      virtual ~ObstacleVisionListDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataReader (const ObstacleVisionListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataReader (ObstacleVisionListDataReader &&))
#endif /* ACE_HAS_CPP11 */
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataReader &operator= (const ObstacleVisionListDataReader &))
#if defined (ACE_HAS_CPP11)
      ACE_UNIMPLEMENTED_FUNC (ObstacleVisionListDataReader &operator= (ObstacleVisionListDataReader &&))
#endif /* ACE_HAS_CPP11 */
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_ObstacleVisionListDataReader;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::obstacle

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEGENERALLISTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleGeneralListDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarListDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLERADARLISTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleRadarListDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleUssDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleUssDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssListTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssListDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEUSSLISTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleUssListDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleUssListDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleUssListDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleUssListDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleUssListDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleUssListDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTTYPESUPPORT__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAWRITER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionListDataWriter>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAREADER__TRAITS_)
#define _HOLO_BASE_MSG_OBSTACLE_OBSTACLEVISIONLISTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::holo_base_msg::obstacle::ObstacleVisionListDataReader>
  {
    static ::holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr duplicate (
        ::holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr p);
    static void release (
        ::holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr p);
    static ::holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralListTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralListDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleGeneralListDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleGeneralListDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleGeneralListDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarListTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarListDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleRadarListDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleRadarListDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleRadarListDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssListTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssListTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssListTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssListDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssListDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssListDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleUssListDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleUssListDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleUssListDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleUssListDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListTypeSupport_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListTypeSupport_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionListTypeSupport_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListDataWriter_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListDataWriter_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionListDataWriter_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace obstacle
  {
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListDataReader_ptr); // copying
     void operator<<= ( ::CORBA::Any &, ObstacleVisionListDataReader_ptr *); // non-copying
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ObstacleVisionListDataReader_ptr &);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::obstacle::ObstacleVisionListDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "ObstacleSetTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

