cmake_policy(PUSH)
cmake_policy(SET CMP0028 NEW)
cmake_policy(SET CMP0048 NEW)
cmake_policy(SET CMP0074 NEW)

find_package(holo_sensors_c @DEPEND_HOLO_SENSORS_C_VERSION@ REQUIRED)
find_package(holo_base @DEPEND_HOLO_BASE_VERSION@ REQUIRED)
find_package(nanopb @DEPEND_NANOPB_VERSION@ REQUIRED)
find_package(FFMPEG @DEPEND_FFMPEG_VERSION@ REQUIRED COMPONENTS @DEPEND_FFMPEG_COMPONENTS@)
find_package(X264 @DEPEND_X264_VERSION@ REQUIRED)
find_package(LZ4 @DEPEND_LZ4_VERSION@ REQUIRED)
find_package(LIBYUV @DEPEND_LIBYUV_VERSION@ REQUIRED)

include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)

if (@HOLO_BUILD_ON_TDA4@)
    find_package(TI_PSDK REQUIRED)
endif()


if (@HOLO_BUILD_ON_MDC300@)
    add_compile_definitions(ENABLE_MDC300_CAN_INTERFACE)
endif()

if (@HOLO_BUILD_ON_MDC610@)
    if (HOLO_BUILD_PLATFORM MATCHES "MDC610-1.0.012")
        add_compile_definitions(MDC610_VERSION_NUM=20210430)
        MESSAGE(STATUS "MDC610_VERSION_NUM = 20210430")
    elseif (HOLO_BUILD_PLATFORM MATCHES "MDC610-1.0.017")
        add_compile_definitions(MDC610_VERSION_NUM=20210830)
        MESSAGE(STATUS "MDC610_VERSION_NUM = 20210830")
    elseif (HOLO_BUILD_PLATFORM MATCHES "MDC610-1.0.019")
        add_compile_definitions(MDC610_VERSION_NUM=20211130)
        MESSAGE(STATUS "MDC610_VERSION_NUM = 20211130")
    elseif (HOLO_BUILD_PLATFORM MATCHES "MDC610-1.1.001")
        add_compile_definitions(MDC610_VERSION_NUM=20211231)
        MESSAGE(STATUS "MDC610_VERSION_NUM = 20211231")
    elseif (HOLO_BUILD_PLATFORM MATCHES "MDC610-1.1801.001")
        add_compile_definitions(MDC610_VERSION_NUM=20220228)
        MESSAGE(STATUS "MDC610_VERSION_NUM = 20220228")
    endif()
    add_compile_definitions(MDC_PRODUCTION_MDC610)
    add_compile_definitions(MDC_PRODUCTION_CORE)
    add_compile_definitions(HOLO_PLATFORM_MDC610)
    add_compile_definitions(ENABLE_MDC610_CAMERA_INTERFACE)
    add_compile_definitions(ENABLE_MDC610_LIDAR_INTERFACE)
    find_package(AscendCL REQUIRED)
    find_package(ADSF REQUIRED)
    find_package(ara-core REQUIRED)
    set(MDC610_SDK_LIBRARIES_DIR ${ara-core_CMAKE_DIR}/../../)
    find_package(ara-com REQUIRED)
    set(ara-exec_DIR ${MDC610_SDK_LIBRARIES_DIR}/cmake/exec/)
    find_package(ara-exec REQUIRED)
    find_package(rtf-crc REQUIRED)
    find_package(rtf-e2e REQUIRED)
    find_package(rtf-e2exf REQUIRED)
    set(MDC610_SDK_INCLUDE_DIRS)
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${ara-core_INCLUDE_DIRS})
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${ara-com_INCLUDE_DIRS})
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${ara-exec_INCLUDE_DIRS})
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${rtf-crc_INCLUDE_DIRS})
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${rtf-e2e_INCLUDE_DIRS})
    LIST(APPEND MDC610_SDK_INCLUDE_DIRS ${rtf-e2exf_INCLUDE_DIRS})
    MESSAGE(STATUS MDC610_SDK_INCLUDE_DIRS=${MDC610_SDK_INCLUDE_DIRS})
    set(MDC610_SDK_LIBRARIES)
    LIST(APPEND MDC610_SDK_LIBRARIES ${ara-core_LIBRARIES})
    LIST(APPEND MDC610_SDK_LIBRARIES ${ara-com_LIBRARIES})
    LIST(APPEND MDC610_SDK_LIBRARIES ${ara-exec_LIBRARIES})
    LIST(APPEND MDC610_SDK_LIBRARIES ${rtf-crc_LIBRARIES})
    LIST(APPEND MDC610_SDK_LIBRARIES ${rtf-e2e_LIBRARIES})
    LIST(APPEND MDC610_SDK_LIBRARIES ${rtf-e2exf_LIBRARIES})
    MESSAGE(STATUS MDC610_SDK_LIBRARIES=${MDC610_SDK_LIBRARIES})
endif()

if (@HOLO_BUILD_WITH_CUDA@)
    find_package(CUDA REQUIRED)
endif()

cmake_policy(POP)
