find_package(holo_base @HOLO_BASE_VERSION@ REQUIRED)

include(${CMAKE_CURRENT_LIST_DIR}/holo_cmw-targets.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/HoloCMWMacros.cmake)

macro (_PREPEND_SYSROOT var va_list sysroot)
    set(_tmp_input ${va_list})
    set(${var})

    foreach (va ${_tmp_input})
        string(REGEX MATCH "^${sysroot}" match ${va})
        if (match)
            list(APPEND ${var} "${va}")
        else (match)
            list(APPEND ${var} "${CMAKE_SYSROOT}${va}")
        endif (match)
    endforeach (va)
endmacro (_PREPEND_SYSROOT)

if (TARGET holo_cmw::holo_ros_cmw)
    unset(_holo_ros_cmw_dep_includes)
    unset(_holo_ros_cmw_dep_libs)

    foreach (pkg @ROS_COMPONENTS@)
        find_package(${pkg} REQUIRED)
        list(APPEND _holo_ros_cmw_dep_includes ${${pkg}_INCLUDE_DIRS})
        list(APPEND _holo_ros_cmw_dep_libs ${${pkg}_LIBRARIES})
    endforeach (pkg)

    if (CMAKE_SYSROOT)
        _PREPEND_SYSROOT(_holo_ros_cmw_dep_includes "${_holo_ros_cmw_dep_includes}" ${CMAKE_SYSROOT})
        _PREPEND_SYSROOT(_holo_ros_cmw_dep_libs "${_holo_ros_cmw_dep_libs}" ${CMAKE_SYSROOT}) 
    endif (CMAKE_SYSROOT)

    if (_holo_ros_cmw_dep_includes)
        list(REMOVE_DUPLICATES _holo_ros_cmw_dep_includes)
    endif ()

    SET(ROS_FOUND TRUE)
    SET(HOLO_CMW_BUILD_ROS_CMW TRUE)
    SET(HOLO_CMW_ROS_LIBRARIES holo_cmw::holo_ros_cmw)
    set_property(TARGET holo_cmw::holo_ros_cmw APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${_holo_ros_cmw_dep_libs})
    set_property(TARGET holo_cmw::holo_ros_cmw APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${_holo_ros_cmw_dep_includes})

    unset(_holo_ros_cmw_dep_includes)
    unset(_holo_ros_cmw_dep_libs)
endif ()

if (TARGET holo_cmw::holo_opendds_cmw)
    find_package(OPENDDS REQUIRED)
    find_package(XERCESC REQUIRED)

    SET(HOLO_CMW_BUILD_OPENDDS_CMW TRUE)
    SET(HOLO_CMW_OPENDDS_LIBRARIES holo_cmw::holo_opendds_cmw)
    set_property(TARGET holo_cmw::holo_opendds_cmw APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${OPENDDS_LIBRARIES} XERCESC::xerces-c)
endif ()

if (TARGET holo_cmw::holo_rtidds_cxx11_cmw)
    find_package(RTIDDS REQUIRED)

    SET(HOLO_CMW_BUILD_RTIDDS_CXX11_CMW TRUE)
    SET(HOLO_CMW_RTIDDS_LIBRARIES holo_cmw::holo_rtidds_cxx11_cmw)
    set_property(TARGET holo_cmw::holo_rtidds_cxx11_cmw APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${RTIDDS_CXX11_LIBRARIES} ${RTIDDS_EXTRA_LIBRARIES})
endif ()

set(HOLO_CMW_LIBRARIES ${HOLO_CMW_ROS_LIBRARIES} ${HOLO_CMW_OPENDDS_LIBRARIES} ${HOLO_CMW_RTIDDS_LIBRARIES})
