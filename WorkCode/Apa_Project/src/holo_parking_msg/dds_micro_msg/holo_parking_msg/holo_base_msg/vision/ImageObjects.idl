#ifndef HOLO_BASE_MSG_VISION_IMAGE_OBJECTS_IDL_
#define HOLO_BASE_MSG_VISION_IMAGE_OBJECTS_IDL_

#include <holo_base_msg/core/Types.idl>

#include <holo_base_msg/core/Types.idl>
#include <holo_base_msg/common/Common.idl>
#include <holo_base_msg/geometry/Point.idl>

module holo_base_msg { module vision {

struct KeyPoint2d
{
    holo_base_msg::core::float64_t      x;
    holo_base_msg::core::float64_t      y;
    holo_base_msg::core::float32_t      confidence;
    holo_base_msg::core::bool_t         visibility;
};

typedef sequence<::holo_base_msg::vision::KeyPoint2d> KeyPoint2dSequence;

struct KeyPoint2f
{
    holo_base_msg::core::float32_t      x;
    holo_base_msg::core::float32_t      y;
    holo_base_msg::core::float32_t      confidence;
    holo_base_msg::core::bool_t         visibility;
};

typedef sequence<::holo_base_msg::vision::KeyPoint2f> KeyPoint2fSequence;

struct ObjectKeyPoint2d
{
    KeyPoint2dSequence                          points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectKeyPoint2d> ObjectKeyPoint2dSequence;

struct ObjectKeyPoint2f
{
    KeyPoint2fSequence                          points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectKeyPoint2f> ObjectKeyPoint2fSequence;

struct ObjectPoint2d
{
    ::holo_base_msg::geometry::Point2dSequence    points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectPoint2d>    ObjectPoint2dSequence;

struct ObjectPoint2f
{
    ::holo_base_msg::geometry::Point2fSequence    points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectPoint2f>    ObjectPoint2fSequence;

struct ObjectPoint3d
{
    ::holo_base_msg::geometry::Point3dSequence    points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectPoint3d>    ObjectPoint3dSequence;

struct ObjectPoint3f
{
    ::holo_base_msg::geometry::Point3fSequence    points;
    ::holo_base_msg::common::Classification  category;
    ::holo_base_msg::core::float32_t         confidence;
};

typedef sequence<::holo_base_msg::vision::ObjectPoint3f>    ObjectPoint3fSequence;


#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsKeyPoint2d"
struct ImageObjectsKeyPoint2d
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectKeyPoint2dSequence              objects;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsKeyPoint2f"
struct ImageObjectsKeyPoint2f
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectKeyPoint2fSequence              objects;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsPoint2d"
struct ImageObjectsPoint2d
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectPoint2dSequence                 objects;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsPoint2f"
struct ImageObjectsPoint2f
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectPoint2fSequence                 objects;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsPoint3d"
struct ImageObjectsPoint3d
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectPoint3dSequence                 objects;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::vision::ImageObjectsPoint3f"
struct ImageObjectsPoint3f
{
    ::holo_base_msg::common::Timestamp stamp;
    ::holo_base_msg::common::SensorId  sensor_id;
    ObjectPoint3fSequence                 objects;
};

}; };

#endif

