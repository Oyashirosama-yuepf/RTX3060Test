#ifndef HOLO_BASE_MSG_COMMON_ODOMETRY_IDL_
#define HOLO_BASE_MSG_COMMON_ODOMETRY_IDL_

#include <holo_base_msg/common/Common.idl>
#include <holo_base_msg/geometry/Pose.idl>
#include <holo_base_msg/numerics/Vector.idl>
#include <holo_base_msg/numerics/Matrix.idl>

module holo_base_msg { module common {

/*
 * ODOMETRY_SOURCE_GNSS        = 0x0000, from Global Navigation Staellite System (GNSS)
 * ODOMETRY_SOURCE_IMU         = 0x0001, from Inertial Measurement Unit (IMU)
 * ODOMETRY_SOURCE_VISION      = 0x0002, from camera
 * ODOMETRY_SOURCE_WHEEL       = 0x0004, from vehicle wheel speed sensor
 * ODOMETRY_SOURCE_RADAR       = 0x0008, from Radar
 * ODOMETRY_SOURCE_LIDAR       = 0x0010, from LiDAR
 * ODOMETRY_SOURCE_SEMANTIC    = 0x0020, from semantic measurement which provided by Machine Learning
 * ODOMETRY_SOURCE_HD_MAP      = 0x0040, from High Definition Map (HD Map)
 * ODOMETRY_SOURCE_UNKNOWN     = 0xFFFF, from undefined source
 */
typedef holo_base_msg::core::uint16_t OdometrySource;

/*
 * ODOMETRY_STATUS_ALLGOOD                  = 0x0000, solution is good
 * ODOMETRY_STATUS_SOLUTIONNOGOOD           = 0x0001, solution is bad
 * ODOMETRY_STATUS_POSITIONINACTIVE         = 0x0002, position field of solution is inactive
 * ODOMETRY_STATUS_ORIENTATIONINACTIVE      = 0x0004, orientation field of solution is inactive
 * ODOMETRY_STATUS_LINEARVELOCITYINACTIVE   = 0x0008, linear velocity field of solution is inactive
 * ODOMETRY_STATUS_ANGULARVELOCITYINACTIVE  = 0x0010, angular velocity field of solution is inactive
 */
typedef holo_base_msg::core::uint16_t OdometryStatus;

#pragma DCPS_DATA_TYPE  "holo_base_msg::common::Odometryf"
struct Odometryf
{
    Timestamp        stamp;
    Coordinate       coord;
    Coordinate       child_coord;
    OdometryStatus   status;
    OdometrySource   source;
    holo_base_msg::core::uint32_t           precision;
    holo_base_msg::geometry::Pose3f         pose;
    holo_base_msg::numerics::Vector6f       velocity;
    holo_base_msg::numerics::Matrix66f      pose_covariance;
    holo_base_msg::numerics::Matrix66f      velocity_covariance;
    holo_base_msg::numerics::Vector3f       linear_acceleration;
};

#pragma DCPS_DATA_TYPE  "holo_base_msg::common::Odometryd"
struct Odometryd
{
    Timestamp        stamp;
    Coordinate       coord;
    Coordinate       child_coord;
    OdometryStatus   status;
    OdometrySource   source;
    holo_base_msg::core::uint32_t           precision;
    holo_base_msg::geometry::Pose3d         pose;
    holo_base_msg::numerics::Vector6d       velocity;
    holo_base_msg::numerics::Matrix66d      pose_covariance;
    holo_base_msg::numerics::Matrix66d      velocity_covariance;
    holo_base_msg::numerics::Vector3d       linear_acceleration;
};

}; };

#endif

