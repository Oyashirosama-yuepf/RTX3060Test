#ifndef HOLO_C_SENSORS_BOSCH_USS_BOSCH_USS_DBC_H
#define HOLO_C_SENSORS_BOSCH_USS_BOSCH_USS_DBC_H
/** \file
 * CAN DBC C-Headers
 *
 * These headers were generated by dbc2c.awk on 2019年 05月 22日 星期三 10:49:00 CST.
 *
 * The dbc2c.awk script parses Vector .dbc files, and generates C-style
 * headers with Doxygen documentation from a set of templates.
 *
 * The following databases were parsed:
 * - \ref DB_bosch_uss
 */

#include <holo_c/core/types.h>

/**
 * @defgroup DB_bosch_uss CAN Database bosch_uss
 *
 * Path to file: output/bosch_uss.dbc
 *
 * Provides the following ECUs:
 * - \ref ECU_VCU
 * - \ref ECU_GW
 * - \ref ECU_ACU
 * - \ref ECU_ESP
 * - \ref ECU_ADAS
 * - \ref ECU_PAS
 */

/**
 * @defgroup ECU_VCU Electronics Control Unit VCU
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_VCU_CH_DriverCmd
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup ECU_GW Electronics Control Unit GW
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_GW_CH_SR_IPCSWStatus
 * - \ref MSG_GW_CH_SR_OusideTempandOdo
 * - \ref MSG_GW_CH_SR_TCMSwitchStatus
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup ECU_ACU Electronics Control Unit ACU
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_ACU_LongititudeAcc
 * - \ref MSG_ACU_LateralAccYawRate
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup ECU_ESP Electronics Control Unit ESP
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_EPS_GeneralStatus
 * - \ref MSG_ESP_GeneralStatus
 * - \ref MSG_ESP_RearWheelPulseStatus
 * - \ref MSG_ESP_FrontWheelPulseStatus
 * - \ref MSG_ESP_RearWheelSpdStatus
 * - \ref MSG_ESP_FrontWheelSpdStatus
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup ECU_ADAS Electronics Control Unit ADAS
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_ADAS_GW_CH_Func_DiagReq
 * - \ref MSG_ADAS_GW_CH_PAS_DiagReq
 * - \ref MSG_ADAS_DisplayInfo
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup ECU_PAS Electronics Control Unit PAS
 *
 * This ECU was defined in \ref DB_bosch_uss.
 *
 * TX messages:
 * - \ref MSG_PAS_DiagResp
 * - \ref MSG_PAS_Diagnosis2
 * - \ref MSG_PAS_Diagnosis1
 * - \ref MSG_PAS_DistofRFM
 * - \ref MSG_PAS_DistofLFM
 * - \ref MSG_PAS_DistofRMLR
 * - \ref MSG_PAS_DistofFMLR
 * - \ref MSG_PAS_DistofRFR
 * - \ref MSG_PAS_DistofRLR
 * - \ref MSG_PAS_SDW
 * - \ref MSG_PAS_Olo_R_DE
 * - \ref MSG_PAS_Olo_F_DE
 * - \ref MSG_PAS_Olo_R_CE
 * - \ref MSG_PAS_Olo_F_CE
 * - \ref MSG_PAS_Olo_TypeandHight2
 * - \ref MSG_PAS_Olo_TypeandHight1
 * - \ref MSG_PAS_Olo_Obj12Dist
 * - \ref MSG_PAS_Olo_Obj11Dist
 * - \ref MSG_PAS_Olo_Obj10Dist
 * - \ref MSG_PAS_Olo_Obj9Dist
 * - \ref MSG_PAS_Olo_Obj8Dist
 * - \ref MSG_PAS_Olo_Obj7Dist
 * - \ref MSG_PAS_Olo_Obj6Dist
 * - \ref MSG_PAS_Olo_Obj5Dist
 * - \ref MSG_PAS_Olo_Obj4Dist
 * - \ref MSG_PAS_Olo_Obj3Dist
 * - \ref MSG_PAS_Olo_Obj2Dist
 * - \ref MSG_PAS_Olo_Obj1Dist
 * - \ref MSG_PAS_Right3_Obj2
 * - \ref MSG_PAS_Right3_Obj1
 * - \ref MSG_PAS_Right2
 * - \ref MSG_PAS_Right1
 * - \ref MSG_PAS_Left3_Obj2
 * - \ref MSG_PAS_Left3_Obj1
 * - \ref MSG_PAS_Left2
 * - \ref MSG_PAS_Left1
 * - \ref MSG_PAS_SVAStatus
 * - \ref MSG_PAS_OdoInfo5
 * - \ref MSG_PAS_OdoInfo4
 * - \ref MSG_PAS_OdoInfo3
 * - \ref MSG_PAS_OdoInfo2
 * - \ref MSG_PAS_OdoInfo1
 *
 * RX signals:
 *
 * @ingroup DB_bosch_uss
 */

/**
 * @defgroup MSG_PAS_DiagResp Message PAS_DiagResp (0x7da)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte7
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte6
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte5
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte4
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte3
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte2
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte1
 * - \ref SIG_PAS_DiagResp_PAS_DiagRespByte0
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DiagResp configuration tuple.
 */
#define MSG_PAS_DiagResp 0x7da, 0, 8

/**
 * Message PAS_DiagResp id.
 */
#define ID_PAS_DiagResp 0x7da

/**
 * Message PAS_DiagResp extended id bit.
 */
#define EXT_PAS_DiagResp 0

/**
 * Message PAS_DiagResp Data Length Count.
 */
#define DLC_PAS_DiagResp 8

/**
 * Message PAS_DiagResp cycle time.
 */
#define CYCLE_PAS_DiagResp 0

/**
 * Message PAS_DiagResp fast cycle time.
 */
#define FAST_PAS_DiagResp 0

/**
 * Initialise message PAS_DiagResp buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DiagResp(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte7(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte6(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte5(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte4(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte3(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte2(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte1(buf);                                                                   \
        INITSIG_PAS_DiagResp_PAS_DiagRespByte0(buf);                                                                   \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ADAS_GW_CH_Func_DiagReq Message ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * Sent by \ref ECU_ADAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1
 * - \ref SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0
 *
 * @ingroup ECU_ADAS
 * @{
 */

/**
 * Message ADAS_GW_CH_Func_DiagReq configuration tuple.
 */
#define MSG_ADAS_GW_CH_Func_DiagReq 0x7df, 0, 8

/**
 * Message ADAS_GW_CH_Func_DiagReq id.
 */
#define ID_ADAS_GW_CH_Func_DiagReq 0x7df

/**
 * Message ADAS_GW_CH_Func_DiagReq extended id bit.
 */
#define EXT_ADAS_GW_CH_Func_DiagReq 0

/**
 * Message ADAS_GW_CH_Func_DiagReq Data Length Count.
 */
#define DLC_ADAS_GW_CH_Func_DiagReq 8

/**
 * Message ADAS_GW_CH_Func_DiagReq cycle time.
 */
#define CYCLE_ADAS_GW_CH_Func_DiagReq 0

/**
 * Message ADAS_GW_CH_Func_DiagReq fast cycle time.
 */
#define FAST_ADAS_GW_CH_Func_DiagReq 0

/**
 * Initialise message ADAS_GW_CH_Func_DiagReq buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ADAS_GW_CH_Func_DiagReq(buf)                                                                              \
    {                                                                                                                  \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(buf);                                             \
        INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(buf);                                             \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ADAS_GW_CH_PAS_DiagReq Message ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * Sent by \ref ECU_ADAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1
 * - \ref SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0
 *
 * @ingroup ECU_ADAS
 * @{
 */

/**
 * Message ADAS_GW_CH_PAS_DiagReq configuration tuple.
 */
#define MSG_ADAS_GW_CH_PAS_DiagReq 0x7d2, 0, 8

/**
 * Message ADAS_GW_CH_PAS_DiagReq id.
 */
#define ID_ADAS_GW_CH_PAS_DiagReq 0x7d2

/**
 * Message ADAS_GW_CH_PAS_DiagReq extended id bit.
 */
#define EXT_ADAS_GW_CH_PAS_DiagReq 0

/**
 * Message ADAS_GW_CH_PAS_DiagReq Data Length Count.
 */
#define DLC_ADAS_GW_CH_PAS_DiagReq 8

/**
 * Message ADAS_GW_CH_PAS_DiagReq cycle time.
 */
#define CYCLE_ADAS_GW_CH_PAS_DiagReq 0

/**
 * Message ADAS_GW_CH_PAS_DiagReq fast cycle time.
 */
#define FAST_ADAS_GW_CH_PAS_DiagReq 0

/**
 * Initialise message ADAS_GW_CH_PAS_DiagReq buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ADAS_GW_CH_PAS_DiagReq(buf)                                                                               \
    {                                                                                                                  \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(buf);                                               \
        INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(buf);                                               \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_GW_CH_SR_IPCSWStatus Message GW_CH_SR_IPCSWStatus (0x330)
 *
 * Sent by \ref ECU_GW.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum
 * - \ref SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt
 * - \ref SIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq
 * - \ref SIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 *
 * @ingroup ECU_GW
 * @{
 */

/**
 * Message GW_CH_SR_IPCSWStatus configuration tuple.
 */
#define MSG_GW_CH_SR_IPCSWStatus 0x330, 0, 8

/**
 * Message GW_CH_SR_IPCSWStatus id.
 */
#define ID_GW_CH_SR_IPCSWStatus 0x330

/**
 * Message GW_CH_SR_IPCSWStatus extended id bit.
 */
#define EXT_GW_CH_SR_IPCSWStatus 0

/**
 * Message GW_CH_SR_IPCSWStatus Data Length Count.
 */
#define DLC_GW_CH_SR_IPCSWStatus 8

/**
 * Message GW_CH_SR_IPCSWStatus cycle time.
 */
#define CYCLE_GW_CH_SR_IPCSWStatus 0

/**
 * Message GW_CH_SR_IPCSWStatus fast cycle time.
 */
#define FAST_GW_CH_SR_IPCSWStatus 0

/**
 * Initialise message GW_CH_SR_IPCSWStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_GW_CH_SR_IPCSWStatus(buf)                                                                                 \
    {                                                                                                                  \
        INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(buf);                                                     \
        INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(buf);                                                      \
        INITSIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(buf);                                                            \
        INITSIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode(buf);                                                               \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_GW_CH_SR_OusideTempandOdo Message GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Sent by \ref ECU_GW.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum
 * - \ref SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt
 * - \ref SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid
 * - \ref SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp
 *
 * @ingroup ECU_GW
 * @{
 */

/**
 * Message GW_CH_SR_OusideTempandOdo configuration tuple.
 */
#define MSG_GW_CH_SR_OusideTempandOdo 0x535, 0, 8

/**
 * Message GW_CH_SR_OusideTempandOdo id.
 */
#define ID_GW_CH_SR_OusideTempandOdo 0x535

/**
 * Message GW_CH_SR_OusideTempandOdo extended id bit.
 */
#define EXT_GW_CH_SR_OusideTempandOdo 0

/**
 * Message GW_CH_SR_OusideTempandOdo Data Length Count.
 */
#define DLC_GW_CH_SR_OusideTempandOdo 8

/**
 * Message GW_CH_SR_OusideTempandOdo cycle time.
 */
#define CYCLE_GW_CH_SR_OusideTempandOdo 0

/**
 * Message GW_CH_SR_OusideTempandOdo fast cycle time.
 */
#define FAST_GW_CH_SR_OusideTempandOdo 0

/**
 * Initialise message GW_CH_SR_OusideTempandOdo buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_GW_CH_SR_OusideTempandOdo(buf)                                                                            \
    {                                                                                                                  \
        INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(buf);                                                 \
        INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(buf);                                                  \
        INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(buf);                                                 \
        INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(buf);                                                      \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_GW_CH_SR_TCMSwitchStatus Message GW_CH_SR_TCMSwitchStatus (0x2a5)
 *
 * Sent by \ref ECU_GW.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum
 * - \ref SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt
 * - \ref SIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 *
 * @ingroup ECU_GW
 * @{
 */

/**
 * Message GW_CH_SR_TCMSwitchStatus configuration tuple.
 */
#define MSG_GW_CH_SR_TCMSwitchStatus 0x2a5, 0, 8

/**
 * Message GW_CH_SR_TCMSwitchStatus id.
 */
#define ID_GW_CH_SR_TCMSwitchStatus 0x2a5

/**
 * Message GW_CH_SR_TCMSwitchStatus extended id bit.
 */
#define EXT_GW_CH_SR_TCMSwitchStatus 0

/**
 * Message GW_CH_SR_TCMSwitchStatus Data Length Count.
 */
#define DLC_GW_CH_SR_TCMSwitchStatus 8

/**
 * Message GW_CH_SR_TCMSwitchStatus cycle time.
 */
#define CYCLE_GW_CH_SR_TCMSwitchStatus 0

/**
 * Message GW_CH_SR_TCMSwitchStatus fast cycle time.
 */
#define FAST_GW_CH_SR_TCMSwitchStatus 0

/**
 * Initialise message GW_CH_SR_TCMSwitchStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_GW_CH_SR_TCMSwitchStatus(buf)                                                                             \
    {                                                                                                                  \
        INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(buf);                                             \
        INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(buf);                                              \
        INITSIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(buf);                                                 \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_EPS_GeneralStatus Message EPS_GeneralStatus (0x155)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum
 * - \ref SIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt
 * - \ref SIG_EPS_GeneralStatus_EPS_SteeringAngleValid
 * - \ref SIG_EPS_GeneralStatus_EPS_SteeringAngle
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message EPS_GeneralStatus configuration tuple.
 */
#define MSG_EPS_GeneralStatus 0x155, 0, 8

/**
 * Message EPS_GeneralStatus id.
 */
#define ID_EPS_GeneralStatus 0x155

/**
 * Message EPS_GeneralStatus extended id bit.
 */
#define EXT_EPS_GeneralStatus 0

/**
 * Message EPS_GeneralStatus Data Length Count.
 */
#define DLC_EPS_GeneralStatus 8

/**
 * Message EPS_GeneralStatus cycle time.
 */
#define CYCLE_EPS_GeneralStatus 0

/**
 * Message EPS_GeneralStatus fast cycle time.
 */
#define FAST_EPS_GeneralStatus 0

/**
 * Initialise message EPS_GeneralStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_EPS_GeneralStatus(buf)                                                                                    \
    {                                                                                                                  \
        INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(buf);                                                     \
        INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(buf);                                                      \
        INITSIG_EPS_GeneralStatus_EPS_SteeringAngleValid(buf);                                                         \
        INITSIG_EPS_GeneralStatus_EPS_SteeringAngle(buf);                                                              \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ACU_LongititudeAcc Message ACU_LongititudeAcc (0x235)
 *
 * Sent by \ref ECU_ACU.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum
 * - \ref SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt
 * - \ref SIG_ACU_LongititudeAcc_ACU_SensTemp
 * - \ref SIG_ACU_LongititudeAcc_ACU_LongitSensStateValid
 * - \ref SIG_ACU_LongititudeAcc_ACU_LongititudeAcc
 *
 * @ingroup ECU_ACU
 * @{
 */

/**
 * Message ACU_LongititudeAcc configuration tuple.
 */
#define MSG_ACU_LongititudeAcc 0x235, 0, 8

/**
 * Message ACU_LongititudeAcc id.
 */
#define ID_ACU_LongititudeAcc 0x235

/**
 * Message ACU_LongititudeAcc extended id bit.
 */
#define EXT_ACU_LongititudeAcc 0

/**
 * Message ACU_LongititudeAcc Data Length Count.
 */
#define DLC_ACU_LongititudeAcc 8

/**
 * Message ACU_LongititudeAcc cycle time.
 */
#define CYCLE_ACU_LongititudeAcc 0

/**
 * Message ACU_LongititudeAcc fast cycle time.
 */
#define FAST_ACU_LongititudeAcc 0

/**
 * Initialise message ACU_LongititudeAcc buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ACU_LongititudeAcc(buf)                                                                                   \
    {                                                                                                                  \
        INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(buf);                                                   \
        INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(buf);                                                    \
        INITSIG_ACU_LongititudeAcc_ACU_SensTemp(buf);                                                                  \
        INITSIG_ACU_LongititudeAcc_ACU_LongitSensStateValid(buf);                                                      \
        INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc(buf);                                                            \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ACU_LateralAccYawRate Message ACU_LateralAccYawRate (0x225)
 *
 * Sent by \ref ECU_ACU.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum
 * - \ref SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt
 * - \ref SIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid
 * - \ref SIG_ACU_LateralAccYawRate_ACU_YawRate
 * - \ref SIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid
 * - \ref SIG_ACU_LateralAccYawRate_ACU_LateralAcc
 *
 * @ingroup ECU_ACU
 * @{
 */

/**
 * Message ACU_LateralAccYawRate configuration tuple.
 */
#define MSG_ACU_LateralAccYawRate 0x225, 0, 8

/**
 * Message ACU_LateralAccYawRate id.
 */
#define ID_ACU_LateralAccYawRate 0x225

/**
 * Message ACU_LateralAccYawRate extended id bit.
 */
#define EXT_ACU_LateralAccYawRate 0

/**
 * Message ACU_LateralAccYawRate Data Length Count.
 */
#define DLC_ACU_LateralAccYawRate 8

/**
 * Message ACU_LateralAccYawRate cycle time.
 */
#define CYCLE_ACU_LateralAccYawRate 0

/**
 * Message ACU_LateralAccYawRate fast cycle time.
 */
#define FAST_ACU_LateralAccYawRate 0

/**
 * Initialise message ACU_LateralAccYawRate buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ACU_LateralAccYawRate(buf)                                                                                \
    {                                                                                                                  \
        INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(buf);                                            \
        INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(buf);                                             \
        INITSIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(buf);                                                  \
        INITSIG_ACU_LateralAccYawRate_ACU_YawRate(buf);                                                                \
        INITSIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid(buf);                                                  \
        INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc(buf);                                                             \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ADAS_DisplayInfo Message ADAS_DisplayInfo (0x354)
 *
 * Sent by \ref ECU_ADAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum
 * - \ref SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt
 * - \ref SIG_ADAS_DisplayInfo_ADAS_APOFuncStatus
 * - \ref SIG_ADAS_DisplayInfo_ADAS_APAFuncStatus
 *
 * @ingroup ECU_ADAS
 * @{
 */

/**
 * Message ADAS_DisplayInfo configuration tuple.
 */
#define MSG_ADAS_DisplayInfo 0x354, 0, 8

/**
 * Message ADAS_DisplayInfo id.
 */
#define ID_ADAS_DisplayInfo 0x354

/**
 * Message ADAS_DisplayInfo extended id bit.
 */
#define EXT_ADAS_DisplayInfo 0

/**
 * Message ADAS_DisplayInfo Data Length Count.
 */
#define DLC_ADAS_DisplayInfo 8

/**
 * Message ADAS_DisplayInfo cycle time.
 */
#define CYCLE_ADAS_DisplayInfo 0

/**
 * Message ADAS_DisplayInfo fast cycle time.
 */
#define FAST_ADAS_DisplayInfo 0

/**
 * Initialise message ADAS_DisplayInfo buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ADAS_DisplayInfo(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(buf);                                                       \
        INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(buf);                                                        \
        INITSIG_ADAS_DisplayInfo_ADAS_APOFuncStatus(buf);                                                              \
        INITSIG_ADAS_DisplayInfo_ADAS_APAFuncStatus(buf);                                                              \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_GeneralStatus Message ESP_GeneralStatus (0x295)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_GeneralStatus_ESP_EPBFault
 * - \ref SIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum
 * - \ref SIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt
 * - \ref SIG_ESP_GeneralStatus_ESP_EPBCtrlActive
 * - \ref SIG_ESP_GeneralStatus_ESP_VehicleSpeed
 * - \ref SIG_ESP_GeneralStatus_ESP_VehicleSpeedValid
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message ESP_GeneralStatus configuration tuple.
 */
#define MSG_ESP_GeneralStatus 0x295, 0, 8

/**
 * Message ESP_GeneralStatus id.
 */
#define ID_ESP_GeneralStatus 0x295

/**
 * Message ESP_GeneralStatus extended id bit.
 */
#define EXT_ESP_GeneralStatus 0

/**
 * Message ESP_GeneralStatus Data Length Count.
 */
#define DLC_ESP_GeneralStatus 8

/**
 * Message ESP_GeneralStatus cycle time.
 */
#define CYCLE_ESP_GeneralStatus 0

/**
 * Message ESP_GeneralStatus fast cycle time.
 */
#define FAST_ESP_GeneralStatus 0

/**
 * Initialise message ESP_GeneralStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_GeneralStatus(buf)                                                                                    \
    {                                                                                                                  \
        INITSIG_ESP_GeneralStatus_ESP_EPBFault(buf);                                                                   \
        INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(buf);                                                     \
        INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(buf);                                                      \
        INITSIG_ESP_GeneralStatus_ESP_EPBCtrlActive(buf);                                                              \
        INITSIG_ESP_GeneralStatus_ESP_VehicleSpeed(buf);                                                               \
        INITSIG_ESP_GeneralStatus_ESP_VehicleSpeedValid(buf);                                                          \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_RearWheelPulseStatus Message ESP_RearWheelPulseStatus (0x125)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 * - \ref SIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message ESP_RearWheelPulseStatus configuration tuple.
 */
#define MSG_ESP_RearWheelPulseStatus 0x125, 0, 8

/**
 * Message ESP_RearWheelPulseStatus id.
 */
#define ID_ESP_RearWheelPulseStatus 0x125

/**
 * Message ESP_RearWheelPulseStatus extended id bit.
 */
#define EXT_ESP_RearWheelPulseStatus 0

/**
 * Message ESP_RearWheelPulseStatus Data Length Count.
 */
#define DLC_ESP_RearWheelPulseStatus 8

/**
 * Message ESP_RearWheelPulseStatus cycle time.
 */
#define CYCLE_ESP_RearWheelPulseStatus 0

/**
 * Message ESP_RearWheelPulseStatus fast cycle time.
 */
#define FAST_ESP_RearWheelPulseStatus 0

/**
 * Initialise message ESP_RearWheelPulseStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_RearWheelPulseStatus(buf)                                                                             \
    {                                                                                                                  \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(buf);                                           \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(buf);                                            \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(buf);                                            \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(buf);                                                  \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(buf);                                            \
        INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(buf);                                                 \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_FrontWheelPulseStatus Message ESP_FrontWheelPulseStatus (0x105)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 * - \ref SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message ESP_FrontWheelPulseStatus configuration tuple.
 */
#define MSG_ESP_FrontWheelPulseStatus 0x105, 0, 8

/**
 * Message ESP_FrontWheelPulseStatus id.
 */
#define ID_ESP_FrontWheelPulseStatus 0x105

/**
 * Message ESP_FrontWheelPulseStatus extended id bit.
 */
#define EXT_ESP_FrontWheelPulseStatus 0

/**
 * Message ESP_FrontWheelPulseStatus Data Length Count.
 */
#define DLC_ESP_FrontWheelPulseStatus 8

/**
 * Message ESP_FrontWheelPulseStatus cycle time.
 */
#define CYCLE_ESP_FrontWheelPulseStatus 0

/**
 * Message ESP_FrontWheelPulseStatus fast cycle time.
 */
#define FAST_ESP_FrontWheelPulseStatus 0

/**
 * Initialise message ESP_FrontWheelPulseStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_FrontWheelPulseStatus(buf)                                                                            \
    {                                                                                                                  \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(buf);                                         \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(buf);                                          \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(buf);                                                 \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(buf);                                                 \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(buf);                                                 \
        INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(buf);                                                 \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_RearWheelSpdStatus Message ESP_RearWheelSpdStatus (0x275)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd
 * - \ref SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message ESP_RearWheelSpdStatus configuration tuple.
 */
#define MSG_ESP_RearWheelSpdStatus 0x275, 0, 8

/**
 * Message ESP_RearWheelSpdStatus id.
 */
#define ID_ESP_RearWheelSpdStatus 0x275

/**
 * Message ESP_RearWheelSpdStatus extended id bit.
 */
#define EXT_ESP_RearWheelSpdStatus 0

/**
 * Message ESP_RearWheelSpdStatus Data Length Count.
 */
#define DLC_ESP_RearWheelSpdStatus 8

/**
 * Message ESP_RearWheelSpdStatus cycle time.
 */
#define CYCLE_ESP_RearWheelSpdStatus 0

/**
 * Message ESP_RearWheelSpdStatus fast cycle time.
 */
#define FAST_ESP_RearWheelSpdStatus 0

/**
 * Initialise message ESP_RearWheelSpdStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_RearWheelSpdStatus(buf)                                                                               \
    {                                                                                                                  \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(buf);                                               \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(buf);                                                \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(buf);                                                            \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(buf);                                                       \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(buf);                                                            \
        INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(buf);                                                       \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_FrontWheelSpdStatus Message ESP_FrontWheelSpdStatus (0x255)
 *
 * Sent by \ref ECU_ESP.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed
 * - \ref SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid
 *
 * @ingroup ECU_ESP
 * @{
 */

/**
 * Message ESP_FrontWheelSpdStatus configuration tuple.
 */
#define MSG_ESP_FrontWheelSpdStatus 0x255, 0, 8

/**
 * Message ESP_FrontWheelSpdStatus id.
 */
#define ID_ESP_FrontWheelSpdStatus 0x255

/**
 * Message ESP_FrontWheelSpdStatus extended id bit.
 */
#define EXT_ESP_FrontWheelSpdStatus 0

/**
 * Message ESP_FrontWheelSpdStatus Data Length Count.
 */
#define DLC_ESP_FrontWheelSpdStatus 8

/**
 * Message ESP_FrontWheelSpdStatus cycle time.
 */
#define CYCLE_ESP_FrontWheelSpdStatus 0

/**
 * Message ESP_FrontWheelSpdStatus fast cycle time.
 */
#define FAST_ESP_FrontWheelSpdStatus 0

/**
 * Initialise message ESP_FrontWheelSpdStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_FrontWheelSpdStatus(buf)                                                                              \
    {                                                                                                                  \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(buf);                                             \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(buf);                                              \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(buf);                                                         \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(buf);                                                    \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(buf);                                                         \
        INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(buf);                                                    \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_VCU_CH_DriverCmd Message VCU_CH_DriverCmd (0x117)
 *
 * Sent by \ref ECU_VCU.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum
 * - \ref SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt
 * - \ref SIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 *
 * @ingroup ECU_VCU
 * @{
 */

/**
 * Message VCU_CH_DriverCmd configuration tuple.
 */
#define MSG_VCU_CH_DriverCmd 0x117, 0, 8

/**
 * Message VCU_CH_DriverCmd id.
 */
#define ID_VCU_CH_DriverCmd 0x117

/**
 * Message VCU_CH_DriverCmd extended id bit.
 */
#define EXT_VCU_CH_DriverCmd 0

/**
 * Message VCU_CH_DriverCmd Data Length Count.
 */
#define DLC_VCU_CH_DriverCmd 8

/**
 * Message VCU_CH_DriverCmd cycle time.
 */
#define CYCLE_VCU_CH_DriverCmd 0

/**
 * Message VCU_CH_DriverCmd fast cycle time.
 */
#define FAST_VCU_CH_DriverCmd 0

/**
 * Initialise message VCU_CH_DriverCmd buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_VCU_CH_DriverCmd(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(buf);                                                       \
        INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(buf);                                                        \
        INITSIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(buf);                                                  \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Diagnosis2 Message PAS_Diagnosis2 (0x654)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd
 * - \ref SIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived
 * - \ref SIG_PAS_Diagnosis2_PAS_ADAS_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_VCU_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_GW_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_ESP_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_EPS_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_ACU_LostCom
 * - \ref SIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure
 * - \ref SIG_PAS_Diagnosis2_PAS_ECUNVMFailure
 * - \ref SIG_PAS_Diagnosis2_PAS_ECUInternalFailure
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Diagnosis2 configuration tuple.
 */
#define MSG_PAS_Diagnosis2 0x654, 0, 8

/**
 * Message PAS_Diagnosis2 id.
 */
#define ID_PAS_Diagnosis2 0x654

/**
 * Message PAS_Diagnosis2 extended id bit.
 */
#define EXT_PAS_Diagnosis2 0

/**
 * Message PAS_Diagnosis2 Data Length Count.
 */
#define DLC_PAS_Diagnosis2 8

/**
 * Message PAS_Diagnosis2 cycle time.
 */
#define CYCLE_PAS_Diagnosis2 0

/**
 * Message PAS_Diagnosis2 fast cycle time.
 */
#define FAST_PAS_Diagnosis2 0

/**
 * Initialise message PAS_Diagnosis2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Diagnosis2(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(buf);                                                      \
        INITSIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(buf);                                                           \
        INITSIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(buf);                                                          \
        INITSIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(buf);                                                          \
        INITSIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(buf);                                                          \
        INITSIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(buf);                                                          \
        INITSIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(buf);                                                         \
        INITSIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(buf);                                                       \
        INITSIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(buf);                                                        \
        INITSIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(buf);                                                       \
        INITSIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(buf);                                                       \
        INITSIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(buf);                                                       \
        INITSIG_PAS_Diagnosis2_PAS_ADAS_LostCom(buf);                                                                  \
        INITSIG_PAS_Diagnosis2_PAS_VCU_LostCom(buf);                                                                   \
        INITSIG_PAS_Diagnosis2_PAS_GW_LostCom(buf);                                                                    \
        INITSIG_PAS_Diagnosis2_PAS_ESP_LostCom(buf);                                                                   \
        INITSIG_PAS_Diagnosis2_PAS_EPS_LostCom(buf);                                                                   \
        INITSIG_PAS_Diagnosis2_PAS_ACU_LostCom(buf);                                                                   \
        INITSIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(buf);                                                     \
        INITSIG_PAS_Diagnosis2_PAS_ECUNVMFailure(buf);                                                                 \
        INITSIG_PAS_Diagnosis2_PAS_ECUInternalFailure(buf);                                                            \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Diagnosis1 Message PAS_Diagnosis1 (0x653)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange
 * - \ref SIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch
 * - \ref SIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen
 * - \ref SIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh
 * - \ref SIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh
 * - \ref SIG_PAS_Diagnosis1_PAS_ContModuleComBusOff
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Diagnosis1 configuration tuple.
 */
#define MSG_PAS_Diagnosis1 0x653, 0, 8

/**
 * Message PAS_Diagnosis1 id.
 */
#define ID_PAS_Diagnosis1 0x653

/**
 * Message PAS_Diagnosis1 extended id bit.
 */
#define EXT_PAS_Diagnosis1 0

/**
 * Message PAS_Diagnosis1 Data Length Count.
 */
#define DLC_PAS_Diagnosis1 8

/**
 * Message PAS_Diagnosis1 cycle time.
 */
#define CYCLE_PAS_Diagnosis1 0

/**
 * Message PAS_Diagnosis1 fast cycle time.
 */
#define FAST_PAS_Diagnosis1 0

/**
 * Initialise message PAS_Diagnosis1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Diagnosis1(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(buf);                                                      \
        INITSIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(buf);                                                   \
        INITSIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat(buf);                                                               \
        INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(buf);                                                         \
        INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(buf);                                                       \
        INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(buf);                                                        \
        INITSIG_PAS_Diagnosis1_PAS_ContModuleComBusOff(buf);                                                           \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofRFM Message PAS_DistofRFM (0x348)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofRFM_PAS_DistofRFM_Checksum
 * - \ref SIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt
 * - \ref SIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance
 * - \ref SIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance
 * - \ref SIG_PAS_DistofRFM_PAS_RSRM_PDC
 * - \ref SIG_PAS_DistofRFM_PAS_Radar_RSF_Distance
 * - \ref SIG_PAS_DistofRFM_PAS_RSFM_PDC
 * - \ref SIG_PAS_DistofRFM_PAS_RSF_PDC
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofRFM configuration tuple.
 */
#define MSG_PAS_DistofRFM 0x348, 0, 8

/**
 * Message PAS_DistofRFM id.
 */
#define ID_PAS_DistofRFM 0x348

/**
 * Message PAS_DistofRFM extended id bit.
 */
#define EXT_PAS_DistofRFM 0

/**
 * Message PAS_DistofRFM Data Length Count.
 */
#define DLC_PAS_DistofRFM 8

/**
 * Message PAS_DistofRFM cycle time.
 */
#define CYCLE_PAS_DistofRFM 0

/**
 * Message PAS_DistofRFM fast cycle time.
 */
#define FAST_PAS_DistofRFM 0

/**
 * Initialise message PAS_DistofRFM buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofRFM(buf)                                                                                        \
    {                                                                                                                  \
        INITSIG_PAS_DistofRFM_PAS_DistofRFM_Checksum(buf);                                                             \
        INITSIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt(buf);                                                              \
        INITSIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance(buf);                                                            \
        INITSIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance(buf);                                                            \
        INITSIG_PAS_DistofRFM_PAS_RSRM_PDC(buf);                                                                       \
        INITSIG_PAS_DistofRFM_PAS_Radar_RSF_Distance(buf);                                                             \
        INITSIG_PAS_DistofRFM_PAS_RSFM_PDC(buf);                                                                       \
        INITSIG_PAS_DistofRFM_PAS_RSF_PDC(buf);                                                                        \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofLFM Message PAS_DistofLFM (0x338)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofLFM_PAS_DistofLFM_Checksum
 * - \ref SIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt
 * - \ref SIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance
 * - \ref SIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance
 * - \ref SIG_PAS_DistofLFM_PAS_LSRM_PDC
 * - \ref SIG_PAS_DistofLFM_PAS_Radar_LSF_Distance
 * - \ref SIG_PAS_DistofLFM_PAS_LSFM_PDC
 * - \ref SIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofLFM configuration tuple.
 */
#define MSG_PAS_DistofLFM 0x338, 0, 8

/**
 * Message PAS_DistofLFM id.
 */
#define ID_PAS_DistofLFM 0x338

/**
 * Message PAS_DistofLFM extended id bit.
 */
#define EXT_PAS_DistofLFM 0

/**
 * Message PAS_DistofLFM Data Length Count.
 */
#define DLC_PAS_DistofLFM 8

/**
 * Message PAS_DistofLFM cycle time.
 */
#define CYCLE_PAS_DistofLFM 0

/**
 * Message PAS_DistofLFM fast cycle time.
 */
#define FAST_PAS_DistofLFM 0

/**
 * Initialise message PAS_DistofLFM buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofLFM(buf)                                                                                        \
    {                                                                                                                  \
        INITSIG_PAS_DistofLFM_PAS_DistofLFM_Checksum(buf);                                                             \
        INITSIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt(buf);                                                              \
        INITSIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance(buf);                                                            \
        INITSIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance(buf);                                                            \
        INITSIG_PAS_DistofLFM_PAS_LSRM_PDC(buf);                                                                       \
        INITSIG_PAS_DistofLFM_PAS_Radar_LSF_Distance(buf);                                                             \
        INITSIG_PAS_DistofLFM_PAS_LSFM_PDC(buf);                                                                       \
        INITSIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(buf);                                                          \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofRMLR Message PAS_DistofRMLR (0x328)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum
 * - \ref SIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt
 * - \ref SIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance
 * - \ref SIG_PAS_DistofRMLR_PAS_Radar_RML_Distance
 * - \ref SIG_PAS_DistofRMLR_PAS_RMR_PDC
 * - \ref SIG_PAS_DistofRMLR_PAS_RML_PDC
 * - \ref SIG_PAS_DistofRMLR_PAS_Radar_RL_Distance
 * - \ref SIG_PAS_DistofRMLR_PAS_RL_PDC
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofRMLR configuration tuple.
 */
#define MSG_PAS_DistofRMLR 0x328, 0, 8

/**
 * Message PAS_DistofRMLR id.
 */
#define ID_PAS_DistofRMLR 0x328

/**
 * Message PAS_DistofRMLR extended id bit.
 */
#define EXT_PAS_DistofRMLR 0

/**
 * Message PAS_DistofRMLR Data Length Count.
 */
#define DLC_PAS_DistofRMLR 8

/**
 * Message PAS_DistofRMLR cycle time.
 */
#define CYCLE_PAS_DistofRMLR 0

/**
 * Message PAS_DistofRMLR fast cycle time.
 */
#define FAST_PAS_DistofRMLR 0

/**
 * Initialise message PAS_DistofRMLR buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofRMLR(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(buf);                                                           \
        INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(buf);                                                            \
        INITSIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance(buf);                                                            \
        INITSIG_PAS_DistofRMLR_PAS_Radar_RML_Distance(buf);                                                            \
        INITSIG_PAS_DistofRMLR_PAS_RMR_PDC(buf);                                                                       \
        INITSIG_PAS_DistofRMLR_PAS_RML_PDC(buf);                                                                       \
        INITSIG_PAS_DistofRMLR_PAS_Radar_RL_Distance(buf);                                                             \
        INITSIG_PAS_DistofRMLR_PAS_RL_PDC(buf);                                                                        \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofFMLR Message PAS_DistofFMLR (0x318)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum
 * - \ref SIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt
 * - \ref SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance
 * - \ref SIG_PAS_DistofFMLR_PAS_Radar_FML_Distance
 * - \ref SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 * - \ref SIG_PAS_DistofFMLR_PAS_FML_PDC
 * - \ref SIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance
 * - \ref SIG_PAS_DistofFMLR_PAS_FL_PDC
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofFMLR configuration tuple.
 */
#define MSG_PAS_DistofFMLR 0x318, 0, 8

/**
 * Message PAS_DistofFMLR id.
 */
#define ID_PAS_DistofFMLR 0x318

/**
 * Message PAS_DistofFMLR extended id bit.
 */
#define EXT_PAS_DistofFMLR 0

/**
 * Message PAS_DistofFMLR Data Length Count.
 */
#define DLC_PAS_DistofFMLR 8

/**
 * Message PAS_DistofFMLR cycle time.
 */
#define CYCLE_PAS_DistofFMLR 0

/**
 * Message PAS_DistofFMLR fast cycle time.
 */
#define FAST_PAS_DistofFMLR 0

/**
 * Initialise message PAS_DistofFMLR buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofFMLR(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(buf);                                                           \
        INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(buf);                                                            \
        INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance(buf);                                                            \
        INITSIG_PAS_DistofFMLR_PAS_Radar_FML_Distance(buf);                                                            \
        INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(buf);                                                    \
        INITSIG_PAS_DistofFMLR_PAS_FML_PDC(buf);                                                                       \
        INITSIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance(buf);                                                            \
        INITSIG_PAS_DistofFMLR_PAS_FL_PDC(buf);                                                                        \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofRFR Message PAS_DistofRFR (0x317)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofRFR_PAS_DistofRFR_Checksum
 * - \ref SIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter
 * - \ref SIG_PAS_DistofRFR_PAS_Radar_RR_Distance
 * - \ref SIG_PAS_DistofRFR_PAS_PDC_MODE
 * - \ref SIG_PAS_DistofRFR_PAS_Radar_FR_Distance
 * - \ref SIG_PAS_DistofRFR_PAS_RR_PDC
 * - \ref SIG_PAS_DistofRFR_PAS_FR_PDC
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofRFR configuration tuple.
 */
#define MSG_PAS_DistofRFR 0x317, 0, 8

/**
 * Message PAS_DistofRFR id.
 */
#define ID_PAS_DistofRFR 0x317

/**
 * Message PAS_DistofRFR extended id bit.
 */
#define EXT_PAS_DistofRFR 0

/**
 * Message PAS_DistofRFR Data Length Count.
 */
#define DLC_PAS_DistofRFR 8

/**
 * Message PAS_DistofRFR cycle time.
 */
#define CYCLE_PAS_DistofRFR 0

/**
 * Message PAS_DistofRFR fast cycle time.
 */
#define FAST_PAS_DistofRFR 0

/**
 * Initialise message PAS_DistofRFR buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofRFR(buf)                                                                                        \
    {                                                                                                                  \
        INITSIG_PAS_DistofRFR_PAS_DistofRFR_Checksum(buf);                                                             \
        INITSIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(buf);                                                       \
        INITSIG_PAS_DistofRFR_PAS_Radar_RR_Distance(buf);                                                              \
        INITSIG_PAS_DistofRFR_PAS_PDC_MODE(buf);                                                                       \
        INITSIG_PAS_DistofRFR_PAS_Radar_FR_Distance(buf);                                                              \
        INITSIG_PAS_DistofRFR_PAS_RR_PDC(buf);                                                                         \
        INITSIG_PAS_DistofRFR_PAS_FR_PDC(buf);                                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_DistofRLR Message PAS_DistofRLR (0x327)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_DistofRLR_PAS_DistofRLR_Checksum
 * - \ref SIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt
 * - \ref SIG_PAS_DistofRLR_PAS_Radar_LSR_Distance
 * - \ref SIG_PAS_DistofRLR_PAS_Radar_RSR_Distance
 * - \ref SIG_PAS_DistofRLR_PAS_LSR_PDC
 * - \ref SIG_PAS_DistofRLR_PAS_RSR_PDC
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_DistofRLR configuration tuple.
 */
#define MSG_PAS_DistofRLR 0x327, 0, 8

/**
 * Message PAS_DistofRLR id.
 */
#define ID_PAS_DistofRLR 0x327

/**
 * Message PAS_DistofRLR extended id bit.
 */
#define EXT_PAS_DistofRLR 0

/**
 * Message PAS_DistofRLR Data Length Count.
 */
#define DLC_PAS_DistofRLR 8

/**
 * Message PAS_DistofRLR cycle time.
 */
#define CYCLE_PAS_DistofRLR 0

/**
 * Message PAS_DistofRLR fast cycle time.
 */
#define FAST_PAS_DistofRLR 0

/**
 * Initialise message PAS_DistofRLR buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_DistofRLR(buf)                                                                                        \
    {                                                                                                                  \
        INITSIG_PAS_DistofRLR_PAS_DistofRLR_Checksum(buf);                                                             \
        INITSIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt(buf);                                                              \
        INITSIG_PAS_DistofRLR_PAS_Radar_LSR_Distance(buf);                                                             \
        INITSIG_PAS_DistofRLR_PAS_Radar_RSR_Distance(buf);                                                             \
        INITSIG_PAS_DistofRLR_PAS_LSR_PDC(buf);                                                                        \
        INITSIG_PAS_DistofRLR_PAS_RSR_PDC(buf);                                                                        \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_SDW Message PAS_SDW (0x2a6)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 * - \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_Front
 * - \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 * - \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_SDW configuration tuple.
 */
#define MSG_PAS_SDW 0x2a6, 0, 8

/**
 * Message PAS_SDW id.
 */
#define ID_PAS_SDW 0x2a6

/**
 * Message PAS_SDW extended id bit.
 */
#define EXT_PAS_SDW 0

/**
 * Message PAS_SDW Data Length Count.
 */
#define DLC_PAS_SDW 8

/**
 * Message PAS_SDW cycle time.
 */
#define CYCLE_PAS_SDW 0

/**
 * Message PAS_SDW fast cycle time.
 */
#define FAST_PAS_SDW 0

/**
 * Initialise message PAS_SDW buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_SDW(buf)                                                                                              \
    {                                                                                                                  \
        INITSIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(buf);                                                            \
        INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_Front(buf);                                                            \
        INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(buf);                                                          \
        INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_R_DE Message PAS_Olo_R_DE (0x286)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_12
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_11
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_10
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_9
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_8
 * - \ref SIG_PAS_Olo_R_DE_USS_DE_7
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_R_DE configuration tuple.
 */
#define MSG_PAS_Olo_R_DE 0x286, 0, 8

/**
 * Message PAS_Olo_R_DE id.
 */
#define ID_PAS_Olo_R_DE 0x286

/**
 * Message PAS_Olo_R_DE extended id bit.
 */
#define EXT_PAS_Olo_R_DE 0

/**
 * Message PAS_Olo_R_DE Data Length Count.
 */
#define DLC_PAS_Olo_R_DE 8

/**
 * Message PAS_Olo_R_DE cycle time.
 */
#define CYCLE_PAS_Olo_R_DE 0

/**
 * Message PAS_Olo_R_DE fast cycle time.
 */
#define FAST_PAS_Olo_R_DE 0

/**
 * Initialise message PAS_Olo_R_DE buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_R_DE(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_Olo_R_DE_USS_DE_12(buf);                                                                           \
        INITSIG_PAS_Olo_R_DE_USS_DE_11(buf);                                                                           \
        INITSIG_PAS_Olo_R_DE_USS_DE_10(buf);                                                                           \
        INITSIG_PAS_Olo_R_DE_USS_DE_9(buf);                                                                            \
        INITSIG_PAS_Olo_R_DE_USS_DE_8(buf);                                                                            \
        INITSIG_PAS_Olo_R_DE_USS_DE_7(buf);                                                                            \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_F_DE Message PAS_Olo_F_DE (0x276)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_6
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_5
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_4
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_3
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_2
 * - \ref SIG_PAS_Olo_F_DE_USS_DE_1
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_F_DE configuration tuple.
 */
#define MSG_PAS_Olo_F_DE 0x276, 0, 8

/**
 * Message PAS_Olo_F_DE id.
 */
#define ID_PAS_Olo_F_DE 0x276

/**
 * Message PAS_Olo_F_DE extended id bit.
 */
#define EXT_PAS_Olo_F_DE 0

/**
 * Message PAS_Olo_F_DE Data Length Count.
 */
#define DLC_PAS_Olo_F_DE 8

/**
 * Message PAS_Olo_F_DE cycle time.
 */
#define CYCLE_PAS_Olo_F_DE 0

/**
 * Message PAS_Olo_F_DE fast cycle time.
 */
#define FAST_PAS_Olo_F_DE 0

/**
 * Initialise message PAS_Olo_F_DE buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_F_DE(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_Olo_F_DE_USS_DE_6(buf);                                                                            \
        INITSIG_PAS_Olo_F_DE_USS_DE_5(buf);                                                                            \
        INITSIG_PAS_Olo_F_DE_USS_DE_4(buf);                                                                            \
        INITSIG_PAS_Olo_F_DE_USS_DE_3(buf);                                                                            \
        INITSIG_PAS_Olo_F_DE_USS_DE_2(buf);                                                                            \
        INITSIG_PAS_Olo_F_DE_USS_DE_1(buf);                                                                            \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_R_CE Message PAS_Olo_R_CE (0x266)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12
 * - \ref SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11
 * - \ref SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10
 * - \ref SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9
 * - \ref SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_R_CE configuration tuple.
 */
#define MSG_PAS_Olo_R_CE 0x266, 0, 8

/**
 * Message PAS_Olo_R_CE id.
 */
#define ID_PAS_Olo_R_CE 0x266

/**
 * Message PAS_Olo_R_CE extended id bit.
 */
#define EXT_PAS_Olo_R_CE 0

/**
 * Message PAS_Olo_R_CE Data Length Count.
 */
#define DLC_PAS_Olo_R_CE 8

/**
 * Message PAS_Olo_R_CE cycle time.
 */
#define CYCLE_PAS_Olo_R_CE 0

/**
 * Message PAS_Olo_R_CE fast cycle time.
 */
#define FAST_PAS_Olo_R_CE 0

/**
 * Initialise message PAS_Olo_R_CE buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_R_CE(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(buf);                                                              \
        INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(buf);                                                              \
        INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(buf);                                                               \
        INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(buf);                                                                \
        INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(buf);                                                                \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_F_CE Message PAS_Olo_F_CE (0x256)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6
 * - \ref SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5
 * - \ref SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4
 * - \ref SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3
 * - \ref SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_F_CE configuration tuple.
 */
#define MSG_PAS_Olo_F_CE 0x256, 0, 8

/**
 * Message PAS_Olo_F_CE id.
 */
#define ID_PAS_Olo_F_CE 0x256

/**
 * Message PAS_Olo_F_CE extended id bit.
 */
#define EXT_PAS_Olo_F_CE 0

/**
 * Message PAS_Olo_F_CE Data Length Count.
 */
#define DLC_PAS_Olo_F_CE 8

/**
 * Message PAS_Olo_F_CE cycle time.
 */
#define CYCLE_PAS_Olo_F_CE 0

/**
 * Message PAS_Olo_F_CE fast cycle time.
 */
#define FAST_PAS_Olo_F_CE 0

/**
 * Initialise message PAS_Olo_F_CE buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_F_CE(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(buf);                                                                \
        INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(buf);                                                                \
        INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(buf);                                                                \
        INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(buf);                                                                \
        INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(buf);                                                                \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_TypeandHight2 Message PAS_Olo_TypeandHight2 (0x269)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum
 * - \ref SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 * - \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_TypeandHight2 configuration tuple.
 */
#define MSG_PAS_Olo_TypeandHight2 0x269, 0, 8

/**
 * Message PAS_Olo_TypeandHight2 id.
 */
#define ID_PAS_Olo_TypeandHight2 0x269

/**
 * Message PAS_Olo_TypeandHight2 extended id bit.
 */
#define EXT_PAS_Olo_TypeandHight2 0

/**
 * Message PAS_Olo_TypeandHight2 Data Length Count.
 */
#define DLC_PAS_Olo_TypeandHight2 8

/**
 * Message PAS_Olo_TypeandHight2 cycle time.
 */
#define CYCLE_PAS_Olo_TypeandHight2 0

/**
 * Message PAS_Olo_TypeandHight2 fast cycle time.
 */
#define FAST_PAS_Olo_TypeandHight2 0

/**
 * Initialise message PAS_Olo_TypeandHight2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_TypeandHight2(buf)                                                                                \
    {                                                                                                                  \
        INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(buf);                                             \
        INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(buf);                                              \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(buf);                                                          \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(buf);                                                        \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(buf);                                                          \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(buf);                                                        \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(buf);                                                          \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(buf);                                                        \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_TypeandHight1 Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum
 * - \ref SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 * - \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_TypeandHight1 configuration tuple.
 */
#define MSG_PAS_Olo_TypeandHight1 0x259, 0, 8

/**
 * Message PAS_Olo_TypeandHight1 id.
 */
#define ID_PAS_Olo_TypeandHight1 0x259

/**
 * Message PAS_Olo_TypeandHight1 extended id bit.
 */
#define EXT_PAS_Olo_TypeandHight1 0

/**
 * Message PAS_Olo_TypeandHight1 Data Length Count.
 */
#define DLC_PAS_Olo_TypeandHight1 8

/**
 * Message PAS_Olo_TypeandHight1 cycle time.
 */
#define CYCLE_PAS_Olo_TypeandHight1 0

/**
 * Message PAS_Olo_TypeandHight1 fast cycle time.
 */
#define FAST_PAS_Olo_TypeandHight1 0

/**
 * Initialise message PAS_Olo_TypeandHight1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_TypeandHight1(buf)                                                                                \
    {                                                                                                                  \
        INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(buf);                                             \
        INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(buf);                                              \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(buf);                                                         \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(buf);                                                           \
        INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj12Dist Message PAS_Olo_Obj12Dist (0x308)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj12Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj12Dist 0x308, 0, 8

/**
 * Message PAS_Olo_Obj12Dist id.
 */
#define ID_PAS_Olo_Obj12Dist 0x308

/**
 * Message PAS_Olo_Obj12Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj12Dist 0

/**
 * Message PAS_Olo_Obj12Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj12Dist 8

/**
 * Message PAS_Olo_Obj12Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj12Dist 0

/**
 * Message PAS_Olo_Obj12Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj12Dist 0

/**
 * Initialise message PAS_Olo_Obj12Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj12Dist(buf)                                                                                    \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(buf);                                                     \
        INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(buf);                                                      \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(buf);                                                             \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(buf);                                                       \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj11Dist Message PAS_Olo_Obj11Dist (0x2f8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj11Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj11Dist 0x2f8, 0, 8

/**
 * Message PAS_Olo_Obj11Dist id.
 */
#define ID_PAS_Olo_Obj11Dist 0x2f8

/**
 * Message PAS_Olo_Obj11Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj11Dist 0

/**
 * Message PAS_Olo_Obj11Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj11Dist 8

/**
 * Message PAS_Olo_Obj11Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj11Dist 0

/**
 * Message PAS_Olo_Obj11Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj11Dist 0

/**
 * Initialise message PAS_Olo_Obj11Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj11Dist(buf)                                                                                    \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(buf);                                                     \
        INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(buf);                                                      \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(buf);                                                             \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(buf);                                                       \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj10Dist Message PAS_Olo_Obj10Dist (0x2e8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj10Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj10Dist 0x2e8, 0, 8

/**
 * Message PAS_Olo_Obj10Dist id.
 */
#define ID_PAS_Olo_Obj10Dist 0x2e8

/**
 * Message PAS_Olo_Obj10Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj10Dist 0

/**
 * Message PAS_Olo_Obj10Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj10Dist 8

/**
 * Message PAS_Olo_Obj10Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj10Dist 0

/**
 * Message PAS_Olo_Obj10Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj10Dist 0

/**
 * Initialise message PAS_Olo_Obj10Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj10Dist(buf)                                                                                    \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(buf);                                                     \
        INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(buf);                                                      \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(buf);                                                             \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(buf);                                                      \
        INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(buf);                                                       \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj9Dist Message PAS_Olo_Obj9Dist (0x2d8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj9Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj9Dist 0x2d8, 0, 8

/**
 * Message PAS_Olo_Obj9Dist id.
 */
#define ID_PAS_Olo_Obj9Dist 0x2d8

/**
 * Message PAS_Olo_Obj9Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj9Dist 0

/**
 * Message PAS_Olo_Obj9Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj9Dist 8

/**
 * Message PAS_Olo_Obj9Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj9Dist 0

/**
 * Message PAS_Olo_Obj9Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj9Dist 0

/**
 * Initialise message PAS_Olo_Obj9Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj9Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj8Dist Message PAS_Olo_Obj8Dist (0x2c8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj8Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj8Dist 0x2c8, 0, 8

/**
 * Message PAS_Olo_Obj8Dist id.
 */
#define ID_PAS_Olo_Obj8Dist 0x2c8

/**
 * Message PAS_Olo_Obj8Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj8Dist 0

/**
 * Message PAS_Olo_Obj8Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj8Dist 8

/**
 * Message PAS_Olo_Obj8Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj8Dist 0

/**
 * Message PAS_Olo_Obj8Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj8Dist 0

/**
 * Initialise message PAS_Olo_Obj8Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj8Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj7Dist Message PAS_Olo_Obj7Dist (0x2b8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj7Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj7Dist 0x2b8, 0, 8

/**
 * Message PAS_Olo_Obj7Dist id.
 */
#define ID_PAS_Olo_Obj7Dist 0x2b8

/**
 * Message PAS_Olo_Obj7Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj7Dist 0

/**
 * Message PAS_Olo_Obj7Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj7Dist 8

/**
 * Message PAS_Olo_Obj7Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj7Dist 0

/**
 * Message PAS_Olo_Obj7Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj7Dist 0

/**
 * Initialise message PAS_Olo_Obj7Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj7Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj6Dist Message PAS_Olo_Obj6Dist (0x2a8)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj6Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj6Dist 0x2a8, 0, 8

/**
 * Message PAS_Olo_Obj6Dist id.
 */
#define ID_PAS_Olo_Obj6Dist 0x2a8

/**
 * Message PAS_Olo_Obj6Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj6Dist 0

/**
 * Message PAS_Olo_Obj6Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj6Dist 8

/**
 * Message PAS_Olo_Obj6Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj6Dist 0

/**
 * Message PAS_Olo_Obj6Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj6Dist 0

/**
 * Initialise message PAS_Olo_Obj6Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj6Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj5Dist Message PAS_Olo_Obj5Dist (0x298)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj5Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj5Dist 0x298, 0, 8

/**
 * Message PAS_Olo_Obj5Dist id.
 */
#define ID_PAS_Olo_Obj5Dist 0x298

/**
 * Message PAS_Olo_Obj5Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj5Dist 0

/**
 * Message PAS_Olo_Obj5Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj5Dist 8

/**
 * Message PAS_Olo_Obj5Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj5Dist 0

/**
 * Message PAS_Olo_Obj5Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj5Dist 0

/**
 * Initialise message PAS_Olo_Obj5Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj5Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj4Dist Message PAS_Olo_Obj4Dist (0x288)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj4Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj4Dist 0x288, 0, 8

/**
 * Message PAS_Olo_Obj4Dist id.
 */
#define ID_PAS_Olo_Obj4Dist 0x288

/**
 * Message PAS_Olo_Obj4Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj4Dist 0

/**
 * Message PAS_Olo_Obj4Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj4Dist 8

/**
 * Message PAS_Olo_Obj4Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj4Dist 0

/**
 * Message PAS_Olo_Obj4Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj4Dist 0

/**
 * Initialise message PAS_Olo_Obj4Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj4Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj3Dist Message PAS_Olo_Obj3Dist (0x278)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj3Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj3Dist 0x278, 0, 8

/**
 * Message PAS_Olo_Obj3Dist id.
 */
#define ID_PAS_Olo_Obj3Dist 0x278

/**
 * Message PAS_Olo_Obj3Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj3Dist 0

/**
 * Message PAS_Olo_Obj3Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj3Dist 8

/**
 * Message PAS_Olo_Obj3Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj3Dist 0

/**
 * Message PAS_Olo_Obj3Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj3Dist 0

/**
 * Initialise message PAS_Olo_Obj3Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj3Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj2Dist Message PAS_Olo_Obj2Dist (0x268)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj2Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj2Dist 0x268, 0, 8

/**
 * Message PAS_Olo_Obj2Dist id.
 */
#define ID_PAS_Olo_Obj2Dist 0x268

/**
 * Message PAS_Olo_Obj2Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj2Dist 0

/**
 * Message PAS_Olo_Obj2Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj2Dist 8

/**
 * Message PAS_Olo_Obj2Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj2Dist 0

/**
 * Message PAS_Olo_Obj2Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj2Dist 0

/**
 * Initialise message PAS_Olo_Obj2Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj2Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Olo_Obj1Dist Message PAS_Olo_Obj1Dist (0x258)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum
 * - \ref SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir
 * - \ref SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Olo_Obj1Dist configuration tuple.
 */
#define MSG_PAS_Olo_Obj1Dist 0x258, 0, 8

/**
 * Message PAS_Olo_Obj1Dist id.
 */
#define ID_PAS_Olo_Obj1Dist 0x258

/**
 * Message PAS_Olo_Obj1Dist extended id bit.
 */
#define EXT_PAS_Olo_Obj1Dist 0

/**
 * Message PAS_Olo_Obj1Dist Data Length Count.
 */
#define DLC_PAS_Olo_Obj1Dist 8

/**
 * Message PAS_Olo_Obj1Dist cycle time.
 */
#define CYCLE_PAS_Olo_Obj1Dist 0

/**
 * Message PAS_Olo_Obj1Dist fast cycle time.
 */
#define FAST_PAS_Olo_Obj1Dist 0

/**
 * Initialise message PAS_Olo_Obj1Dist buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Olo_Obj1Dist(buf)                                                                                     \
    {                                                                                                                  \
        INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(buf);                                                       \
        INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(buf);                                                        \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(buf);                                                               \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(buf);                                                        \
        INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Right3_Obj2 Message PAS_Right3_Obj2 (0x337)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum
 * - \ref SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt
 * - \ref SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir
 * - \ref SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir
 * - \ref SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Right3_Obj2 configuration tuple.
 */
#define MSG_PAS_Right3_Obj2 0x337, 0, 8

/**
 * Message PAS_Right3_Obj2 id.
 */
#define ID_PAS_Right3_Obj2 0x337

/**
 * Message PAS_Right3_Obj2 extended id bit.
 */
#define EXT_PAS_Right3_Obj2 0

/**
 * Message PAS_Right3_Obj2 Data Length Count.
 */
#define DLC_PAS_Right3_Obj2 8

/**
 * Message PAS_Right3_Obj2 cycle time.
 */
#define CYCLE_PAS_Right3_Obj2 0

/**
 * Message PAS_Right3_Obj2 fast cycle time.
 */
#define FAST_PAS_Right3_Obj2 0

/**
 * Initialise message PAS_Right3_Obj2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Right3_Obj2(buf)                                                                                      \
    {                                                                                                                  \
        INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(buf);                                                         \
        INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(buf);                                                          \
        INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(buf);                                                        \
        INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(buf);                                                        \
        INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(buf);                                                  \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Right3_Obj1 Message PAS_Right3_Obj1 (0x336)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum
 * - \ref SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt
 * - \ref SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir
 * - \ref SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir
 * - \ref SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Right3_Obj1 configuration tuple.
 */
#define MSG_PAS_Right3_Obj1 0x336, 0, 8

/**
 * Message PAS_Right3_Obj1 id.
 */
#define ID_PAS_Right3_Obj1 0x336

/**
 * Message PAS_Right3_Obj1 extended id bit.
 */
#define EXT_PAS_Right3_Obj1 0

/**
 * Message PAS_Right3_Obj1 Data Length Count.
 */
#define DLC_PAS_Right3_Obj1 8

/**
 * Message PAS_Right3_Obj1 cycle time.
 */
#define CYCLE_PAS_Right3_Obj1 0

/**
 * Message PAS_Right3_Obj1 fast cycle time.
 */
#define FAST_PAS_Right3_Obj1 0

/**
 * Initialise message PAS_Right3_Obj1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Right3_Obj1(buf)                                                                                      \
    {                                                                                                                  \
        INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(buf);                                                         \
        INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(buf);                                                          \
        INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(buf);                                                        \
        INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(buf);                                                        \
        INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(buf);                                                  \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Right2 Message PAS_Right2 (0x326)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Right2_PAS_PSL_Right2_PS_Depth
 * - \ref SIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Right2 configuration tuple.
 */
#define MSG_PAS_Right2 0x326, 0, 8

/**
 * Message PAS_Right2 id.
 */
#define ID_PAS_Right2 0x326

/**
 * Message PAS_Right2 extended id bit.
 */
#define EXT_PAS_Right2 0

/**
 * Message PAS_Right2 Data Length Count.
 */
#define DLC_PAS_Right2 8

/**
 * Message PAS_Right2 cycle time.
 */
#define CYCLE_PAS_Right2 0

/**
 * Message PAS_Right2 fast cycle time.
 */
#define FAST_PAS_Right2 0

/**
 * Initialise message PAS_Right2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Right2(buf)                                                                                           \
    {                                                                                                                  \
        INITSIG_PAS_Right2_PAS_PSL_Right2_PS_Depth(buf);                                                               \
        INITSIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(buf);                                                      \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Right1 Message PAS_Right1 (0x316)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_Checksum
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_RollCnt
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_IndState
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_IndType
 * - \ref SIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound
 * - \ref SIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_Length
 * - \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 * - \ref SIG_PAS_Right1_PAS_PSL_Right_PS_ID
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Right1 configuration tuple.
 */
#define MSG_PAS_Right1 0x316, 0, 8

/**
 * Message PAS_Right1 id.
 */
#define ID_PAS_Right1 0x316

/**
 * Message PAS_Right1 extended id bit.
 */
#define EXT_PAS_Right1 0

/**
 * Message PAS_Right1 Data Length Count.
 */
#define DLC_PAS_Right1 8

/**
 * Message PAS_Right1 cycle time.
 */
#define CYCLE_PAS_Right1 0

/**
 * Message PAS_Right1 fast cycle time.
 */
#define FAST_PAS_Right1 0

/**
 * Initialise message PAS_Right1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Right1(buf)                                                                                           \
    {                                                                                                                  \
        INITSIG_PAS_Right1_PAS_PSL_Right1_Checksum(buf);                                                               \
        INITSIG_PAS_Right1_PAS_PSL_Right1_RollCnt(buf);                                                                \
        INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndState(buf);                                                            \
        INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndType(buf);                                                             \
        INITSIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(buf);                                                      \
        INITSIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(buf);                                                        \
        INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation(buf);                                                         \
        INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Length(buf);                                                              \
        INITSIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(buf);                                                          \
        INITSIG_PAS_Right1_PAS_PSL_Right_PS_ID(buf);                                                                   \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Left3_Obj2 Message PAS_Left3_Obj2 (0x334)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum
 * - \ref SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt
 * - \ref SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir
 * - \ref SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir
 * - \ref SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Left3_Obj2 configuration tuple.
 */
#define MSG_PAS_Left3_Obj2 0x334, 0, 8

/**
 * Message PAS_Left3_Obj2 id.
 */
#define ID_PAS_Left3_Obj2 0x334

/**
 * Message PAS_Left3_Obj2 extended id bit.
 */
#define EXT_PAS_Left3_Obj2 0

/**
 * Message PAS_Left3_Obj2 Data Length Count.
 */
#define DLC_PAS_Left3_Obj2 8

/**
 * Message PAS_Left3_Obj2 cycle time.
 */
#define CYCLE_PAS_Left3_Obj2 0

/**
 * Message PAS_Left3_Obj2 fast cycle time.
 */
#define FAST_PAS_Left3_Obj2 0

/**
 * Initialise message PAS_Left3_Obj2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Left3_Obj2(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(buf);                                                           \
        INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(buf);                                                            \
        INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(buf);                                                          \
        INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(buf);                                                          \
        INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(buf);                                                    \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Left3_Obj1 Message PAS_Left3_Obj1 (0x335)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum
 * - \ref SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt
 * - \ref SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir
 * - \ref SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir
 * - \ref SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Left3_Obj1 configuration tuple.
 */
#define MSG_PAS_Left3_Obj1 0x335, 0, 8

/**
 * Message PAS_Left3_Obj1 id.
 */
#define ID_PAS_Left3_Obj1 0x335

/**
 * Message PAS_Left3_Obj1 extended id bit.
 */
#define EXT_PAS_Left3_Obj1 0

/**
 * Message PAS_Left3_Obj1 Data Length Count.
 */
#define DLC_PAS_Left3_Obj1 8

/**
 * Message PAS_Left3_Obj1 cycle time.
 */
#define CYCLE_PAS_Left3_Obj1 0

/**
 * Message PAS_Left3_Obj1 fast cycle time.
 */
#define FAST_PAS_Left3_Obj1 0

/**
 * Initialise message PAS_Left3_Obj1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Left3_Obj1(buf)                                                                                       \
    {                                                                                                                  \
        INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(buf);                                                           \
        INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(buf);                                                            \
        INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(buf);                                                          \
        INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(buf);                                                          \
        INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(buf);                                                    \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Left2 Message PAS_Left2 (0x325)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Left2_PAS_PSL_Left2_PS_depth
 * - \ref SIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Left2 configuration tuple.
 */
#define MSG_PAS_Left2 0x325, 0, 8

/**
 * Message PAS_Left2 id.
 */
#define ID_PAS_Left2 0x325

/**
 * Message PAS_Left2 extended id bit.
 */
#define EXT_PAS_Left2 0

/**
 * Message PAS_Left2 Data Length Count.
 */
#define DLC_PAS_Left2 8

/**
 * Message PAS_Left2 cycle time.
 */
#define CYCLE_PAS_Left2 0

/**
 * Message PAS_Left2 fast cycle time.
 */
#define FAST_PAS_Left2 0

/**
 * Initialise message PAS_Left2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Left2(buf)                                                                                            \
    {                                                                                                                  \
        INITSIG_PAS_Left2_PAS_PSL_Left2_PS_depth(buf);                                                                 \
        INITSIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus(buf);                                                          \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_Left1 Message PAS_Left1 (0x315)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_Left1_PAS_Left1_Checksum
 * - \ref SIG_PAS_Left1_PAS_Left1_RollCnt
 * - \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_IndState
 * - \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_IndType
 * - \ref SIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound
 * - \ref SIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound
 * - \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation
 * - \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_Length
 * - \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 * - \ref SIG_PAS_Left1_PAS_PSL_Left_PS_ID
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_Left1 configuration tuple.
 */
#define MSG_PAS_Left1 0x315, 0, 8

/**
 * Message PAS_Left1 id.
 */
#define ID_PAS_Left1 0x315

/**
 * Message PAS_Left1 extended id bit.
 */
#define EXT_PAS_Left1 0

/**
 * Message PAS_Left1 Data Length Count.
 */
#define DLC_PAS_Left1 8

/**
 * Message PAS_Left1 cycle time.
 */
#define CYCLE_PAS_Left1 0

/**
 * Message PAS_Left1 fast cycle time.
 */
#define FAST_PAS_Left1 0

/**
 * Initialise message PAS_Left1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_Left1(buf)                                                                                            \
    {                                                                                                                  \
        INITSIG_PAS_Left1_PAS_Left1_Checksum(buf);                                                                     \
        INITSIG_PAS_Left1_PAS_Left1_RollCnt(buf);                                                                      \
        INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndState(buf);                                                              \
        INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndType(buf);                                                               \
        INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(buf);                                                       \
        INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(buf);                                                          \
        INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation(buf);                                                           \
        INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Length(buf);                                                                \
        INITSIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(buf);                                                            \
        INITSIG_PAS_Left1_PAS_PSL_Left_PS_ID(buf);                                                                     \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_SVAStatus Message PAS_SVAStatus (0x211)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt
 * - \ref SIG_PAS_SVAStatus_PAS_SVAStatus_Checksum
 * - \ref SIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 * - \ref SIG_PAS_SVAStatus_PAS_SVAOpMode
 * - \ref SIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_SVAStatus configuration tuple.
 */
#define MSG_PAS_SVAStatus 0x211, 0, 8

/**
 * Message PAS_SVAStatus id.
 */
#define ID_PAS_SVAStatus 0x211

/**
 * Message PAS_SVAStatus extended id bit.
 */
#define EXT_PAS_SVAStatus 0

/**
 * Message PAS_SVAStatus Data Length Count.
 */
#define DLC_PAS_SVAStatus 8

/**
 * Message PAS_SVAStatus cycle time.
 */
#define CYCLE_PAS_SVAStatus 0

/**
 * Message PAS_SVAStatus fast cycle time.
 */
#define FAST_PAS_SVAStatus 0

/**
 * Initialise message PAS_SVAStatus buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_SVAStatus(buf)                                                                                        \
    {                                                                                                                  \
        INITSIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt(buf);                                                              \
        INITSIG_PAS_SVAStatus_PAS_SVAStatus_Checksum(buf);                                                             \
        INITSIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd(buf);                                                        \
        INITSIG_PAS_SVAStatus_PAS_SVAOpMode(buf);                                                                      \
        INITSIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(buf);                                                         \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_OdoInfo5 Message PAS_OdoInfo5 (0x124)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum
 * - \ref SIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt
 * - \ref SIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_OdoInfo5 configuration tuple.
 */
#define MSG_PAS_OdoInfo5 0x124, 0, 8

/**
 * Message PAS_OdoInfo5 id.
 */
#define ID_PAS_OdoInfo5 0x124

/**
 * Message PAS_OdoInfo5 extended id bit.
 */
#define EXT_PAS_OdoInfo5 0

/**
 * Message PAS_OdoInfo5 Data Length Count.
 */
#define DLC_PAS_OdoInfo5 8

/**
 * Message PAS_OdoInfo5 cycle time.
 */
#define CYCLE_PAS_OdoInfo5 0

/**
 * Message PAS_OdoInfo5 fast cycle time.
 */
#define FAST_PAS_OdoInfo5 0

/**
 * Initialise message PAS_OdoInfo5 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_OdoInfo5(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(buf);                                                               \
        INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(buf);                                                                \
        INITSIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance(buf);                                                              \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_OdoInfo4 Message PAS_OdoInfo4 (0x123)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum
 * - \ref SIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt
 * - \ref SIG_PAS_OdoInfo4_PAS_Odo_YawAngle
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_OdoInfo4 configuration tuple.
 */
#define MSG_PAS_OdoInfo4 0x123, 0, 8

/**
 * Message PAS_OdoInfo4 id.
 */
#define ID_PAS_OdoInfo4 0x123

/**
 * Message PAS_OdoInfo4 extended id bit.
 */
#define EXT_PAS_OdoInfo4 0

/**
 * Message PAS_OdoInfo4 Data Length Count.
 */
#define DLC_PAS_OdoInfo4 8

/**
 * Message PAS_OdoInfo4 cycle time.
 */
#define CYCLE_PAS_OdoInfo4 0

/**
 * Message PAS_OdoInfo4 fast cycle time.
 */
#define FAST_PAS_OdoInfo4 0

/**
 * Initialise message PAS_OdoInfo4 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_OdoInfo4(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(buf);                                                               \
        INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(buf);                                                                \
        INITSIG_PAS_OdoInfo4_PAS_Odo_YawAngle(buf);                                                                    \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_OdoInfo3 Message PAS_OdoInfo3 (0x120)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum
 * - \ref SIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt
 * - \ref SIG_PAS_OdoInfo3_PAS_Odo_Y
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_OdoInfo3 configuration tuple.
 */
#define MSG_PAS_OdoInfo3 0x120, 0, 8

/**
 * Message PAS_OdoInfo3 id.
 */
#define ID_PAS_OdoInfo3 0x120

/**
 * Message PAS_OdoInfo3 extended id bit.
 */
#define EXT_PAS_OdoInfo3 0

/**
 * Message PAS_OdoInfo3 Data Length Count.
 */
#define DLC_PAS_OdoInfo3 8

/**
 * Message PAS_OdoInfo3 cycle time.
 */
#define CYCLE_PAS_OdoInfo3 0

/**
 * Message PAS_OdoInfo3 fast cycle time.
 */
#define FAST_PAS_OdoInfo3 0

/**
 * Initialise message PAS_OdoInfo3 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_OdoInfo3(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(buf);                                                               \
        INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(buf);                                                                \
        INITSIG_PAS_OdoInfo3_PAS_Odo_Y(buf);                                                                           \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_OdoInfo2 Message PAS_OdoInfo2 (0x122)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum
 * - \ref SIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt
 * - \ref SIG_PAS_OdoInfo2_PAS_Odo_TimeStamp
 * - \ref SIG_PAS_OdoInfo2_PAS_Odo_Kappa
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_OdoInfo2 configuration tuple.
 */
#define MSG_PAS_OdoInfo2 0x122, 0, 8

/**
 * Message PAS_OdoInfo2 id.
 */
#define ID_PAS_OdoInfo2 0x122

/**
 * Message PAS_OdoInfo2 extended id bit.
 */
#define EXT_PAS_OdoInfo2 0

/**
 * Message PAS_OdoInfo2 Data Length Count.
 */
#define DLC_PAS_OdoInfo2 8

/**
 * Message PAS_OdoInfo2 cycle time.
 */
#define CYCLE_PAS_OdoInfo2 0

/**
 * Message PAS_OdoInfo2 fast cycle time.
 */
#define FAST_PAS_OdoInfo2 0

/**
 * Initialise message PAS_OdoInfo2 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_OdoInfo2(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(buf);                                                               \
        INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(buf);                                                                \
        INITSIG_PAS_OdoInfo2_PAS_Odo_TimeStamp(buf);                                                                   \
        INITSIG_PAS_OdoInfo2_PAS_Odo_Kappa(buf);                                                                       \
    }

/**
 * @}
 */

/**
 * @defgroup MSG_PAS_OdoInfo1 Message PAS_OdoInfo1 (0x121)
 *
 * Sent by \ref ECU_PAS.
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt
 * - \ref SIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum
 * - \ref SIG_PAS_OdoInfo1_PAS_Odo_X
 *
 * @ingroup ECU_PAS
 * @{
 */

/**
 * Message PAS_OdoInfo1 configuration tuple.
 */
#define MSG_PAS_OdoInfo1 0x121, 0, 8

/**
 * Message PAS_OdoInfo1 id.
 */
#define ID_PAS_OdoInfo1 0x121

/**
 * Message PAS_OdoInfo1 extended id bit.
 */
#define EXT_PAS_OdoInfo1 0

/**
 * Message PAS_OdoInfo1 Data Length Count.
 */
#define DLC_PAS_OdoInfo1 8

/**
 * Message PAS_OdoInfo1 cycle time.
 */
#define CYCLE_PAS_OdoInfo1 0

/**
 * Message PAS_OdoInfo1 fast cycle time.
 */
#define FAST_PAS_OdoInfo1 0

/**
 * Initialise message PAS_OdoInfo1 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_PAS_OdoInfo1(buf)                                                                                         \
    {                                                                                                                  \
        INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(buf);                                                                \
        INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(buf);                                                               \
        INITSIG_PAS_OdoInfo1_PAS_Odo_X(buf);                                                                           \
    }

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte7 Signal PAS_DiagRespByte7 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte7
 * PASÕï¶ÏÏìÓ¦µÚ7×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte7 and \ref GET_PAS_DiagResp_PAS_DiagRespByte7 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte7 1, 0, 63, 8

/**
 * Signal PAS_DiagRespByte7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte7 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte7 1, 0, 63, 8, 0

/**
 * Get signal PAS_DiagRespByte7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte7(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte7(buf, val)                                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte7(buf) SET_PAS_DiagResp_PAS_DiagRespByte7(buf, 0)

/**
 * Signal PAS_DiagRespByte7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte7(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte7 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte7 0

/**
 * Signal PAS_DiagRespByte7 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte7 0

/**
 * Signal PAS_DiagRespByte7 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte7 255

/**
 * Signal PAS_DiagRespByte7 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte7 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte6 Signal PAS_DiagRespByte6 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte6
 * PASÕï¶ÏÏìÓ¦µÚ6×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte6 and \ref GET_PAS_DiagResp_PAS_DiagRespByte6 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte6 1, 0, 55, 8

/**
 * Signal PAS_DiagRespByte6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte6 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte6 1, 0, 55, 8, 0

/**
 * Get signal PAS_DiagRespByte6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte6(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte6(buf, val)                                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0xff << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte6(buf) SET_PAS_DiagResp_PAS_DiagRespByte6(buf, 0)

/**
 * Signal PAS_DiagRespByte6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte6(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte6 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte6 0

/**
 * Signal PAS_DiagRespByte6 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte6 0

/**
 * Signal PAS_DiagRespByte6 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte6 255

/**
 * Signal PAS_DiagRespByte6 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte6 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte5 Signal PAS_DiagRespByte5 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte5
 * PASÕï¶ÏÏìÓ¦µÚ5×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte5 and \ref GET_PAS_DiagResp_PAS_DiagRespByte5 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte5 1, 0, 47, 8

/**
 * Signal PAS_DiagRespByte5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte5 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte5 1, 0, 47, 8, 0

/**
 * Get signal PAS_DiagRespByte5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte5(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte5(buf, val)                                                                   \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte5(buf) SET_PAS_DiagResp_PAS_DiagRespByte5(buf, 0)

/**
 * Signal PAS_DiagRespByte5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte5(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte5 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte5 0

/**
 * Signal PAS_DiagRespByte5 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte5 0

/**
 * Signal PAS_DiagRespByte5 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte5 255

/**
 * Signal PAS_DiagRespByte5 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte5 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte4 Signal PAS_DiagRespByte4 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte4
 * PASÕï¶ÏÏìÓ¦µÚ4×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte4 and \ref GET_PAS_DiagResp_PAS_DiagRespByte4 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte4 1, 0, 39, 8

/**
 * Signal PAS_DiagRespByte4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte4 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte4 1, 0, 39, 8, 0

/**
 * Get signal PAS_DiagRespByte4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte4(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte4(buf, val)                                                                   \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte4(buf) SET_PAS_DiagResp_PAS_DiagRespByte4(buf, 0)

/**
 * Signal PAS_DiagRespByte4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte4(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte4 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte4 0

/**
 * Signal PAS_DiagRespByte4 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte4 0

/**
 * Signal PAS_DiagRespByte4 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte4 255

/**
 * Signal PAS_DiagRespByte4 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte4 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte3 Signal PAS_DiagRespByte3 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte3
 * PASÕï¶ÏÏìÓ¦µÚ3×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte3 and \ref GET_PAS_DiagResp_PAS_DiagRespByte3 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte3 1, 0, 31, 8

/**
 * Signal PAS_DiagRespByte3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte3 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte3 1, 0, 31, 8, 0

/**
 * Get signal PAS_DiagRespByte3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte3(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte3(buf, val)                                                                   \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte3(buf) SET_PAS_DiagResp_PAS_DiagRespByte3(buf, 0)

/**
 * Signal PAS_DiagRespByte3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte3(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte3 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte3 0

/**
 * Signal PAS_DiagRespByte3 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte3 0

/**
 * Signal PAS_DiagRespByte3 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte3 255

/**
 * Signal PAS_DiagRespByte3 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte3 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte2 Signal PAS_DiagRespByte2 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte2
 * PASÕï¶ÏÏìÓ¦µÚ2×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte2 and \ref GET_PAS_DiagResp_PAS_DiagRespByte2 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte2 1, 0, 23, 8

/**
 * Signal PAS_DiagRespByte2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte2 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte2 1, 0, 23, 8, 0

/**
 * Get signal PAS_DiagRespByte2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte2(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte2(buf, val)                                                                   \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte2(buf) SET_PAS_DiagResp_PAS_DiagRespByte2(buf, 0)

/**
 * Signal PAS_DiagRespByte2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte2(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte2 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte2 0

/**
 * Signal PAS_DiagRespByte2 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte2 0

/**
 * Signal PAS_DiagRespByte2 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte2 255

/**
 * Signal PAS_DiagRespByte2 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte2 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte1 Signal PAS_DiagRespByte1 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte1
 * PASÕï¶ÏÏìÓ¦µÚ1×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte1 and \ref GET_PAS_DiagResp_PAS_DiagRespByte1 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte1 1, 0, 15, 8

/**
 * Signal PAS_DiagRespByte1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte1 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte1 1, 0, 15, 8, 0

/**
 * Get signal PAS_DiagRespByte1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte1(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte1(buf, val)                                                                   \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte1(buf) SET_PAS_DiagResp_PAS_DiagRespByte1(buf, 0)

/**
 * Signal PAS_DiagRespByte1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte1(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte1 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte1 0

/**
 * Signal PAS_DiagRespByte1 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte1 0

/**
 * Signal PAS_DiagRespByte1 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte1 255

/**
 * Signal PAS_DiagRespByte1 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte1 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DiagResp_PAS_DiagRespByte0 Signal PAS_DiagRespByte0 of Message PAS_DiagResp (0x7da)
 *
 * PAS_Diagnostic Response Byte0
 * PASÕï¶ÏÏìÓ¦µÚ0×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DiagResp
 * @{
 */

/**
 * Signal PAS_DiagRespByte0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DiagResp_PAS_DiagRespByte0 and \ref GET_PAS_DiagResp_PAS_DiagRespByte0 instead.
 */
#define SIG_PAS_DiagResp_PAS_DiagRespByte0 1, 0, 7, 8

/**
 * Signal PAS_DiagRespByte0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DiagResp_PAS_DiagRespByte0 or \ref INIT_PAS_DiagResp instead.
 */
#define SETUP_PAS_DiagResp_PAS_DiagRespByte0 1, 0, 7, 8, 0

/**
 * Get signal PAS_DiagRespByte0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DiagResp_PAS_DiagRespByte0(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DiagRespByte0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DiagResp_PAS_DiagRespByte0(buf, val)                                                                   \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DiagRespByte0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DiagResp_PAS_DiagRespByte0(buf) SET_PAS_DiagResp_PAS_DiagRespByte0(buf, 0)

/**
 * Signal PAS_DiagRespByte0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DiagResp_PAS_DiagRespByte0(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DiagRespByte0 raw initial value.
 */
#define START_PAS_DiagResp_PAS_DiagRespByte0 0

/**
 * Signal PAS_DiagRespByte0 raw minimum value.
 */
#define MIN_PAS_DiagResp_PAS_DiagRespByte0 0

/**
 * Signal PAS_DiagRespByte0 raw maximum value.
 */
#define MAX_PAS_DiagResp_PAS_DiagRespByte0 255

/**
 * Signal PAS_DiagRespByte0 raw offset value.
 */
#define OFF_PAS_DiagResp_PAS_DiagRespByte0 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 Signal ADAS_GW_CH_Func_DiagReqByte7 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte7
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ7×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 1, 0, 63, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 1, 0, 63, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(buf, val)                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte7 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte7 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 Signal ADAS_GW_CH_Func_DiagReqByte6 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte6
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ6×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 1, 0, 55, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 1, 0, 55, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(buf, val)                                             \
    {                                                                                                                  \
        buf[6] &= ~(0xff << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte6 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte6 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 Signal ADAS_GW_CH_Func_DiagReqByte5 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte5
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ5×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 1, 0, 47, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 1, 0, 47, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(buf, val)                                             \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte5 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte5 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 Signal ADAS_GW_CH_Func_DiagReqByte4 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte4
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ4×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 1, 0, 39, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 1, 0, 39, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(buf, val)                                             \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte4 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte4 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 Signal ADAS_GW_CH_Func_DiagReqByte3 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte3
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ3×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 1, 0, 31, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 1, 0, 31, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(buf, val)                                             \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte3 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte3 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 Signal ADAS_GW_CH_Func_DiagReqByte2 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte2
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ2×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 1, 0, 23, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 1, 0, 23, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(buf, val)                                             \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte2 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte2 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 Signal ADAS_GW_CH_Func_DiagReqByte1 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte1
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ1×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 1, 0, 15, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 1, 0, 15, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(buf, val)                                             \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte1 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte1 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 Signal ADAS_GW_CH_Func_DiagReqByte0 of Message
 * ADAS_GW_CH_Func_DiagReq (0x7df)
 *
 * ADAS_GW_CH_Functional_Diagnostic Request Byte0
 * ADAS_GW_CH_FunctionalÕï¶ÏÇëÇóµÚ0×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_Func_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 and \ref
 *GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 instead.
 */
#define SIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 1, 0, 7, 8

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 or \ref INIT_ADAS_GW_CH_Func_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 1, 0, 7, 8, 0

/**
 * Get signal ADAS_GW_CH_Func_DiagReqByte0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(buf, val)                                             \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_Func_DiagReqByte0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(buf)                                              \
    SET_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(buf, 0)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 raw initial value.
 */
#define START_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 raw minimum value.
 */
#define MIN_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 0

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 raw maximum value.
 */
#define MAX_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 255

/**
 * Signal ADAS_GW_CH_Func_DiagReqByte0 raw offset value.
 */
#define OFF_ADAS_GW_CH_Func_DiagReq_ADAS_GW_CH_Func_DiagReqByte0 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 Signal ADAS_GW_CH_PAS_DiagReqByte7 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte7
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ7×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 1, 0, 63, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 1, 0, 63, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(buf, val)                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte7 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte7 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 Signal ADAS_GW_CH_PAS_DiagReqByte6 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte6
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ6×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 1, 0, 55, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 1, 0, 55, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(buf, val)                                               \
    {                                                                                                                  \
        buf[6] &= ~(0xff << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte6 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte6 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 Signal ADAS_GW_CH_PAS_DiagReqByte5 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte5
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ5×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 1, 0, 47, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 1, 0, 47, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(buf, val)                                               \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte5 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte5 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 Signal ADAS_GW_CH_PAS_DiagReqByte4 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte4
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ4×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 1, 0, 39, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 1, 0, 39, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(buf, val)                                               \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte4 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte4 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 Signal ADAS_GW_CH_PAS_DiagReqByte3 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte3
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ3×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 1, 0, 31, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 1, 0, 31, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(buf, val)                                               \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte3 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte3 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 Signal ADAS_GW_CH_PAS_DiagReqByte2 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte2
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ2×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 1, 0, 23, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 1, 0, 23, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(buf, val)                                               \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte2 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte2 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 Signal ADAS_GW_CH_PAS_DiagReqByte1 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte1
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ1×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 1, 0, 15, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 1, 0, 15, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(buf, val)                                               \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte1 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte1 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 Signal ADAS_GW_CH_PAS_DiagReqByte0 of Message
 * ADAS_GW_CH_PAS_DiagReq (0x7d2)
 *
 * ADAS_GW_CH_PAS_Diagnostic Request Byte0
 * ADAS_GW_CH_PASÕï¶ÏÇëÇóµÚ0×Ö½Ú
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_GW_CH_PAS_DiagReq
 * @{
 */

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 and \ref
 *GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 instead.
 */
#define SIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 1, 0, 7, 8

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 or \ref INIT_ADAS_GW_CH_PAS_DiagReq instead.
 */
#define SETUP_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 1, 0, 7, 8, 0

/**
 * Get signal ADAS_GW_CH_PAS_DiagReqByte0 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte0 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(buf, val)                                               \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_GW_CH_PAS_DiagReqByte0 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(buf)                                                \
    SET_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(buf, 0)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 raw initial value.
 */
#define START_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 raw minimum value.
 */
#define MIN_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 0

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 raw maximum value.
 */
#define MAX_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 255

/**
 * Signal ADAS_GW_CH_PAS_DiagReqByte0 raw offset value.
 */
#define OFF_ADAS_GW_CH_PAS_DiagReq_ADAS_GW_CH_PAS_DiagReqByte0 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum Signal SR_IPCSWStatus_Checksum of Message
 * GW_CH_SR_IPCSWStatus (0x330)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_IPCSWStatus
 * @{
 */

/**
 * Signal SR_IPCSWStatus_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum and \ref GET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum
 *instead.
 */
#define SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 1, 0, 63, 8

/**
 * Signal SR_IPCSWStatus_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum or \ref INIT_GW_CH_SR_IPCSWStatus instead.
 */
#define SETUP_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 1, 0, 63, 8, 0

/**
 * Get signal SR_IPCSWStatus_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal SR_IPCSWStatus_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal SR_IPCSWStatus_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(buf)                                                      \
    SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(buf, 0)

/**
 * Signal SR_IPCSWStatus_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal SR_IPCSWStatus_Checksum raw initial value.
 */
#define START_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 0

/**
 * Signal SR_IPCSWStatus_Checksum raw minimum value.
 */
#define MIN_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 0

/**
 * Signal SR_IPCSWStatus_Checksum raw maximum value.
 */
#define MAX_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 255

/**
 * Signal SR_IPCSWStatus_Checksum raw offset value.
 */
#define OFF_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt Signal SR_IPCSWStatus_RollCnt of Message
 * GW_CH_SR_IPCSWStatus (0x330)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_IPCSWStatus
 * @{
 */

/**
 * Signal SR_IPCSWStatus_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt and \ref GET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt
 *instead.
 */
#define SIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 1, 0, 55, 4

/**
 * Signal SR_IPCSWStatus_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt or \ref INIT_GW_CH_SR_IPCSWStatus instead.
 */
#define SETUP_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal SR_IPCSWStatus_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal SR_IPCSWStatus_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal SR_IPCSWStatus_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(buf) SET_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(buf, 0)

/**
 * Signal SR_IPCSWStatus_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal SR_IPCSWStatus_RollCnt raw initial value.
 */
#define START_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 0

/**
 * Signal SR_IPCSWStatus_RollCnt raw minimum value.
 */
#define MIN_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 0

/**
 * Signal SR_IPCSWStatus_RollCnt raw maximum value.
 */
#define MAX_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 15

/**
 * Signal SR_IPCSWStatus_RollCnt raw offset value.
 */
#define OFF_GW_CH_SR_IPCSWStatus_SR_IPCSWStatus_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq Signal IPC_BSDEnableReq of Message GW_CH_SR_IPCSWStatus (0x330)
 *
 * BSD Enable Request
 * BSDÊ¹ÄÜÇëÇó
 *
 * Contains the value table \ref ENUM_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_IPCSWStatus
 * @{
 */

/**
 * Signal IPC_BSDEnableReq configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq and \ref GET_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq instead.
 */
#define SIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 1, 0, 20, 1

/**
 * Signal IPC_BSDEnableReq setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq or \ref INIT_GW_CH_SR_IPCSWStatus instead.
 */
#define SETUP_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 1, 0, 20, 1, 0

/**
 * Get signal IPC_BSDEnableReq from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0))

/**
 * Set signal IPC_BSDEnableReq in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal IPC_BSDEnableReq in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(buf) SET_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(buf, 0)

/**
 * Signal IPC_BSDEnableReq value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq(x, fmt) ((x)*fmt)

/**
 * Signal IPC_BSDEnableReq raw initial value.
 */
#define START_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 0

/**
 * Signal IPC_BSDEnableReq raw minimum value.
 */
#define MIN_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 0

/**
 * Signal IPC_BSDEnableReq raw maximum value.
 */
#define MAX_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 1

/**
 * Signal IPC_BSDEnableReq raw offset value.
 */
#define OFF_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq 0

/**
 * @}
 */

/**
 * @defgroup ENUM_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq Value Table for Signal IPC_BSDEnableReq in Message
 * GW_CH_SR_IPCSWStatus (0x330)
 *
 * Enum values defined for \ref SIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq.
 *
 * @ingroup SIG_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq
 */

/**
 * Value table GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq entry Enable.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq
 */
#define GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq_Enable 1

/**
 * Value table GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq entry Disable.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq
 */
#define GW_CH_SR_IPCSWStatus_IPC_BSDEnableReq_Disable 0

/**
 * @defgroup SIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode Signal BCM_PowerMode of Message GW_CH_SR_IPCSWStatus (0x330)
 *
 * Power Mode
 * ÏµÍ³µçÔ´
 *
 * Contains the value table \ref ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_IPCSWStatus
 * @{
 */

/**
 * Signal BCM_PowerMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_IPCSWStatus_BCM_PowerMode and \ref GET_GW_CH_SR_IPCSWStatus_BCM_PowerMode instead.
 */
#define SIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode 1, 0, 1, 2

/**
 * Signal BCM_PowerMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode or \ref INIT_GW_CH_SR_IPCSWStatus instead.
 */
#define SETUP_GW_CH_SR_IPCSWStatus_BCM_PowerMode 1, 0, 1, 2, 0

/**
 * Get signal BCM_PowerMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_IPCSWStatus_BCM_PowerMode(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0))

/**
 * Set signal BCM_PowerMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_IPCSWStatus_BCM_PowerMode(buf, val)                                                               \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal BCM_PowerMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode(buf) SET_GW_CH_SR_IPCSWStatus_BCM_PowerMode(buf, 0)

/**
 * Signal BCM_PowerMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_IPCSWStatus_BCM_PowerMode(x, fmt) ((x)*fmt)

/**
 * Signal BCM_PowerMode raw initial value.
 */
#define START_GW_CH_SR_IPCSWStatus_BCM_PowerMode 0

/**
 * Signal BCM_PowerMode raw minimum value.
 */
#define MIN_GW_CH_SR_IPCSWStatus_BCM_PowerMode 0

/**
 * Signal BCM_PowerMode raw maximum value.
 */
#define MAX_GW_CH_SR_IPCSWStatus_BCM_PowerMode 3

/**
 * Signal BCM_PowerMode raw offset value.
 */
#define OFF_GW_CH_SR_IPCSWStatus_BCM_PowerMode 0

/**
 * @}
 */

/**
 * @defgroup ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode Value Table for Signal BCM_PowerMode in Message
 * GW_CH_SR_IPCSWStatus (0x330)
 *
 * Enum values defined for \ref SIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode.
 *
 * @ingroup SIG_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 */

/**
 * Value table GW_CH_SR_IPCSWStatus_BCM_PowerMode entry Invalid.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 */
#define GW_CH_SR_IPCSWStatus_BCM_PowerMode_Invalid 3

/**
 * Value table GW_CH_SR_IPCSWStatus_BCM_PowerMode entry ON.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 */
#define GW_CH_SR_IPCSWStatus_BCM_PowerMode_ON 2

/**
 * Value table GW_CH_SR_IPCSWStatus_BCM_PowerMode entry ACC.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 */
#define GW_CH_SR_IPCSWStatus_BCM_PowerMode_ACC 1

/**
 * Value table GW_CH_SR_IPCSWStatus_BCM_PowerMode entry OFF.
 *
 * @ingroup ENUM_GW_CH_SR_IPCSWStatus_BCM_PowerMode
 */
#define GW_CH_SR_IPCSWStatus_BCM_PowerMode_OFF 0

/**
 * @defgroup SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum Signal SR_OusideTemp_Checksum of Message
 * GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_OusideTempandOdo
 * @{
 */

/**
 * Signal SR_OusideTemp_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum and \ref
 *GET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum instead.
 */
#define SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 1, 0, 63, 8

/**
 * Signal SR_OusideTemp_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum or \ref INIT_GW_CH_SR_OusideTempandOdo instead.
 */
#define SETUP_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 1, 0, 63, 8, 0

/**
 * Get signal SR_OusideTemp_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal SR_OusideTemp_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(buf, val)                                                 \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal SR_OusideTemp_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(buf)                                                  \
    SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(buf, 0)

/**
 * Signal SR_OusideTemp_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal SR_OusideTemp_Checksum raw initial value.
 */
#define START_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 0

/**
 * Signal SR_OusideTemp_Checksum raw minimum value.
 */
#define MIN_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 0

/**
 * Signal SR_OusideTemp_Checksum raw maximum value.
 */
#define MAX_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 255

/**
 * Signal SR_OusideTemp_Checksum raw offset value.
 */
#define OFF_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt Signal SR_OusideTemp_RollCnt of Message
 * GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_OusideTempandOdo
 * @{
 */

/**
 * Signal SR_OusideTemp_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt and \ref
 *GET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt instead.
 */
#define SIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 1, 0, 55, 4

/**
 * Signal SR_OusideTemp_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt or \ref INIT_GW_CH_SR_OusideTempandOdo instead.
 */
#define SETUP_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal SR_OusideTemp_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal SR_OusideTemp_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(buf, val)                                                  \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal SR_OusideTemp_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(buf)                                                   \
    SET_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(buf, 0)

/**
 * Signal SR_OusideTemp_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal SR_OusideTemp_RollCnt raw initial value.
 */
#define START_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 0

/**
 * Signal SR_OusideTemp_RollCnt raw minimum value.
 */
#define MIN_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 0

/**
 * Signal SR_OusideTemp_RollCnt raw maximum value.
 */
#define MAX_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 15

/**
 * Signal SR_OusideTemp_RollCnt raw offset value.
 */
#define OFF_GW_CH_SR_OusideTempandOdo_SR_OusideTemp_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid Signal AC_OutsideAirTempValid of Message
 * GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Outside Air Temperature Valid
 * Íâ²¿»·¾³ÎÂ¶ÈÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_OusideTempandOdo
 * @{
 */

/**
 * Signal AC_OutsideAirTempValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid and \ref
 *GET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid instead.
 */
#define SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 1, 0, 8, 1

/**
 * Signal AC_OutsideAirTempValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid or \ref INIT_GW_CH_SR_OusideTempandOdo instead.
 */
#define SETUP_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 1, 0, 8, 1, 0

/**
 * Get signal AC_OutsideAirTempValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x01) << 0))

/**
 * Set signal AC_OutsideAirTempValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(buf, val)                                                 \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal AC_OutsideAirTempValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(buf)                                                  \
    SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(buf, 0)

/**
 * Signal AC_OutsideAirTempValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid(x, fmt) ((x)*fmt)

/**
 * Signal AC_OutsideAirTempValid raw initial value.
 */
#define START_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 0

/**
 * Signal AC_OutsideAirTempValid raw minimum value.
 */
#define MIN_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 0

/**
 * Signal AC_OutsideAirTempValid raw maximum value.
 */
#define MAX_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 1

/**
 * Signal AC_OutsideAirTempValid raw offset value.
 */
#define OFF_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid Value Table for Signal AC_OutsideAirTempValid in
 * Message GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Enum values defined for \ref SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid.
 *
 * @ingroup SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid
 */

/**
 * Value table GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid entry Invalid.
 *
 * @ingroup ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid
 */
#define GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid_Invalid 1

/**
 * Value table GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid entry Valid.
 *
 * @ingroup ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid
 */
#define GW_CH_SR_OusideTempandOdo_AC_OutsideAirTempValid_Valid 0

/**
 * @defgroup SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp Signal AC_OutsideAirTemp of Message
 * GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Outside Air Temperature
 * Íâ²¿»·¾³ÎÂ¶È
 *
 * Contains the value table \ref ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_OusideTempandOdo
 * @{
 */

/**
 * Signal AC_OutsideAirTemp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp and \ref GET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp
 *instead.
 */
#define SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp 1, 0, 7, 8

/**
 * Signal AC_OutsideAirTemp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp or \ref INIT_GW_CH_SR_OusideTempandOdo instead.
 */
#define SETUP_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp 1, 0, 7, 8, 0

/**
 * Get signal AC_OutsideAirTemp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal AC_OutsideAirTemp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(buf, val)                                                      \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal AC_OutsideAirTemp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(buf) SET_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(buf, 0)

/**
 * Signal AC_OutsideAirTemp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp(x, fmt) ((x)*fmt / 2 + fmt * (-40))

/**
 * Signal AC_OutsideAirTemp raw initial value.
 */
#define START_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp 0

/**
 * Signal AC_OutsideAirTemp raw minimum value.
 */
#define MIN_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp 0

/**
 * Signal AC_OutsideAirTemp raw maximum value.
 */
#define MAX_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp 250

/**
 * Signal AC_OutsideAirTemp raw offset value.
 */
#define OFF_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp -80

/**
 * @}
 */

/**
 * @defgroup ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp Value Table for Signal AC_OutsideAirTemp in Message
 * GW_CH_SR_OusideTempandOdo (0x535)
 *
 * Enum values defined for \ref SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp.
 *
 * @ingroup SIG_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp
 */

/**
 * Value table GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp entry Invalid.
 *
 * @ingroup ENUM_GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp
 */
#define GW_CH_SR_OusideTempandOdo_AC_OutsideAirTemp_Invalid 255

/**
 * @defgroup SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum Signal SR_TCMSwitchStatus_Checksum of Message
 * GW_CH_SR_TCMSwitchStatus (0x2a5)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_TCMSwitchStatus
 * @{
 */

/**
 * Signal SR_TCMSwitchStatus_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum and \ref
 *GET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum instead.
 */
#define SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 1, 0, 63, 8

/**
 * Signal SR_TCMSwitchStatus_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum or \ref INIT_GW_CH_SR_TCMSwitchStatus instead.
 */
#define SETUP_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 1, 0, 63, 8, 0

/**
 * Get signal SR_TCMSwitchStatus_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal SR_TCMSwitchStatus_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(buf, val)                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal SR_TCMSwitchStatus_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(buf)                                              \
    SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(buf, 0)

/**
 * Signal SR_TCMSwitchStatus_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal SR_TCMSwitchStatus_Checksum raw initial value.
 */
#define START_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 0

/**
 * Signal SR_TCMSwitchStatus_Checksum raw minimum value.
 */
#define MIN_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 0

/**
 * Signal SR_TCMSwitchStatus_Checksum raw maximum value.
 */
#define MAX_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 255

/**
 * Signal SR_TCMSwitchStatus_Checksum raw offset value.
 */
#define OFF_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt Signal SR_TCMSwitchStatus_RollCnt of Message
 * GW_CH_SR_TCMSwitchStatus (0x2a5)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_TCMSwitchStatus
 * @{
 */

/**
 * Signal SR_TCMSwitchStatus_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt and \ref
 *GET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt instead.
 */
#define SIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 1, 0, 55, 4

/**
 * Signal SR_TCMSwitchStatus_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt or \ref INIT_GW_CH_SR_TCMSwitchStatus instead.
 */
#define SETUP_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal SR_TCMSwitchStatus_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal SR_TCMSwitchStatus_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(buf, val)                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal SR_TCMSwitchStatus_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(buf)                                               \
    SET_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(buf, 0)

/**
 * Signal SR_TCMSwitchStatus_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal SR_TCMSwitchStatus_RollCnt raw initial value.
 */
#define START_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 0

/**
 * Signal SR_TCMSwitchStatus_RollCnt raw minimum value.
 */
#define MIN_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 0

/**
 * Signal SR_TCMSwitchStatus_RollCnt raw maximum value.
 */
#define MAX_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 15

/**
 * Signal SR_TCMSwitchStatus_RollCnt raw offset value.
 */
#define OFF_GW_CH_SR_TCMSwitchStatus_SR_TCMSwitchStatus_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus Signal TCM_IndTurnSwitchStatus of Message
 * GW_CH_SR_TCMSwitchStatus (0x2a5)
 *
 * Signal from TCM to indicate Turn switch status
 * TCMÖ¸Ê¾×ªÏòµÆ¿ª¹Ø×´Ì¬
 *
 * Contains the value table \ref ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GW_CH_SR_TCMSwitchStatus
 * @{
 */

/**
 * Signal TCM_IndTurnSwitchStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus and \ref
 *GET_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus instead.
 */
#define SIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 1, 0, 7, 2

/**
 * Signal TCM_IndTurnSwitchStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus or \ref INIT_GW_CH_SR_TCMSwitchStatus instead.
 */
#define SETUP_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 1, 0, 7, 2, 0

/**
 * Get signal TCM_IndTurnSwitchStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 6) & 0x03) << 0))

/**
 * Set signal TCM_IndTurnSwitchStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(buf, val)                                                 \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 6);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal TCM_IndTurnSwitchStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(buf)                                                  \
    SET_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(buf, 0)

/**
 * Signal TCM_IndTurnSwitchStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus(x, fmt) ((x)*fmt)

/**
 * Signal TCM_IndTurnSwitchStatus raw initial value.
 */
#define START_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 0

/**
 * Signal TCM_IndTurnSwitchStatus raw minimum value.
 */
#define MIN_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 0

/**
 * Signal TCM_IndTurnSwitchStatus raw maximum value.
 */
#define MAX_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 3

/**
 * Signal TCM_IndTurnSwitchStatus raw offset value.
 */
#define OFF_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus 0

/**
 * @}
 */

/**
 * @defgroup ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus Value Table for Signal TCM_IndTurnSwitchStatus in
 * Message GW_CH_SR_TCMSwitchStatus (0x2a5)
 *
 * Enum values defined for \ref SIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus.
 *
 * @ingroup SIG_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 */

/**
 * Value table GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus entry Invalid.
 *
 * @ingroup ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 */
#define GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus_Invalid 3

/**
 * Value table GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus entry Right.
 *
 * @ingroup ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 */
#define GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus_Right 2

/**
 * Value table GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus entry Left.
 *
 * @ingroup ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 */
#define GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus_Left 1

/**
 * Value table GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus entry OFF.
 *
 * @ingroup ENUM_GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus
 */
#define GW_CH_SR_TCMSwitchStatus_TCM_IndTurnSwitchStatus_OFF 0

/**
 * @defgroup SIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum Signal EPS_GeneralStatus_Checksum of Message
 * EPS_GeneralStatus (0x155)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_EPS_GeneralStatus
 * @{
 */

/**
 * Signal EPS_GeneralStatus_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_EPS_GeneralStatus_EPS_GeneralStatus_Checksum and \ref GET_EPS_GeneralStatus_EPS_GeneralStatus_Checksum
 *instead.
 */
#define SIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 1, 0, 63, 8

/**
 * Signal EPS_GeneralStatus_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum or \ref INIT_EPS_GeneralStatus instead.
 */
#define SETUP_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 1, 0, 63, 8, 0

/**
 * Get signal EPS_GeneralStatus_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal EPS_GeneralStatus_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal EPS_GeneralStatus_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(buf)                                                      \
    SET_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(buf, 0)

/**
 * Signal EPS_GeneralStatus_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_EPS_GeneralStatus_EPS_GeneralStatus_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal EPS_GeneralStatus_Checksum raw initial value.
 */
#define START_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 0

/**
 * Signal EPS_GeneralStatus_Checksum raw minimum value.
 */
#define MIN_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 0

/**
 * Signal EPS_GeneralStatus_Checksum raw maximum value.
 */
#define MAX_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 255

/**
 * Signal EPS_GeneralStatus_Checksum raw offset value.
 */
#define OFF_EPS_GeneralStatus_EPS_GeneralStatus_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt Signal EPS_GeneralStatus_RollCnt of Message
 * EPS_GeneralStatus (0x155)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_EPS_GeneralStatus
 * @{
 */

/**
 * Signal EPS_GeneralStatus_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt and \ref GET_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt
 *instead.
 */
#define SIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 1, 0, 55, 4

/**
 * Signal EPS_GeneralStatus_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt or \ref INIT_EPS_GeneralStatus instead.
 */
#define SETUP_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal EPS_GeneralStatus_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal EPS_GeneralStatus_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal EPS_GeneralStatus_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(buf) SET_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(buf, 0)

/**
 * Signal EPS_GeneralStatus_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal EPS_GeneralStatus_RollCnt raw initial value.
 */
#define START_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 0

/**
 * Signal EPS_GeneralStatus_RollCnt raw minimum value.
 */
#define MIN_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 0

/**
 * Signal EPS_GeneralStatus_RollCnt raw maximum value.
 */
#define MAX_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 15

/**
 * Signal EPS_GeneralStatus_RollCnt raw offset value.
 */
#define OFF_EPS_GeneralStatus_EPS_GeneralStatus_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_EPS_GeneralStatus_EPS_SteeringAngleValid Signal EPS_SteeringAngleValid of Message EPS_GeneralStatus
 * (0x155)
 *
 * steering wheel angle valid
 * ·½ÏòÅÌ×ªÏò½ÇÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_EPS_GeneralStatus_EPS_SteeringAngleValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_EPS_GeneralStatus
 * @{
 */

/**
 * Signal EPS_SteeringAngleValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_EPS_GeneralStatus_EPS_SteeringAngleValid and \ref GET_EPS_GeneralStatus_EPS_SteeringAngleValid instead.
 */
#define SIG_EPS_GeneralStatus_EPS_SteeringAngleValid 1, 0, 20, 1

/**
 * Signal EPS_SteeringAngleValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_EPS_GeneralStatus_EPS_SteeringAngleValid or \ref INIT_EPS_GeneralStatus instead.
 */
#define SETUP_EPS_GeneralStatus_EPS_SteeringAngleValid 1, 0, 20, 1, 0

/**
 * Get signal EPS_SteeringAngleValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_EPS_GeneralStatus_EPS_SteeringAngleValid(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0))

/**
 * Set signal EPS_SteeringAngleValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_EPS_GeneralStatus_EPS_SteeringAngleValid(buf, val)                                                         \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal EPS_SteeringAngleValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_EPS_GeneralStatus_EPS_SteeringAngleValid(buf) SET_EPS_GeneralStatus_EPS_SteeringAngleValid(buf, 0)

/**
 * Signal EPS_SteeringAngleValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_EPS_GeneralStatus_EPS_SteeringAngleValid(x, fmt) ((x)*fmt)

/**
 * Signal EPS_SteeringAngleValid raw initial value.
 */
#define START_EPS_GeneralStatus_EPS_SteeringAngleValid 0

/**
 * Signal EPS_SteeringAngleValid raw minimum value.
 */
#define MIN_EPS_GeneralStatus_EPS_SteeringAngleValid 0

/**
 * Signal EPS_SteeringAngleValid raw maximum value.
 */
#define MAX_EPS_GeneralStatus_EPS_SteeringAngleValid 1

/**
 * Signal EPS_SteeringAngleValid raw offset value.
 */
#define OFF_EPS_GeneralStatus_EPS_SteeringAngleValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_EPS_GeneralStatus_EPS_SteeringAngleValid Value Table for Signal EPS_SteeringAngleValid in Message
 * EPS_GeneralStatus (0x155)
 *
 * Enum values defined for \ref SIG_EPS_GeneralStatus_EPS_SteeringAngleValid.
 *
 * @ingroup SIG_EPS_GeneralStatus_EPS_SteeringAngleValid
 */

/**
 * Value table EPS_GeneralStatus_EPS_SteeringAngleValid entry Invalid.
 *
 * @ingroup ENUM_EPS_GeneralStatus_EPS_SteeringAngleValid
 */
#define EPS_GeneralStatus_EPS_SteeringAngleValid_Invalid 1

/**
 * Value table EPS_GeneralStatus_EPS_SteeringAngleValid entry Valid.
 *
 * @ingroup ENUM_EPS_GeneralStatus_EPS_SteeringAngleValid
 */
#define EPS_GeneralStatus_EPS_SteeringAngleValid_Valid 0

/**
 * @defgroup SIG_EPS_GeneralStatus_EPS_SteeringAngle Signal EPS_SteeringAngle of Message EPS_GeneralStatus (0x155)
 *
 * steering wheel angle
 * ·½ÏòÅÌ×ªÏò½Ç
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_EPS_GeneralStatus
 * @{
 */

/**
 * Signal EPS_SteeringAngle configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_EPS_GeneralStatus_EPS_SteeringAngle and \ref GET_EPS_GeneralStatus_EPS_SteeringAngle instead.
 */
#define SIG_EPS_GeneralStatus_EPS_SteeringAngle 1, 1, 7, 16

/**
 * Signal EPS_SteeringAngle setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_EPS_GeneralStatus_EPS_SteeringAngle or \ref INIT_EPS_GeneralStatus instead.
 */
#define SETUP_EPS_GeneralStatus_EPS_SteeringAngle 1, 1, 7, 16, 0

/**
 * Get signal EPS_SteeringAngle from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_EPS_GeneralStatus_EPS_SteeringAngle(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal EPS_SteeringAngle in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_EPS_GeneralStatus_EPS_SteeringAngle(buf, val)                                                              \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal EPS_SteeringAngle in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_EPS_GeneralStatus_EPS_SteeringAngle(buf) SET_EPS_GeneralStatus_EPS_SteeringAngle(buf, 0)

/**
 * Signal EPS_SteeringAngle value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_EPS_GeneralStatus_EPS_SteeringAngle(x, fmt) ((x)*fmt / 10)

/**
 * Signal EPS_SteeringAngle raw initial value.
 */
#define START_EPS_GeneralStatus_EPS_SteeringAngle 0

/**
 * Signal EPS_SteeringAngle raw minimum value.
 */
#define MIN_EPS_GeneralStatus_EPS_SteeringAngle -7800

/**
 * Signal EPS_SteeringAngle raw maximum value.
 */
#define MAX_EPS_GeneralStatus_EPS_SteeringAngle 7799

/**
 * Signal EPS_SteeringAngle raw offset value.
 */
#define OFF_EPS_GeneralStatus_EPS_SteeringAngle 0

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum Signal ACU_LongititudeAcc_Checksum of Message
 * ACU_LongititudeAcc (0x235)
 *
 * checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LongititudeAcc
 * @{
 */

/**
 * Signal ACU_LongititudeAcc_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum and \ref
 *GET_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum instead.
 */
#define SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 1, 0, 63, 8

/**
 * Signal ACU_LongititudeAcc_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum or \ref INIT_ACU_LongititudeAcc instead.
 */
#define SETUP_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ACU_LongititudeAcc_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_LongititudeAcc_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_LongititudeAcc_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(buf)                                                    \
    SET_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(buf, 0)

/**
 * Signal ACU_LongititudeAcc_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LongititudeAcc_Checksum raw initial value.
 */
#define START_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 0

/**
 * Signal ACU_LongititudeAcc_Checksum raw minimum value.
 */
#define MIN_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 0

/**
 * Signal ACU_LongititudeAcc_Checksum raw maximum value.
 */
#define MAX_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 255

/**
 * Signal ACU_LongititudeAcc_Checksum raw offset value.
 */
#define OFF_ACU_LongititudeAcc_ACU_LongititudeAcc_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt Signal ACU_LongititudeAcc_RollCnt of Message
 * ACU_LongititudeAcc (0x235)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LongititudeAcc
 * @{
 */

/**
 * Signal ACU_LongititudeAcc_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt and \ref
 *GET_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt instead.
 */
#define SIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 1, 0, 55, 4

/**
 * Signal ACU_LongititudeAcc_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt or \ref INIT_ACU_LongititudeAcc instead.
 */
#define SETUP_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ACU_LongititudeAcc_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ACU_LongititudeAcc_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(buf, val)                                                    \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ACU_LongititudeAcc_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(buf)                                                     \
    SET_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(buf, 0)

/**
 * Signal ACU_LongititudeAcc_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LongititudeAcc_RollCnt raw initial value.
 */
#define START_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 0

/**
 * Signal ACU_LongititudeAcc_RollCnt raw minimum value.
 */
#define MIN_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 0

/**
 * Signal ACU_LongititudeAcc_RollCnt raw maximum value.
 */
#define MAX_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 15

/**
 * Signal ACU_LongititudeAcc_RollCnt raw offset value.
 */
#define OFF_ACU_LongititudeAcc_ACU_LongititudeAcc_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LongititudeAcc_ACU_SensTemp Signal ACU_SensTemp of Message ACU_LongititudeAcc (0x235)
 *
 * Sensor Temperature
 * ´«¸ÐÆ÷ÎÂ¶È
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LongititudeAcc
 * @{
 */

/**
 * Signal ACU_SensTemp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LongititudeAcc_ACU_SensTemp and \ref GET_ACU_LongititudeAcc_ACU_SensTemp instead.
 */
#define SIG_ACU_LongititudeAcc_ACU_SensTemp 1, 0, 31, 16

/**
 * Signal ACU_SensTemp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LongititudeAcc_ACU_SensTemp or \ref INIT_ACU_LongititudeAcc instead.
 */
#define SETUP_ACU_LongititudeAcc_ACU_SensTemp 1, 0, 31, 16, 0

/**
 * Get signal ACU_SensTemp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LongititudeAcc_ACU_SensTemp(buf)                                                                       \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_SensTemp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LongititudeAcc_ACU_SensTemp(buf, val)                                                                  \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_SensTemp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LongititudeAcc_ACU_SensTemp(buf) SET_ACU_LongititudeAcc_ACU_SensTemp(buf, 0)

/**
 * Signal ACU_SensTemp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LongititudeAcc_ACU_SensTemp(x, fmt) ((x)*fmt / 200 + fmt * (-40))

/**
 * Signal ACU_SensTemp raw initial value.
 */
#define START_ACU_LongititudeAcc_ACU_SensTemp 0

/**
 * Signal ACU_SensTemp raw minimum value.
 */
#define MIN_ACU_LongititudeAcc_ACU_SensTemp 0

/**
 * Signal ACU_SensTemp raw maximum value.
 */
#define MAX_ACU_LongititudeAcc_ACU_SensTemp 36000

/**
 * Signal ACU_SensTemp raw offset value.
 */
#define OFF_ACU_LongititudeAcc_ACU_SensTemp -8000

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LongititudeAcc_ACU_LongitSensStateValid Signal ACU_LongitSensStateValid of Message
 * ACU_LongititudeAcc (0x235)
 *
 * Longititude Sensor State
 * ×ÝÏò¼ÓËÙ¶ÈÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ACU_LongititudeAcc_ACU_LongitSensStateValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LongititudeAcc
 * @{
 */

/**
 * Signal ACU_LongitSensStateValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LongititudeAcc_ACU_LongitSensStateValid and \ref GET_ACU_LongititudeAcc_ACU_LongitSensStateValid
 *instead.
 */
#define SIG_ACU_LongititudeAcc_ACU_LongitSensStateValid 1, 0, 17, 2

/**
 * Signal ACU_LongitSensStateValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LongititudeAcc_ACU_LongitSensStateValid or \ref INIT_ACU_LongititudeAcc instead.
 */
#define SETUP_ACU_LongititudeAcc_ACU_LongitSensStateValid 1, 0, 17, 2, 0

/**
 * Get signal ACU_LongitSensStateValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LongititudeAcc_ACU_LongitSensStateValid(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal ACU_LongitSensStateValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LongititudeAcc_ACU_LongitSensStateValid(buf, val)                                                      \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ACU_LongitSensStateValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LongititudeAcc_ACU_LongitSensStateValid(buf) SET_ACU_LongititudeAcc_ACU_LongitSensStateValid(buf, 0)

/**
 * Signal ACU_LongitSensStateValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LongititudeAcc_ACU_LongitSensStateValid(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LongitSensStateValid raw initial value.
 */
#define START_ACU_LongititudeAcc_ACU_LongitSensStateValid 0

/**
 * Signal ACU_LongitSensStateValid raw minimum value.
 */
#define MIN_ACU_LongititudeAcc_ACU_LongitSensStateValid 0

/**
 * Signal ACU_LongitSensStateValid raw maximum value.
 */
#define MAX_ACU_LongititudeAcc_ACU_LongitSensStateValid 3

/**
 * Signal ACU_LongitSensStateValid raw offset value.
 */
#define OFF_ACU_LongititudeAcc_ACU_LongitSensStateValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ACU_LongititudeAcc_ACU_LongitSensStateValid Value Table for Signal ACU_LongitSensStateValid in Message
 * ACU_LongititudeAcc (0x235)
 *
 * Enum values defined for \ref SIG_ACU_LongititudeAcc_ACU_LongitSensStateValid.
 *
 * @ingroup SIG_ACU_LongititudeAcc_ACU_LongitSensStateValid
 */

/**
 * Value table ACU_LongititudeAcc_ACU_LongitSensStateValid entry SIG.
 *
 * FAIL
 *
 * @ingroup ENUM_ACU_LongititudeAcc_ACU_LongitSensStateValid
 */
#define ACU_LongititudeAcc_ACU_LongitSensStateValid_SIG 2

/**
 * Value table ACU_LongititudeAcc_ACU_LongitSensStateValid entry SIG_1.
 *
 * NOT AVAIL
 *
 * @ingroup ENUM_ACU_LongititudeAcc_ACU_LongitSensStateValid
 */
#define ACU_LongititudeAcc_ACU_LongitSensStateValid_SIG_1 1

/**
 * Value table ACU_LongititudeAcc_ACU_LongitSensStateValid entry SIG_IN_SPEC.
 *
 * @ingroup ENUM_ACU_LongititudeAcc_ACU_LongitSensStateValid
 */
#define ACU_LongititudeAcc_ACU_LongitSensStateValid_SIG_IN_SPEC 0

/**
 * @defgroup SIG_ACU_LongititudeAcc_ACU_LongititudeAcc Signal ACU_LongititudeAcc of Message ACU_LongititudeAcc (0x235)
 *
 * Longititude Acceleration
 * ×ÝÏò¼ÓËÙ¶È
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LongititudeAcc
 * @{
 */

/**
 * Signal ACU_LongititudeAcc configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LongititudeAcc_ACU_LongititudeAcc and \ref GET_ACU_LongititudeAcc_ACU_LongititudeAcc instead.
 */
#define SIG_ACU_LongititudeAcc_ACU_LongititudeAcc 1, 0, 7, 16

/**
 * Signal ACU_LongititudeAcc setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc or \ref INIT_ACU_LongititudeAcc instead.
 */
#define SETUP_ACU_LongititudeAcc_ACU_LongititudeAcc 1, 0, 7, 16, 0

/**
 * Get signal ACU_LongititudeAcc from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LongititudeAcc_ACU_LongititudeAcc(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_LongititudeAcc in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LongititudeAcc_ACU_LongititudeAcc(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_LongititudeAcc in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LongititudeAcc_ACU_LongititudeAcc(buf) SET_ACU_LongititudeAcc_ACU_LongititudeAcc(buf, 0)

/**
 * Signal ACU_LongititudeAcc value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LongititudeAcc_ACU_LongititudeAcc(x, fmt) ((x)*fmt / 5000 + fmt * (-5))

/**
 * Signal ACU_LongititudeAcc raw initial value.
 */
#define START_ACU_LongititudeAcc_ACU_LongititudeAcc 0

/**
 * Signal ACU_LongititudeAcc raw minimum value.
 */
#define MIN_ACU_LongititudeAcc_ACU_LongititudeAcc 0

/**
 * Signal ACU_LongititudeAcc raw maximum value.
 */
#define MAX_ACU_LongititudeAcc_ACU_LongititudeAcc 50000

/**
 * Signal ACU_LongititudeAcc raw offset value.
 */
#define OFF_ACU_LongititudeAcc_ACU_LongititudeAcc -25000

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum Signal ACU_LateralAcc_YawRate_Checksum of Message
 * ACU_LateralAccYawRate (0x225)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_LateralAcc_YawRate_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum and \ref
 *GET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 1, 0, 63, 8

/**
 * Signal ACU_LateralAcc_YawRate_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ACU_LateralAcc_YawRate_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(buf)                                                 \
    (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_LateralAcc_YawRate_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(buf, val)                                            \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_LateralAcc_YawRate_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(buf)                                             \
    SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(buf, 0)

/**
 * Signal ACU_LateralAcc_YawRate_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LateralAcc_YawRate_Checksum raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 0

/**
 * Signal ACU_LateralAcc_YawRate_Checksum raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 0

/**
 * Signal ACU_LateralAcc_YawRate_Checksum raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 255

/**
 * Signal ACU_LateralAcc_YawRate_Checksum raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt Signal ACU_LateralAcc_YawRate_RollCnt of Message
 * ACU_LateralAccYawRate (0x225)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt and \ref
 *GET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 1, 0, 55, 4

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ACU_LateralAcc_YawRate_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ACU_LateralAcc_YawRate_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(buf, val)                                             \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ACU_LateralAcc_YawRate_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(buf)                                              \
    SET_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(buf, 0)

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 0

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 0

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 15

/**
 * Signal ACU_LateralAcc_YawRate_RollCnt raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_LateralAcc_YawRate_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid Signal ACU_YawRateSensStateValid of Message
 * ACU_LateralAccYawRate (0x225)
 *
 * Yaw Rate Sensor State
 * ºá°Ú½ÇËÙ¶ÈÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ACU_LateralAccYawRate_ACU_YawRateSensStateValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_YawRateSensStateValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_YawRateSensStateValid and \ref
 *GET_ACU_LateralAccYawRate_ACU_YawRateSensStateValid instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 1, 0, 41, 2

/**
 * Signal ACU_YawRateSensStateValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 1, 0, 41, 2, 0

/**
 * Get signal ACU_YawRateSensStateValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0x03) << 0))

/**
 * Set signal ACU_YawRateSensStateValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(buf, val)                                                  \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ACU_YawRateSensStateValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(buf)                                                   \
    SET_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(buf, 0)

/**
 * Signal ACU_YawRateSensStateValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_YawRateSensStateValid(x, fmt) ((x)*fmt)

/**
 * Signal ACU_YawRateSensStateValid raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 0

/**
 * Signal ACU_YawRateSensStateValid raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 0

/**
 * Signal ACU_YawRateSensStateValid raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 3

/**
 * Signal ACU_YawRateSensStateValid raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_YawRateSensStateValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ACU_LateralAccYawRate_ACU_YawRateSensStateValid Value Table for Signal ACU_YawRateSensStateValid in
 * Message ACU_LateralAccYawRate (0x225)
 *
 * Enum values defined for \ref SIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid.
 *
 * @ingroup SIG_ACU_LateralAccYawRate_ACU_YawRateSensStateValid
 */

/**
 * Value table ACU_LateralAccYawRate_ACU_YawRateSensStateValid entry SIG.
 *
 * FAIL
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_YawRateSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_YawRateSensStateValid_SIG 2

/**
 * Value table ACU_LateralAccYawRate_ACU_YawRateSensStateValid entry SIG_1.
 *
 * NOT AVAIL
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_YawRateSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_YawRateSensStateValid_SIG_1 1

/**
 * Value table ACU_LateralAccYawRate_ACU_YawRateSensStateValid entry SIG_IN_SPEC.
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_YawRateSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_YawRateSensStateValid_SIG_IN_SPEC 0

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_YawRate Signal ACU_YawRate of Message ACU_LateralAccYawRate (0x225)
 *
 * Yaw Rate
 * ºá°Ú½ÇËÙ¶È
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_YawRate configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_YawRate and \ref GET_ACU_LateralAccYawRate_ACU_YawRate instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_YawRate 1, 0, 31, 16

/**
 * Signal ACU_YawRate setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_YawRate or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_YawRate 1, 0, 31, 16, 0

/**
 * Get signal ACU_YawRate from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_YawRate(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_YawRate in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_YawRate(buf, val)                                                                \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_YawRate in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_YawRate(buf) SET_ACU_LateralAccYawRate_ACU_YawRate(buf, 0)

/**
 * Signal ACU_YawRate value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_YawRate(x, fmt) ((x)*fmt / 100 + fmt * (-300))

/**
 * Signal ACU_YawRate raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_YawRate 0

/**
 * Signal ACU_YawRate raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_YawRate 0

/**
 * Signal ACU_YawRate raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_YawRate 60000

/**
 * Signal ACU_YawRate raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_YawRate -30000

/**
 * @}
 */

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid Signal ACU_LateralSensStateValid of Message
 * ACU_LateralAccYawRate (0x225)
 *
 * Lateral Sensor State
 * ºáÏò¼ÓËÙ¶ÈÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ACU_LateralAccYawRate_ACU_LateralSensStateValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_LateralSensStateValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_LateralSensStateValid and \ref
 *GET_ACU_LateralAccYawRate_ACU_LateralSensStateValid instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid 1, 0, 17, 2

/**
 * Signal ACU_LateralSensStateValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_LateralSensStateValid 1, 0, 17, 2, 0

/**
 * Get signal ACU_LateralSensStateValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_LateralSensStateValid(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal ACU_LateralSensStateValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_LateralSensStateValid(buf, val)                                                  \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ACU_LateralSensStateValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid(buf)                                                   \
    SET_ACU_LateralAccYawRate_ACU_LateralSensStateValid(buf, 0)

/**
 * Signal ACU_LateralSensStateValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_LateralSensStateValid(x, fmt) ((x)*fmt)

/**
 * Signal ACU_LateralSensStateValid raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_LateralSensStateValid 0

/**
 * Signal ACU_LateralSensStateValid raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_LateralSensStateValid 0

/**
 * Signal ACU_LateralSensStateValid raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_LateralSensStateValid 3

/**
 * Signal ACU_LateralSensStateValid raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_LateralSensStateValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ACU_LateralAccYawRate_ACU_LateralSensStateValid Value Table for Signal ACU_LateralSensStateValid in
 * Message ACU_LateralAccYawRate (0x225)
 *
 * Enum values defined for \ref SIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid.
 *
 * @ingroup SIG_ACU_LateralAccYawRate_ACU_LateralSensStateValid
 */

/**
 * Value table ACU_LateralAccYawRate_ACU_LateralSensStateValid entry SIG.
 *
 * FAIL
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_LateralSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_LateralSensStateValid_SIG 2

/**
 * Value table ACU_LateralAccYawRate_ACU_LateralSensStateValid entry SIG_1.
 *
 * NOT AVAIL
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_LateralSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_LateralSensStateValid_SIG_1 1

/**
 * Value table ACU_LateralAccYawRate_ACU_LateralSensStateValid entry SIG_IN_SPEC.
 *
 * @ingroup ENUM_ACU_LateralAccYawRate_ACU_LateralSensStateValid
 */
#define ACU_LateralAccYawRate_ACU_LateralSensStateValid_SIG_IN_SPEC 0

/**
 * @defgroup SIG_ACU_LateralAccYawRate_ACU_LateralAcc Signal ACU_LateralAcc of Message ACU_LateralAccYawRate (0x225)
 *
 * Lateral Acceleration
 * ºáÏò¼ÓËÙ¶È
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ACU_LateralAccYawRate
 * @{
 */

/**
 * Signal ACU_LateralAcc configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ACU_LateralAccYawRate_ACU_LateralAcc and \ref GET_ACU_LateralAccYawRate_ACU_LateralAcc instead.
 */
#define SIG_ACU_LateralAccYawRate_ACU_LateralAcc 1, 0, 7, 16

/**
 * Signal ACU_LateralAcc setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc or \ref INIT_ACU_LateralAccYawRate instead.
 */
#define SETUP_ACU_LateralAccYawRate_ACU_LateralAcc 1, 0, 7, 16, 0

/**
 * Get signal ACU_LateralAcc from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ACU_LateralAccYawRate_ACU_LateralAcc(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ACU_LateralAcc in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ACU_LateralAccYawRate_ACU_LateralAcc(buf, val)                                                             \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ACU_LateralAcc in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ACU_LateralAccYawRate_ACU_LateralAcc(buf) SET_ACU_LateralAccYawRate_ACU_LateralAcc(buf, 0)

/**
 * Signal ACU_LateralAcc value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ACU_LateralAccYawRate_ACU_LateralAcc(x, fmt) ((x)*fmt / 5000 + fmt * (-5))

/**
 * Signal ACU_LateralAcc raw initial value.
 */
#define START_ACU_LateralAccYawRate_ACU_LateralAcc 0

/**
 * Signal ACU_LateralAcc raw minimum value.
 */
#define MIN_ACU_LateralAccYawRate_ACU_LateralAcc 0

/**
 * Signal ACU_LateralAcc raw maximum value.
 */
#define MAX_ACU_LateralAccYawRate_ACU_LateralAcc 50000

/**
 * Signal ACU_LateralAcc raw offset value.
 */
#define OFF_ACU_LateralAccYawRate_ACU_LateralAcc -25000

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum Signal ADAS_DisplayInfo_Checksum of Message ADAS_DisplayInfo
 * (0x354)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_DisplayInfo
 * @{
 */

/**
 * Signal ADAS_DisplayInfo_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum and \ref GET_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum
 *instead.
 */
#define SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 1, 0, 63, 8

/**
 * Signal ADAS_DisplayInfo_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum or \ref INIT_ADAS_DisplayInfo instead.
 */
#define SETUP_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ADAS_DisplayInfo_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ADAS_DisplayInfo_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ADAS_DisplayInfo_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(buf) SET_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(buf, 0)

/**
 * Signal ADAS_DisplayInfo_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_DisplayInfo_Checksum raw initial value.
 */
#define START_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 0

/**
 * Signal ADAS_DisplayInfo_Checksum raw minimum value.
 */
#define MIN_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 0

/**
 * Signal ADAS_DisplayInfo_Checksum raw maximum value.
 */
#define MAX_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 255

/**
 * Signal ADAS_DisplayInfo_Checksum raw offset value.
 */
#define OFF_ADAS_DisplayInfo_ADAS_DisplayInfo_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt Signal ADAS_DisplayInfo_RollCnt of Message ADAS_DisplayInfo
 * (0x354)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_DisplayInfo
 * @{
 */

/**
 * Signal ADAS_DisplayInfo_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt and \ref GET_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt
 *instead.
 */
#define SIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 1, 0, 55, 4

/**
 * Signal ADAS_DisplayInfo_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt or \ref INIT_ADAS_DisplayInfo instead.
 */
#define SETUP_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ADAS_DisplayInfo_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ADAS_DisplayInfo_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ADAS_DisplayInfo_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(buf) SET_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(buf, 0)

/**
 * Signal ADAS_DisplayInfo_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_DisplayInfo_RollCnt raw initial value.
 */
#define START_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 0

/**
 * Signal ADAS_DisplayInfo_RollCnt raw minimum value.
 */
#define MIN_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 0

/**
 * Signal ADAS_DisplayInfo_RollCnt raw maximum value.
 */
#define MAX_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 15

/**
 * Signal ADAS_DisplayInfo_RollCnt raw offset value.
 */
#define OFF_ADAS_DisplayInfo_ADAS_DisplayInfo_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ADAS_DisplayInfo_ADAS_APOFuncStatus Signal ADAS_APOFuncStatus of Message ADAS_DisplayInfo (0x354)
 *
 * APO Function Status
 * ×Ô¶¯Ê»³ö¹¦ÄÜ×´Ì¬
 *
 * Contains the value table \ref ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_DisplayInfo
 * @{
 */

/**
 * Signal ADAS_APOFuncStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_DisplayInfo_ADAS_APOFuncStatus and \ref GET_ADAS_DisplayInfo_ADAS_APOFuncStatus instead.
 */
#define SIG_ADAS_DisplayInfo_ADAS_APOFuncStatus 1, 0, 36, 3

/**
 * Signal ADAS_APOFuncStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_DisplayInfo_ADAS_APOFuncStatus or \ref INIT_ADAS_DisplayInfo instead.
 */
#define SETUP_ADAS_DisplayInfo_ADAS_APOFuncStatus 1, 0, 36, 3, 0

/**
 * Get signal ADAS_APOFuncStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_DisplayInfo_ADAS_APOFuncStatus(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x07) << 0))

/**
 * Set signal ADAS_APOFuncStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_DisplayInfo_ADAS_APOFuncStatus(buf, val)                                                              \
    {                                                                                                                  \
        buf[4] &= ~(0x07 << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x07) << 2;                                                                   \
    }

/**
 * Set signal ADAS_APOFuncStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_DisplayInfo_ADAS_APOFuncStatus(buf) SET_ADAS_DisplayInfo_ADAS_APOFuncStatus(buf, 0)

/**
 * Signal ADAS_APOFuncStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_DisplayInfo_ADAS_APOFuncStatus(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_APOFuncStatus raw initial value.
 */
#define START_ADAS_DisplayInfo_ADAS_APOFuncStatus 0

/**
 * Signal ADAS_APOFuncStatus raw minimum value.
 */
#define MIN_ADAS_DisplayInfo_ADAS_APOFuncStatus 0

/**
 * Signal ADAS_APOFuncStatus raw maximum value.
 */
#define MAX_ADAS_DisplayInfo_ADAS_APOFuncStatus 7

/**
 * Signal ADAS_APOFuncStatus raw offset value.
 */
#define OFF_ADAS_DisplayInfo_ADAS_APOFuncStatus 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus Value Table for Signal ADAS_APOFuncStatus in Message
 * ADAS_DisplayInfo (0x354)
 *
 * Enum values defined for \ref SIG_ADAS_DisplayInfo_ADAS_APOFuncStatus.
 *
 * @ingroup SIG_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Failure.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Failure 7

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Finish.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Finish 6

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Quit.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Quit 5

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Pause.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Pause 4

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Running.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Running 3

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Prerunning.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Prerunning 2

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Standby.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Standby 1

/**
 * Value table ADAS_DisplayInfo_ADAS_APOFuncStatus entry Initialization.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APOFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APOFuncStatus_Initialization 0

/**
 * @defgroup SIG_ADAS_DisplayInfo_ADAS_APAFuncStatus Signal ADAS_APAFuncStatus of Message ADAS_DisplayInfo (0x354)
 *
 * APA Function Status
 * APA¹¤×÷×´Ì¬
 *
 * Contains the value table \ref ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ADAS_DisplayInfo
 * @{
 */

/**
 * Signal ADAS_APAFuncStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ADAS_DisplayInfo_ADAS_APAFuncStatus and \ref GET_ADAS_DisplayInfo_ADAS_APAFuncStatus instead.
 */
#define SIG_ADAS_DisplayInfo_ADAS_APAFuncStatus 1, 0, 16, 4

/**
 * Signal ADAS_APAFuncStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ADAS_DisplayInfo_ADAS_APAFuncStatus or \ref INIT_ADAS_DisplayInfo instead.
 */
#define SETUP_ADAS_DisplayInfo_ADAS_APAFuncStatus 1, 0, 16, 4, 0

/**
 * Get signal ADAS_APAFuncStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ADAS_DisplayInfo_ADAS_APAFuncStatus(buf)                                                                   \
    (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x01) << 3) | (ubyte)(+(ubyte)((buf[3] >> 5) & 0x07) << 0))

/**
 * Set signal ADAS_APAFuncStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ADAS_DisplayInfo_ADAS_APAFuncStatus(buf, val)                                                              \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 3) & 0x01) << 0;                                                                   \
        buf[3] &= ~(0x07 << 5);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal ADAS_APAFuncStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ADAS_DisplayInfo_ADAS_APAFuncStatus(buf) SET_ADAS_DisplayInfo_ADAS_APAFuncStatus(buf, 0)

/**
 * Signal ADAS_APAFuncStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ADAS_DisplayInfo_ADAS_APAFuncStatus(x, fmt) ((x)*fmt)

/**
 * Signal ADAS_APAFuncStatus raw initial value.
 */
#define START_ADAS_DisplayInfo_ADAS_APAFuncStatus 0

/**
 * Signal ADAS_APAFuncStatus raw minimum value.
 */
#define MIN_ADAS_DisplayInfo_ADAS_APAFuncStatus 0

/**
 * Signal ADAS_APAFuncStatus raw maximum value.
 */
#define MAX_ADAS_DisplayInfo_ADAS_APAFuncStatus 15

/**
 * Signal ADAS_APAFuncStatus raw offset value.
 */
#define OFF_ADAS_DisplayInfo_ADAS_APAFuncStatus 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus Value Table for Signal ADAS_APAFuncStatus in Message
 * ADAS_DisplayInfo (0x354)
 *
 * Enum values defined for \ref SIG_ADAS_DisplayInfo_ADAS_APAFuncStatus.
 *
 * @ingroup SIG_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Failure.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Failure 15

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved 14

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved_D.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved_D 13

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved_C.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved_C 12

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved_B.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved_B 11

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved_A.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved_A 10

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Reserved_9.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Reserved_9 9

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Finish.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Finish 8

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Quit.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Quit 7

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Pause.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Pause 6

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Running.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Running 5

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Prerunning.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Prerunning 4

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Available.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Available 3

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Standby.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Standby 2

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Find.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Find 1

/**
 * Value table ADAS_DisplayInfo_ADAS_APAFuncStatus entry Initialization.
 *
 * @ingroup ENUM_ADAS_DisplayInfo_ADAS_APAFuncStatus
 */
#define ADAS_DisplayInfo_ADAS_APAFuncStatus_Initialization 0

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_EPBFault Signal ESP_EPBFault of Message ESP_GeneralStatus (0x295)
 *
 * error indication of EPB system
 * EPB¹ÊÕÏ×´Ì¬
 *
 * Contains the value table \ref ENUM_ESP_GeneralStatus_ESP_EPBFault.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_EPBFault configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_EPBFault and \ref GET_ESP_GeneralStatus_ESP_EPBFault instead.
 */
#define SIG_ESP_GeneralStatus_ESP_EPBFault 1, 0, 45, 1

/**
 * Signal ESP_EPBFault setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_EPBFault or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_EPBFault 1, 0, 45, 1, 0

/**
 * Get signal ESP_EPBFault from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_EPBFault(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 5) & 0x01) << 0))

/**
 * Set signal ESP_EPBFault in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_EPBFault(buf, val)                                                                   \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 5);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal ESP_EPBFault in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_EPBFault(buf) SET_ESP_GeneralStatus_ESP_EPBFault(buf, 0)

/**
 * Signal ESP_EPBFault value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_EPBFault(x, fmt) ((x)*fmt)

/**
 * Signal ESP_EPBFault raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_EPBFault 0

/**
 * Signal ESP_EPBFault raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_EPBFault 0

/**
 * Signal ESP_EPBFault raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_EPBFault 1

/**
 * Signal ESP_EPBFault raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_EPBFault 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_GeneralStatus_ESP_EPBFault Value Table for Signal ESP_EPBFault in Message ESP_GeneralStatus
 * (0x295)
 *
 * Enum values defined for \ref SIG_ESP_GeneralStatus_ESP_EPBFault.
 *
 * @ingroup SIG_ESP_GeneralStatus_ESP_EPBFault
 */

/**
 * Value table ESP_GeneralStatus_ESP_EPBFault entry Failure.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBFault
 */
#define ESP_GeneralStatus_ESP_EPBFault_Failure 1

/**
 * Value table ESP_GeneralStatus_ESP_EPBFault entry Normal.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBFault
 */
#define ESP_GeneralStatus_ESP_EPBFault_Normal 0

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum Signal ESP_GeneralStatus_Checksum of Message
 * ESP_GeneralStatus (0x295)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_GeneralStatus_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_GeneralStatus_Checksum and \ref GET_ESP_GeneralStatus_ESP_GeneralStatus_Checksum
 *instead.
 */
#define SIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 1, 0, 63, 8

/**
 * Signal ESP_GeneralStatus_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ESP_GeneralStatus_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_GeneralStatus_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_GeneralStatus_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(buf)                                                      \
    SET_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(buf, 0)

/**
 * Signal ESP_GeneralStatus_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_GeneralStatus_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ESP_GeneralStatus_Checksum raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 0

/**
 * Signal ESP_GeneralStatus_Checksum raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 0

/**
 * Signal ESP_GeneralStatus_Checksum raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 255

/**
 * Signal ESP_GeneralStatus_Checksum raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_GeneralStatus_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt Signal ESP_GeneralStatus_RollCnt of Message
 * ESP_GeneralStatus (0x295)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_GeneralStatus_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt and \ref GET_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt
 *instead.
 */
#define SIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 1, 0, 55, 4

/**
 * Signal ESP_GeneralStatus_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ESP_GeneralStatus_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ESP_GeneralStatus_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ESP_GeneralStatus_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(buf) SET_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(buf, 0)

/**
 * Signal ESP_GeneralStatus_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_GeneralStatus_RollCnt raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 0

/**
 * Signal ESP_GeneralStatus_RollCnt raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 0

/**
 * Signal ESP_GeneralStatus_RollCnt raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 15

/**
 * Signal ESP_GeneralStatus_RollCnt raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_GeneralStatus_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_EPBCtrlActive Signal ESP_EPBCtrlActive of Message ESP_GeneralStatus (0x295)
 *
 * EPB Control Active
 * EPB¿¨Ç¯¿ØÖÆ×´Ì¬
 *
 * Contains the value table \ref ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_EPBCtrlActive configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_EPBCtrlActive and \ref GET_ESP_GeneralStatus_ESP_EPBCtrlActive instead.
 */
#define SIG_ESP_GeneralStatus_ESP_EPBCtrlActive 1, 0, 42, 2

/**
 * Signal ESP_EPBCtrlActive setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_EPBCtrlActive or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_EPBCtrlActive 1, 0, 42, 2, 0

/**
 * Get signal ESP_EPBCtrlActive from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_EPBCtrlActive(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 1) & 0x03) << 0))

/**
 * Set signal ESP_EPBCtrlActive in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_EPBCtrlActive(buf, val)                                                              \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 1);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 1;                                                                   \
    }

/**
 * Set signal ESP_EPBCtrlActive in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_EPBCtrlActive(buf) SET_ESP_GeneralStatus_ESP_EPBCtrlActive(buf, 0)

/**
 * Signal ESP_EPBCtrlActive value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_EPBCtrlActive(x, fmt) ((x)*fmt)

/**
 * Signal ESP_EPBCtrlActive raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_EPBCtrlActive 0

/**
 * Signal ESP_EPBCtrlActive raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_EPBCtrlActive 0

/**
 * Signal ESP_EPBCtrlActive raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_EPBCtrlActive 3

/**
 * Signal ESP_EPBCtrlActive raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_EPBCtrlActive 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive Value Table for Signal ESP_EPBCtrlActive in Message
 * ESP_GeneralStatus (0x295)
 *
 * Enum values defined for \ref SIG_ESP_GeneralStatus_ESP_EPBCtrlActive.
 *
 * @ingroup SIG_ESP_GeneralStatus_ESP_EPBCtrlActive
 */

/**
 * Value table ESP_GeneralStatus_ESP_EPBCtrlActive entry Unknown.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive
 */
#define ESP_GeneralStatus_ESP_EPBCtrlActive_Unknown 3

/**
 * Value table ESP_GeneralStatus_ESP_EPBCtrlActive entry In.
 *
 * Progress
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive
 */
#define ESP_GeneralStatus_ESP_EPBCtrlActive_In 2

/**
 * Value table ESP_GeneralStatus_ESP_EPBCtrlActive entry Applied.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive
 */
#define ESP_GeneralStatus_ESP_EPBCtrlActive_Applied 1

/**
 * Value table ESP_GeneralStatus_ESP_EPBCtrlActive entry Released.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_EPBCtrlActive
 */
#define ESP_GeneralStatus_ESP_EPBCtrlActive_Released 0

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_VehicleSpeed Signal ESP_VehicleSpeed of Message ESP_GeneralStatus (0x295)
 *
 * Vehicle speed out
 * µ±Ç°³µËÙ
 *
 * Contains the value table \ref ENUM_ESP_GeneralStatus_ESP_VehicleSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_VehicleSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_VehicleSpeed and \ref GET_ESP_GeneralStatus_ESP_VehicleSpeed instead.
 */
#define SIG_ESP_GeneralStatus_ESP_VehicleSpeed 1, 0, 4, 13

/**
 * Signal ESP_VehicleSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_VehicleSpeed or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_VehicleSpeed 1, 0, 4, 13, 0

/**
 * Get signal ESP_VehicleSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_VehicleSpeed(buf)                                                                    \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_VehicleSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_VehicleSpeed(buf, val)                                                               \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_VehicleSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_VehicleSpeed(buf) SET_ESP_GeneralStatus_ESP_VehicleSpeed(buf, 0)

/**
 * Signal ESP_VehicleSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_VehicleSpeed(x, fmt) ((x)*fmt * 9 / 160)

/**
 * Signal ESP_VehicleSpeed raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_VehicleSpeed 0

/**
 * Signal ESP_VehicleSpeed raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_VehicleSpeed 0

/**
 * Signal ESP_VehicleSpeed raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_VehicleSpeed 8190

/**
 * Signal ESP_VehicleSpeed raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_VehicleSpeed 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_GeneralStatus_ESP_VehicleSpeed Value Table for Signal ESP_VehicleSpeed in Message
 * ESP_GeneralStatus (0x295)
 *
 * Enum values defined for \ref SIG_ESP_GeneralStatus_ESP_VehicleSpeed.
 *
 * @ingroup SIG_ESP_GeneralStatus_ESP_VehicleSpeed
 */

/**
 * Value table ESP_GeneralStatus_ESP_VehicleSpeed entry Invalid.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_VehicleSpeed
 */
#define ESP_GeneralStatus_ESP_VehicleSpeed_Invalid 8191

/**
 * @defgroup SIG_ESP_GeneralStatus_ESP_VehicleSpeedValid Signal ESP_VehicleSpeedValid of Message ESP_GeneralStatus
 * (0x295)
 *
 * VSO status
 * µ±Ç°³µËÙÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ESP_GeneralStatus_ESP_VehicleSpeedValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_GeneralStatus
 * @{
 */

/**
 * Signal ESP_VehicleSpeedValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_GeneralStatus_ESP_VehicleSpeedValid and \ref GET_ESP_GeneralStatus_ESP_VehicleSpeedValid instead.
 */
#define SIG_ESP_GeneralStatus_ESP_VehicleSpeedValid 1, 0, 7, 1

/**
 * Signal ESP_VehicleSpeedValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_GeneralStatus_ESP_VehicleSpeedValid or \ref INIT_ESP_GeneralStatus instead.
 */
#define SETUP_ESP_GeneralStatus_ESP_VehicleSpeedValid 1, 0, 7, 1, 0

/**
 * Get signal ESP_VehicleSpeedValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_GeneralStatus_ESP_VehicleSpeedValid(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 7) & 0x01) << 0))

/**
 * Set signal ESP_VehicleSpeedValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_GeneralStatus_ESP_VehicleSpeedValid(buf, val)                                                          \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 7);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal ESP_VehicleSpeedValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_GeneralStatus_ESP_VehicleSpeedValid(buf) SET_ESP_GeneralStatus_ESP_VehicleSpeedValid(buf, 0)

/**
 * Signal ESP_VehicleSpeedValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_GeneralStatus_ESP_VehicleSpeedValid(x, fmt) ((x)*fmt)

/**
 * Signal ESP_VehicleSpeedValid raw initial value.
 */
#define START_ESP_GeneralStatus_ESP_VehicleSpeedValid 0

/**
 * Signal ESP_VehicleSpeedValid raw minimum value.
 */
#define MIN_ESP_GeneralStatus_ESP_VehicleSpeedValid 0

/**
 * Signal ESP_VehicleSpeedValid raw maximum value.
 */
#define MAX_ESP_GeneralStatus_ESP_VehicleSpeedValid 1

/**
 * Signal ESP_VehicleSpeedValid raw offset value.
 */
#define OFF_ESP_GeneralStatus_ESP_VehicleSpeedValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_GeneralStatus_ESP_VehicleSpeedValid Value Table for Signal ESP_VehicleSpeedValid in Message
 * ESP_GeneralStatus (0x295)
 *
 * Enum values defined for \ref SIG_ESP_GeneralStatus_ESP_VehicleSpeedValid.
 *
 * @ingroup SIG_ESP_GeneralStatus_ESP_VehicleSpeedValid
 */

/**
 * Value table ESP_GeneralStatus_ESP_VehicleSpeedValid entry Invalid.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_VehicleSpeedValid
 */
#define ESP_GeneralStatus_ESP_VehicleSpeedValid_Invalid 1

/**
 * Value table ESP_GeneralStatus_ESP_VehicleSpeedValid entry Valid.
 *
 * @ingroup ENUM_ESP_GeneralStatus_ESP_VehicleSpeedValid
 */
#define ESP_GeneralStatus_ESP_VehicleSpeedValid_Valid 0

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum Signal ESP_RearWheelPulseSt_Checksum of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RearWheelPulseSt_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 1, 0, 63, 8

/**
 * Signal ESP_RearWheelPulseSt_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum or \ref INIT_ESP_RearWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ESP_RearWheelPulseSt_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(buf)                                                \
    (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RearWheelPulseSt_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(buf, val)                                           \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RearWheelPulseSt_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(buf)                                            \
    SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(buf, 0)

/**
 * Signal ESP_RearWheelPulseSt_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RearWheelPulseSt_Checksum raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 0

/**
 * Signal ESP_RearWheelPulseSt_Checksum raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 0

/**
 * Signal ESP_RearWheelPulseSt_Checksum raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 255

/**
 * Signal ESP_RearWheelPulseSt_Checksum raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt Signal ESP_RearWheelPulseSt_RollCnt of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RearWheelPulseSt_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 1, 0, 55, 4

/**
 * Signal ESP_RearWheelPulseSt_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt or \ref INIT_ESP_RearWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ESP_RearWheelPulseSt_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(buf)                                                 \
    (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ESP_RearWheelPulseSt_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(buf, val)                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ESP_RearWheelPulseSt_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(buf)                                             \
    SET_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(buf, 0)

/**
 * Signal ESP_RearWheelPulseSt_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RearWheelPulseSt_RollCnt raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 0

/**
 * Signal ESP_RearWheelPulseSt_RollCnt raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 0

/**
 * Signal ESP_RearWheelPulseSt_RollCnt raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 15

/**
 * Signal ESP_RearWheelPulseSt_RollCnt raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RearWheelPulseSt_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection Signal ESP_RRWheelRotationDirection of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Wheel Rotation Direction RR
 * ÓÒºó³µÂÖ×ª¶¯·½Ïò
 *
 * Contains the value table \ref ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RRWheelRotationDirection configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 1, 0, 41, 2

/**
 * Signal ESP_RRWheelRotationDirection setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection or \ref INIT_ESP_RearWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 1, 0, 41, 2, 0

/**
 * Get signal ESP_RRWheelRotationDirection from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(buf)                                                 \
    (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0x03) << 0))

/**
 * Set signal ESP_RRWheelRotationDirection in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(buf, val)                                            \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ESP_RRWheelRotationDirection in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(buf)                                             \
    SET_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(buf, 0)

/**
 * Signal ESP_RRWheelRotationDirection value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RRWheelRotationDirection raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 0

/**
 * Signal ESP_RRWheelRotationDirection raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 0

/**
 * Signal ESP_RRWheelRotationDirection raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 3

/**
 * Signal ESP_RRWheelRotationDirection raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection Value Table for Signal
 * ESP_RRWheelRotationDirection in Message ESP_RearWheelPulseStatus (0x125)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection.
 *
 * @ingroup SIG_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 */

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection entry Unknown.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection_Unknown 3

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection entry Reversed.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection_Reversed 2

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection entry Forward.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection_Forward 1

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection entry Standstill.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RRWheelRotationDirection_Standstill 0

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt Signal ESP_RRWheelSpdPulseCnt of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Wheel Speed Pulse Counter RR
 * ÓÒºóÂÖËÙ´«¸ÐÆ÷Âö³å¼ÆÊýÆ÷ÐÅºÅ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RRWheelSpdPulseCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 1, 0, 31, 16

/**
 * Signal ESP_RRWheelSpdPulseCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt or \ref INIT_ESP_RearWheelPulseStatus instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 1, 0, 31, 16, 0

/**
 * Get signal ESP_RRWheelSpdPulseCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(buf)                                                       \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RRWheelSpdPulseCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(buf, val)                                                  \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RRWheelSpdPulseCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(buf)                                                   \
    SET_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(buf, 0)

/**
 * Signal ESP_RRWheelSpdPulseCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RRWheelSpdPulseCnt raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 0

/**
 * Signal ESP_RRWheelSpdPulseCnt raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 0

/**
 * Signal ESP_RRWheelSpdPulseCnt raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 65535

/**
 * Signal ESP_RRWheelSpdPulseCnt raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RRWheelSpdPulseCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection Signal ESP_RLWheelRotationDirection of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Wheel Rotation Direction RL
 * ×óºó³µÂÖ×ª¶¯·½Ïò
 *
 * Contains the value table \ref ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RLWheelRotationDirection configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 1, 0, 17, 2

/**
 * Signal ESP_RLWheelRotationDirection setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection or \ref INIT_ESP_RearWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 1, 0, 17, 2, 0

/**
 * Get signal ESP_RLWheelRotationDirection from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(buf)                                                 \
    (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal ESP_RLWheelRotationDirection in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(buf, val)                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ESP_RLWheelRotationDirection in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(buf)                                             \
    SET_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(buf, 0)

/**
 * Signal ESP_RLWheelRotationDirection value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RLWheelRotationDirection raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 0

/**
 * Signal ESP_RLWheelRotationDirection raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 0

/**
 * Signal ESP_RLWheelRotationDirection raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 3

/**
 * Signal ESP_RLWheelRotationDirection raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection Value Table for Signal
 * ESP_RLWheelRotationDirection in Message ESP_RearWheelPulseStatus (0x125)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection.
 *
 * @ingroup SIG_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 */

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection entry Unknown.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection_Unknown 3

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection entry Reversed.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection_Reversed 2

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection entry Forward.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection_Forward 1

/**
 * Value table ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection entry Standstill.
 *
 * @ingroup ENUM_ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection
 */
#define ESP_RearWheelPulseStatus_ESP_RLWheelRotationDirection_Standstill 0

/**
 * @defgroup SIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr Signal ESP_RLWheelSpdPulseCntr of Message
 * ESP_RearWheelPulseStatus (0x125)
 *
 * Wheel Speed Pulse Counter RL
 * ×óºóÂÖËÙ´«¸ÐÆ÷Âö³å¼ÆÊýÆ÷ÐÅºÅ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_RLWheelSpdPulseCntr configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr and \ref
 *GET_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr instead.
 */
#define SIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 1, 0, 7, 16

/**
 * Signal ESP_RLWheelSpdPulseCntr setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr or \ref INIT_ESP_RearWheelPulseStatus instead.
 */
#define SETUP_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 1, 0, 7, 16, 0

/**
 * Get signal ESP_RLWheelSpdPulseCntr from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(buf)                                                      \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RLWheelSpdPulseCntr in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(buf, val)                                                 \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RLWheelSpdPulseCntr in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(buf)                                                  \
    SET_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(buf, 0)

/**
 * Signal ESP_RLWheelSpdPulseCntr value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RLWheelSpdPulseCntr raw initial value.
 */
#define START_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 0

/**
 * Signal ESP_RLWheelSpdPulseCntr raw minimum value.
 */
#define MIN_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 0

/**
 * Signal ESP_RLWheelSpdPulseCntr raw maximum value.
 */
#define MAX_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 65535

/**
 * Signal ESP_RLWheelSpdPulseCntr raw offset value.
 */
#define OFF_ESP_RearWheelPulseStatus_ESP_RLWheelSpdPulseCntr 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum Signal ESP_FrontWheelPulseSt_Checksum of
 * Message ESP_FrontWheelPulseStatus (0x105)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FrontWheelPulseSt_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 1, 0, 63, 8

/**
 * Signal ESP_FrontWheelPulseSt_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum or \ref INIT_ESP_FrontWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ESP_FrontWheelPulseSt_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(buf)                                              \
    (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FrontWheelPulseSt_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(buf, val)                                         \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FrontWheelPulseSt_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(buf)                                          \
    SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(buf, 0)

/**
 * Signal ESP_FrontWheelPulseSt_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FrontWheelPulseSt_Checksum raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 0

/**
 * Signal ESP_FrontWheelPulseSt_Checksum raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 0

/**
 * Signal ESP_FrontWheelPulseSt_Checksum raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 255

/**
 * Signal ESP_FrontWheelPulseSt_Checksum raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt Signal ESP_FrontWheelPulseSt_RollCnt of Message
 * ESP_FrontWheelPulseStatus (0x105)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 1, 0, 55, 4

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt or \ref INIT_ESP_FrontWheelPulseStatus
 *instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ESP_FrontWheelPulseSt_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(buf)                                               \
    (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ESP_FrontWheelPulseSt_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(buf, val)                                          \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ESP_FrontWheelPulseSt_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(buf)                                           \
    SET_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(buf, 0)

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 0

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 0

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 15

/**
 * Signal ESP_FrontWheelPulseSt_RollCnt raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FrontWheelPulseSt_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir Signal ESP_FRWheelRotationDir of Message
 * ESP_FrontWheelPulseStatus (0x105)
 *
 * Wheel Rotation Direction FR
 * ÓÒÇ°³µÂÖ×ª¶¯·½Ïò
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FRWheelRotationDir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 1, 0, 41, 2

/**
 * Signal ESP_FRWheelRotationDir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir or \ref INIT_ESP_FrontWheelPulseStatus instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 1, 0, 41, 2, 0

/**
 * Get signal ESP_FRWheelRotationDir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0x03) << 0))

/**
 * Set signal ESP_FRWheelRotationDir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(buf, val)                                                 \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ESP_FRWheelRotationDir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(buf)                                                  \
    SET_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(buf, 0)

/**
 * Signal ESP_FRWheelRotationDir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FRWheelRotationDir raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 0

/**
 * Signal ESP_FRWheelRotationDir raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 0

/**
 * Signal ESP_FRWheelRotationDir raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 3

/**
 * Signal ESP_FRWheelRotationDir raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir Value Table for Signal ESP_FRWheelRotationDir in
 * Message ESP_FrontWheelPulseStatus (0x105)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir.
 *
 * @ingroup SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 */

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir entry Unknown.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir_Unknown 3

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir entry Reversed.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir_Reversed 2

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir entry Forward.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir_Forward 1

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir entry Standstill.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FRWheelRotationDir_Standstill 0

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt Signal ESP_FRWheelSpdPulseCnt of Message
 * ESP_FrontWheelPulseStatus (0x105)
 *
 * Wheel Speed Pulse Counter FR
 * ÓÒÇ°ÂÖËÙ´«¸ÐÆ÷Âö³å¼ÆÊýÆ÷ÐÅºÅ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FRWheelSpdPulseCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 1, 0, 31, 16

/**
 * Signal ESP_FRWheelSpdPulseCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt or \ref INIT_ESP_FrontWheelPulseStatus instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 1, 0, 31, 16, 0

/**
 * Get signal ESP_FRWheelSpdPulseCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(buf)                                                      \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FRWheelSpdPulseCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(buf, val)                                                 \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FRWheelSpdPulseCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(buf)                                                  \
    SET_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(buf, 0)

/**
 * Signal ESP_FRWheelSpdPulseCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FRWheelSpdPulseCnt raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 0

/**
 * Signal ESP_FRWheelSpdPulseCnt raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 0

/**
 * Signal ESP_FRWheelSpdPulseCnt raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 65535

/**
 * Signal ESP_FRWheelSpdPulseCnt raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FRWheelSpdPulseCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir Signal ESP_FLWheelRotationDir of Message
 * ESP_FrontWheelPulseStatus (0x105)
 *
 * Wheel Rotation Direction FL
 * ×óÇ°³µÂÖ×ª¶¯·½Ïò
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FLWheelRotationDir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 1, 0, 17, 2

/**
 * Signal ESP_FLWheelRotationDir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir or \ref INIT_ESP_FrontWheelPulseStatus instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 1, 0, 17, 2, 0

/**
 * Get signal ESP_FLWheelRotationDir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal ESP_FLWheelRotationDir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(buf, val)                                                 \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal ESP_FLWheelRotationDir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(buf)                                                  \
    SET_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(buf, 0)

/**
 * Signal ESP_FLWheelRotationDir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FLWheelRotationDir raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 0

/**
 * Signal ESP_FLWheelRotationDir raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 0

/**
 * Signal ESP_FLWheelRotationDir raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 3

/**
 * Signal ESP_FLWheelRotationDir raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir Value Table for Signal ESP_FLWheelRotationDir in
 * Message ESP_FrontWheelPulseStatus (0x105)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir.
 *
 * @ingroup SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 */

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir entry Unknown.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir_Unknown 3

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir entry Reversed.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir_Reversed 2

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir entry Forward.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir_Forward 1

/**
 * Value table ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir entry Standstill.
 *
 * @ingroup ENUM_ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir
 */
#define ESP_FrontWheelPulseStatus_ESP_FLWheelRotationDir_Standstill 0

/**
 * @defgroup SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt Signal ESP_FLWheelSpdPulseCnt of Message
 * ESP_FrontWheelPulseStatus (0x105)
 *
 * Wheel Speed Pulse Counter FL
 * ×óÇ°ÂÖËÙ´«¸ÐÆ÷Âö³å¼ÆÊýÆ÷ÐÅºÅ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelPulseStatus
 * @{
 */

/**
 * Signal ESP_FLWheelSpdPulseCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt and \ref
 *GET_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt instead.
 */
#define SIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 1, 0, 7, 16

/**
 * Signal ESP_FLWheelSpdPulseCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt or \ref INIT_ESP_FrontWheelPulseStatus instead.
 */
#define SETUP_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 1, 0, 7, 16, 0

/**
 * Get signal ESP_FLWheelSpdPulseCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(buf)                                                      \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FLWheelSpdPulseCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(buf, val)                                                 \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FLWheelSpdPulseCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(buf)                                                  \
    SET_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(buf, 0)

/**
 * Signal ESP_FLWheelSpdPulseCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FLWheelSpdPulseCnt raw initial value.
 */
#define START_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 0

/**
 * Signal ESP_FLWheelSpdPulseCnt raw minimum value.
 */
#define MIN_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 0

/**
 * Signal ESP_FLWheelSpdPulseCnt raw maximum value.
 */
#define MAX_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 65535

/**
 * Signal ESP_FLWheelSpdPulseCnt raw offset value.
 */
#define OFF_ESP_FrontWheelPulseStatus_ESP_FLWheelSpdPulseCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum Signal ESP_RearWheelSpdSt_Checksum of Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RearWheelSpdSt_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum and \ref
 *GET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 1, 0, 63, 8

/**
 * Signal ESP_RearWheelSpdSt_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ESP_RearWheelSpdSt_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RearWheelSpdSt_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(buf, val)                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RearWheelSpdSt_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(buf)                                                \
    SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(buf, 0)

/**
 * Signal ESP_RearWheelSpdSt_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RearWheelSpdSt_Checksum raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 0

/**
 * Signal ESP_RearWheelSpdSt_Checksum raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 0

/**
 * Signal ESP_RearWheelSpdSt_Checksum raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 255

/**
 * Signal ESP_RearWheelSpdSt_Checksum raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt Signal ESP_RearWheelSpdSt_RollCnt of Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RearWheelSpdSt_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt and \ref
 *GET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 1, 0, 55, 4

/**
 * Signal ESP_RearWheelSpdSt_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ESP_RearWheelSpdSt_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ESP_RearWheelSpdSt_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(buf, val)                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ESP_RearWheelSpdSt_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(buf)                                                 \
    SET_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(buf, 0)

/**
 * Signal ESP_RearWheelSpdSt_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RearWheelSpdSt_RollCnt raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 0

/**
 * Signal ESP_RearWheelSpdSt_RollCnt raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 0

/**
 * Signal ESP_RearWheelSpdSt_RollCnt raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 15

/**
 * Signal ESP_RearWheelSpdSt_RollCnt raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RearWheelSpdSt_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd Signal ESP_RRWheelSpd of Message ESP_RearWheelSpdStatus (0x275)
 *
 * wheel speed RR
 * ÓÒºóÂÖËÙ
 *
 * Contains the value table \ref ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RRWheelSpd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpd and \ref GET_ESP_RearWheelSpdStatus_ESP_RRWheelSpd instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 1, 0, 20, 13

/**
 * Signal ESP_RRWheelSpd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 1, 0, 20, 13, 0

/**
 * Get signal ESP_RRWheelSpd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x1f) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RRWheelSpd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x1f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0x1f) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RRWheelSpd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(buf) SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(buf, 0)

/**
 * Signal ESP_RRWheelSpd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RRWheelSpd(x, fmt) ((x)*fmt * 9 / 160)

/**
 * Signal ESP_RRWheelSpd raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 0

/**
 * Signal ESP_RRWheelSpd raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 0

/**
 * Signal ESP_RRWheelSpd raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 8190

/**
 * Signal ESP_RRWheelSpd raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RRWheelSpd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpd Value Table for Signal ESP_RRWheelSpd in Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd.
 *
 * @ingroup SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpd
 */

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RRWheelSpd entry Invalid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpd
 */
#define ESP_RearWheelSpdStatus_ESP_RRWheelSpd_Invalid 8191

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid Signal ESP_RRWheelSpdValid of Message ESP_RearWheelSpdStatus
 * (0x275)
 *
 * status of wheel speed RR
 * ÓÒºóÂÖËÙÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RRWheelSpdValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid and \ref GET_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid
 *instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 1, 0, 23, 1

/**
 * Signal ESP_RRWheelSpdValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 1, 0, 23, 1, 0

/**
 * Get signal ESP_RRWheelSpdValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 7) & 0x01) << 0))

/**
 * Set signal ESP_RRWheelSpdValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(buf, val)                                                       \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 7);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal ESP_RRWheelSpdValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(buf) SET_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(buf, 0)

/**
 * Signal ESP_RRWheelSpdValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RRWheelSpdValid raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 0

/**
 * Signal ESP_RRWheelSpdValid raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 0

/**
 * Signal ESP_RRWheelSpdValid raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 1

/**
 * Signal ESP_RRWheelSpdValid raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid Value Table for Signal ESP_RRWheelSpdValid in Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid.
 *
 * @ingroup SIG_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid
 */

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid entry Invalid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid
 */
#define ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid_Invalid 1

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid entry Valid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid
 */
#define ESP_RearWheelSpdStatus_ESP_RRWheelSpdValid_Valid 0

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd Signal ESP_RLWheelSpd of Message ESP_RearWheelSpdStatus (0x275)
 *
 * wheel speed RL
 * ×óºóÂÖËÙ
 *
 * Contains the value table \ref ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RLWheelSpd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpd and \ref GET_ESP_RearWheelSpdStatus_ESP_RLWheelSpd instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 1, 0, 4, 13

/**
 * Signal ESP_RLWheelSpd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 1, 0, 4, 13, 0

/**
 * Get signal ESP_RLWheelSpd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_RLWheelSpd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_RLWheelSpd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(buf) SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(buf, 0)

/**
 * Signal ESP_RLWheelSpd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RLWheelSpd(x, fmt) ((x)*fmt * 9 / 160)

/**
 * Signal ESP_RLWheelSpd raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 0

/**
 * Signal ESP_RLWheelSpd raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 0

/**
 * Signal ESP_RLWheelSpd raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 8190

/**
 * Signal ESP_RLWheelSpd raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RLWheelSpd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpd Value Table for Signal ESP_RLWheelSpd in Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd.
 *
 * @ingroup SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpd
 */

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RLWheelSpd entry Invalid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpd
 */
#define ESP_RearWheelSpdStatus_ESP_RLWheelSpd_Invalid 8191

/**
 * @defgroup SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid Signal ESP_RLWheelSpdValid of Message ESP_RearWheelSpdStatus
 * (0x275)
 *
 * status of wheel speed RL
 * ×óºóÂÖËÙÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_RearWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_RLWheelSpdValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid and \ref GET_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid
 *instead.
 */
#define SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 1, 0, 7, 1

/**
 * Signal ESP_RLWheelSpdValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid or \ref INIT_ESP_RearWheelSpdStatus instead.
 */
#define SETUP_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 1, 0, 7, 1, 0

/**
 * Get signal ESP_RLWheelSpdValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 7) & 0x01) << 0))

/**
 * Set signal ESP_RLWheelSpdValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(buf, val)                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 7);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal ESP_RLWheelSpdValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(buf) SET_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(buf, 0)

/**
 * Signal ESP_RLWheelSpdValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid(x, fmt) ((x)*fmt)

/**
 * Signal ESP_RLWheelSpdValid raw initial value.
 */
#define START_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 0

/**
 * Signal ESP_RLWheelSpdValid raw minimum value.
 */
#define MIN_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 0

/**
 * Signal ESP_RLWheelSpdValid raw maximum value.
 */
#define MAX_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 1

/**
 * Signal ESP_RLWheelSpdValid raw offset value.
 */
#define OFF_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid Value Table for Signal ESP_RLWheelSpdValid in Message
 * ESP_RearWheelSpdStatus (0x275)
 *
 * Enum values defined for \ref SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid.
 *
 * @ingroup SIG_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid
 */

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid entry Invalid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid
 */
#define ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid_Invalid 1

/**
 * Value table ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid entry Valid.
 *
 * @ingroup ENUM_ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid
 */
#define ESP_RearWheelSpdStatus_ESP_RLWheelSpdValid_Valid 0

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum Signal ESP_FrontWheelSpdSt_Checksum of Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FrontWheelSpdSt_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum and \ref
 *GET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 1, 0, 63, 8

/**
 * Signal ESP_FrontWheelSpdSt_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 1, 0, 63, 8, 0

/**
 * Get signal ESP_FrontWheelSpdSt_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FrontWheelSpdSt_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(buf, val)                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FrontWheelSpdSt_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(buf)                                              \
    SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(buf, 0)

/**
 * Signal ESP_FrontWheelSpdSt_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FrontWheelSpdSt_Checksum raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 0

/**
 * Signal ESP_FrontWheelSpdSt_Checksum raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 0

/**
 * Signal ESP_FrontWheelSpdSt_Checksum raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 255

/**
 * Signal ESP_FrontWheelSpdSt_Checksum raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt Signal ESP_FrontWheelSpdSt_RollCnt of Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt and \ref
 *GET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 1, 0, 55, 4

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal ESP_FrontWheelSpdSt_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal ESP_FrontWheelSpdSt_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(buf, val)                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal ESP_FrontWheelSpdSt_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(buf)                                               \
    SET_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(buf, 0)

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 0

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 0

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 15

/**
 * Signal ESP_FrontWheelSpdSt_RollCnt raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FrontWheelSpdSt_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed Signal ESP_FRWheelSpeed of Message ESP_FrontWheelSpdStatus
 * (0x255)
 *
 * wheel speed FR
 * ÓÒÇ°ÂÖËÙ
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FRWheelSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed and \ref GET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 1, 0, 20, 13

/**
 * Signal ESP_FRWheelSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 1, 0, 20, 13, 0

/**
 * Get signal ESP_FRWheelSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(buf)                                                              \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x1f) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FRWheelSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(buf, val)                                                         \
    {                                                                                                                  \
        buf[2] &= ~(0x1f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0x1f) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FRWheelSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(buf) SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(buf, 0)

/**
 * Signal ESP_FRWheelSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed(x, fmt) ((x)*fmt * 9 / 160)

/**
 * Signal ESP_FRWheelSpeed raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 0

/**
 * Signal ESP_FRWheelSpeed raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 0

/**
 * Signal ESP_FRWheelSpeed raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 8190

/**
 * Signal ESP_FRWheelSpeed raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed Value Table for Signal ESP_FRWheelSpeed in Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed.
 *
 * @ingroup SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed
 */

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed entry Invalid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed
 */
#define ESP_FrontWheelSpdStatus_ESP_FRWheelSpeed_Invalid 8191

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid Signal ESP_FRWheelSpeedValid of Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * status of wheel speed FR
 * ÓÒÇ°ÂÖËÙÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FRWheelSpeedValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid and \ref
 *GET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 1, 0, 23, 1

/**
 * Signal ESP_FRWheelSpeedValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 1, 0, 23, 1, 0

/**
 * Get signal ESP_FRWheelSpeedValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 7) & 0x01) << 0))

/**
 * Set signal ESP_FRWheelSpeedValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(buf, val)                                                    \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 7);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal ESP_FRWheelSpeedValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(buf)                                                     \
    SET_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(buf, 0)

/**
 * Signal ESP_FRWheelSpeedValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FRWheelSpeedValid raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 0

/**
 * Signal ESP_FRWheelSpeedValid raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 0

/**
 * Signal ESP_FRWheelSpeedValid raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 1

/**
 * Signal ESP_FRWheelSpeedValid raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid Value Table for Signal ESP_FRWheelSpeedValid in Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid.
 *
 * @ingroup SIG_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid
 */

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid entry Invalid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid
 */
#define ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid_Invalid 1

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid entry Valid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid
 */
#define ESP_FrontWheelSpdStatus_ESP_FRWheelSpeedValid_Valid 0

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed Signal ESP_FLWheelSpeed of Message ESP_FrontWheelSpdStatus
 * (0x255)
 *
 * wheel speed FL
 * ×óÇ°ÂÖËÙ
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FLWheelSpeed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed and \ref GET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 1, 0, 4, 13

/**
 * Signal ESP_FLWheelSpeed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 1, 0, 4, 13, 0

/**
 * Get signal ESP_FLWheelSpeed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(buf)                                                              \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal ESP_FLWheelSpeed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal ESP_FLWheelSpeed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(buf) SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(buf, 0)

/**
 * Signal ESP_FLWheelSpeed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed(x, fmt) ((x)*fmt * 9 / 160)

/**
 * Signal ESP_FLWheelSpeed raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 0

/**
 * Signal ESP_FLWheelSpeed raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 0

/**
 * Signal ESP_FLWheelSpeed raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 8190

/**
 * Signal ESP_FLWheelSpeed raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed Value Table for Signal ESP_FLWheelSpeed in Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed.
 *
 * @ingroup SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed
 */

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed entry Invalid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed
 */
#define ESP_FrontWheelSpdStatus_ESP_FLWheelSpeed_Invalid 8191

/**
 * @defgroup SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid Signal ESP_FLWheelSpeedValid of Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * status of wheel speed FL
 * ×óÇ°ÂÖËÙÓÐÐ§ÐÔ
 *
 * Contains the value table \ref ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_FrontWheelSpdStatus
 * @{
 */

/**
 * Signal ESP_FLWheelSpeedValid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid and \ref
 *GET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid instead.
 */
#define SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 1, 0, 7, 1

/**
 * Signal ESP_FLWheelSpeedValid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid or \ref INIT_ESP_FrontWheelSpdStatus instead.
 */
#define SETUP_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 1, 0, 7, 1, 0

/**
 * Get signal ESP_FLWheelSpeedValid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 7) & 0x01) << 0))

/**
 * Set signal ESP_FLWheelSpeedValid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(buf, val)                                                    \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 7);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal ESP_FLWheelSpeedValid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(buf)                                                     \
    SET_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(buf, 0)

/**
 * Signal ESP_FLWheelSpeedValid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid(x, fmt) ((x)*fmt)

/**
 * Signal ESP_FLWheelSpeedValid raw initial value.
 */
#define START_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 0

/**
 * Signal ESP_FLWheelSpeedValid raw minimum value.
 */
#define MIN_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 0

/**
 * Signal ESP_FLWheelSpeedValid raw maximum value.
 */
#define MAX_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 1

/**
 * Signal ESP_FLWheelSpeedValid raw offset value.
 */
#define OFF_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid Value Table for Signal ESP_FLWheelSpeedValid in Message
 * ESP_FrontWheelSpdStatus (0x255)
 *
 * Enum values defined for \ref SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid.
 *
 * @ingroup SIG_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid
 */

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid entry Invalid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid
 */
#define ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid_Invalid 1

/**
 * Value table ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid entry Valid.
 *
 * @ingroup ENUM_ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid
 */
#define ESP_FrontWheelSpdStatus_ESP_FLWheelSpeedValid_Valid 0

/**
 * @defgroup SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum Signal VCU_CH_DriverCmd_Checksum of Message VCU_CH_DriverCmd
 * (0x117)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VCU_CH_DriverCmd
 * @{
 */

/**
 * Signal VCU_CH_DriverCmd_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum and \ref GET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum
 *instead.
 */
#define SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 1, 0, 63, 8

/**
 * Signal VCU_CH_DriverCmd_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum or \ref INIT_VCU_CH_DriverCmd instead.
 */
#define SETUP_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 1, 0, 63, 8, 0

/**
 * Get signal VCU_CH_DriverCmd_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal VCU_CH_DriverCmd_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal VCU_CH_DriverCmd_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(buf) SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(buf, 0)

/**
 * Signal VCU_CH_DriverCmd_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal VCU_CH_DriverCmd_Checksum raw initial value.
 */
#define START_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 0

/**
 * Signal VCU_CH_DriverCmd_Checksum raw minimum value.
 */
#define MIN_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 0

/**
 * Signal VCU_CH_DriverCmd_Checksum raw maximum value.
 */
#define MAX_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 255

/**
 * Signal VCU_CH_DriverCmd_Checksum raw offset value.
 */
#define OFF_VCU_CH_DriverCmd_VCU_CH_DriverCmd_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt Signal VCU_CH_DriverCmd_RollCnt of Message VCU_CH_DriverCmd
 * (0x117)
 *
 * Rolling Counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VCU_CH_DriverCmd
 * @{
 */

/**
 * Signal VCU_CH_DriverCmd_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt and \ref GET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt
 *instead.
 */
#define SIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 1, 0, 55, 4

/**
 * Signal VCU_CH_DriverCmd_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt or \ref INIT_VCU_CH_DriverCmd instead.
 */
#define SETUP_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal VCU_CH_DriverCmd_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal VCU_CH_DriverCmd_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal VCU_CH_DriverCmd_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(buf) SET_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(buf, 0)

/**
 * Signal VCU_CH_DriverCmd_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal VCU_CH_DriverCmd_RollCnt raw initial value.
 */
#define START_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 0

/**
 * Signal VCU_CH_DriverCmd_RollCnt raw minimum value.
 */
#define MIN_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 0

/**
 * Signal VCU_CH_DriverCmd_RollCnt raw maximum value.
 */
#define MAX_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 15

/**
 * Signal VCU_CH_DriverCmd_RollCnt raw offset value.
 */
#define OFF_VCU_CH_DriverCmd_VCU_CH_DriverCmd_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition Signal VCU_CH_ActualGearShiftPosition of Message
 * VCU_CH_DriverCmd (0x117)
 *
 * VCU_ActualGearShiftPosition
 * Âß¼­µµÎ»ÐÅºÅ
 *
 * Contains the value table \ref ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_VCU_CH_DriverCmd
 * @{
 */

/**
 * Signal VCU_CH_ActualGearShiftPosition configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition and \ref
 *GET_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition instead.
 */
#define SIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 1, 0, 50, 3

/**
 * Signal VCU_CH_ActualGearShiftPosition setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition or \ref INIT_VCU_CH_DriverCmd instead.
 */
#define SETUP_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 1, 0, 50, 3, 0

/**
 * Get signal VCU_CH_ActualGearShiftPosition from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x07) << 0))

/**
 * Set signal VCU_CH_ActualGearShiftPosition in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(buf, val)                                                  \
    {                                                                                                                  \
        buf[6] &= ~(0x07 << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal VCU_CH_ActualGearShiftPosition in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(buf)                                                   \
    SET_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(buf, 0)

/**
 * Signal VCU_CH_ActualGearShiftPosition value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition(x, fmt) ((x)*fmt)

/**
 * Signal VCU_CH_ActualGearShiftPosition raw initial value.
 */
#define START_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 0

/**
 * Signal VCU_CH_ActualGearShiftPosition raw minimum value.
 */
#define MIN_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 0

/**
 * Signal VCU_CH_ActualGearShiftPosition raw maximum value.
 */
#define MAX_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 7

/**
 * Signal VCU_CH_ActualGearShiftPosition raw offset value.
 */
#define OFF_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition 0

/**
 * @}
 */

/**
 * @defgroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition Value Table for Signal VCU_CH_ActualGearShiftPosition
 * in Message VCU_CH_DriverCmd (0x117)
 *
 * Enum values defined for \ref SIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition.
 *
 * @ingroup SIG_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry Invalid.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_Invalid 7

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry Reserved.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_Reserved 6

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry Reserved_5.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_Reserved_5 5

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry P.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_P 4

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry D.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_D 3

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry N.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_N 2

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry R.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_R 1

/**
 * Value table VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition entry InitialState.
 *
 * @ingroup ENUM_VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition
 */
#define VCU_CH_DriverCmd_VCU_CH_ActualGearShiftPosition_InitialState 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived Signal PAS_ADAS_InvalidDataReceived of Message
 * PAS_Diagnosis2 (0x654)
 *
 * Invalid Data Received from ADAS
 * ADASÄ£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ADAS_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 1, 0, 22, 1

/**
 * Signal PAS_ADAS_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 1, 0, 22, 1, 0

/**
 * Get signal PAS_ADAS_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_ADAS_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(buf, val)                                                      \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_ADAS_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_ADAS_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ADAS_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 0

/**
 * Signal PAS_ADAS_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 0

/**
 * Signal PAS_ADAS_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 1

/**
 * Signal PAS_ADAS_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived Value Table for Signal PAS_ADAS_InvalidDataReceived in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ADAS_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd Signal PAS_GW_CRCandRollCntRxd of Message PAS_Diagnosis2 (0x654)
 *
 * CRC and RollingCounter received from GW
 * GWÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_GW_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 1, 0, 21, 1

/**
 * Signal PAS_GW_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 1, 0, 21, 1, 0

/**
 * Get signal PAS_GW_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_GW_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(buf, val)                                                           \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 5);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_GW_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_GW_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_GW_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 0

/**
 * Signal PAS_GW_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 0

/**
 * Signal PAS_GW_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 1

/**
 * Signal PAS_GW_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd Value Table for Signal PAS_GW_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_GW_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd Signal PAS_EPS_CRCandRollCntRxd of Message PAS_Diagnosis2
 * (0x654)
 *
 * CRC and RollingCounter  Received From EPS
 * EPSÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_EPS_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 1, 0, 20, 1

/**
 * Signal PAS_EPS_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 1, 0, 20, 1, 0

/**
 * Get signal PAS_EPS_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_EPS_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(buf, val)                                                          \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_EPS_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_EPS_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_EPS_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 0

/**
 * Signal PAS_EPS_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 0

/**
 * Signal PAS_EPS_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 1

/**
 * Signal PAS_EPS_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd Value Table for Signal PAS_EPS_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_EPS_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd Signal PAS_ACU_CRCandRollCntRxd of Message PAS_Diagnosis2
 * (0x654)
 *
 * CRC and RollingCounter Data Received From ACU
 * ACU ÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ACU_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 1, 0, 19, 1

/**
 * Signal PAS_ACU_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 1, 0, 19, 1, 0

/**
 * Get signal PAS_ACU_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_ACU_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(buf, val)                                                          \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 3);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_ACU_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_ACU_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ACU_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 0

/**
 * Signal PAS_ACU_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 0

/**
 * Signal PAS_ACU_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 1

/**
 * Signal PAS_ACU_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd Value Table for Signal PAS_ACU_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ACU_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd Signal PAS_ESP_CRCandRollCntRxd of Message PAS_Diagnosis2
 * (0x654)
 *
 * CRC and RollingCounter  Received from ESP
 * ESPÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ESP_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 1, 0, 18, 1

/**
 * Signal PAS_ESP_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 1, 0, 18, 1, 0

/**
 * Get signal PAS_ESP_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_ESP_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(buf, val)                                                          \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 2);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_ESP_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_ESP_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ESP_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 0

/**
 * Signal PAS_ESP_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 0

/**
 * Signal PAS_ESP_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 1

/**
 * Signal PAS_ESP_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd Value Table for Signal PAS_ESP_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ESP_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd Signal PAS_VCU_CRCandRollCntRxd of Message PAS_Diagnosis2
 * (0x654)
 *
 * CRC and RollingCounter Received from VCU
 * VCUÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_VCU_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 1, 0, 17, 1

/**
 * Signal PAS_VCU_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 1, 0, 17, 1, 0

/**
 * Get signal PAS_VCU_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_VCU_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(buf, val)                                                          \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 1);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_VCU_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_VCU_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_VCU_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 0

/**
 * Signal PAS_VCU_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 0

/**
 * Signal PAS_VCU_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 1

/**
 * Signal PAS_VCU_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd Value Table for Signal PAS_VCU_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_VCU_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd Signal PAS_ADAS_CRCandRollCntRxd of Message PAS_Diagnosis2
 * (0x654)
 *
 * CRC and RollingCounter  received from ADAS
 * ADAS ÐÅºÅCRCÒÔ¼° RollingCounter²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ADAS_CRCandRollCntRxd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd and \ref GET_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 1, 0, 16, 1

/**
 * Signal PAS_ADAS_CRCandRollCntRxd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 1, 0, 16, 1, 0

/**
 * Get signal PAS_ADAS_CRCandRollCntRxd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_ADAS_CRCandRollCntRxd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(buf, val)                                                         \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_ADAS_CRCandRollCntRxd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(buf) SET_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(buf, 0)

/**
 * Signal PAS_ADAS_CRCandRollCntRxd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ADAS_CRCandRollCntRxd raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 0

/**
 * Signal PAS_ADAS_CRCandRollCntRxd raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 0

/**
 * Signal PAS_ADAS_CRCandRollCntRxd raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 1

/**
 * Signal PAS_ADAS_CRCandRollCntRxd raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd Value Table for Signal PAS_ADAS_CRCandRollCntRxd in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd
 */

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd
 */
#define PAS_Diagnosis2_PAS_ADAS_CRCandRollCntRxd_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived Signal PAS_VCU_InvalidDataReceived of Message PAS_Diagnosis2
 * (0x654)
 *
 * Invalid Data received from VCU
 * VCUÄ£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_VCU_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 1, 0, 15, 1

/**
 * Signal PAS_VCU_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 1, 0, 15, 1, 0

/**
 * Get signal PAS_VCU_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_VCU_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(buf, val)                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 7);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_VCU_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_VCU_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_VCU_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 0

/**
 * Signal PAS_VCU_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 0

/**
 * Signal PAS_VCU_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 1

/**
 * Signal PAS_VCU_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived Value Table for Signal PAS_VCU_InvalidDataReceived in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_VCU_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_VCU_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_VCU_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_VCU_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived Signal PAS_GW_InvalidDataReceived of Message PAS_Diagnosis2
 * (0x654)
 *
 * Invalid data received from GW
 * GWÄ£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_GW_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_GW_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_GW_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_GW_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 1, 0, 14, 1

/**
 * Signal PAS_GW_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 1, 0, 14, 1, 0

/**
 * Get signal PAS_GW_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_GW_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_GW_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_GW_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_GW_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_GW_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 0

/**
 * Signal PAS_GW_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 0

/**
 * Signal PAS_GW_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 1

/**
 * Signal PAS_GW_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_GW_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_GW_InvalidDataReceived Value Table for Signal PAS_GW_InvalidDataReceived in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_GW_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_GW_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_GW_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_GW_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_GW_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived Signal PAS_ESP_InvalidDataReceived of Message PAS_Diagnosis2
 * (0x654)
 *
 * Invalid Data Received from ESP
 * ESPÄ£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ESP_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 1, 0, 13, 1

/**
 * Signal PAS_ESP_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 1, 0, 13, 1, 0

/**
 * Get signal PAS_ESP_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_ESP_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(buf, val)                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 5);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_ESP_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_ESP_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ESP_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 0

/**
 * Signal PAS_ESP_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 0

/**
 * Signal PAS_ESP_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 1

/**
 * Signal PAS_ESP_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived Value Table for Signal PAS_ESP_InvalidDataReceived in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_ESP_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ESP_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ESP_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ESP_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived Signal PAS_EPS_InvalidDataReceived of Message PAS_Diagnosis2
 * (0x654)
 *
 * Invalid Data Received From EPS
 * EPSÄ£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_EPS_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 1, 0, 12, 1

/**
 * Signal PAS_EPS_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 1, 0, 12, 1, 0

/**
 * Get signal PAS_EPS_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_EPS_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(buf, val)                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 4);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_EPS_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_EPS_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_EPS_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 0

/**
 * Signal PAS_EPS_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 0

/**
 * Signal PAS_EPS_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 1

/**
 * Signal PAS_EPS_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived Value Table for Signal PAS_EPS_InvalidDataReceived in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_EPS_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_EPS_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_EPS_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_EPS_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived Signal PAS_ACU_InvalidDataReceived of Message PAS_Diagnosis2
 * (0x654)
 *
 * Invalid Data Received From ACU
 * ACU Ä£¿éÊÕµ½ÎÞÐ§ÐÅºÅ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ACU_InvalidDataReceived configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived and \ref GET_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 1, 0, 11, 1

/**
 * Signal PAS_ACU_InvalidDataReceived setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 1, 0, 11, 1, 0

/**
 * Get signal PAS_ACU_InvalidDataReceived from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_ACU_InvalidDataReceived in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(buf, val)                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_ACU_InvalidDataReceived in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(buf) SET_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(buf, 0)

/**
 * Signal PAS_ACU_InvalidDataReceived value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ACU_InvalidDataReceived raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 0

/**
 * Signal PAS_ACU_InvalidDataReceived raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 0

/**
 * Signal PAS_ACU_InvalidDataReceived raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 1

/**
 * Signal PAS_ACU_InvalidDataReceived raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived Value Table for Signal PAS_ACU_InvalidDataReceived in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived
 */

/**
 * Value table PAS_Diagnosis2_PAS_ACU_InvalidDataReceived entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ACU_InvalidDataReceived_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ACU_InvalidDataReceived entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_InvalidDataReceived
 */
#define PAS_Diagnosis2_PAS_ACU_InvalidDataReceived_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ADAS_LostCom Signal PAS_ADAS_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost Communication from ADAS
 * ADAS ÐÅºÅ¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ADAS_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ADAS_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ADAS_LostCom and \ref GET_PAS_Diagnosis2_PAS_ADAS_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ADAS_LostCom 1, 0, 10, 1

/**
 * Signal PAS_ADAS_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ADAS_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ADAS_LostCom 1, 0, 10, 1, 0

/**
 * Get signal PAS_ADAS_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ADAS_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_ADAS_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ADAS_LostCom(buf, val)                                                                  \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 2);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_ADAS_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ADAS_LostCom(buf) SET_PAS_Diagnosis2_PAS_ADAS_LostCom(buf, 0)

/**
 * Signal PAS_ADAS_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ADAS_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ADAS_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ADAS_LostCom 0

/**
 * Signal PAS_ADAS_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ADAS_LostCom 0

/**
 * Signal PAS_ADAS_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ADAS_LostCom 1

/**
 * Signal PAS_ADAS_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ADAS_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ADAS_LostCom Value Table for Signal PAS_ADAS_LostCom in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ADAS_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ADAS_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_LostCom
 */
#define PAS_Diagnosis2_PAS_ADAS_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ADAS_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ADAS_LostCom
 */
#define PAS_Diagnosis2_PAS_ADAS_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_VCU_LostCom Signal PAS_VCU_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost communication VCU
 * VCUÐÅºÅ¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_VCU_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_VCU_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_VCU_LostCom and \ref GET_PAS_Diagnosis2_PAS_VCU_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_VCU_LostCom 1, 0, 8, 1

/**
 * Signal PAS_VCU_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_VCU_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_VCU_LostCom 1, 0, 8, 1, 0

/**
 * Get signal PAS_VCU_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_VCU_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_VCU_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_VCU_LostCom(buf, val)                                                                   \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_VCU_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_VCU_LostCom(buf) SET_PAS_Diagnosis2_PAS_VCU_LostCom(buf, 0)

/**
 * Signal PAS_VCU_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_VCU_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_VCU_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_VCU_LostCom 0

/**
 * Signal PAS_VCU_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_VCU_LostCom 0

/**
 * Signal PAS_VCU_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_VCU_LostCom 1

/**
 * Signal PAS_VCU_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_VCU_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_VCU_LostCom Value Table for Signal PAS_VCU_LostCom in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_VCU_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_VCU_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_VCU_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_LostCom
 */
#define PAS_Diagnosis2_PAS_VCU_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_VCU_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_VCU_LostCom
 */
#define PAS_Diagnosis2_PAS_VCU_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_GW_LostCom Signal PAS_GW_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost communication GW
 * GWÐÅºÅ¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_GW_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_GW_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_GW_LostCom and \ref GET_PAS_Diagnosis2_PAS_GW_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_GW_LostCom 1, 0, 7, 1

/**
 * Signal PAS_GW_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_GW_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_GW_LostCom 1, 0, 7, 1, 0

/**
 * Get signal PAS_GW_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_GW_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_GW_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_GW_LostCom(buf, val)                                                                    \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 7);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_GW_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_GW_LostCom(buf) SET_PAS_Diagnosis2_PAS_GW_LostCom(buf, 0)

/**
 * Signal PAS_GW_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_GW_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_GW_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_GW_LostCom 0

/**
 * Signal PAS_GW_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_GW_LostCom 0

/**
 * Signal PAS_GW_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_GW_LostCom 1

/**
 * Signal PAS_GW_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_GW_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_GW_LostCom Value Table for Signal PAS_GW_LostCom in Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_GW_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_GW_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_GW_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_LostCom
 */
#define PAS_Diagnosis2_PAS_GW_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_GW_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_GW_LostCom
 */
#define PAS_Diagnosis2_PAS_GW_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ESP_LostCom Signal PAS_ESP_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost communication ESP
 * ESPÍ¨Ñ¶¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ESP_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ESP_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ESP_LostCom and \ref GET_PAS_Diagnosis2_PAS_ESP_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ESP_LostCom 1, 0, 6, 1

/**
 * Signal PAS_ESP_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ESP_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ESP_LostCom 1, 0, 6, 1, 0

/**
 * Get signal PAS_ESP_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ESP_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_ESP_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ESP_LostCom(buf, val)                                                                   \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 6);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_ESP_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ESP_LostCom(buf) SET_PAS_Diagnosis2_PAS_ESP_LostCom(buf, 0)

/**
 * Signal PAS_ESP_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ESP_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ESP_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ESP_LostCom 0

/**
 * Signal PAS_ESP_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ESP_LostCom 0

/**
 * Signal PAS_ESP_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ESP_LostCom 1

/**
 * Signal PAS_ESP_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ESP_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ESP_LostCom Value Table for Signal PAS_ESP_LostCom in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ESP_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ESP_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_ESP_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_LostCom
 */
#define PAS_Diagnosis2_PAS_ESP_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ESP_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ESP_LostCom
 */
#define PAS_Diagnosis2_PAS_ESP_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_EPS_LostCom Signal PAS_EPS_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost communication EPS
 * EPSÍ¨Ñ¶¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_EPS_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_EPS_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_EPS_LostCom and \ref GET_PAS_Diagnosis2_PAS_EPS_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_EPS_LostCom 1, 0, 5, 1

/**
 * Signal PAS_EPS_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_EPS_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_EPS_LostCom 1, 0, 5, 1, 0

/**
 * Get signal PAS_EPS_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_EPS_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_EPS_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_EPS_LostCom(buf, val)                                                                   \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_EPS_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_EPS_LostCom(buf) SET_PAS_Diagnosis2_PAS_EPS_LostCom(buf, 0)

/**
 * Signal PAS_EPS_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_EPS_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_EPS_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_EPS_LostCom 0

/**
 * Signal PAS_EPS_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_EPS_LostCom 0

/**
 * Signal PAS_EPS_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_EPS_LostCom 1

/**
 * Signal PAS_EPS_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_EPS_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_EPS_LostCom Value Table for Signal PAS_EPS_LostCom in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_EPS_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_EPS_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_EPS_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_LostCom
 */
#define PAS_Diagnosis2_PAS_EPS_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_EPS_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_EPS_LostCom
 */
#define PAS_Diagnosis2_PAS_EPS_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ACU_LostCom Signal PAS_ACU_LostCom of Message PAS_Diagnosis2 (0x654)
 *
 * Lost communication ACU
 * ACUÍ¨Ñ¶¶ªÊ§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ACU_LostCom.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ACU_LostCom configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ACU_LostCom and \ref GET_PAS_Diagnosis2_PAS_ACU_LostCom instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ACU_LostCom 1, 0, 4, 1

/**
 * Signal PAS_ACU_LostCom setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ACU_LostCom or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ACU_LostCom 1, 0, 4, 1, 0

/**
 * Get signal PAS_ACU_LostCom from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ACU_LostCom(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_ACU_LostCom in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ACU_LostCom(buf, val)                                                                   \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 4);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_ACU_LostCom in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ACU_LostCom(buf) SET_PAS_Diagnosis2_PAS_ACU_LostCom(buf, 0)

/**
 * Signal PAS_ACU_LostCom value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ACU_LostCom(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ACU_LostCom raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ACU_LostCom 0

/**
 * Signal PAS_ACU_LostCom raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ACU_LostCom 0

/**
 * Signal PAS_ACU_LostCom raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ACU_LostCom 1

/**
 * Signal PAS_ACU_LostCom raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ACU_LostCom 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ACU_LostCom Value Table for Signal PAS_ACU_LostCom in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ACU_LostCom.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ACU_LostCom
 */

/**
 * Value table PAS_Diagnosis2_PAS_ACU_LostCom entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_LostCom
 */
#define PAS_Diagnosis2_PAS_ACU_LostCom_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ACU_LostCom entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ACU_LostCom
 */
#define PAS_Diagnosis2_PAS_ACU_LostCom_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure Signal PAS_WatchdogOrSafetyUcFailure of Message
 * PAS_Diagnosis2 (0x654)
 *
 * Watchdog/ Safety ¦Ìc Failure
 * ¿´ÃÅ¹·/°²È«Ä£¿éÊ§Ð§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_WatchdogOrSafetyUcFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure and \ref GET_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure
 *instead.
 */
#define SIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 1, 0, 2, 1

/**
 * Signal PAS_WatchdogOrSafetyUcFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 1, 0, 2, 1, 0

/**
 * Get signal PAS_WatchdogOrSafetyUcFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_WatchdogOrSafetyUcFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(buf, val)                                                     \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 2);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_WatchdogOrSafetyUcFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(buf)                                                      \
    SET_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(buf, 0)

/**
 * Signal PAS_WatchdogOrSafetyUcFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_WatchdogOrSafetyUcFailure raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 0

/**
 * Signal PAS_WatchdogOrSafetyUcFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 0

/**
 * Signal PAS_WatchdogOrSafetyUcFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 1

/**
 * Signal PAS_WatchdogOrSafetyUcFailure raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure Value Table for Signal PAS_WatchdogOrSafetyUcFailure in
 * Message PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure
 */

/**
 * Value table PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure
 */
#define PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure
 */
#define PAS_Diagnosis2_PAS_WatchdogOrSafetyUcFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ECUNVMFailure Signal PAS_ECUNVMFailure of Message PAS_Diagnosis2 (0x654)
 *
 * ECU NVM failure
 * ECU NVM Ä£¿éÊ§Ð§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ECUNVMFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ECUNVMFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ECUNVMFailure and \ref GET_PAS_Diagnosis2_PAS_ECUNVMFailure instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ECUNVMFailure 1, 0, 1, 1

/**
 * Signal PAS_ECUNVMFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ECUNVMFailure or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ECUNVMFailure 1, 0, 1, 1, 0

/**
 * Get signal PAS_ECUNVMFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ECUNVMFailure(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_ECUNVMFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ECUNVMFailure(buf, val)                                                                 \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 1);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_ECUNVMFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ECUNVMFailure(buf) SET_PAS_Diagnosis2_PAS_ECUNVMFailure(buf, 0)

/**
 * Signal PAS_ECUNVMFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ECUNVMFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ECUNVMFailure raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ECUNVMFailure 0

/**
 * Signal PAS_ECUNVMFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ECUNVMFailure 0

/**
 * Signal PAS_ECUNVMFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ECUNVMFailure 1

/**
 * Signal PAS_ECUNVMFailure raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ECUNVMFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ECUNVMFailure Value Table for Signal PAS_ECUNVMFailure in Message PAS_Diagnosis2
 * (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ECUNVMFailure.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ECUNVMFailure
 */

/**
 * Value table PAS_Diagnosis2_PAS_ECUNVMFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ECUNVMFailure
 */
#define PAS_Diagnosis2_PAS_ECUNVMFailure_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ECUNVMFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ECUNVMFailure
 */
#define PAS_Diagnosis2_PAS_ECUNVMFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis2_PAS_ECUInternalFailure Signal PAS_ECUInternalFailure of Message PAS_Diagnosis2 (0x654)
 *
 * ECU Internal failure
 * ECUÄÚ²¿Ê§Ð§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis2_PAS_ECUInternalFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis2
 * @{
 */

/**
 * Signal PAS_ECUInternalFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis2_PAS_ECUInternalFailure and \ref GET_PAS_Diagnosis2_PAS_ECUInternalFailure instead.
 */
#define SIG_PAS_Diagnosis2_PAS_ECUInternalFailure 1, 0, 0, 1

/**
 * Signal PAS_ECUInternalFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis2_PAS_ECUInternalFailure or \ref INIT_PAS_Diagnosis2 instead.
 */
#define SETUP_PAS_Diagnosis2_PAS_ECUInternalFailure 1, 0, 0, 1, 0

/**
 * Get signal PAS_ECUInternalFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis2_PAS_ECUInternalFailure(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_ECUInternalFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis2_PAS_ECUInternalFailure(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_ECUInternalFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis2_PAS_ECUInternalFailure(buf) SET_PAS_Diagnosis2_PAS_ECUInternalFailure(buf, 0)

/**
 * Signal PAS_ECUInternalFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis2_PAS_ECUInternalFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ECUInternalFailure raw initial value.
 */
#define START_PAS_Diagnosis2_PAS_ECUInternalFailure 0

/**
 * Signal PAS_ECUInternalFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis2_PAS_ECUInternalFailure 0

/**
 * Signal PAS_ECUInternalFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis2_PAS_ECUInternalFailure 1

/**
 * Signal PAS_ECUInternalFailure raw offset value.
 */
#define OFF_PAS_Diagnosis2_PAS_ECUInternalFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis2_PAS_ECUInternalFailure Value Table for Signal PAS_ECUInternalFailure in Message
 * PAS_Diagnosis2 (0x654)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis2_PAS_ECUInternalFailure.
 *
 * @ingroup SIG_PAS_Diagnosis2_PAS_ECUInternalFailure
 */

/**
 * Value table PAS_Diagnosis2_PAS_ECUInternalFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ECUInternalFailure
 */
#define PAS_Diagnosis2_PAS_ECUInternalFailure_Failure 1

/**
 * Value table PAS_Diagnosis2_PAS_ECUInternalFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis2_PAS_ECUInternalFailure
 */
#define PAS_Diagnosis2_PAS_ECUInternalFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange Signal PAS_SensSupplyVoltOutofRange of Message
 * PAS_Diagnosis1 (0x653)
 *
 * Sensor supply voltage out of range
 * ´«¸ÐÆ÷¹©µçµçÔ´³¬¹ýÕý³£·¶Î§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_SensSupplyVoltOutofRange configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange and \ref GET_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 1, 0, 63, 1

/**
 * Signal PAS_SensSupplyVoltOutofRange setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 1, 0, 63, 1, 0

/**
 * Get signal PAS_SensSupplyVoltOutofRange from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_SensSupplyVoltOutofRange in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(buf, val)                                                      \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 7);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_SensSupplyVoltOutofRange in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(buf) SET_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(buf, 0)

/**
 * Signal PAS_SensSupplyVoltOutofRange value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SensSupplyVoltOutofRange raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 0

/**
 * Signal PAS_SensSupplyVoltOutofRange raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 0

/**
 * Signal PAS_SensSupplyVoltOutofRange raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 1

/**
 * Signal PAS_SensSupplyVoltOutofRange raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange Value Table for Signal PAS_SensSupplyVoltOutofRange in
 * Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange
 */

/**
 * Value table PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange
 */
#define PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange
 */
#define PAS_Diagnosis1_PAS_SensSupplyVoltOutofRange_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure Signal PAS_USS12SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS12 Sensor ringing time failure
 * ×óºó²àÀ×´ï£¨USS12£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS12SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 1, 0, 62, 1

/**
 * Signal PAS_USS12SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 1, 0, 62, 1, 0

/**
 * Get signal PAS_USS12SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_USS12SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 6);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_USS12SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS12SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS12SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 0

/**
 * Signal PAS_USS12SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 0

/**
 * Signal PAS_USS12SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 1

/**
 * Signal PAS_USS12SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure Value Table for Signal PAS_USS12SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS12SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure Signal PAS_USS11SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS11Sensor ringing time failure
 * ºó²¿×ó²àÀ×´ï£¨USS11£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS11SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 1, 0, 61, 1

/**
 * Signal PAS_USS11SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 1, 0, 61, 1, 0

/**
 * Get signal PAS_USS11SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_USS11SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 5);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_USS11SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS11SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS11SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 0

/**
 * Signal PAS_USS11SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 0

/**
 * Signal PAS_USS11SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 1

/**
 * Signal PAS_USS11SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure Value Table for Signal PAS_USS11SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS11SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure Signal PAS_USS10SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS10 Sensor ringing time failure
 * ºó²¿ÖÐ×ó²àÀ×´ï£¨USS10£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS10SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 1, 0, 60, 1

/**
 * Signal PAS_USS10SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 1, 0, 60, 1, 0

/**
 * Get signal PAS_USS10SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_USS10SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 4);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_USS10SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS10SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS10SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 0

/**
 * Signal PAS_USS10SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 0

/**
 * Signal PAS_USS10SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 1

/**
 * Signal PAS_USS10SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure Value Table for Signal PAS_USS10SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS10SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure Signal PAS_USS09SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS09 Sensor ringing time failure
 * ºó²¿ÖÐÓÒ²àÀ×´ï£¨USS09£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS09SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 1, 0, 59, 1

/**
 * Signal PAS_USS09SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 1, 0, 59, 1, 0

/**
 * Get signal PAS_USS09SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_USS09SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 3);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_USS09SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS09SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS09SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 0

/**
 * Signal PAS_USS09SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 0

/**
 * Signal PAS_USS09SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 1

/**
 * Signal PAS_USS09SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure Value Table for Signal PAS_USS09SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS09SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure Signal PAS_USS08SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS08 Sensor ringing time failure
 * ºó²¿ÓÒ²àÀ×´ï£¨USS08£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS08SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 1, 0, 58, 1

/**
 * Signal PAS_USS08SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 1, 0, 58, 1, 0

/**
 * Get signal PAS_USS08SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_USS08SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 2);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_USS08SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS08SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS08SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 0

/**
 * Signal PAS_USS08SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 0

/**
 * Signal PAS_USS08SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 1

/**
 * Signal PAS_USS08SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure Value Table for Signal PAS_USS08SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS08SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure Signal PAS_USS07SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS07 Sensor ringing time failure
 * ÓÒºó²àÀ×´ï£¨USS07£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS07SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 1, 0, 57, 1

/**
 * Signal PAS_USS07SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 1, 0, 57, 1, 0

/**
 * Get signal PAS_USS07SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_USS07SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 1);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_USS07SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS07SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS07SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 0

/**
 * Signal PAS_USS07SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 0

/**
 * Signal PAS_USS07SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 1

/**
 * Signal PAS_USS07SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure Value Table for Signal PAS_USS07SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS07SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure Signal PAS_USS06SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS06 Sensor ringing time failure
 * ÓÒÇ°²àÀ×´ï£¨USS06£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS06SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 1, 0, 56, 1

/**
 * Signal PAS_USS06SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 1, 0, 56, 1, 0

/**
 * Get signal PAS_USS06SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_USS06SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[7] &= ~(0x01 << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_USS06SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS06SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS06SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 0

/**
 * Signal PAS_USS06SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 0

/**
 * Signal PAS_USS06SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 1

/**
 * Signal PAS_USS06SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure Value Table for Signal PAS_USS06SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS06SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure Signal PAS_USS05SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS05 Sensor ringing time failure
 * Ç°²¿ÓÒ²àÀ×´ï£¨USS05£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS05SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 1, 0, 55, 1

/**
 * Signal PAS_USS05SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 1, 0, 55, 1, 0

/**
 * Get signal PAS_USS05SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_USS05SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 7);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_USS05SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS05SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS05SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 0

/**
 * Signal PAS_USS05SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 0

/**
 * Signal PAS_USS05SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 1

/**
 * Signal PAS_USS05SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure Value Table for Signal PAS_USS05SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS05SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure Signal PAS_USS04SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS04 Sensor ringing time failure
 * Ç°²¿ÖÐÓÒ²àÀ×´ï£¨USS04£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS04SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 1, 0, 54, 1

/**
 * Signal PAS_USS04SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 1, 0, 54, 1, 0

/**
 * Get signal PAS_USS04SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_USS04SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 6);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_USS04SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS04SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS04SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 0

/**
 * Signal PAS_USS04SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 0

/**
 * Signal PAS_USS04SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 1

/**
 * Signal PAS_USS04SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure Value Table for Signal PAS_USS04SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS04SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure Signal PAS_USS03SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS03Sensor ringing time failure
 * Ç°²¿ÖÐ×ó²àÀ×´ï£¨USS03£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS03SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 1, 0, 53, 1

/**
 * Signal PAS_USS03SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 1, 0, 53, 1, 0

/**
 * Get signal PAS_USS03SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_USS03SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 5);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_USS03SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS03SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS03SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 0

/**
 * Signal PAS_USS03SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 0

/**
 * Signal PAS_USS03SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 1

/**
 * Signal PAS_USS03SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure Value Table for Signal PAS_USS03SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS03SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure Signal PAS_USS02SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS02 Sensor ringing time failure
 * Ç°²¿×ó²àÀ×´ï£¨USS02£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS02SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 1, 0, 52, 1

/**
 * Signal PAS_USS02SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 1, 0, 52, 1, 0

/**
 * Get signal PAS_USS02SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_USS02SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_USS02SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS02SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS02SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 0

/**
 * Signal PAS_USS02SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 0

/**
 * Signal PAS_USS02SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 1

/**
 * Signal PAS_USS02SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure Value Table for Signal PAS_USS02SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS02SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure Signal PAS_USS01SensRingingTimeFailure of Message
 * PAS_Diagnosis1 (0x653)
 *
 * USS01 Sensor ringing time failure
 * ×óÇ°²àÀ×´ï£¨USS01£©ÓàÕðÊ±¼ä´íÎó
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS01SensRingingTimeFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure and \ref
 *GET_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 1, 0, 51, 1

/**
 * Signal PAS_USS01SensRingingTimeFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 1, 0, 51, 1, 0

/**
 * Get signal PAS_USS01SensRingingTimeFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_USS01SensRingingTimeFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(buf, val)                                                   \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 3);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_USS01SensRingingTimeFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(buf)                                                    \
    SET_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(buf, 0)

/**
 * Signal PAS_USS01SensRingingTimeFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS01SensRingingTimeFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 0

/**
 * Signal PAS_USS01SensRingingTimeFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 0

/**
 * Signal PAS_USS01SensRingingTimeFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 1

/**
 * Signal PAS_USS01SensRingingTimeFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure Value Table for Signal PAS_USS01SensRingingTimeFailure
 * in Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure
 */
#define PAS_Diagnosis1_PAS_USS01SensRingingTimeFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch Signal PAS_USS12SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS12 Sensor type missmatch
 * ×óºó²àÀ×´ï£¨USS12£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS12SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 1, 0, 50, 1

/**
 * Signal PAS_USS12SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 1, 0, 50, 1, 0

/**
 * Get signal PAS_USS12SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_USS12SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 2);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_USS12SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS12SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS12SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 0

/**
 * Signal PAS_USS12SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 0

/**
 * Signal PAS_USS12SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 1

/**
 * Signal PAS_USS12SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch Value Table for Signal PAS_USS12SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS12SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS12SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch Signal PAS_USS11SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS11Sensor type missmatch
 * ºó²¿×ó²àÀ×´ï£¨USS11£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS11SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 1, 0, 49, 1

/**
 * Signal PAS_USS11SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 1, 0, 49, 1, 0

/**
 * Get signal PAS_USS11SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_USS11SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 1);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_USS11SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS11SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS11SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 0

/**
 * Signal PAS_USS11SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 0

/**
 * Signal PAS_USS11SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 1

/**
 * Signal PAS_USS11SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch Value Table for Signal PAS_USS11SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS11SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS11SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch Signal PAS_USS10SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS10 Sensor type missmatch
 * ºó²¿ÖÐ×ó²àÀ×´ï£¨USS10£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS10SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 1, 0, 48, 1

/**
 * Signal PAS_USS10SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 1, 0, 48, 1, 0

/**
 * Get signal PAS_USS10SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_USS10SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x01 << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_USS10SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS10SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS10SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 0

/**
 * Signal PAS_USS10SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 0

/**
 * Signal PAS_USS10SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 1

/**
 * Signal PAS_USS10SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch Value Table for Signal PAS_USS10SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS10SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS10SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch Signal PAS_USS09SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS09 Sensor type missmatch
 * ºó²¿ÖÐÓÒ²àÀ×´ï£¨USS09£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS09SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 1, 0, 47, 1

/**
 * Signal PAS_USS09SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 1, 0, 47, 1, 0

/**
 * Get signal PAS_USS09SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_USS09SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 7);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_USS09SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS09SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS09SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 0

/**
 * Signal PAS_USS09SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 0

/**
 * Signal PAS_USS09SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 1

/**
 * Signal PAS_USS09SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch Value Table for Signal PAS_USS09SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS09SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS09SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch Signal PAS_USS08SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS08 Sensor type missmatch
 * ºó²¿ÓÒ²àÀ×´ï£¨USS08£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS08SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 1, 0, 46, 1

/**
 * Signal PAS_USS08SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 1, 0, 46, 1, 0

/**
 * Get signal PAS_USS08SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_USS08SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 6);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_USS08SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS08SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS08SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 0

/**
 * Signal PAS_USS08SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 0

/**
 * Signal PAS_USS08SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 1

/**
 * Signal PAS_USS08SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch Value Table for Signal PAS_USS08SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS08SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS08SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch Signal PAS_USS07SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS07 Sensor type missmatch
 * ÓÒºó²àÀ×´ï£¨USS07£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS07SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 1, 0, 45, 1

/**
 * Signal PAS_USS07SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 1, 0, 45, 1, 0

/**
 * Get signal PAS_USS07SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_USS07SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 5);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_USS07SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS07SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS07SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 0

/**
 * Signal PAS_USS07SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 0

/**
 * Signal PAS_USS07SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 1

/**
 * Signal PAS_USS07SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch Value Table for Signal PAS_USS07SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS07SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS07SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch Signal PAS_USS06SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS06Sensor type missmatch
 * ÓÒÇ°²àÀ×´ï£¨USS06£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS06SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 1, 0, 44, 1

/**
 * Signal PAS_USS06SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 1, 0, 44, 1, 0

/**
 * Get signal PAS_USS06SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_USS06SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 4);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_USS06SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS06SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS06SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 0

/**
 * Signal PAS_USS06SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 0

/**
 * Signal PAS_USS06SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 1

/**
 * Signal PAS_USS06SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch Value Table for Signal PAS_USS06SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS06SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS06SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch Signal PAS_USS05SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS05 Sensor type missmatch
 * Ç°²¿ÓÒ²àÀ×´ï£¨USS05£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS05SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 1, 0, 43, 1

/**
 * Signal PAS_USS05SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 1, 0, 43, 1, 0

/**
 * Get signal PAS_USS05SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_USS05SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 3);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_USS05SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS05SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS05SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 0

/**
 * Signal PAS_USS05SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 0

/**
 * Signal PAS_USS05SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 1

/**
 * Signal PAS_USS05SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch Value Table for Signal PAS_USS05SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS05SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS05SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch Signal PAS_USS04SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS04 Sensor type missmatch
 * Ç°²¿ÖÐÓÒ²àÀ×´ï£¨USS04£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS04SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 1, 0, 42, 1

/**
 * Signal PAS_USS04SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 1, 0, 42, 1, 0

/**
 * Get signal PAS_USS04SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_USS04SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 2);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_USS04SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS04SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS04SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 0

/**
 * Signal PAS_USS04SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 0

/**
 * Signal PAS_USS04SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 1

/**
 * Signal PAS_USS04SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch Value Table for Signal PAS_USS04SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS04SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS04SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch Signal PAS_USS03SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS03Sensor type missmatch
 * Ç°²¿ÖÐ×ó²àÀ×´ï£¨USS03£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS03SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 1, 0, 41, 1

/**
 * Signal PAS_USS03SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 1, 0, 41, 1, 0

/**
 * Get signal PAS_USS03SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_USS03SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 1);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_USS03SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS03SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS03SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 0

/**
 * Signal PAS_USS03SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 0

/**
 * Signal PAS_USS03SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 1

/**
 * Signal PAS_USS03SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch Value Table for Signal PAS_USS03SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS03SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS03SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch Signal PAS_USS02SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS02 Sensor type missmatch
 * Ç°²¿×ó²àÀ×´ï£¨USS02£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS02SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 1, 0, 40, 1

/**
 * Signal PAS_USS02SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 1, 0, 40, 1, 0

/**
 * Get signal PAS_USS02SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_USS02SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_USS02SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS02SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS02SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 0

/**
 * Signal PAS_USS02SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 0

/**
 * Signal PAS_USS02SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 1

/**
 * Signal PAS_USS02SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch Value Table for Signal PAS_USS02SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS02SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS02SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch Signal PAS_USS01SensTypeMissmatch of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS01 Sensor type missmatch
 * ×óÇ°²àÀ×´ï£¨USS01£©ÀàÐÍ²»Æ¥Åä
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS01SensTypeMissmatch configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch and \ref GET_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 1, 0, 39, 1

/**
 * Signal PAS_USS01SensTypeMissmatch setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 1, 0, 39, 1, 0

/**
 * Get signal PAS_USS01SensTypeMissmatch from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_USS01SensTypeMissmatch in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 7);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_USS01SensTypeMissmatch in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(buf) SET_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(buf, 0)

/**
 * Signal PAS_USS01SensTypeMissmatch value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS01SensTypeMissmatch raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 0

/**
 * Signal PAS_USS01SensTypeMissmatch raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 0

/**
 * Signal PAS_USS01SensTypeMissmatch raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 1

/**
 * Signal PAS_USS01SensTypeMissmatch raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch Value Table for Signal PAS_USS01SensTypeMissmatch in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensTypeMissmatch entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS01SensTypeMissmatch_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensTypeMissmatch entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensTypeMissmatch
 */
#define PAS_Diagnosis1_PAS_USS01SensTypeMissmatch_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure Signal PAS_USS12SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS12 Sensor status failure
 * ×óºó²àÀ×´ï£¨USS12£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS12SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS12SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS12SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS12SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure 1, 0, 38, 1

/**
 * Signal PAS_USS12SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS12SensStatusFailure 1, 0, 38, 1, 0

/**
 * Get signal PAS_USS12SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS12SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_USS12SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS12SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 6);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_USS12SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS12SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS12SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS12SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS12SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS12SensStatusFailure 0

/**
 * Signal PAS_USS12SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS12SensStatusFailure 0

/**
 * Signal PAS_USS12SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS12SensStatusFailure 1

/**
 * Signal PAS_USS12SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS12SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS12SensStatusFailure Value Table for Signal PAS_USS12SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS12SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS12SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS12SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS12SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS12SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure Signal PAS_USS11SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS11 Sensor status failure
 * ºó²¿×ó²àÀ×´ï£¨USS11£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS11SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS11SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS11SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS11SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure 1, 0, 37, 1

/**
 * Signal PAS_USS11SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS11SensStatusFailure 1, 0, 37, 1, 0

/**
 * Get signal PAS_USS11SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS11SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_USS11SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS11SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 5);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_USS11SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS11SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS11SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS11SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS11SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS11SensStatusFailure 0

/**
 * Signal PAS_USS11SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS11SensStatusFailure 0

/**
 * Signal PAS_USS11SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS11SensStatusFailure 1

/**
 * Signal PAS_USS11SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS11SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS11SensStatusFailure Value Table for Signal PAS_USS11SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS11SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS11SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS11SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS11SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS11SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure Signal PAS_USS10SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS10 Sensor status failure
 * ºó²¿ÖÐ×ó²àÀ×´ï£¨USS10£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS10SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS10SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS10SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS10SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure 1, 0, 36, 1

/**
 * Signal PAS_USS10SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS10SensStatusFailure 1, 0, 36, 1, 0

/**
 * Get signal PAS_USS10SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS10SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_USS10SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS10SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 4);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_USS10SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS10SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS10SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS10SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS10SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS10SensStatusFailure 0

/**
 * Signal PAS_USS10SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS10SensStatusFailure 0

/**
 * Signal PAS_USS10SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS10SensStatusFailure 1

/**
 * Signal PAS_USS10SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS10SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS10SensStatusFailure Value Table for Signal PAS_USS10SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS10SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS10SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS10SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS10SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS10SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure Signal PAS_USS09SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS09 Sensor status failure
 * ºó²¿ÖÐÓÒ²àÀ×´ï£¨USS10£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS09SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS09SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS09SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS09SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure 1, 0, 35, 1

/**
 * Signal PAS_USS09SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS09SensStatusFailure 1, 0, 35, 1, 0

/**
 * Get signal PAS_USS09SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS09SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_USS09SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS09SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 3);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_USS09SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS09SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS09SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS09SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS09SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS09SensStatusFailure 0

/**
 * Signal PAS_USS09SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS09SensStatusFailure 0

/**
 * Signal PAS_USS09SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS09SensStatusFailure 1

/**
 * Signal PAS_USS09SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS09SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS09SensStatusFailure Value Table for Signal PAS_USS09SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS09SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS09SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS09SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS09SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS09SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure Signal PAS_USS08SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS08 Sensor status failure
 * ºó²¿ÓÒ²àÀ×´ï£¨USS08£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS08SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS08SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS08SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS08SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure 1, 0, 34, 1

/**
 * Signal PAS_USS08SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS08SensStatusFailure 1, 0, 34, 1, 0

/**
 * Get signal PAS_USS08SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS08SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_USS08SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS08SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_USS08SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS08SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS08SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS08SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS08SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS08SensStatusFailure 0

/**
 * Signal PAS_USS08SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS08SensStatusFailure 0

/**
 * Signal PAS_USS08SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS08SensStatusFailure 1

/**
 * Signal PAS_USS08SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS08SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS08SensStatusFailure Value Table for Signal PAS_USS08SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS08SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS08SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS08SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS08SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS08SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure Signal PAS_USS07SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS07 Sensor status failure
 * ÓÒºó²àÀ×´ï£¨USS07£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS07SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS07SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS07SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS07SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure 1, 0, 33, 1

/**
 * Signal PAS_USS07SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS07SensStatusFailure 1, 0, 33, 1, 0

/**
 * Get signal PAS_USS07SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS07SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_USS07SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS07SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 1);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_USS07SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS07SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS07SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS07SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS07SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS07SensStatusFailure 0

/**
 * Signal PAS_USS07SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS07SensStatusFailure 0

/**
 * Signal PAS_USS07SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS07SensStatusFailure 1

/**
 * Signal PAS_USS07SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS07SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS07SensStatusFailure Value Table for Signal PAS_USS07SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS07SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS07SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS07SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS07SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS07SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure Signal PAS_USS06SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS06 Sensor status failure
 * ÓÒÇ°²àÀ×´ï£¨USS06£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS06SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS06SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS06SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS06SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure 1, 0, 32, 1

/**
 * Signal PAS_USS06SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS06SensStatusFailure 1, 0, 32, 1, 0

/**
 * Get signal PAS_USS06SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS06SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[4] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_USS06SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS06SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x01 << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_USS06SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS06SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS06SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS06SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS06SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS06SensStatusFailure 0

/**
 * Signal PAS_USS06SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS06SensStatusFailure 0

/**
 * Signal PAS_USS06SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS06SensStatusFailure 1

/**
 * Signal PAS_USS06SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS06SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS06SensStatusFailure Value Table for Signal PAS_USS06SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS06SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS06SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS06SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS06SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS06SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure Signal PAS_USS05SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS05 Sensor status failure
 * Ç°²¿ÓÒ²àÀ×´ï£¨USS05£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS05SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS05SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS05SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS05SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure 1, 0, 31, 1

/**
 * Signal PAS_USS05SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS05SensStatusFailure 1, 0, 31, 1, 0

/**
 * Get signal PAS_USS05SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS05SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_USS05SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS05SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 7);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_USS05SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS05SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS05SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS05SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS05SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS05SensStatusFailure 0

/**
 * Signal PAS_USS05SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS05SensStatusFailure 0

/**
 * Signal PAS_USS05SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS05SensStatusFailure 1

/**
 * Signal PAS_USS05SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS05SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS05SensStatusFailure Value Table for Signal PAS_USS05SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS05SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS05SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS05SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS05SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS05SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure Signal PAS_USS04SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS04 Sensor status failure
 * Ç°²¿ÖÐÓÒ²àÀ×´ï£¨USS04£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS04SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS04SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS04SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS04SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure 1, 0, 30, 1

/**
 * Signal PAS_USS04SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS04SensStatusFailure 1, 0, 30, 1, 0

/**
 * Get signal PAS_USS04SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS04SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_USS04SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS04SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 6);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_USS04SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS04SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS04SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS04SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS04SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS04SensStatusFailure 0

/**
 * Signal PAS_USS04SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS04SensStatusFailure 0

/**
 * Signal PAS_USS04SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS04SensStatusFailure 1

/**
 * Signal PAS_USS04SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS04SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS04SensStatusFailure Value Table for Signal PAS_USS04SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS04SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS04SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS04SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS04SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS04SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure Signal PAS_USS03SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS03 Sensor status failure
 * Ç°²¿ÖÐ×ó²àÀ×´ï£¨USS03£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS03SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS03SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS03SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS03SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure 1, 0, 29, 1

/**
 * Signal PAS_USS03SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS03SensStatusFailure 1, 0, 29, 1, 0

/**
 * Get signal PAS_USS03SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS03SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_USS03SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS03SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 5);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_USS03SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS03SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS03SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS03SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS03SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS03SensStatusFailure 0

/**
 * Signal PAS_USS03SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS03SensStatusFailure 0

/**
 * Signal PAS_USS03SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS03SensStatusFailure 1

/**
 * Signal PAS_USS03SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS03SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS03SensStatusFailure Value Table for Signal PAS_USS03SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS03SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS03SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS03SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS03SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS03SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure Signal PAS_USS02SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS02 Sensor status failure
 * Ç°²¿×ó²àÀ×´ï£¨USS02£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS02SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS02SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS02SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS02SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure 1, 0, 28, 1

/**
 * Signal PAS_USS02SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS02SensStatusFailure 1, 0, 28, 1, 0

/**
 * Get signal PAS_USS02SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS02SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_USS02SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS02SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_USS02SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS02SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS02SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS02SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS02SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS02SensStatusFailure 0

/**
 * Signal PAS_USS02SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS02SensStatusFailure 0

/**
 * Signal PAS_USS02SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS02SensStatusFailure 1

/**
 * Signal PAS_USS02SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS02SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS02SensStatusFailure Value Table for Signal PAS_USS02SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS02SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS02SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS02SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS02SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS02SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure Signal PAS_USS01SensStatusFailure of Message PAS_Diagnosis1
 * (0x653)
 *
 * USS01 Sensor status failure
 * ×óÇ°²àÀ×´ï£¨USS01£©´«¸ÐÆ÷×´Ì¬¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_USS01SensStatusFailure.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_USS01SensStatusFailure configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_USS01SensStatusFailure and \ref GET_PAS_Diagnosis1_PAS_USS01SensStatusFailure
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure 1, 0, 27, 1

/**
 * Signal PAS_USS01SensStatusFailure setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_USS01SensStatusFailure 1, 0, 27, 1, 0

/**
 * Get signal PAS_USS01SensStatusFailure from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_USS01SensStatusFailure(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_USS01SensStatusFailure in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_USS01SensStatusFailure(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 3);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_USS01SensStatusFailure in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure(buf) SET_PAS_Diagnosis1_PAS_USS01SensStatusFailure(buf, 0)

/**
 * Signal PAS_USS01SensStatusFailure value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_USS01SensStatusFailure(x, fmt) ((x)*fmt)

/**
 * Signal PAS_USS01SensStatusFailure raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_USS01SensStatusFailure 0

/**
 * Signal PAS_USS01SensStatusFailure raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_USS01SensStatusFailure 0

/**
 * Signal PAS_USS01SensStatusFailure raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_USS01SensStatusFailure 1

/**
 * Signal PAS_USS01SensStatusFailure raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_USS01SensStatusFailure 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_USS01SensStatusFailure Value Table for Signal PAS_USS01SensStatusFailure in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_USS01SensStatusFailure
 */

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensStatusFailure entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS01SensStatusFailure_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_USS01SensStatusFailure entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_USS01SensStatusFailure
 */
#define PAS_Diagnosis1_PAS_USS01SensStatusFailure_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat Signal PAS_Uss12ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss12 short to Ubat
 * ×óºó²àÀ×´ï£¨USS12£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss12ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss12ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss12ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat 1, 0, 26, 1

/**
 * Signal PAS_Uss12ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss12ShorttoBat 1, 0, 26, 1, 0

/**
 * Get signal PAS_Uss12ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss12ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_Uss12ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss12ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_Uss12ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss12ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss12ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss12ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss12ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss12ShorttoBat 0

/**
 * Signal PAS_Uss12ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss12ShorttoBat 0

/**
 * Signal PAS_Uss12ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss12ShorttoBat 1

/**
 * Signal PAS_Uss12ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss12ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoBat Value Table for Signal PAS_Uss12ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss12ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss12ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss12ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss12ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss12ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat Signal PAS_Uss11ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss11 short to Ubat
 * ºó²¿×ó²àÀ×´ï£¨USS11£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss11ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss11ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss11ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat 1, 0, 25, 1

/**
 * Signal PAS_Uss11ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss11ShorttoBat 1, 0, 25, 1, 0

/**
 * Get signal PAS_Uss11ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss11ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_Uss11ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss11ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 1);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_Uss11ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss11ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss11ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss11ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss11ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss11ShorttoBat 0

/**
 * Signal PAS_Uss11ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss11ShorttoBat 0

/**
 * Signal PAS_Uss11ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss11ShorttoBat 1

/**
 * Signal PAS_Uss11ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss11ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoBat Value Table for Signal PAS_Uss11ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss11ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss11ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss11ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss11ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss11ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat Signal PAS_Uss10ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss10 short to Ubat
 * ºó²¿ÖÐ×ó²àÀ×´ï£¨USS10£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss10ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss10ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss10ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat 1, 0, 24, 1

/**
 * Signal PAS_Uss10ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss10ShorttoBat 1, 0, 24, 1, 0

/**
 * Get signal PAS_Uss10ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss10ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_Uss10ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss10ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[3] &= ~(0x01 << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_Uss10ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss10ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss10ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss10ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss10ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss10ShorttoBat 0

/**
 * Signal PAS_Uss10ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss10ShorttoBat 0

/**
 * Signal PAS_Uss10ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss10ShorttoBat 1

/**
 * Signal PAS_Uss10ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss10ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoBat Value Table for Signal PAS_Uss10ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss10ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss10ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss10ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss10ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss10ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat Signal PAS_Uss09ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss09 short to Ubat
 * ºó²¿ÖÐÓÒ²àÀ×´ï£¨USS09£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss09ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss09ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss09ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat 1, 0, 23, 1

/**
 * Signal PAS_Uss09ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss09ShorttoBat 1, 0, 23, 1, 0

/**
 * Get signal PAS_Uss09ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss09ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_Uss09ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss09ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 7);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_Uss09ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss09ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss09ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss09ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss09ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss09ShorttoBat 0

/**
 * Signal PAS_Uss09ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss09ShorttoBat 0

/**
 * Signal PAS_Uss09ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss09ShorttoBat 1

/**
 * Signal PAS_Uss09ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss09ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoBat Value Table for Signal PAS_Uss09ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss09ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss09ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss09ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss09ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss09ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat Signal PAS_Uss08ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss08 short to Ubat
 * ºó²¿ÓÒ²àÀ×´ï£¨USS08£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss08ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss08ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss08ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat 1, 0, 22, 1

/**
 * Signal PAS_Uss08ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss08ShorttoBat 1, 0, 22, 1, 0

/**
 * Get signal PAS_Uss08ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss08ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_Uss08ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss08ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_Uss08ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss08ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss08ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss08ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss08ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss08ShorttoBat 0

/**
 * Signal PAS_Uss08ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss08ShorttoBat 0

/**
 * Signal PAS_Uss08ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss08ShorttoBat 1

/**
 * Signal PAS_Uss08ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss08ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoBat Value Table for Signal PAS_Uss08ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss08ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss08ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss08ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss08ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss08ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat Signal PAS_Uss07ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss07 short to Ubat
 * ÓÒºó²àÀ×´ï£¨USS07£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss07ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss07ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss07ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat 1, 0, 21, 1

/**
 * Signal PAS_Uss07ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss07ShorttoBat 1, 0, 21, 1, 0

/**
 * Get signal PAS_Uss07ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss07ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_Uss07ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss07ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 5);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_Uss07ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss07ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss07ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss07ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss07ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss07ShorttoBat 0

/**
 * Signal PAS_Uss07ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss07ShorttoBat 0

/**
 * Signal PAS_Uss07ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss07ShorttoBat 1

/**
 * Signal PAS_Uss07ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss07ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoBat Value Table for Signal PAS_Uss07ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss07ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss07ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss07ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss07ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss07ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat Signal PAS_Uss06ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss06 short to Ubat
 * ÓÒÇ°²àÀ×´ï£¨USS06£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss06ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss06ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss06ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat 1, 0, 20, 1

/**
 * Signal PAS_Uss06ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss06ShorttoBat 1, 0, 20, 1, 0

/**
 * Get signal PAS_Uss06ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss06ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_Uss06ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss06ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_Uss06ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss06ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss06ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss06ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss06ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss06ShorttoBat 0

/**
 * Signal PAS_Uss06ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss06ShorttoBat 0

/**
 * Signal PAS_Uss06ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss06ShorttoBat 1

/**
 * Signal PAS_Uss06ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss06ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoBat Value Table for Signal PAS_Uss06ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss06ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss06ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss06ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss06ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss06ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat Signal PAS_Uss05ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss05 short to Ubat
 * Ç°²¿ÓÒ²àÀ×´ï£¨USS05£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss05ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss05ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss05ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat 1, 0, 19, 1

/**
 * Signal PAS_Uss05ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss05ShorttoBat 1, 0, 19, 1, 0

/**
 * Get signal PAS_Uss05ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss05ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_Uss05ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss05ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 3);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_Uss05ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss05ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss05ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss05ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss05ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss05ShorttoBat 0

/**
 * Signal PAS_Uss05ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss05ShorttoBat 0

/**
 * Signal PAS_Uss05ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss05ShorttoBat 1

/**
 * Signal PAS_Uss05ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss05ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoBat Value Table for Signal PAS_Uss05ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss05ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss05ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss05ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss05ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss05ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat Signal PAS_Uss04ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss04 short to Ubat
 * Ç°²¿ÖÐÓÒ²àÀ×´ï£¨USS04£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss04ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss04ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss04ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat 1, 0, 18, 1

/**
 * Signal PAS_Uss04ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss04ShorttoBat 1, 0, 18, 1, 0

/**
 * Get signal PAS_Uss04ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss04ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_Uss04ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss04ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 2);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_Uss04ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss04ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss04ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss04ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss04ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss04ShorttoBat 0

/**
 * Signal PAS_Uss04ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss04ShorttoBat 0

/**
 * Signal PAS_Uss04ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss04ShorttoBat 1

/**
 * Signal PAS_Uss04ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss04ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoBat Value Table for Signal PAS_Uss04ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss04ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss04ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss04ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss04ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss04ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat Signal PAS_Uss03ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss03 short to Ubat
 * Ç°²¿ÖÐ×ó²àÀ×´ï£¨USS03£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss03ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss03ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss03ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat 1, 0, 17, 1

/**
 * Signal PAS_Uss03ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss03ShorttoBat 1, 0, 17, 1, 0

/**
 * Get signal PAS_Uss03ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss03ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_Uss03ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss03ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 1);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_Uss03ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss03ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss03ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss03ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss03ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss03ShorttoBat 0

/**
 * Signal PAS_Uss03ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss03ShorttoBat 0

/**
 * Signal PAS_Uss03ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss03ShorttoBat 1

/**
 * Signal PAS_Uss03ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss03ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoBat Value Table for Signal PAS_Uss03ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss03ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss03ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss03ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss03ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss03ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat Signal PAS_Uss02ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss02 short to Ubat
 * Ç°²¿×ó²àÀ×´ï£¨USS02£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss02ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss02ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss02ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat 1, 0, 16, 1

/**
 * Signal PAS_Uss02ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss02ShorttoBat 1, 0, 16, 1, 0

/**
 * Get signal PAS_Uss02ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss02ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_Uss02ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss02ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x01 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_Uss02ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss02ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss02ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss02ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss02ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss02ShorttoBat 0

/**
 * Signal PAS_Uss02ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss02ShorttoBat 0

/**
 * Signal PAS_Uss02ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss02ShorttoBat 1

/**
 * Signal PAS_Uss02ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss02ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoBat Value Table for Signal PAS_Uss02ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss02ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss02ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss02ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss02ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss02ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat Signal PAS_Uss01ShorttoBat of Message PAS_Diagnosis1 (0x653)
 *
 * Uss01 short to Ubat
 * ×óÇ°²àÀ×´ï£¨USS01£©¶ÔµçÔ´¶ÌÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoBat.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss01ShorttoBat configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss01ShorttoBat and \ref GET_PAS_Diagnosis1_PAS_Uss01ShorttoBat instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat 1, 0, 15, 1

/**
 * Signal PAS_Uss01ShorttoBat setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss01ShorttoBat 1, 0, 15, 1, 0

/**
 * Get signal PAS_Uss01ShorttoBat from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss01ShorttoBat(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_Uss01ShorttoBat in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss01ShorttoBat(buf, val)                                                               \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 7);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_Uss01ShorttoBat in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat(buf) SET_PAS_Diagnosis1_PAS_Uss01ShorttoBat(buf, 0)

/**
 * Signal PAS_Uss01ShorttoBat value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss01ShorttoBat(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss01ShorttoBat raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss01ShorttoBat 0

/**
 * Signal PAS_Uss01ShorttoBat raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss01ShorttoBat 0

/**
 * Signal PAS_Uss01ShorttoBat raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss01ShorttoBat 1

/**
 * Signal PAS_Uss01ShorttoBat raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss01ShorttoBat 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoBat Value Table for Signal PAS_Uss01ShorttoBat in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss01ShorttoBat
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss01ShorttoBat entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss01ShorttoBat_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss01ShorttoBat entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoBat
 */
#define PAS_Diagnosis1_PAS_Uss01ShorttoBat_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen Signal PAS_Uss12ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss12 short to ground or open
 * ×óºó²àÀ×´ï£¨USS12£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss12ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 1, 0, 14, 1

/**
 * Signal PAS_Uss12ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 1, 0, 14, 1, 0

/**
 * Get signal PAS_Uss12ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_Uss12ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_Uss12ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss12ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss12ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss12ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss12ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss12ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen Value Table for Signal PAS_Uss12ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss12ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen Signal PAS_Uss11ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss11 short to ground or open
 * ºó²¿×ó²àÀ×´ï£¨USS11£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss11ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 1, 0, 13, 1

/**
 * Signal PAS_Uss11ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 1, 0, 13, 1, 0

/**
 * Get signal PAS_Uss11ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_Uss11ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 5);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_Uss11ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss11ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss11ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss11ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss11ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss11ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen Value Table for Signal PAS_Uss11ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss11ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen Signal PAS_Uss10ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss10 short to ground or open
 * ºó²¿ÖÐ×ó²àÀ×´ï£¨USS10£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss10ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 1, 0, 12, 1

/**
 * Signal PAS_Uss10ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 1, 0, 12, 1, 0

/**
 * Get signal PAS_Uss10ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_Uss10ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 4);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_Uss10ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss10ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss10ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss10ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss10ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss10ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen Value Table for Signal PAS_Uss10ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss10ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen Signal PAS_Uss09ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss09 short to ground or open
 * ºó²¿ÖÐÓÒ²àÀ×´ï£¨USS19£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss09ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 1, 0, 11, 1

/**
 * Signal PAS_Uss09ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 1, 0, 11, 1, 0

/**
 * Get signal PAS_Uss09ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_Uss09ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_Uss09ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss09ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss09ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss09ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss09ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss09ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen Value Table for Signal PAS_Uss09ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss09ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen Signal PAS_Uss08ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss08 short to ground or open
 * ºó²¿ÓÒ²àÀ×´ï£¨USS08)¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss08ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 1, 0, 10, 1

/**
 * Signal PAS_Uss08ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 1, 0, 10, 1, 0

/**
 * Get signal PAS_Uss08ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_Uss08ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 2);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_Uss08ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss08ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss08ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss08ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss08ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss08ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen Value Table for Signal PAS_Uss08ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss08ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen Signal PAS_Uss07ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss07 short to ground or open
 * ÓÒºó²àÀ×´ï£¨USS07£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss07ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 1, 0, 9, 1

/**
 * Signal PAS_Uss07ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 1, 0, 9, 1, 0

/**
 * Get signal PAS_Uss07ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_Uss07ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 1);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_Uss07ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss07ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss07ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss07ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss07ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss07ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen Value Table for Signal PAS_Uss07ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss07ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen Signal PAS_Uss06ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss06 short to ground or open
 * ÓÒÇ°²àÀ×´ï£¨USS06£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss06ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 1, 0, 8, 1

/**
 * Signal PAS_Uss06ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 1, 0, 8, 1, 0

/**
 * Get signal PAS_Uss06ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_Uss06ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x01 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_Uss06ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss06ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss06ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss06ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss06ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss06ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen Value Table for Signal PAS_Uss06ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss06ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen Signal PAS_Uss05ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss05 short to ground or open
 * Ç°²¿ÓÒ²àÀ×´ï£¨USS05£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss05ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 1, 0, 7, 1

/**
 * Signal PAS_Uss05ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 1, 0, 7, 1, 0

/**
 * Get signal PAS_Uss05ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_Uss05ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 7);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_Uss05ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss05ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss05ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss05ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss05ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss05ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen Value Table for Signal PAS_Uss05ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss05ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen Signal PAS_Uss04ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss04 short to ground or open
 * Ç°²¿ÖÐÓÒ²àÀ×´ï£¨USS04£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss04ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 1, 0, 6, 1

/**
 * Signal PAS_Uss04ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 1, 0, 6, 1, 0

/**
 * Get signal PAS_Uss04ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_Uss04ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 6);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_Uss04ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss04ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss04ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss04ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss04ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss04ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen Value Table for Signal PAS_Uss04ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss04ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen Signal PAS_Uss03ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss03 short to ground or open
 * Ç°²¿ÖÐ×ó²àÀ×´ï£¨USS03£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss03ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 1, 0, 5, 1

/**
 * Signal PAS_Uss03ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 1, 0, 5, 1, 0

/**
 * Get signal PAS_Uss03ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x01) << 0))

/**
 * Set signal PAS_Uss03ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 5;                                                                   \
    }

/**
 * Set signal PAS_Uss03ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss03ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss03ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss03ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss03ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss03ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen Value Table for Signal PAS_Uss03ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss03ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen Signal PAS_Uss02ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss02 short to ground or open
 * Ç°²¿×ó²àÀ×´ï£¨USS02£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss02ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 1, 0, 4, 1

/**
 * Signal PAS_Uss02ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 1, 0, 4, 1, 0

/**
 * Get signal PAS_Uss02ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 4) & 0x01) << 0))

/**
 * Set signal PAS_Uss02ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 4);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 4;                                                                   \
    }

/**
 * Set signal PAS_Uss02ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss02ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss02ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss02ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss02ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss02ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen Value Table for Signal PAS_Uss02ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss02ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen Signal PAS_Uss01ShorttoGNDorOpen of Message PAS_Diagnosis1
 * (0x653)
 *
 * Uss01 short to ground or open
 * ×óÇ°²àÀ×´ï£¨USS01£©¶ÔµØ¶ÌÂ·»ò¿ªÂ·
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_Uss01ShorttoGNDorOpen configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen and \ref GET_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen instead.
 */
#define SIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 1, 0, 3, 1

/**
 * Signal PAS_Uss01ShorttoGNDorOpen setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 1, 0, 3, 1, 0

/**
 * Get signal PAS_Uss01ShorttoGNDorOpen from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 3) & 0x01) << 0))

/**
 * Set signal PAS_Uss01ShorttoGNDorOpen in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 3);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 3;                                                                   \
    }

/**
 * Set signal PAS_Uss01ShorttoGNDorOpen in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(buf) SET_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(buf, 0)

/**
 * Signal PAS_Uss01ShorttoGNDorOpen value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Uss01ShorttoGNDorOpen raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss01ShorttoGNDorOpen raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 0

/**
 * Signal PAS_Uss01ShorttoGNDorOpen raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 1

/**
 * Signal PAS_Uss01ShorttoGNDorOpen raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen Value Table for Signal PAS_Uss01ShorttoGNDorOpen in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen
 */

/**
 * Value table PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen
 */
#define PAS_Diagnosis1_PAS_Uss01ShorttoGNDorOpen_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh Signal PAS_PowerSupplyVolteUpperTh of Message PAS_Diagnosis1
 * (0x653)
 *
 * Power supply voltage upper threshold
 * ¹©µçµçÔ´¹ýÑ¹¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_PowerSupplyVolteUpperTh configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh and \ref GET_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 1, 0, 2, 1

/**
 * Signal PAS_PowerSupplyVolteUpperTh setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 1, 0, 2, 1, 0

/**
 * Get signal PAS_PowerSupplyVolteUpperTh from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 2) & 0x01) << 0))

/**
 * Set signal PAS_PowerSupplyVolteUpperTh in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(buf, val)                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 2);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 2;                                                                   \
    }

/**
 * Set signal PAS_PowerSupplyVolteUpperTh in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(buf) SET_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(buf, 0)

/**
 * Signal PAS_PowerSupplyVolteUpperTh value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PowerSupplyVolteUpperTh raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 0

/**
 * Signal PAS_PowerSupplyVolteUpperTh raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 0

/**
 * Signal PAS_PowerSupplyVolteUpperTh raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 1

/**
 * Signal PAS_PowerSupplyVolteUpperTh raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh Value Table for Signal PAS_PowerSupplyVolteUpperTh in
 * Message PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh
 */

/**
 * Value table PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh
 */
#define PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh
 */
#define PAS_Diagnosis1_PAS_PowerSupplyVolteUpperTh_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh Signal PAS_PowerSupplyVoltBelowTh of Message PAS_Diagnosis1
 * (0x653)
 *
 * Power supply voltage below threshold
 * ¹©µçµçÔ´µÍÑ¹¹ÊÕÏ
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_PowerSupplyVoltBelowTh configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh and \ref GET_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh
 *instead.
 */
#define SIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 1, 0, 1, 1

/**
 * Signal PAS_PowerSupplyVoltBelowTh setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 1, 0, 1, 1, 0

/**
 * Get signal PAS_PowerSupplyVoltBelowTh from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 1) & 0x01) << 0))

/**
 * Set signal PAS_PowerSupplyVoltBelowTh in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(buf, val)                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 1);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 1;                                                                   \
    }

/**
 * Set signal PAS_PowerSupplyVoltBelowTh in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(buf) SET_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(buf, 0)

/**
 * Signal PAS_PowerSupplyVoltBelowTh value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PowerSupplyVoltBelowTh raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 0

/**
 * Signal PAS_PowerSupplyVoltBelowTh raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 0

/**
 * Signal PAS_PowerSupplyVoltBelowTh raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 1

/**
 * Signal PAS_PowerSupplyVoltBelowTh raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh Value Table for Signal PAS_PowerSupplyVoltBelowTh in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh
 */

/**
 * Value table PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh
 */
#define PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh
 */
#define PAS_Diagnosis1_PAS_PowerSupplyVoltBelowTh_Normal 0

/**
 * @defgroup SIG_PAS_Diagnosis1_PAS_ContModuleComBusOff Signal PAS_ContModuleComBusOff of Message PAS_Diagnosis1 (0x653)
 *
 * Control Module Communication Bus Off.
 * ¿ØÖÆÆ÷Í¨ÐÅÄ£¿éÊ§Ð§
 *
 * Contains the value table \ref ENUM_PAS_Diagnosis1_PAS_ContModuleComBusOff.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Diagnosis1
 * @{
 */

/**
 * Signal PAS_ContModuleComBusOff configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Diagnosis1_PAS_ContModuleComBusOff and \ref GET_PAS_Diagnosis1_PAS_ContModuleComBusOff instead.
 */
#define SIG_PAS_Diagnosis1_PAS_ContModuleComBusOff 1, 0, 0, 1

/**
 * Signal PAS_ContModuleComBusOff setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Diagnosis1_PAS_ContModuleComBusOff or \ref INIT_PAS_Diagnosis1 instead.
 */
#define SETUP_PAS_Diagnosis1_PAS_ContModuleComBusOff 1, 0, 0, 1, 0

/**
 * Get signal PAS_ContModuleComBusOff from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Diagnosis1_PAS_ContModuleComBusOff(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x01) << 0))

/**
 * Set signal PAS_ContModuleComBusOff in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Diagnosis1_PAS_ContModuleComBusOff(buf, val)                                                           \
    {                                                                                                                  \
        buf[0] &= ~(0x01 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x01) << 0;                                                                   \
    }

/**
 * Set signal PAS_ContModuleComBusOff in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Diagnosis1_PAS_ContModuleComBusOff(buf) SET_PAS_Diagnosis1_PAS_ContModuleComBusOff(buf, 0)

/**
 * Signal PAS_ContModuleComBusOff value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Diagnosis1_PAS_ContModuleComBusOff(x, fmt) ((x)*fmt)

/**
 * Signal PAS_ContModuleComBusOff raw initial value.
 */
#define START_PAS_Diagnosis1_PAS_ContModuleComBusOff 0

/**
 * Signal PAS_ContModuleComBusOff raw minimum value.
 */
#define MIN_PAS_Diagnosis1_PAS_ContModuleComBusOff 0

/**
 * Signal PAS_ContModuleComBusOff raw maximum value.
 */
#define MAX_PAS_Diagnosis1_PAS_ContModuleComBusOff 1

/**
 * Signal PAS_ContModuleComBusOff raw offset value.
 */
#define OFF_PAS_Diagnosis1_PAS_ContModuleComBusOff 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Diagnosis1_PAS_ContModuleComBusOff Value Table for Signal PAS_ContModuleComBusOff in Message
 * PAS_Diagnosis1 (0x653)
 *
 * Enum values defined for \ref SIG_PAS_Diagnosis1_PAS_ContModuleComBusOff.
 *
 * @ingroup SIG_PAS_Diagnosis1_PAS_ContModuleComBusOff
 */

/**
 * Value table PAS_Diagnosis1_PAS_ContModuleComBusOff entry Failure.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_ContModuleComBusOff
 */
#define PAS_Diagnosis1_PAS_ContModuleComBusOff_Failure 1

/**
 * Value table PAS_Diagnosis1_PAS_ContModuleComBusOff entry Normal.
 *
 * @ingroup ENUM_PAS_Diagnosis1_PAS_ContModuleComBusOff
 */
#define PAS_Diagnosis1_PAS_ContModuleComBusOff_Normal 0

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_DistofRFM_Checksum Signal PAS_DistofRFM_Checksum of Message PAS_DistofRFM (0x348)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_DistofRFM_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_DistofRFM_Checksum and \ref GET_PAS_DistofRFM_PAS_DistofRFM_Checksum instead.
 */
#define SIG_PAS_DistofRFM_PAS_DistofRFM_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofRFM_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_DistofRFM_Checksum or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_DistofRFM_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofRFM_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_DistofRFM_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofRFM_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_DistofRFM_Checksum(buf, val)                                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofRFM_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_DistofRFM_Checksum(buf) SET_PAS_DistofRFM_PAS_DistofRFM_Checksum(buf, 0)

/**
 * Signal PAS_DistofRFM_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_DistofRFM_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRFM_Checksum raw initial value.
 */
#define START_PAS_DistofRFM_PAS_DistofRFM_Checksum 0

/**
 * Signal PAS_DistofRFM_Checksum raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_DistofRFM_Checksum 0

/**
 * Signal PAS_DistofRFM_Checksum raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_DistofRFM_Checksum 255

/**
 * Signal PAS_DistofRFM_Checksum raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_DistofRFM_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt Signal PAS_DistofRFM_RollCnt of Message PAS_DistofRFM (0x348)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_DistofRFM_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_DistofRFM_RollCnt and \ref GET_PAS_DistofRFM_PAS_DistofRFM_RollCnt instead.
 */
#define SIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_DistofRFM_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_DistofRFM_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofRFM_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_DistofRFM_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofRFM_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_DistofRFM_RollCnt(buf, val)                                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofRFM_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_DistofRFM_RollCnt(buf) SET_PAS_DistofRFM_PAS_DistofRFM_RollCnt(buf, 0)

/**
 * Signal PAS_DistofRFM_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_DistofRFM_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRFM_RollCnt raw initial value.
 */
#define START_PAS_DistofRFM_PAS_DistofRFM_RollCnt 0

/**
 * Signal PAS_DistofRFM_RollCnt raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_DistofRFM_RollCnt 0

/**
 * Signal PAS_DistofRFM_RollCnt raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_DistofRFM_RollCnt 15

/**
 * Signal PAS_DistofRFM_RollCnt raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_DistofRFM_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance Signal PAS_Radar_RSRM_Distance of Message PAS_DistofRFM (0x348)
 *
 * parking radar in right side rear middle distance
 * µ¹³µÀ×´ïÓÒ²àÇ°ÖÐÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_Radar_RSRM_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_Radar_RSRM_Distance and \ref GET_PAS_DistofRFM_PAS_Radar_RSRM_Distance instead.
 */
#define SIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance 1, 0, 26, 10

/**
 * Signal PAS_Radar_RSRM_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_Radar_RSRM_Distance 1, 0, 26, 10, 0

/**
 * Get signal PAS_Radar_RSRM_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_Radar_RSRM_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x07) << 7) | (ubyte)(+(ubyte)((buf[4] >> 1) & 0x7f) << 0))

/**
 * Set signal PAS_Radar_RSRM_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_Radar_RSRM_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 7) & 0x07) << 0;                                                            \
        buf[4] &= ~(0x7f << 1);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x7f) << 1;                                                                   \
    }

/**
 * Set signal PAS_Radar_RSRM_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_Radar_RSRM_Distance(buf) SET_PAS_DistofRFM_PAS_Radar_RSRM_Distance(buf, 0)

/**
 * Signal PAS_Radar_RSRM_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_Radar_RSRM_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RSRM_Distance raw initial value.
 */
#define START_PAS_DistofRFM_PAS_Radar_RSRM_Distance 0

/**
 * Signal PAS_Radar_RSRM_Distance raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_Radar_RSRM_Distance 0

/**
 * Signal PAS_Radar_RSRM_Distance raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_Radar_RSRM_Distance 511

/**
 * Signal PAS_Radar_RSRM_Distance raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_Radar_RSRM_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance Signal PAS_Radar_RSFM_Distance of Message PAS_DistofRFM (0x348)
 *
 * parking radar in right side front middle distance
 * µ¹³µÀ×´ïÓÒ²àÇ°ÖÐÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_Radar_RSFM_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_Radar_RSFM_Distance and \ref GET_PAS_DistofRFM_PAS_Radar_RSFM_Distance instead.
 */
#define SIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance 1, 0, 23, 10

/**
 * Signal PAS_Radar_RSFM_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_Radar_RSFM_Distance 1, 0, 23, 10, 0

/**
 * Get signal PAS_Radar_RSFM_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_Radar_RSFM_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[3] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_RSFM_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_Radar_RSFM_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[3] &= ~(0x03 << 6);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_RSFM_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_Radar_RSFM_Distance(buf) SET_PAS_DistofRFM_PAS_Radar_RSFM_Distance(buf, 0)

/**
 * Signal PAS_Radar_RSFM_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_Radar_RSFM_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RSFM_Distance raw initial value.
 */
#define START_PAS_DistofRFM_PAS_Radar_RSFM_Distance 0

/**
 * Signal PAS_Radar_RSFM_Distance raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_Radar_RSFM_Distance 0

/**
 * Signal PAS_Radar_RSFM_Distance raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_Radar_RSFM_Distance 511

/**
 * Signal PAS_Radar_RSFM_Distance raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_Radar_RSFM_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_RSRM_PDC Signal PAS_RSRM_PDC of Message PAS_DistofRFM (0x348)
 *
 * Distance display of parking radar in right side rear middle-
 * Just obstacle tracking
 * µ¹³µÀ×´ïÓÒ²àºóÖÐÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRFM_PAS_RSRM_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_RSRM_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_RSRM_PDC and \ref GET_PAS_DistofRFM_PAS_RSRM_PDC instead.
 */
#define SIG_PAS_DistofRFM_PAS_RSRM_PDC 1, 0, 29, 3

/**
 * Signal PAS_RSRM_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_RSRM_PDC or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_RSRM_PDC 1, 0, 29, 3, 0

/**
 * Get signal PAS_RSRM_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_RSRM_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 3) & 0x07) << 0))

/**
 * Set signal PAS_RSRM_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_RSRM_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 3);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 3;                                                                   \
    }

/**
 * Set signal PAS_RSRM_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_RSRM_PDC(buf) SET_PAS_DistofRFM_PAS_RSRM_PDC(buf, 0)

/**
 * Signal PAS_RSRM_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_RSRM_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RSRM_PDC raw initial value.
 */
#define START_PAS_DistofRFM_PAS_RSRM_PDC 0

/**
 * Signal PAS_RSRM_PDC raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_RSRM_PDC 0

/**
 * Signal PAS_RSRM_PDC raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_RSRM_PDC 7

/**
 * Signal PAS_RSRM_PDC raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_RSRM_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC Value Table for Signal PAS_RSRM_PDC in Message PAS_DistofRFM (0x348)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFM_PAS_RSRM_PDC.
 *
 * @ingroup SIG_PAS_DistofRFM_PAS_RSRM_PDC
 */

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_Range 5

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_Range_4 4

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_Range_3 3

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_Range_2 2

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_Range_1 1

/**
 * Value table PAS_DistofRFM_PAS_RSRM_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSRM_PDC
 */
#define PAS_DistofRFM_PAS_RSRM_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_Radar_RSF_Distance Signal PAS_Radar_RSF_Distance of Message PAS_DistofRFM (0x348)
 *
 *  parking radar in right side front distance
 * µ¹³µÀ×´ïÓÒ²àÇ°ÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_Radar_RSF_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_Radar_RSF_Distance and \ref GET_PAS_DistofRFM_PAS_Radar_RSF_Distance instead.
 */
#define SIG_PAS_DistofRFM_PAS_Radar_RSF_Distance 1, 0, 4, 10

/**
 * Signal PAS_Radar_RSF_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_Radar_RSF_Distance or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_Radar_RSF_Distance 1, 0, 4, 10, 0

/**
 * Get signal PAS_Radar_RSF_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_Radar_RSF_Distance(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 5) | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x1f) << 0))

/**
 * Set signal PAS_Radar_RSF_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_Radar_RSF_Distance(buf, val)                                                             \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 5) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0x1f << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x1f) << 3;                                                                   \
    }

/**
 * Set signal PAS_Radar_RSF_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_Radar_RSF_Distance(buf) SET_PAS_DistofRFM_PAS_Radar_RSF_Distance(buf, 0)

/**
 * Signal PAS_Radar_RSF_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_Radar_RSF_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RSF_Distance raw initial value.
 */
#define START_PAS_DistofRFM_PAS_Radar_RSF_Distance 0

/**
 * Signal PAS_Radar_RSF_Distance raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_Radar_RSF_Distance 0

/**
 * Signal PAS_Radar_RSF_Distance raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_Radar_RSF_Distance 511

/**
 * Signal PAS_Radar_RSF_Distance raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_Radar_RSF_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_RSFM_PDC Signal PAS_RSFM_PDC of Message PAS_DistofRFM (0x348)
 *
 * Distance display of parking radar in right side front middle-
 * Just obstacle tracking
 * µ¹³µÀ×´ïÓÒ²àÇ°ÖÐÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRFM_PAS_RSFM_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_RSFM_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_RSFM_PDC and \ref GET_PAS_DistofRFM_PAS_RSFM_PDC instead.
 */
#define SIG_PAS_DistofRFM_PAS_RSFM_PDC 1, 0, 10, 3

/**
 * Signal PAS_RSFM_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_RSFM_PDC or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_RSFM_PDC 1, 0, 10, 3, 0

/**
 * Get signal PAS_RSFM_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_RSFM_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PAS_RSFM_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_RSFM_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PAS_RSFM_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_RSFM_PDC(buf) SET_PAS_DistofRFM_PAS_RSFM_PDC(buf, 0)

/**
 * Signal PAS_RSFM_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_RSFM_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RSFM_PDC raw initial value.
 */
#define START_PAS_DistofRFM_PAS_RSFM_PDC 0

/**
 * Signal PAS_RSFM_PDC raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_RSFM_PDC 0

/**
 * Signal PAS_RSFM_PDC raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_RSFM_PDC 7

/**
 * Signal PAS_RSFM_PDC raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_RSFM_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC Value Table for Signal PAS_RSFM_PDC in Message PAS_DistofRFM (0x348)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFM_PAS_RSFM_PDC.
 *
 * @ingroup SIG_PAS_DistofRFM_PAS_RSFM_PDC
 */

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_Range 5

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_Range_4 4

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_Range_3 3

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_Range_2 2

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_Range_1 1

/**
 * Value table PAS_DistofRFM_PAS_RSFM_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSFM_PDC
 */
#define PAS_DistofRFM_PAS_RSFM_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRFM_PAS_RSF_PDC Signal PAS_RSF_PDC of Message PAS_DistofRFM (0x348)
 *
 * Distance display of parking radar in right side front-
 * Just obstacle tracking
 * µ¹³µÀ×´ïÓÒ²àÇ°ÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRFM_PAS_RSF_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFM
 * @{
 */

/**
 * Signal PAS_RSF_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFM_PAS_RSF_PDC and \ref GET_PAS_DistofRFM_PAS_RSF_PDC instead.
 */
#define SIG_PAS_DistofRFM_PAS_RSF_PDC 1, 0, 7, 3

/**
 * Signal PAS_RSF_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFM_PAS_RSF_PDC or \ref INIT_PAS_DistofRFM instead.
 */
#define SETUP_PAS_DistofRFM_PAS_RSF_PDC 1, 0, 7, 3, 0

/**
 * Get signal PAS_RSF_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFM_PAS_RSF_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x07) << 0))

/**
 * Set signal PAS_RSF_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFM_PAS_RSF_PDC(buf, val)                                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PAS_RSF_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFM_PAS_RSF_PDC(buf) SET_PAS_DistofRFM_PAS_RSF_PDC(buf, 0)

/**
 * Signal PAS_RSF_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFM_PAS_RSF_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RSF_PDC raw initial value.
 */
#define START_PAS_DistofRFM_PAS_RSF_PDC 0

/**
 * Signal PAS_RSF_PDC raw minimum value.
 */
#define MIN_PAS_DistofRFM_PAS_RSF_PDC 0

/**
 * Signal PAS_RSF_PDC raw maximum value.
 */
#define MAX_PAS_DistofRFM_PAS_RSF_PDC 7

/**
 * Signal PAS_RSF_PDC raw offset value.
 */
#define OFF_PAS_DistofRFM_PAS_RSF_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFM_PAS_RSF_PDC Value Table for Signal PAS_RSF_PDC in Message PAS_DistofRFM (0x348)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFM_PAS_RSF_PDC.
 *
 * @ingroup SIG_PAS_DistofRFM_PAS_RSF_PDC
 */

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_Range 5

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_Range_4 4

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_Range_3 3

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_Range_2 2

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_Range_1 1

/**
 * Value table PAS_DistofRFM_PAS_RSF_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRFM_PAS_RSF_PDC
 */
#define PAS_DistofRFM_PAS_RSF_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_DistofLFM_Checksum Signal PAS_DistofLFM_Checksum of Message PAS_DistofLFM (0x338)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_DistofLFM_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_DistofLFM_Checksum and \ref GET_PAS_DistofLFM_PAS_DistofLFM_Checksum instead.
 */
#define SIG_PAS_DistofLFM_PAS_DistofLFM_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofLFM_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_DistofLFM_Checksum or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_DistofLFM_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofLFM_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_DistofLFM_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofLFM_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_DistofLFM_Checksum(buf, val)                                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofLFM_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_DistofLFM_Checksum(buf) SET_PAS_DistofLFM_PAS_DistofLFM_Checksum(buf, 0)

/**
 * Signal PAS_DistofLFM_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_DistofLFM_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofLFM_Checksum raw initial value.
 */
#define START_PAS_DistofLFM_PAS_DistofLFM_Checksum 0

/**
 * Signal PAS_DistofLFM_Checksum raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_DistofLFM_Checksum 0

/**
 * Signal PAS_DistofLFM_Checksum raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_DistofLFM_Checksum 255

/**
 * Signal PAS_DistofLFM_Checksum raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_DistofLFM_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt Signal PAS_DistofLFM_RollCnt of Message PAS_DistofLFM (0x338)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_DistofLFM_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_DistofLFM_RollCnt and \ref GET_PAS_DistofLFM_PAS_DistofLFM_RollCnt instead.
 */
#define SIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_DistofLFM_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_DistofLFM_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofLFM_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_DistofLFM_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofLFM_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_DistofLFM_RollCnt(buf, val)                                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofLFM_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_DistofLFM_RollCnt(buf) SET_PAS_DistofLFM_PAS_DistofLFM_RollCnt(buf, 0)

/**
 * Signal PAS_DistofLFM_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_DistofLFM_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofLFM_RollCnt raw initial value.
 */
#define START_PAS_DistofLFM_PAS_DistofLFM_RollCnt 0

/**
 * Signal PAS_DistofLFM_RollCnt raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_DistofLFM_RollCnt 0

/**
 * Signal PAS_DistofLFM_RollCnt raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_DistofLFM_RollCnt 15

/**
 * Signal PAS_DistofLFM_RollCnt raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_DistofLFM_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance Signal PAS_Radar_LSRM_Distance of Message PAS_DistofLFM (0x338)
 *
 *  parking radar in left side rear middle distance
 * µ¹³µÀ×´ï×ó²àºóÖÐÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_Radar_LSRM_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_Radar_LSRM_Distance and \ref GET_PAS_DistofLFM_PAS_Radar_LSRM_Distance instead.
 */
#define SIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance 1, 0, 26, 10

/**
 * Signal PAS_Radar_LSRM_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_Radar_LSRM_Distance 1, 0, 26, 10, 0

/**
 * Get signal PAS_Radar_LSRM_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_Radar_LSRM_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x07) << 7) | (ubyte)(+(ubyte)((buf[4] >> 1) & 0x7f) << 0))

/**
 * Set signal PAS_Radar_LSRM_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_Radar_LSRM_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 7) & 0x07) << 0;                                                            \
        buf[4] &= ~(0x7f << 1);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x7f) << 1;                                                                   \
    }

/**
 * Set signal PAS_Radar_LSRM_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_Radar_LSRM_Distance(buf) SET_PAS_DistofLFM_PAS_Radar_LSRM_Distance(buf, 0)

/**
 * Signal PAS_Radar_LSRM_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_Radar_LSRM_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_LSRM_Distance raw initial value.
 */
#define START_PAS_DistofLFM_PAS_Radar_LSRM_Distance 0

/**
 * Signal PAS_Radar_LSRM_Distance raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_Radar_LSRM_Distance 0

/**
 * Signal PAS_Radar_LSRM_Distance raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_Radar_LSRM_Distance 511

/**
 * Signal PAS_Radar_LSRM_Distance raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_Radar_LSRM_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance Signal PAS_Radar_LSFM_Distance of Message PAS_DistofLFM (0x338)
 *
 * parking radar in left side front middle distance
 * µ¹³µÀ×´ï×ó²àÇ°ÖÐÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_Radar_LSFM_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_Radar_LSFM_Distance and \ref GET_PAS_DistofLFM_PAS_Radar_LSFM_Distance instead.
 */
#define SIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance 1, 0, 23, 10

/**
 * Signal PAS_Radar_LSFM_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_Radar_LSFM_Distance 1, 0, 23, 10, 0

/**
 * Get signal PAS_Radar_LSFM_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_Radar_LSFM_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[3] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_LSFM_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_Radar_LSFM_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[3] &= ~(0x03 << 6);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_LSFM_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_Radar_LSFM_Distance(buf) SET_PAS_DistofLFM_PAS_Radar_LSFM_Distance(buf, 0)

/**
 * Signal PAS_Radar_LSFM_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_Radar_LSFM_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_LSFM_Distance raw initial value.
 */
#define START_PAS_DistofLFM_PAS_Radar_LSFM_Distance 0

/**
 * Signal PAS_Radar_LSFM_Distance raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_Radar_LSFM_Distance 0

/**
 * Signal PAS_Radar_LSFM_Distance raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_Radar_LSFM_Distance 511

/**
 * Signal PAS_Radar_LSFM_Distance raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_Radar_LSFM_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_LSRM_PDC Signal PAS_LSRM_PDC of Message PAS_DistofLFM (0x338)
 *
 * Distance display of parking radar in left side rear middle-
 * µ¹³µÀ×´ï×ó²àºóÖÐÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofLFM_PAS_LSRM_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_LSRM_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_LSRM_PDC and \ref GET_PAS_DistofLFM_PAS_LSRM_PDC instead.
 */
#define SIG_PAS_DistofLFM_PAS_LSRM_PDC 1, 0, 29, 3

/**
 * Signal PAS_LSRM_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_LSRM_PDC or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_LSRM_PDC 1, 0, 29, 3, 0

/**
 * Get signal PAS_LSRM_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_LSRM_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 3) & 0x07) << 0))

/**
 * Set signal PAS_LSRM_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_LSRM_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 3);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 3;                                                                   \
    }

/**
 * Set signal PAS_LSRM_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_LSRM_PDC(buf) SET_PAS_DistofLFM_PAS_LSRM_PDC(buf, 0)

/**
 * Signal PAS_LSRM_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_LSRM_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_LSRM_PDC raw initial value.
 */
#define START_PAS_DistofLFM_PAS_LSRM_PDC 0

/**
 * Signal PAS_LSRM_PDC raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_LSRM_PDC 0

/**
 * Signal PAS_LSRM_PDC raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_LSRM_PDC 7

/**
 * Signal PAS_LSRM_PDC raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_LSRM_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC Value Table for Signal PAS_LSRM_PDC in Message PAS_DistofLFM (0x338)
 *
 * Enum values defined for \ref SIG_PAS_DistofLFM_PAS_LSRM_PDC.
 *
 * @ingroup SIG_PAS_DistofLFM_PAS_LSRM_PDC
 */

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_Range 5

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_Range_4 4

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_Range_3 3

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_Range_2 2

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_Range_1 1

/**
 * Value table PAS_DistofLFM_PAS_LSRM_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSRM_PDC
 */
#define PAS_DistofLFM_PAS_LSRM_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_Radar_LSF_Distance Signal PAS_Radar_LSF_Distance of Message PAS_DistofLFM (0x338)
 *
 *  parking radar in left side front distance
 * µ¹³µÀ×´ï×ó²àÇ°ÇøÓò¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_Radar_LSF_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_Radar_LSF_Distance and \ref GET_PAS_DistofLFM_PAS_Radar_LSF_Distance instead.
 */
#define SIG_PAS_DistofLFM_PAS_Radar_LSF_Distance 1, 0, 4, 10

/**
 * Signal PAS_Radar_LSF_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_Radar_LSF_Distance or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_Radar_LSF_Distance 1, 0, 4, 10, 0

/**
 * Get signal PAS_Radar_LSF_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_Radar_LSF_Distance(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 5) | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x1f) << 0))

/**
 * Set signal PAS_Radar_LSF_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_Radar_LSF_Distance(buf, val)                                                             \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 5) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0x1f << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x1f) << 3;                                                                   \
    }

/**
 * Set signal PAS_Radar_LSF_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_Radar_LSF_Distance(buf) SET_PAS_DistofLFM_PAS_Radar_LSF_Distance(buf, 0)

/**
 * Signal PAS_Radar_LSF_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_Radar_LSF_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_LSF_Distance raw initial value.
 */
#define START_PAS_DistofLFM_PAS_Radar_LSF_Distance 0

/**
 * Signal PAS_Radar_LSF_Distance raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_Radar_LSF_Distance 0

/**
 * Signal PAS_Radar_LSF_Distance raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_Radar_LSF_Distance 511

/**
 * Signal PAS_Radar_LSF_Distance raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_Radar_LSF_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_LSFM_PDC Signal PAS_LSFM_PDC of Message PAS_DistofLFM (0x338)
 *
 * Distance display of parking radar in left side front middle-
 * Just obstacle tracking
 * µ¹³µÀ×´ï×ó²àÇ°ÖÐÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofLFM_PAS_LSFM_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_LSFM_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_LSFM_PDC and \ref GET_PAS_DistofLFM_PAS_LSFM_PDC instead.
 */
#define SIG_PAS_DistofLFM_PAS_LSFM_PDC 1, 0, 10, 3

/**
 * Signal PAS_LSFM_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_LSFM_PDC or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_LSFM_PDC 1, 0, 10, 3, 0

/**
 * Get signal PAS_LSFM_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_LSFM_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PAS_LSFM_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_LSFM_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PAS_LSFM_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_LSFM_PDC(buf) SET_PAS_DistofLFM_PAS_LSFM_PDC(buf, 0)

/**
 * Signal PAS_LSFM_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_LSFM_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_LSFM_PDC raw initial value.
 */
#define START_PAS_DistofLFM_PAS_LSFM_PDC 0

/**
 * Signal PAS_LSFM_PDC raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_LSFM_PDC 0

/**
 * Signal PAS_LSFM_PDC raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_LSFM_PDC 7

/**
 * Signal PAS_LSFM_PDC raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_LSFM_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC Value Table for Signal PAS_LSFM_PDC in Message PAS_DistofLFM (0x338)
 *
 * Enum values defined for \ref SIG_PAS_DistofLFM_PAS_LSFM_PDC.
 *
 * @ingroup SIG_PAS_DistofLFM_PAS_LSFM_PDC
 */

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_Range 5

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_Range_4 4

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_Range_3 3

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_Range_2 2

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_Range_1 1

/**
 * Value table PAS_DistofLFM_PAS_LSFM_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_LSFM_PDC
 */
#define PAS_DistofLFM_PAS_LSFM_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF Signal PAS_Radar_DistDisplay_LSF of Message PAS_DistofLFM
 * (0x338)
 *
 * Distance display of parking radar in left side front-
 * Just obstacle tracking
 * µ¹³µÀ×´ï×ó²àÇ°ÇøÓò¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofLFM
 * @{
 */

/**
 * Signal PAS_Radar_DistDisplay_LSF configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF and \ref GET_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF instead.
 */
#define SIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 1, 0, 7, 3

/**
 * Signal PAS_Radar_DistDisplay_LSF setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF or \ref INIT_PAS_DistofLFM instead.
 */
#define SETUP_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 1, 0, 7, 3, 0

/**
 * Get signal PAS_Radar_DistDisplay_LSF from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x07) << 0))

/**
 * Set signal PAS_Radar_DistDisplay_LSF in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(buf, val)                                                          \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PAS_Radar_DistDisplay_LSF in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(buf) SET_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(buf, 0)

/**
 * Signal PAS_Radar_DistDisplay_LSF value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_DistDisplay_LSF raw initial value.
 */
#define START_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 0

/**
 * Signal PAS_Radar_DistDisplay_LSF raw minimum value.
 */
#define MIN_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 0

/**
 * Signal PAS_Radar_DistDisplay_LSF raw maximum value.
 */
#define MAX_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 7

/**
 * Signal PAS_Radar_DistDisplay_LSF raw offset value.
 */
#define OFF_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF Value Table for Signal PAS_Radar_DistDisplay_LSF in Message
 * PAS_DistofLFM (0x338)
 *
 * Enum values defined for \ref SIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF.
 *
 * @ingroup SIG_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_Range 5

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_Range_4 4

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_Range_3 3

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_Range_2 2

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_Range_1 1

/**
 * Value table PAS_DistofLFM_PAS_Radar_DistDisplay_LSF entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofLFM_PAS_Radar_DistDisplay_LSF
 */
#define PAS_DistofLFM_PAS_Radar_DistDisplay_LSF_No 0

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum Signal PAS_DistofRMLR_Checksum of Message PAS_DistofRMLR (0x328)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_DistofRMLR_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_DistofRMLR_Checksum and \ref GET_PAS_DistofRMLR_PAS_DistofRMLR_Checksum instead.
 */
#define SIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofRMLR_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofRMLR_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofRMLR_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(buf, val)                                                           \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofRMLR_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(buf) SET_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(buf, 0)

/**
 * Signal PAS_DistofRMLR_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_DistofRMLR_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRMLR_Checksum raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 0

/**
 * Signal PAS_DistofRMLR_Checksum raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 0

/**
 * Signal PAS_DistofRMLR_Checksum raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 255

/**
 * Signal PAS_DistofRMLR_Checksum raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_DistofRMLR_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt Signal PAS_DistofRMLR_RollCnt of Message PAS_DistofRMLR (0x328)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_DistofRMLR_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt and \ref GET_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt instead.
 */
#define SIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_DistofRMLR_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofRMLR_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofRMLR_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(buf, val)                                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofRMLR_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(buf) SET_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(buf, 0)

/**
 * Signal PAS_DistofRMLR_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRMLR_RollCnt raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 0

/**
 * Signal PAS_DistofRMLR_RollCnt raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 0

/**
 * Signal PAS_DistofRMLR_RollCnt raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 15

/**
 * Signal PAS_DistofRMLR_RollCnt raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_DistofRMLR_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance Signal PAS_Radar_RMR_Distance of Message PAS_DistofRMLR (0x328)
 *
 * parking radar in rear  middle right side distance
 * µ¹³µÀ×´ïÓÒÖÐºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_Radar_RMR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_Radar_RMR_Distance and \ref GET_PAS_DistofRMLR_PAS_Radar_RMR_Distance instead.
 */
#define SIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance 1, 0, 39, 10

/**
 * Signal PAS_Radar_RMR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_Radar_RMR_Distance 1, 0, 39, 10, 0

/**
 * Get signal PAS_Radar_RMR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_Radar_RMR_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[5] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_RMR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_Radar_RMR_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[5] &= ~(0x03 << 6);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_RMR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_Radar_RMR_Distance(buf) SET_PAS_DistofRMLR_PAS_Radar_RMR_Distance(buf, 0)

/**
 * Signal PAS_Radar_RMR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_Radar_RMR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RMR_Distance raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_Radar_RMR_Distance 0

/**
 * Signal PAS_Radar_RMR_Distance raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_Radar_RMR_Distance 0

/**
 * Signal PAS_Radar_RMR_Distance raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_Radar_RMR_Distance 511

/**
 * Signal PAS_Radar_RMR_Distance raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_Radar_RMR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_Radar_RML_Distance Signal PAS_Radar_RML_Distance of Message PAS_DistofRMLR (0x328)
 *
 * parking radar in rear  middle left side distance
 * µ¹³µÀ×´ï×óÖÐºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_Radar_RML_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_Radar_RML_Distance and \ref GET_PAS_DistofRMLR_PAS_Radar_RML_Distance instead.
 */
#define SIG_PAS_DistofRMLR_PAS_Radar_RML_Distance 1, 0, 21, 10

/**
 * Signal PAS_Radar_RML_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_Radar_RML_Distance or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_Radar_RML_Distance 1, 0, 21, 10, 0

/**
 * Get signal PAS_Radar_RML_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_Radar_RML_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Radar_RML_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_Radar_RML_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Radar_RML_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_Radar_RML_Distance(buf) SET_PAS_DistofRMLR_PAS_Radar_RML_Distance(buf, 0)

/**
 * Signal PAS_Radar_RML_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_Radar_RML_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RML_Distance raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_Radar_RML_Distance 0

/**
 * Signal PAS_Radar_RML_Distance raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_Radar_RML_Distance 0

/**
 * Signal PAS_Radar_RML_Distance raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_Radar_RML_Distance 511

/**
 * Signal PAS_Radar_RML_Distance raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_Radar_RML_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_RMR_PDC Signal PAS_RMR_PDC of Message PAS_DistofRMLR (0x328)
 *
 * Distance display  of parking radar in rear  middle right side
 * µ¹³µÀ×´ïÓÒÖÐºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRMLR_PAS_RMR_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_RMR_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_RMR_PDC and \ref GET_PAS_DistofRMLR_PAS_RMR_PDC instead.
 */
#define SIG_PAS_DistofRMLR_PAS_RMR_PDC 1, 0, 27, 4

/**
 * Signal PAS_RMR_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_RMR_PDC or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_RMR_PDC 1, 0, 27, 4, 0

/**
 * Get signal PAS_RMR_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_RMR_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0x0f) << 0))

/**
 * Set signal PAS_RMR_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_RMR_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PAS_RMR_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_RMR_PDC(buf) SET_PAS_DistofRMLR_PAS_RMR_PDC(buf, 0)

/**
 * Signal PAS_RMR_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_RMR_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RMR_PDC raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_RMR_PDC 0

/**
 * Signal PAS_RMR_PDC raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_RMR_PDC 0

/**
 * Signal PAS_RMR_PDC raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_RMR_PDC 7

/**
 * Signal PAS_RMR_PDC raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_RMR_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC Value Table for Signal PAS_RMR_PDC in Message PAS_DistofRMLR (0x328)
 *
 * Enum values defined for \ref SIG_PAS_DistofRMLR_PAS_RMR_PDC.
 *
 * @ingroup SIG_PAS_DistofRMLR_PAS_RMR_PDC
 */

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range 7

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_6 6

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_5 5

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_4 4

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_3 3

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_2 2

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_Range_1 1

/**
 * Value table PAS_DistofRMLR_PAS_RMR_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RMR_PDC
 */
#define PAS_DistofRMLR_PAS_RMR_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_RML_PDC Signal PAS_RML_PDC of Message PAS_DistofRMLR (0x328)
 *
 * Distance display  of parking radar in rear  middle left side
 * µ¹³µÀ×´ï×óÖÐºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRMLR_PAS_RML_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_RML_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_RML_PDC and \ref GET_PAS_DistofRMLR_PAS_RML_PDC instead.
 */
#define SIG_PAS_DistofRMLR_PAS_RML_PDC 1, 0, 9, 4

/**
 * Signal PAS_RML_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_RML_PDC or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_RML_PDC 1, 0, 9, 4, 0

/**
 * Get signal PAS_RML_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_RML_PDC(buf)                                                                            \
    (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x03) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_RML_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_RML_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 2) & 0x03) << 0;                                                                   \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_RML_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_RML_PDC(buf) SET_PAS_DistofRMLR_PAS_RML_PDC(buf, 0)

/**
 * Signal PAS_RML_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_RML_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RML_PDC raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_RML_PDC 0

/**
 * Signal PAS_RML_PDC raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_RML_PDC 0

/**
 * Signal PAS_RML_PDC raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_RML_PDC 7

/**
 * Signal PAS_RML_PDC raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_RML_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRMLR_PAS_RML_PDC Value Table for Signal PAS_RML_PDC in Message PAS_DistofRMLR (0x328)
 *
 * Enum values defined for \ref SIG_PAS_DistofRMLR_PAS_RML_PDC.
 *
 * @ingroup SIG_PAS_DistofRMLR_PAS_RML_PDC
 */

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range 7

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_6 6

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_5 5

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_4 4

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_3 3

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_2 2

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_Range_1 1

/**
 * Value table PAS_DistofRMLR_PAS_RML_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RML_PDC
 */
#define PAS_DistofRMLR_PAS_RML_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_Radar_RL_Distance Signal PAS_Radar_RL_Distance of Message PAS_DistofRMLR (0x328)
 *
 * parking radar in rear  left side distance
 * µ¹³µÀ×´ï×óºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_Radar_RL_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_Radar_RL_Distance and \ref GET_PAS_DistofRMLR_PAS_Radar_RL_Distance instead.
 */
#define SIG_PAS_DistofRMLR_PAS_Radar_RL_Distance 1, 0, 3, 10

/**
 * Signal PAS_Radar_RL_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_Radar_RL_Distance or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_Radar_RL_Distance 1, 0, 3, 10, 0

/**
 * Get signal PAS_Radar_RL_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_Radar_RL_Distance(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[1] >> 2) & 0x3f) << 0))

/**
 * Set signal PAS_Radar_RL_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_Radar_RL_Distance(buf, val)                                                             \
    {                                                                                                                  \
        buf[0] &= ~(0x0f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[1] &= ~(0x3f << 2);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PAS_Radar_RL_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_Radar_RL_Distance(buf) SET_PAS_DistofRMLR_PAS_Radar_RL_Distance(buf, 0)

/**
 * Signal PAS_Radar_RL_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_Radar_RL_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RL_Distance raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_Radar_RL_Distance 0

/**
 * Signal PAS_Radar_RL_Distance raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_Radar_RL_Distance 0

/**
 * Signal PAS_Radar_RL_Distance raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_Radar_RL_Distance 511

/**
 * Signal PAS_Radar_RL_Distance raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_Radar_RL_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRMLR_PAS_RL_PDC Signal PAS_RL_PDC of Message PAS_DistofRMLR (0x328)
 *
 * Distance display  of parking radar in rear  left side
 * µ¹³µÀ×´ï×óºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRMLR_PAS_RL_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRMLR
 * @{
 */

/**
 * Signal PAS_RL_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRMLR_PAS_RL_PDC and \ref GET_PAS_DistofRMLR_PAS_RL_PDC instead.
 */
#define SIG_PAS_DistofRMLR_PAS_RL_PDC 1, 0, 7, 4

/**
 * Signal PAS_RL_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRMLR_PAS_RL_PDC or \ref INIT_PAS_DistofRMLR instead.
 */
#define SETUP_PAS_DistofRMLR_PAS_RL_PDC 1, 0, 7, 4, 0

/**
 * Get signal PAS_RL_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRMLR_PAS_RL_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_RL_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRMLR_PAS_RL_PDC(buf, val)                                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x0f << 4);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_RL_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRMLR_PAS_RL_PDC(buf) SET_PAS_DistofRMLR_PAS_RL_PDC(buf, 0)

/**
 * Signal PAS_RL_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRMLR_PAS_RL_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RL_PDC raw initial value.
 */
#define START_PAS_DistofRMLR_PAS_RL_PDC 0

/**
 * Signal PAS_RL_PDC raw minimum value.
 */
#define MIN_PAS_DistofRMLR_PAS_RL_PDC 0

/**
 * Signal PAS_RL_PDC raw maximum value.
 */
#define MAX_PAS_DistofRMLR_PAS_RL_PDC 7

/**
 * Signal PAS_RL_PDC raw offset value.
 */
#define OFF_PAS_DistofRMLR_PAS_RL_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRMLR_PAS_RL_PDC Value Table for Signal PAS_RL_PDC in Message PAS_DistofRMLR (0x328)
 *
 * Enum values defined for \ref SIG_PAS_DistofRMLR_PAS_RL_PDC.
 *
 * @ingroup SIG_PAS_DistofRMLR_PAS_RL_PDC
 */

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range 7

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_6 6

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_5 5

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_4 4

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_3 3

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_2 2

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_Range_1 1

/**
 * Value table PAS_DistofRMLR_PAS_RL_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRMLR_PAS_RL_PDC
 */
#define PAS_DistofRMLR_PAS_RL_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum Signal PAS_DistofFMLR_Checksum of Message PAS_DistofFMLR (0x318)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_DistofFMLR_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_DistofFMLR_Checksum and \ref GET_PAS_DistofFMLR_PAS_DistofFMLR_Checksum instead.
 */
#define SIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofFMLR_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofFMLR_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofFMLR_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(buf, val)                                                           \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofFMLR_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(buf) SET_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(buf, 0)

/**
 * Signal PAS_DistofFMLR_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_DistofFMLR_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofFMLR_Checksum raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 0

/**
 * Signal PAS_DistofFMLR_Checksum raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 0

/**
 * Signal PAS_DistofFMLR_Checksum raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 255

/**
 * Signal PAS_DistofFMLR_Checksum raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_DistofFMLR_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt Signal PAS_DistofFMLR_RollCnt of Message PAS_DistofFMLR (0x318)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_DistofFMLR_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt and \ref GET_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt instead.
 */
#define SIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_DistofFMLR_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofFMLR_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofFMLR_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(buf, val)                                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofFMLR_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(buf) SET_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(buf, 0)

/**
 * Signal PAS_DistofFMLR_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofFMLR_RollCnt raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 0

/**
 * Signal PAS_DistofFMLR_RollCnt raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 0

/**
 * Signal PAS_DistofFMLR_RollCnt raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 15

/**
 * Signal PAS_DistofFMLR_RollCnt raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_DistofFMLR_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance Signal PAS_Radar_FMR_Distance of Message PAS_DistofFMLR (0x318)
 *
 * parking radar in front middle right side distance
 * µ¹³µÀ×´ïÓÒÖÐÇ°Çø¾àÀëDistance display  of parking radar in front middle right side
 * µ¹³µÀ×´ïÓÒÖÐÇ°Çø¾àÀëÏÔÊ¾
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_Radar_FMR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance and \ref GET_PAS_DistofFMLR_PAS_Radar_FMR_Distance instead.
 */
#define SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance 1, 0, 39, 10

/**
 * Signal PAS_Radar_FMR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_Radar_FMR_Distance 1, 0, 39, 10, 0

/**
 * Get signal PAS_Radar_FMR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_Radar_FMR_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[5] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_FMR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[5] &= ~(0x03 << 6);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_FMR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance(buf) SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance(buf, 0)

/**
 * Signal PAS_Radar_FMR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_Radar_FMR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_FMR_Distance raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_Radar_FMR_Distance 0

/**
 * Signal PAS_Radar_FMR_Distance raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_Radar_FMR_Distance 0

/**
 * Signal PAS_Radar_FMR_Distance raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_Radar_FMR_Distance 511

/**
 * Signal PAS_Radar_FMR_Distance raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_Radar_FMR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_Radar_FML_Distance Signal PAS_Radar_FML_Distance of Message PAS_DistofFMLR (0x318)
 *
 * parking radar in front middle left side distance
 * µ¹³µÀ×´ï×óÖÐÇ°Çø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_Radar_FML_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_Radar_FML_Distance and \ref GET_PAS_DistofFMLR_PAS_Radar_FML_Distance instead.
 */
#define SIG_PAS_DistofFMLR_PAS_Radar_FML_Distance 1, 0, 21, 10

/**
 * Signal PAS_Radar_FML_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_Radar_FML_Distance or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_Radar_FML_Distance 1, 0, 21, 10, 0

/**
 * Get signal PAS_Radar_FML_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_Radar_FML_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Radar_FML_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_Radar_FML_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Radar_FML_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_Radar_FML_Distance(buf) SET_PAS_DistofFMLR_PAS_Radar_FML_Distance(buf, 0)

/**
 * Signal PAS_Radar_FML_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_Radar_FML_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_FML_Distance raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_Radar_FML_Distance 0

/**
 * Signal PAS_Radar_FML_Distance raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_Radar_FML_Distance 0

/**
 * Signal PAS_Radar_FML_Distance raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_Radar_FML_Distance 511

/**
 * Signal PAS_Radar_FML_Distance raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_Radar_FML_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display Signal PAS_Radar_FMR_Distance_Display of Message
 * PAS_DistofFMLR (0x318)
 *
 * Distance display  of parking radar in front middle right side
 * µ¹³µÀ×´ïÓÒÖÐÇ°Çø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_Radar_FMR_Distance_Display configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display and \ref
 *GET_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display instead.
 */
#define SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 1, 0, 27, 4

/**
 * Signal PAS_Radar_FMR_Distance_Display setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 1, 0, 27, 4, 0

/**
 * Get signal PAS_Radar_FMR_Distance_Display from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0x0f) << 0))

/**
 * Set signal PAS_Radar_FMR_Distance_Display in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(buf, val)                                                    \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PAS_Radar_FMR_Distance_Display in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(buf)                                                     \
    SET_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(buf, 0)

/**
 * Signal PAS_Radar_FMR_Distance_Display value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_FMR_Distance_Display raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 0

/**
 * Signal PAS_Radar_FMR_Distance_Display raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 0

/**
 * Signal PAS_Radar_FMR_Distance_Display raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 7

/**
 * Signal PAS_Radar_FMR_Distance_Display raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display Value Table for Signal PAS_Radar_FMR_Distance_Display in
 * Message PAS_DistofFMLR (0x318)
 *
 * Enum values defined for \ref SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display.
 *
 * @ingroup SIG_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range 7

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_6 6

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_5 5

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_4 4

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_3 3

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_2 2

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_Range_1 1

/**
 * Value table PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display
 */
#define PAS_DistofFMLR_PAS_Radar_FMR_Distance_Display_No 0

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_FML_PDC Signal PAS_FML_PDC of Message PAS_DistofFMLR (0x318)
 *
 * Distance display  of parking radar in front middle left side
 * µ¹³µÀ×´ï×óÖÐÇ°Çø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofFMLR_PAS_FML_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_FML_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_FML_PDC and \ref GET_PAS_DistofFMLR_PAS_FML_PDC instead.
 */
#define SIG_PAS_DistofFMLR_PAS_FML_PDC 1, 0, 9, 4

/**
 * Signal PAS_FML_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_FML_PDC or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_FML_PDC 1, 0, 9, 4, 0

/**
 * Get signal PAS_FML_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_FML_PDC(buf)                                                                            \
    (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x03) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_FML_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_FML_PDC(buf, val)                                                                       \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 2) & 0x03) << 0;                                                                   \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_FML_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_FML_PDC(buf) SET_PAS_DistofFMLR_PAS_FML_PDC(buf, 0)

/**
 * Signal PAS_FML_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_FML_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_FML_PDC raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_FML_PDC 0

/**
 * Signal PAS_FML_PDC raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_FML_PDC 0

/**
 * Signal PAS_FML_PDC raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_FML_PDC 7

/**
 * Signal PAS_FML_PDC raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_FML_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofFMLR_PAS_FML_PDC Value Table for Signal PAS_FML_PDC in Message PAS_DistofFMLR (0x318)
 *
 * Enum values defined for \ref SIG_PAS_DistofFMLR_PAS_FML_PDC.
 *
 * @ingroup SIG_PAS_DistofFMLR_PAS_FML_PDC
 */

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range 7

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_6 6

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_5 5

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_4 4

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_3 3

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_2 2

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_Range_1 1

/**
 * Value table PAS_DistofFMLR_PAS_FML_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FML_PDC
 */
#define PAS_DistofFMLR_PAS_FML_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance Signal PAS_Radar_FLS_Distance of Message PAS_DistofFMLR (0x318)
 *
 * parking radar in front left side distance
 * µ¹³µÀ×´ï×óÇ°Çø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_Radar_FLS_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_Radar_FLS_Distance and \ref GET_PAS_DistofFMLR_PAS_Radar_FLS_Distance instead.
 */
#define SIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance 1, 0, 3, 10

/**
 * Signal PAS_Radar_FLS_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_Radar_FLS_Distance 1, 0, 3, 10, 0

/**
 * Get signal PAS_Radar_FLS_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_Radar_FLS_Distance(buf)                                                                 \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[1] >> 2) & 0x3f) << 0))

/**
 * Set signal PAS_Radar_FLS_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_Radar_FLS_Distance(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0x0f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[1] &= ~(0x3f << 2);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PAS_Radar_FLS_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_Radar_FLS_Distance(buf) SET_PAS_DistofFMLR_PAS_Radar_FLS_Distance(buf, 0)

/**
 * Signal PAS_Radar_FLS_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_Radar_FLS_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_FLS_Distance raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_Radar_FLS_Distance 0

/**
 * Signal PAS_Radar_FLS_Distance raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_Radar_FLS_Distance 0

/**
 * Signal PAS_Radar_FLS_Distance raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_Radar_FLS_Distance 511

/**
 * Signal PAS_Radar_FLS_Distance raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_Radar_FLS_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofFMLR_PAS_FL_PDC Signal PAS_FL_PDC of Message PAS_DistofFMLR (0x318)
 *
 * Distance display  of parking radar in front left side
 * µ¹³µÀ×´ï×óÇ°Çø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofFMLR_PAS_FL_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofFMLR
 * @{
 */

/**
 * Signal PAS_FL_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofFMLR_PAS_FL_PDC and \ref GET_PAS_DistofFMLR_PAS_FL_PDC instead.
 */
#define SIG_PAS_DistofFMLR_PAS_FL_PDC 1, 0, 7, 4

/**
 * Signal PAS_FL_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofFMLR_PAS_FL_PDC or \ref INIT_PAS_DistofFMLR instead.
 */
#define SETUP_PAS_DistofFMLR_PAS_FL_PDC 1, 0, 7, 4, 0

/**
 * Get signal PAS_FL_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofFMLR_PAS_FL_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_FL_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofFMLR_PAS_FL_PDC(buf, val)                                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x0f << 4);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_FL_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofFMLR_PAS_FL_PDC(buf) SET_PAS_DistofFMLR_PAS_FL_PDC(buf, 0)

/**
 * Signal PAS_FL_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofFMLR_PAS_FL_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_FL_PDC raw initial value.
 */
#define START_PAS_DistofFMLR_PAS_FL_PDC 0

/**
 * Signal PAS_FL_PDC raw minimum value.
 */
#define MIN_PAS_DistofFMLR_PAS_FL_PDC 0

/**
 * Signal PAS_FL_PDC raw maximum value.
 */
#define MAX_PAS_DistofFMLR_PAS_FL_PDC 7

/**
 * Signal PAS_FL_PDC raw offset value.
 */
#define OFF_PAS_DistofFMLR_PAS_FL_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofFMLR_PAS_FL_PDC Value Table for Signal PAS_FL_PDC in Message PAS_DistofFMLR (0x318)
 *
 * Enum values defined for \ref SIG_PAS_DistofFMLR_PAS_FL_PDC.
 *
 * @ingroup SIG_PAS_DistofFMLR_PAS_FL_PDC
 */

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range 7

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_6 6

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_5 5

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_4 4

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_3 3

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_2 2

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_Range_1 1

/**
 * Value table PAS_DistofFMLR_PAS_FL_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofFMLR_PAS_FL_PDC
 */
#define PAS_DistofFMLR_PAS_FL_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_DistofRFR_Checksum Signal PAS_DistofRFR_Checksum of Message PAS_DistofRFR (0x317)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_DistofRFR_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_DistofRFR_Checksum and \ref GET_PAS_DistofRFR_PAS_DistofRFR_Checksum instead.
 */
#define SIG_PAS_DistofRFR_PAS_DistofRFR_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofRFR_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_DistofRFR_Checksum or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_DistofRFR_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofRFR_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_DistofRFR_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofRFR_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_DistofRFR_Checksum(buf, val)                                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofRFR_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_DistofRFR_Checksum(buf) SET_PAS_DistofRFR_PAS_DistofRFR_Checksum(buf, 0)

/**
 * Signal PAS_DistofRFR_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_DistofRFR_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRFR_Checksum raw initial value.
 */
#define START_PAS_DistofRFR_PAS_DistofRFR_Checksum 0

/**
 * Signal PAS_DistofRFR_Checksum raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_DistofRFR_Checksum 0

/**
 * Signal PAS_DistofRFR_Checksum raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_DistofRFR_Checksum 255

/**
 * Signal PAS_DistofRFR_Checksum raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_DistofRFR_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter Signal PAS_DistofRFR_RollingCounter of Message PAS_DistofRFR
 * (0x317)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_DistofRFR_RollingCounter configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_DistofRFR_RollingCounter and \ref GET_PAS_DistofRFR_PAS_DistofRFR_RollingCounter
 *instead.
 */
#define SIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 1, 0, 55, 4

/**
 * Signal PAS_DistofRFR_RollingCounter setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofRFR_RollingCounter from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofRFR_RollingCounter in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(buf, val)                                                       \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofRFR_RollingCounter in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(buf) SET_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(buf, 0)

/**
 * Signal PAS_DistofRFR_RollingCounter value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_DistofRFR_RollingCounter(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRFR_RollingCounter raw initial value.
 */
#define START_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 0

/**
 * Signal PAS_DistofRFR_RollingCounter raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 0

/**
 * Signal PAS_DistofRFR_RollingCounter raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 15

/**
 * Signal PAS_DistofRFR_RollingCounter raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_DistofRFR_RollingCounter 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_Radar_RR_Distance Signal PAS_Radar_RR_Distance of Message PAS_DistofRFR (0x317)
 *
 * parking radar in rear  right  side distance
 * µ¹³µÀ×´ïÓÒºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_Radar_RR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_Radar_RR_Distance and \ref GET_PAS_DistofRFR_PAS_Radar_RR_Distance instead.
 */
#define SIG_PAS_DistofRFR_PAS_Radar_RR_Distance 1, 0, 23, 10

/**
 * Signal PAS_Radar_RR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_Radar_RR_Distance or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_Radar_RR_Distance 1, 0, 23, 10, 0

/**
 * Get signal PAS_Radar_RR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_Radar_RR_Distance(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[3] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_RR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_Radar_RR_Distance(buf, val)                                                              \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[3] &= ~(0x03 << 6);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_RR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_Radar_RR_Distance(buf) SET_PAS_DistofRFR_PAS_Radar_RR_Distance(buf, 0)

/**
 * Signal PAS_Radar_RR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_Radar_RR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RR_Distance raw initial value.
 */
#define START_PAS_DistofRFR_PAS_Radar_RR_Distance 0

/**
 * Signal PAS_Radar_RR_Distance raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_Radar_RR_Distance 0

/**
 * Signal PAS_Radar_RR_Distance raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_Radar_RR_Distance 511

/**
 * Signal PAS_Radar_RR_Distance raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_Radar_RR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_PDC_MODE Signal PAS_PDC_MODE of Message PAS_DistofRFR (0x317)
 *
 * operation mode of parking distance control
 * µ¹³µÀ×´ïµÄ¹¤×÷Ä£Ê½
 *
 * Contains the value table \ref ENUM_PAS_DistofRFR_PAS_PDC_MODE.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_PDC_MODE configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_PDC_MODE and \ref GET_PAS_DistofRFR_PAS_PDC_MODE instead.
 */
#define SIG_PAS_DistofRFR_PAS_PDC_MODE 1, 0, 29, 4

/**
 * Signal PAS_PDC_MODE setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_PDC_MODE or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_PDC_MODE 1, 0, 29, 4, 0

/**
 * Get signal PAS_PDC_MODE from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_PDC_MODE(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x0f) << 0))

/**
 * Set signal PAS_PDC_MODE in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_PDC_MODE(buf, val)                                                                       \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 2;                                                                   \
    }

/**
 * Set signal PAS_PDC_MODE in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_PDC_MODE(buf) SET_PAS_DistofRFR_PAS_PDC_MODE(buf, 0)

/**
 * Signal PAS_PDC_MODE value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_PDC_MODE(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PDC_MODE raw initial value.
 */
#define START_PAS_DistofRFR_PAS_PDC_MODE 0

/**
 * Signal PAS_PDC_MODE raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_PDC_MODE 0

/**
 * Signal PAS_PDC_MODE raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_PDC_MODE 7

/**
 * Signal PAS_PDC_MODE raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_PDC_MODE 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFR_PAS_PDC_MODE Value Table for Signal PAS_PDC_MODE in Message PAS_DistofRFR (0x317)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFR_PAS_PDC_MODE.
 *
 * @ingroup SIG_PAS_DistofRFR_PAS_PDC_MODE
 */

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Standby.
 *
 * and Rear failure
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Standby 7

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Standby_6.
 *
 * and Front failure
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Standby_6 6

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry System.
 *
 * failure
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_System 5

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Rear.
 *
 * Active and Front failure
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Rear 4

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Front.
 *
 * Active and Rear failure
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Front 3

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Front_2.
 *
 * Rear Active
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Front_2 2

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Standby_1.
 *
 * (Power on and P gear)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Standby_1 1

/**
 * Value table PAS_DistofRFR_PAS_PDC_MODE entry Off.
 *
 * (Power off)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_PDC_MODE
 */
#define PAS_DistofRFR_PAS_PDC_MODE_Off 0

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_Radar_FR_Distance Signal PAS_Radar_FR_Distance of Message PAS_DistofRFR (0x317)
 *
 * parking radar in front right side distance
 * µ¹³µÀ×´ïÓÒÇ°Çø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_Radar_FR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_Radar_FR_Distance and \ref GET_PAS_DistofRFR_PAS_Radar_FR_Distance instead.
 */
#define SIG_PAS_DistofRFR_PAS_Radar_FR_Distance 1, 0, 4, 10

/**
 * Signal PAS_Radar_FR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_Radar_FR_Distance or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_Radar_FR_Distance 1, 0, 4, 10, 0

/**
 * Get signal PAS_Radar_FR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_Radar_FR_Distance(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 5) | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x1f) << 0))

/**
 * Set signal PAS_Radar_FR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_Radar_FR_Distance(buf, val)                                                              \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 5) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0x1f << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x1f) << 3;                                                                   \
    }

/**
 * Set signal PAS_Radar_FR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_Radar_FR_Distance(buf) SET_PAS_DistofRFR_PAS_Radar_FR_Distance(buf, 0)

/**
 * Signal PAS_Radar_FR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_Radar_FR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_FR_Distance raw initial value.
 */
#define START_PAS_DistofRFR_PAS_Radar_FR_Distance 0

/**
 * Signal PAS_Radar_FR_Distance raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_Radar_FR_Distance 0

/**
 * Signal PAS_Radar_FR_Distance raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_Radar_FR_Distance 511

/**
 * Signal PAS_Radar_FR_Distance raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_Radar_FR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_RR_PDC Signal PAS_RR_PDC of Message PAS_DistofRFR (0x317)
 *
 * Distance display  of parking radar in rear  right  side
 * µ¹³µÀ×´ïÓÒºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRFR_PAS_RR_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_RR_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_RR_PDC and \ref GET_PAS_DistofRFR_PAS_RR_PDC instead.
 */
#define SIG_PAS_DistofRFR_PAS_RR_PDC 1, 0, 10, 3

/**
 * Signal PAS_RR_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_RR_PDC or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_RR_PDC 1, 0, 10, 3, 0

/**
 * Get signal PAS_RR_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_RR_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PAS_RR_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_RR_PDC(buf, val)                                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PAS_RR_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_RR_PDC(buf) SET_PAS_DistofRFR_PAS_RR_PDC(buf, 0)

/**
 * Signal PAS_RR_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_RR_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RR_PDC raw initial value.
 */
#define START_PAS_DistofRFR_PAS_RR_PDC 0

/**
 * Signal PAS_RR_PDC raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_RR_PDC 0

/**
 * Signal PAS_RR_PDC raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_RR_PDC 7

/**
 * Signal PAS_RR_PDC raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_RR_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFR_PAS_RR_PDC Value Table for Signal PAS_RR_PDC in Message PAS_DistofRFR (0x317)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFR_PAS_RR_PDC.
 *
 * @ingroup SIG_PAS_DistofRFR_PAS_RR_PDC
 */

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range 7

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_6 6

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_5 5

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_4 4

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_3 3

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_2 2

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_Range_1 1

/**
 * Value table PAS_DistofRFR_PAS_RR_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_RR_PDC
 */
#define PAS_DistofRFR_PAS_RR_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRFR_PAS_FR_PDC Signal PAS_FR_PDC of Message PAS_DistofRFR (0x317)
 *
 * Distance display  of parking radar in front right side
 * µ¹³µÀ×´ïÓÒÇ°Çø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRFR_PAS_FR_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRFR
 * @{
 */

/**
 * Signal PAS_FR_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRFR_PAS_FR_PDC and \ref GET_PAS_DistofRFR_PAS_FR_PDC instead.
 */
#define SIG_PAS_DistofRFR_PAS_FR_PDC 1, 0, 7, 3

/**
 * Signal PAS_FR_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRFR_PAS_FR_PDC or \ref INIT_PAS_DistofRFR instead.
 */
#define SETUP_PAS_DistofRFR_PAS_FR_PDC 1, 0, 7, 3, 0

/**
 * Get signal PAS_FR_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRFR_PAS_FR_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x07) << 0))

/**
 * Set signal PAS_FR_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRFR_PAS_FR_PDC(buf, val)                                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PAS_FR_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRFR_PAS_FR_PDC(buf) SET_PAS_DistofRFR_PAS_FR_PDC(buf, 0)

/**
 * Signal PAS_FR_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRFR_PAS_FR_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_FR_PDC raw initial value.
 */
#define START_PAS_DistofRFR_PAS_FR_PDC 0

/**
 * Signal PAS_FR_PDC raw minimum value.
 */
#define MIN_PAS_DistofRFR_PAS_FR_PDC 0

/**
 * Signal PAS_FR_PDC raw maximum value.
 */
#define MAX_PAS_DistofRFR_PAS_FR_PDC 7

/**
 * Signal PAS_FR_PDC raw offset value.
 */
#define OFF_PAS_DistofRFR_PAS_FR_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRFR_PAS_FR_PDC Value Table for Signal PAS_FR_PDC in Message PAS_DistofRFR (0x317)
 *
 * Enum values defined for \ref SIG_PAS_DistofRFR_PAS_FR_PDC.
 *
 * @ingroup SIG_PAS_DistofRFR_PAS_FR_PDC
 */

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range.
 *
 * 7 (Reserved)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range 7

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_6.
 *
 * 6 (110<distance<=150cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_6 6

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_5.
 *
 * 5 (80<distance<=110cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_5 5

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_4 4

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_3 3

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_2 2

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_Range_1 1

/**
 * Value table PAS_DistofRFR_PAS_FR_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRFR_PAS_FR_PDC
 */
#define PAS_DistofRFR_PAS_FR_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_DistofRLR_Checksum Signal PAS_DistofRLR_Checksum of Message PAS_DistofRLR (0x327)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_DistofRLR_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_DistofRLR_Checksum and \ref GET_PAS_DistofRLR_PAS_DistofRLR_Checksum instead.
 */
#define SIG_PAS_DistofRLR_PAS_DistofRLR_Checksum 1, 0, 63, 8

/**
 * Signal PAS_DistofRLR_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_DistofRLR_Checksum or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_DistofRLR_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_DistofRLR_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_DistofRLR_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_DistofRLR_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_DistofRLR_Checksum(buf, val)                                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_DistofRLR_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_DistofRLR_Checksum(buf) SET_PAS_DistofRLR_PAS_DistofRLR_Checksum(buf, 0)

/**
 * Signal PAS_DistofRLR_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_DistofRLR_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRLR_Checksum raw initial value.
 */
#define START_PAS_DistofRLR_PAS_DistofRLR_Checksum 0

/**
 * Signal PAS_DistofRLR_Checksum raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_DistofRLR_Checksum 0

/**
 * Signal PAS_DistofRLR_Checksum raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_DistofRLR_Checksum 255

/**
 * Signal PAS_DistofRLR_Checksum raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_DistofRLR_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt Signal PAS_DistofRLR_RollCnt of Message PAS_DistofRLR (0x327)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_DistofRLR_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_DistofRLR_RollCnt and \ref GET_PAS_DistofRLR_PAS_DistofRLR_RollCnt instead.
 */
#define SIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_DistofRLR_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_DistofRLR_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_DistofRLR_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_DistofRLR_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_DistofRLR_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_DistofRLR_RollCnt(buf, val)                                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_DistofRLR_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_DistofRLR_RollCnt(buf) SET_PAS_DistofRLR_PAS_DistofRLR_RollCnt(buf, 0)

/**
 * Signal PAS_DistofRLR_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_DistofRLR_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_DistofRLR_RollCnt raw initial value.
 */
#define START_PAS_DistofRLR_PAS_DistofRLR_RollCnt 0

/**
 * Signal PAS_DistofRLR_RollCnt raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_DistofRLR_RollCnt 0

/**
 * Signal PAS_DistofRLR_RollCnt raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_DistofRLR_RollCnt 15

/**
 * Signal PAS_DistofRLR_RollCnt raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_DistofRLR_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_Radar_LSR_Distance Signal PAS_Radar_LSR_Distance of Message PAS_DistofRLR (0x327)
 *
 *  parking radar in left side rear (×ó²àºóÇøÓò) distance
 * µ¹³µÀ×´ï×ó²àºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_Radar_LSR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_Radar_LSR_Distance and \ref GET_PAS_DistofRLR_PAS_Radar_LSR_Distance instead.
 */
#define SIG_PAS_DistofRLR_PAS_Radar_LSR_Distance 1, 0, 23, 10

/**
 * Signal PAS_Radar_LSR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_Radar_LSR_Distance or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_Radar_LSR_Distance 1, 0, 23, 10, 0

/**
 * Get signal PAS_Radar_LSR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_Radar_LSR_Distance(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[3] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_Radar_LSR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_Radar_LSR_Distance(buf, val)                                                             \
    {                                                                                                                  \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[3] &= ~(0x03 << 6);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_Radar_LSR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_Radar_LSR_Distance(buf) SET_PAS_DistofRLR_PAS_Radar_LSR_Distance(buf, 0)

/**
 * Signal PAS_Radar_LSR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_Radar_LSR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_LSR_Distance raw initial value.
 */
#define START_PAS_DistofRLR_PAS_Radar_LSR_Distance 0

/**
 * Signal PAS_Radar_LSR_Distance raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_Radar_LSR_Distance 0

/**
 * Signal PAS_Radar_LSR_Distance raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_Radar_LSR_Distance 511

/**
 * Signal PAS_Radar_LSR_Distance raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_Radar_LSR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_Radar_RSR_Distance Signal PAS_Radar_RSR_Distance of Message PAS_DistofRLR (0x327)
 *
 * parking radar in right side rear (ÓÒ²àºóÇøÓò) distance
 * µ¹³µÀ×´ïÓÒ²àºóÇø¾àÀë
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_Radar_RSR_Distance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_Radar_RSR_Distance and \ref GET_PAS_DistofRLR_PAS_Radar_RSR_Distance instead.
 */
#define SIG_PAS_DistofRLR_PAS_Radar_RSR_Distance 1, 0, 4, 10

/**
 * Signal PAS_Radar_RSR_Distance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_Radar_RSR_Distance or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_Radar_RSR_Distance 1, 0, 4, 10, 0

/**
 * Get signal PAS_Radar_RSR_Distance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_Radar_RSR_Distance(buf)                                                                  \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0x1f) << 5) | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x1f) << 0))

/**
 * Set signal PAS_Radar_RSR_Distance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_Radar_RSR_Distance(buf, val)                                                             \
    {                                                                                                                  \
        buf[0] &= ~(0x1f << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 5) & 0x1f) << 0;                                                            \
        buf[1] &= ~(0x1f << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x1f) << 3;                                                                   \
    }

/**
 * Set signal PAS_Radar_RSR_Distance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_Radar_RSR_Distance(buf) SET_PAS_DistofRLR_PAS_Radar_RSR_Distance(buf, 0)

/**
 * Signal PAS_Radar_RSR_Distance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_Radar_RSR_Distance(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Radar_RSR_Distance raw initial value.
 */
#define START_PAS_DistofRLR_PAS_Radar_RSR_Distance 0

/**
 * Signal PAS_Radar_RSR_Distance raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_Radar_RSR_Distance 0

/**
 * Signal PAS_Radar_RSR_Distance raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_Radar_RSR_Distance 511

/**
 * Signal PAS_Radar_RSR_Distance raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_Radar_RSR_Distance 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_LSR_PDC Signal PAS_LSR_PDC of Message PAS_DistofRLR (0x327)
 *
 * Distance display of parking radar in left side rear -Just obstacle tracking
 * µ¹³µÀ×´ï×ó²àºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRLR_PAS_LSR_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_LSR_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_LSR_PDC and \ref GET_PAS_DistofRLR_PAS_LSR_PDC instead.
 */
#define SIG_PAS_DistofRLR_PAS_LSR_PDC 1, 0, 10, 3

/**
 * Signal PAS_LSR_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_LSR_PDC or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_LSR_PDC 1, 0, 10, 3, 0

/**
 * Get signal PAS_LSR_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_LSR_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PAS_LSR_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_LSR_PDC(buf, val)                                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PAS_LSR_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_LSR_PDC(buf) SET_PAS_DistofRLR_PAS_LSR_PDC(buf, 0)

/**
 * Signal PAS_LSR_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_LSR_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_LSR_PDC raw initial value.
 */
#define START_PAS_DistofRLR_PAS_LSR_PDC 0

/**
 * Signal PAS_LSR_PDC raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_LSR_PDC 0

/**
 * Signal PAS_LSR_PDC raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_LSR_PDC 7

/**
 * Signal PAS_LSR_PDC raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_LSR_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRLR_PAS_LSR_PDC Value Table for Signal PAS_LSR_PDC in Message PAS_DistofRLR (0x327)
 *
 * Enum values defined for \ref SIG_PAS_DistofRLR_PAS_LSR_PDC.
 *
 * @ingroup SIG_PAS_DistofRLR_PAS_LSR_PDC
 */

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_Range 5

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_Range_4 4

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_Range_3 3

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_Range_2 2

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_Range_1 1

/**
 * Value table PAS_DistofRLR_PAS_LSR_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_LSR_PDC
 */
#define PAS_DistofRLR_PAS_LSR_PDC_No 0

/**
 * @defgroup SIG_PAS_DistofRLR_PAS_RSR_PDC Signal PAS_RSR_PDC of Message PAS_DistofRLR (0x327)
 *
 * Distance display of parking radar in right side rear -Just obstacle tracking
 * µ¹³µÀ×´ïÓÒ²àºóÇø¾àÀëÏÔÊ¾
 *
 * Contains the value table \ref ENUM_PAS_DistofRLR_PAS_RSR_PDC.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_DistofRLR
 * @{
 */

/**
 * Signal PAS_RSR_PDC configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_DistofRLR_PAS_RSR_PDC and \ref GET_PAS_DistofRLR_PAS_RSR_PDC instead.
 */
#define SIG_PAS_DistofRLR_PAS_RSR_PDC 1, 0, 7, 3

/**
 * Signal PAS_RSR_PDC setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_DistofRLR_PAS_RSR_PDC or \ref INIT_PAS_DistofRLR instead.
 */
#define SETUP_PAS_DistofRLR_PAS_RSR_PDC 1, 0, 7, 3, 0

/**
 * Get signal PAS_RSR_PDC from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_DistofRLR_PAS_RSR_PDC(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x07) << 0))

/**
 * Set signal PAS_RSR_PDC in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_DistofRLR_PAS_RSR_PDC(buf, val)                                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PAS_RSR_PDC in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_DistofRLR_PAS_RSR_PDC(buf) SET_PAS_DistofRLR_PAS_RSR_PDC(buf, 0)

/**
 * Signal PAS_RSR_PDC value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_DistofRLR_PAS_RSR_PDC(x, fmt) ((x)*fmt)

/**
 * Signal PAS_RSR_PDC raw initial value.
 */
#define START_PAS_DistofRLR_PAS_RSR_PDC 0

/**
 * Signal PAS_RSR_PDC raw minimum value.
 */
#define MIN_PAS_DistofRLR_PAS_RSR_PDC 0

/**
 * Signal PAS_RSR_PDC raw maximum value.
 */
#define MAX_PAS_DistofRLR_PAS_RSR_PDC 7

/**
 * Signal PAS_RSR_PDC raw offset value.
 */
#define OFF_PAS_DistofRLR_PAS_RSR_PDC 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_DistofRLR_PAS_RSR_PDC Value Table for Signal PAS_RSR_PDC in Message PAS_DistofRLR (0x327)
 *
 * Enum values defined for \ref SIG_PAS_DistofRLR_PAS_RSR_PDC.
 *
 * @ingroup SIG_PAS_DistofRLR_PAS_RSR_PDC
 */

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry Range.
 *
 * 5 (80<distance<=100cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_Range 5

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry Range_4.
 *
 * 4 (55<distance<=80cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_Range_4 4

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry Range_3.
 *
 * 3 (35<distance<=55cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_Range_3 3

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry Range_2.
 *
 * 2 (25<distance<=35cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_Range_2 2

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry Range_1.
 *
 * 1 (distance<=25cm)
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_Range_1 1

/**
 * Value table PAS_DistofRLR_PAS_RSR_PDC entry No.
 *
 * Distance
 *
 * @ingroup ENUM_PAS_DistofRLR_PAS_RSR_PDC
 */
#define PAS_DistofRLR_PAS_RSR_PDC_No 0

/**
 * @defgroup SIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear Signal PAS_SDW_Side_Zone_Status_Rear of Message PAS_SDW (0x2a6)
 *
 * Status for the Rear Side Zone of PAS_SDW
 *
 * Contains the value table \ref ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SDW
 * @{
 */

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear and \ref GET_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear instead.
 */
#define SIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 1, 0, 7, 2

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear or \ref INIT_PAS_SDW instead.
 */
#define SETUP_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 1, 0, 7, 2, 0

/**
 * Get signal PAS_SDW_Side_Zone_Status_Rear from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_SDW_Side_Zone_Status_Rear in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 6);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_SDW_Side_Zone_Status_Rear in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(buf) SET_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(buf, 0)

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear raw initial value.
 */
#define START_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 0

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear raw minimum value.
 */
#define MIN_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 0

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear raw maximum value.
 */
#define MAX_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 3

/**
 * Signal PAS_SDW_Side_Zone_Status_Rear raw offset value.
 */
#define OFF_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear Value Table for Signal PAS_SDW_Side_Zone_Status_Rear in Message
 * PAS_SDW (0x2a6)
 *
 * Enum values defined for \ref SIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear.
 *
 * @ingroup SIG_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 */

/**
 * Value table PAS_SDW_PAS_SDW_Side_Zone_Status_Rear entry Left.
 *
 * and Right
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 */
#define PAS_SDW_PAS_SDW_Side_Zone_Status_Rear_Left 3

/**
 * Value table PAS_SDW_PAS_SDW_Side_Zone_Status_Rear entry Right.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 */
#define PAS_SDW_PAS_SDW_Side_Zone_Status_Rear_Right 2

/**
 * Value table PAS_SDW_PAS_SDW_Side_Zone_Status_Rear entry Left_1.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 */
#define PAS_SDW_PAS_SDW_Side_Zone_Status_Rear_Left_1 1

/**
 * Value table PAS_SDW_PAS_SDW_Side_Zone_Status_Rear entry None.
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_Side_Zone_Status_Rear
 */
#define PAS_SDW_PAS_SDW_Side_Zone_Status_Rear_None 0

/**
 * @defgroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_Front Signal PAS_SDW_SideZone_Status_Front of Message PAS_SDW (0x2a6)
 *
 * Status for the Front Side Zone of PAS_SDW
 *
 * Contains the value table \ref ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SDW
 * @{
 */

/**
 * Signal PAS_SDW_SideZone_Status_Front configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SDW_PAS_SDW_SideZone_Status_Front and \ref GET_PAS_SDW_PAS_SDW_SideZone_Status_Front instead.
 */
#define SIG_PAS_SDW_PAS_SDW_SideZone_Status_Front 1, 0, 5, 2

/**
 * Signal PAS_SDW_SideZone_Status_Front setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_Front or \ref INIT_PAS_SDW instead.
 */
#define SETUP_PAS_SDW_PAS_SDW_SideZone_Status_Front 1, 0, 5, 2, 0

/**
 * Get signal PAS_SDW_SideZone_Status_Front from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SDW_PAS_SDW_SideZone_Status_Front(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 4) & 0x03) << 0))

/**
 * Set signal PAS_SDW_SideZone_Status_Front in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SDW_PAS_SDW_SideZone_Status_Front(buf, val)                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 4);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 4;                                                                   \
    }

/**
 * Set signal PAS_SDW_SideZone_Status_Front in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_Front(buf) SET_PAS_SDW_PAS_SDW_SideZone_Status_Front(buf, 0)

/**
 * Signal PAS_SDW_SideZone_Status_Front value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SDW_PAS_SDW_SideZone_Status_Front(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SDW_SideZone_Status_Front raw initial value.
 */
#define START_PAS_SDW_PAS_SDW_SideZone_Status_Front 0

/**
 * Signal PAS_SDW_SideZone_Status_Front raw minimum value.
 */
#define MIN_PAS_SDW_PAS_SDW_SideZone_Status_Front 0

/**
 * Signal PAS_SDW_SideZone_Status_Front raw maximum value.
 */
#define MAX_PAS_SDW_PAS_SDW_SideZone_Status_Front 3

/**
 * Signal PAS_SDW_SideZone_Status_Front raw offset value.
 */
#define OFF_PAS_SDW_PAS_SDW_SideZone_Status_Front 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front Value Table for Signal PAS_SDW_SideZone_Status_Front in Message
 * PAS_SDW (0x2a6)
 *
 * Enum values defined for \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_Front.
 *
 * @ingroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_Front
 */

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_Front entry Left.
 *
 * and Right
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_Front_Left 3

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_Front entry Right.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_Front_Right 2

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_Front entry Left_1.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_Front_Left_1 1

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_Front entry None.
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_Front
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_Front_None 0

/**
 * @defgroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid Signal PAS_SDW_SideZone_Status_RearMid of Message PAS_SDW
 * (0x2a6)
 *
 * Status for the Rear Middle Side Zone of PAS_SDW
 *
 * Contains the value table \ref ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SDW
 * @{
 */

/**
 * Signal PAS_SDW_SideZone_Status_RearMid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SDW_PAS_SDW_SideZone_Status_RearMid and \ref GET_PAS_SDW_PAS_SDW_SideZone_Status_RearMid instead.
 */
#define SIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 1, 0, 3, 2

/**
 * Signal PAS_SDW_SideZone_Status_RearMid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid or \ref INIT_PAS_SDW instead.
 */
#define SETUP_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 1, 0, 3, 2, 0

/**
 * Get signal PAS_SDW_SideZone_Status_RearMid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 2) & 0x03) << 0))

/**
 * Set signal PAS_SDW_SideZone_Status_RearMid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(buf, val)                                                          \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 2);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 2;                                                                   \
    }

/**
 * Set signal PAS_SDW_SideZone_Status_RearMid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(buf) SET_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(buf, 0)

/**
 * Signal PAS_SDW_SideZone_Status_RearMid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SDW_PAS_SDW_SideZone_Status_RearMid(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SDW_SideZone_Status_RearMid raw initial value.
 */
#define START_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 0

/**
 * Signal PAS_SDW_SideZone_Status_RearMid raw minimum value.
 */
#define MIN_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 0

/**
 * Signal PAS_SDW_SideZone_Status_RearMid raw maximum value.
 */
#define MAX_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 3

/**
 * Signal PAS_SDW_SideZone_Status_RearMid raw offset value.
 */
#define OFF_PAS_SDW_PAS_SDW_SideZone_Status_RearMid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid Value Table for Signal PAS_SDW_SideZone_Status_RearMid in
 * Message PAS_SDW (0x2a6)
 *
 * Enum values defined for \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid.
 *
 * @ingroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 */

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_RearMid entry Left.
 *
 * and Right
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_RearMid_Left 3

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_RearMid entry Right.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_RearMid_Right 2

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_RearMid entry Left_1.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_RearMid_Left_1 1

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_RearMid entry None.
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_RearMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_RearMid_None 0

/**
 * @defgroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid Signal PAS_SDW_SideZone_Status_FrontMid of Message PAS_SDW
 * (0x2a6)
 *
 * Status for the Front Middle Side Zone of PAS_SDW
 *
 * Contains the value table \ref ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SDW
 * @{
 */

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid and \ref GET_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid instead.
 */
#define SIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 1, 0, 1, 2

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid or \ref INIT_PAS_SDW instead.
 */
#define SETUP_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 1, 0, 1, 2, 0

/**
 * Get signal PAS_SDW_SideZone_Status_FrontMid from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0))

/**
 * Set signal PAS_SDW_SideZone_Status_FrontMid in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal PAS_SDW_SideZone_Status_FrontMid in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(buf) SET_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(buf, 0)

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid raw initial value.
 */
#define START_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 0

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid raw minimum value.
 */
#define MIN_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 0

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid raw maximum value.
 */
#define MAX_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 3

/**
 * Signal PAS_SDW_SideZone_Status_FrontMid raw offset value.
 */
#define OFF_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid Value Table for Signal PAS_SDW_SideZone_Status_FrontMid in
 * Message PAS_SDW (0x2a6)
 *
 * Enum values defined for \ref SIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid.
 *
 * @ingroup SIG_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 */

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_FrontMid entry Left.
 *
 * and Right
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_FrontMid_Left 3

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_FrontMid entry Right.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_FrontMid_Right 2

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_FrontMid entry Left_1.
 *
 * (Reserved)
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_FrontMid_Left_1 1

/**
 * Value table PAS_SDW_PAS_SDW_SideZone_Status_FrontMid entry None.
 *
 * @ingroup ENUM_PAS_SDW_PAS_SDW_SideZone_Status_FrontMid
 */
#define PAS_SDW_PAS_SDW_SideZone_Status_FrontMid_None 0

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_12 Signal USS_DE_12 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_12 and \ref GET_PAS_Olo_R_DE_USS_DE_12 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_12 1, 0, 53, 10

/**
 * Signal USS_DE_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_12 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_12 1, 0, 53, 10, 0

/**
 * Get signal USS_DE_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_12(buf)                                                                                \
    (0 | (uword)(+(uword)((buf[6] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[7] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_DE_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_12(buf, val)                                                                           \
    {                                                                                                                  \
        buf[6] &= ~(0x3f << 0);                                                                                        \
        buf[6] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[7] &= ~(0x0f << 4);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_DE_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_12(buf) SET_PAS_Olo_R_DE_USS_DE_12(buf, 0)

/**
 * Signal USS_DE_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_12(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_12 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_12 0

/**
 * Signal USS_DE_12 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_12 0

/**
 * Signal USS_DE_12 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_12 511

/**
 * Signal USS_DE_12 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_12 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_11 Signal USS_DE_11 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_11 and \ref GET_PAS_Olo_R_DE_USS_DE_11 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_11 1, 0, 47, 10

/**
 * Signal USS_DE_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_11 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_11 1, 0, 47, 10, 0

/**
 * Get signal USS_DE_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_11(buf)                                                                                \
    (0 | (uword)(+(uword)((buf[5] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[6] >> 6) & 0x03) << 0))

/**
 * Set signal USS_DE_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_11(buf, val)                                                                           \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[6] &= ~(0x03 << 6);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_DE_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_11(buf) SET_PAS_Olo_R_DE_USS_DE_11(buf, 0)

/**
 * Signal USS_DE_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_11(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_11 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_11 0

/**
 * Signal USS_DE_11 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_11 0

/**
 * Signal USS_DE_11 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_11 511

/**
 * Signal USS_DE_11 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_11 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_10 Signal USS_DE_10 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_10 and \ref GET_PAS_Olo_R_DE_USS_DE_10 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_10 1, 0, 25, 10

/**
 * Signal USS_DE_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_10 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_10 1, 0, 25, 10, 0

/**
 * Get signal USS_DE_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_10(buf)                                                                                \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal USS_DE_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_10(buf, val)                                                                           \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal USS_DE_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_10(buf) SET_PAS_Olo_R_DE_USS_DE_10(buf, 0)

/**
 * Signal USS_DE_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_10(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_10 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_10 0

/**
 * Signal USS_DE_10 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_10 0

/**
 * Signal USS_DE_10 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_10 511

/**
 * Signal USS_DE_10 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_10 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_9 Signal USS_DE_9 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_9 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_9 and \ref GET_PAS_Olo_R_DE_USS_DE_9 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_9 1, 0, 19, 10

/**
 * Signal USS_DE_9 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_9 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_9 1, 0, 19, 10, 0

/**
 * Get signal USS_DE_9 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_9(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x3f) << 0))

/**
 * Set signal USS_DE_9 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_9(buf, val)                                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x0f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[3] &= ~(0x3f << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal USS_DE_9 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_9(buf) SET_PAS_Olo_R_DE_USS_DE_9(buf, 0)

/**
 * Signal USS_DE_9 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_9(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_9 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_9 0

/**
 * Signal USS_DE_9 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_9 0

/**
 * Signal USS_DE_9 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_9 511

/**
 * Signal USS_DE_9 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_9 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_8 Signal USS_DE_8 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_8 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_8 and \ref GET_PAS_Olo_R_DE_USS_DE_8 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_8 1, 0, 13, 10

/**
 * Signal USS_DE_8 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_8 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_8 1, 0, 13, 10, 0

/**
 * Get signal USS_DE_8 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_8(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_DE_8 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_8(buf, val)                                                                            \
    {                                                                                                                  \
        buf[1] &= ~(0x3f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[2] &= ~(0x0f << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_DE_8 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_8(buf) SET_PAS_Olo_R_DE_USS_DE_8(buf, 0)

/**
 * Signal USS_DE_8 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_8(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_8 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_8 0

/**
 * Signal USS_DE_8 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_8 0

/**
 * Signal USS_DE_8 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_8 511

/**
 * Signal USS_DE_8 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_8 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_DE_USS_DE_7 Signal USS_DE_7 of Message PAS_Olo_R_DE (0x286)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_DE
 * @{
 */

/**
 * Signal USS_DE_7 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_DE_USS_DE_7 and \ref GET_PAS_Olo_R_DE_USS_DE_7 instead.
 */
#define SIG_PAS_Olo_R_DE_USS_DE_7 1, 0, 7, 10

/**
 * Signal USS_DE_7 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_DE_USS_DE_7 or \ref INIT_PAS_Olo_R_DE instead.
 */
#define SETUP_PAS_Olo_R_DE_USS_DE_7 1, 0, 7, 10, 0

/**
 * Get signal USS_DE_7 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_DE_USS_DE_7(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal USS_DE_7 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_DE_USS_DE_7(buf, val)                                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_DE_7 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_DE_USS_DE_7(buf) SET_PAS_Olo_R_DE_USS_DE_7(buf, 0)

/**
 * Signal USS_DE_7 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_DE_USS_DE_7(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_7 raw initial value.
 */
#define START_PAS_Olo_R_DE_USS_DE_7 0

/**
 * Signal USS_DE_7 raw minimum value.
 */
#define MIN_PAS_Olo_R_DE_USS_DE_7 0

/**
 * Signal USS_DE_7 raw maximum value.
 */
#define MAX_PAS_Olo_R_DE_USS_DE_7 511

/**
 * Signal USS_DE_7 raw offset value.
 */
#define OFF_PAS_Olo_R_DE_USS_DE_7 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_6 Signal USS_DE_6 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_6 and \ref GET_PAS_Olo_F_DE_USS_DE_6 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_6 1, 0, 53, 10

/**
 * Signal USS_DE_6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_6 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_6 1, 0, 53, 10, 0

/**
 * Get signal USS_DE_6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_6(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[6] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[7] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_DE_6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_6(buf, val)                                                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x3f << 0);                                                                                        \
        buf[6] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[7] &= ~(0x0f << 4);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_DE_6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_6(buf) SET_PAS_Olo_F_DE_USS_DE_6(buf, 0)

/**
 * Signal USS_DE_6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_6(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_6 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_6 0

/**
 * Signal USS_DE_6 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_6 0

/**
 * Signal USS_DE_6 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_6 511

/**
 * Signal USS_DE_6 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_6 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_5 Signal USS_DE_5 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_5 and \ref GET_PAS_Olo_F_DE_USS_DE_5 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_5 1, 0, 47, 10

/**
 * Signal USS_DE_5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_5 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_5 1, 0, 47, 10, 0

/**
 * Get signal USS_DE_5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_5(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[5] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[6] >> 6) & 0x03) << 0))

/**
 * Set signal USS_DE_5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_5(buf, val)                                                                            \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[6] &= ~(0x03 << 6);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_DE_5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_5(buf) SET_PAS_Olo_F_DE_USS_DE_5(buf, 0)

/**
 * Signal USS_DE_5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_5(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_5 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_5 0

/**
 * Signal USS_DE_5 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_5 0

/**
 * Signal USS_DE_5 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_5 511

/**
 * Signal USS_DE_5 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_5 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_4 Signal USS_DE_4 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_4 and \ref GET_PAS_Olo_F_DE_USS_DE_4 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_4 1, 0, 25, 10

/**
 * Signal USS_DE_4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_4 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_4 1, 0, 25, 10, 0

/**
 * Get signal USS_DE_4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_4(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal USS_DE_4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_4(buf, val)                                                                            \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal USS_DE_4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_4(buf) SET_PAS_Olo_F_DE_USS_DE_4(buf, 0)

/**
 * Signal USS_DE_4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_4(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_4 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_4 0

/**
 * Signal USS_DE_4 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_4 0

/**
 * Signal USS_DE_4 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_4 511

/**
 * Signal USS_DE_4 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_4 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_3 Signal USS_DE_3 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_3 and \ref GET_PAS_Olo_F_DE_USS_DE_3 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_3 1, 0, 19, 10

/**
 * Signal USS_DE_3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_3 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_3 1, 0, 19, 10, 0

/**
 * Get signal USS_DE_3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_3(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x3f) << 0))

/**
 * Set signal USS_DE_3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_3(buf, val)                                                                            \
    {                                                                                                                  \
        buf[2] &= ~(0x0f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[3] &= ~(0x3f << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal USS_DE_3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_3(buf) SET_PAS_Olo_F_DE_USS_DE_3(buf, 0)

/**
 * Signal USS_DE_3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_3(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_3 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_3 0

/**
 * Signal USS_DE_3 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_3 0

/**
 * Signal USS_DE_3 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_3 511

/**
 * Signal USS_DE_3 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_3 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_2 Signal USS_DE_2 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_2 and \ref GET_PAS_Olo_F_DE_USS_DE_2 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_2 1, 0, 13, 10

/**
 * Signal USS_DE_2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_2 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_2 1, 0, 13, 10, 0

/**
 * Get signal USS_DE_2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_2(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_DE_2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_2(buf, val)                                                                            \
    {                                                                                                                  \
        buf[1] &= ~(0x3f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[2] &= ~(0x0f << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_DE_2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_2(buf) SET_PAS_Olo_F_DE_USS_DE_2(buf, 0)

/**
 * Signal USS_DE_2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_2(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_2 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_2 0

/**
 * Signal USS_DE_2 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_2 0

/**
 * Signal USS_DE_2 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_2 511

/**
 * Signal USS_DE_2 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_2 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_DE_USS_DE_1 Signal USS_DE_1 of Message PAS_Olo_F_DE (0x276)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_DE
 * @{
 */

/**
 * Signal USS_DE_1 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_DE_USS_DE_1 and \ref GET_PAS_Olo_F_DE_USS_DE_1 instead.
 */
#define SIG_PAS_Olo_F_DE_USS_DE_1 1, 0, 7, 10

/**
 * Signal USS_DE_1 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_DE_USS_DE_1 or \ref INIT_PAS_Olo_F_DE instead.
 */
#define SETUP_PAS_Olo_F_DE_USS_DE_1 1, 0, 7, 10, 0

/**
 * Get signal USS_DE_1 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_DE_USS_DE_1(buf)                                                                                 \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal USS_DE_1 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_DE_USS_DE_1(buf, val)                                                                            \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_DE_1 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_DE_USS_DE_1(buf) SET_PAS_Olo_F_DE_USS_DE_1(buf, 0)

/**
 * Signal USS_DE_1 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_DE_USS_DE_1(x, fmt) ((x)*fmt)

/**
 * Signal USS_DE_1 raw initial value.
 */
#define START_PAS_Olo_F_DE_USS_DE_1 0

/**
 * Signal USS_DE_1 raw minimum value.
 */
#define MIN_PAS_Olo_F_DE_USS_DE_1 0

/**
 * Signal USS_DE_1 raw maximum value.
 */
#define MAX_PAS_Olo_F_DE_USS_DE_1 511

/**
 * Signal USS_DE_1 raw offset value.
 */
#define OFF_PAS_Olo_F_DE_USS_DE_1 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 Signal USS_CE_DistCalcu_11_12 of Message PAS_Olo_R_CE (0x266)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_11_12 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 and \ref GET_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 instead.
 */
#define SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 1, 0, 47, 10

/**
 * Signal USS_CE_DistCalcu_11_12 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 or \ref INIT_PAS_Olo_R_CE instead.
 */
#define SETUP_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 1, 0, 47, 10, 0

/**
 * Get signal USS_CE_DistCalcu_11_12 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[5] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[6] >> 6) & 0x03) << 0))

/**
 * Set signal USS_CE_DistCalcu_11_12 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(buf, val)                                                              \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[6] &= ~(0x03 << 6);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_11_12 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(buf) SET_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(buf, 0)

/**
 * Signal USS_CE_DistCalcu_11_12 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_11_12 raw initial value.
 */
#define START_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 0

/**
 * Signal USS_CE_DistCalcu_11_12 raw minimum value.
 */
#define MIN_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 0

/**
 * Signal USS_CE_DistCalcu_11_12 raw maximum value.
 */
#define MAX_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 511

/**
 * Signal USS_CE_DistCalcu_11_12 raw offset value.
 */
#define OFF_PAS_Olo_R_CE_USS_CE_DistCalcu_11_12 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 Signal USS_CE_DistCalcu_10_11 of Message PAS_Olo_R_CE (0x266)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_10_11 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 and \ref GET_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 instead.
 */
#define SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 1, 0, 25, 10

/**
 * Signal USS_CE_DistCalcu_10_11 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 or \ref INIT_PAS_Olo_R_CE instead.
 */
#define SETUP_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 1, 0, 25, 10, 0

/**
 * Get signal USS_CE_DistCalcu_10_11 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal USS_CE_DistCalcu_10_11 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(buf, val)                                                              \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_10_11 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(buf) SET_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(buf, 0)

/**
 * Signal USS_CE_DistCalcu_10_11 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_10_11 raw initial value.
 */
#define START_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 0

/**
 * Signal USS_CE_DistCalcu_10_11 raw minimum value.
 */
#define MIN_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 0

/**
 * Signal USS_CE_DistCalcu_10_11 raw maximum value.
 */
#define MAX_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 511

/**
 * Signal USS_CE_DistCalcu_10_11 raw offset value.
 */
#define OFF_PAS_Olo_R_CE_USS_CE_DistCalcu_10_11 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 Signal USS_CE_DistCalcu_9_10 of Message PAS_Olo_R_CE (0x266)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_9_10 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 and \ref GET_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 instead.
 */
#define SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 1, 0, 19, 10

/**
 * Signal USS_CE_DistCalcu_9_10 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 or \ref INIT_PAS_Olo_R_CE instead.
 */
#define SETUP_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 1, 0, 19, 10, 0

/**
 * Get signal USS_CE_DistCalcu_9_10 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(buf)                                                                    \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x3f) << 0))

/**
 * Set signal USS_CE_DistCalcu_9_10 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(buf, val)                                                               \
    {                                                                                                                  \
        buf[2] &= ~(0x0f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[3] &= ~(0x3f << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_9_10 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(buf) SET_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(buf, 0)

/**
 * Signal USS_CE_DistCalcu_9_10 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_9_10 raw initial value.
 */
#define START_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 0

/**
 * Signal USS_CE_DistCalcu_9_10 raw minimum value.
 */
#define MIN_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 0

/**
 * Signal USS_CE_DistCalcu_9_10 raw maximum value.
 */
#define MAX_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 511

/**
 * Signal USS_CE_DistCalcu_9_10 raw offset value.
 */
#define OFF_PAS_Olo_R_CE_USS_CE_DistCalcu_9_10 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 Signal USS_CE_DistCalcu_8_9 of Message PAS_Olo_R_CE (0x266)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_8_9 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 and \ref GET_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 instead.
 */
#define SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 1, 0, 13, 10

/**
 * Signal USS_CE_DistCalcu_8_9 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 or \ref INIT_PAS_Olo_R_CE instead.
 */
#define SETUP_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 1, 0, 13, 10, 0

/**
 * Get signal USS_CE_DistCalcu_8_9 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_CE_DistCalcu_8_9 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(buf, val)                                                                \
    {                                                                                                                  \
        buf[1] &= ~(0x3f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[2] &= ~(0x0f << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_8_9 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(buf) SET_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(buf, 0)

/**
 * Signal USS_CE_DistCalcu_8_9 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_8_9 raw initial value.
 */
#define START_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 0

/**
 * Signal USS_CE_DistCalcu_8_9 raw minimum value.
 */
#define MIN_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 0

/**
 * Signal USS_CE_DistCalcu_8_9 raw maximum value.
 */
#define MAX_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 511

/**
 * Signal USS_CE_DistCalcu_8_9 raw offset value.
 */
#define OFF_PAS_Olo_R_CE_USS_CE_DistCalcu_8_9 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 Signal USS_CE_DistCalcu_7_8 of Message PAS_Olo_R_CE (0x266)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_R_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_7_8 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 and \ref GET_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 instead.
 */
#define SIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 1, 0, 7, 10

/**
 * Signal USS_CE_DistCalcu_7_8 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 or \ref INIT_PAS_Olo_R_CE instead.
 */
#define SETUP_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 1, 0, 7, 10, 0

/**
 * Get signal USS_CE_DistCalcu_7_8 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal USS_CE_DistCalcu_7_8 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(buf, val)                                                                \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_7_8 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(buf) SET_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(buf, 0)

/**
 * Signal USS_CE_DistCalcu_7_8 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_7_8 raw initial value.
 */
#define START_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 0

/**
 * Signal USS_CE_DistCalcu_7_8 raw minimum value.
 */
#define MIN_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 0

/**
 * Signal USS_CE_DistCalcu_7_8 raw maximum value.
 */
#define MAX_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 511

/**
 * Signal USS_CE_DistCalcu_7_8 raw offset value.
 */
#define OFF_PAS_Olo_R_CE_USS_CE_DistCalcu_7_8 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 Signal USS_CE_DistCalcu_5_6 of Message PAS_Olo_F_CE (0x256)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_5_6 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 and \ref GET_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 instead.
 */
#define SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 1, 0, 47, 10

/**
 * Signal USS_CE_DistCalcu_5_6 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 or \ref INIT_PAS_Olo_F_CE instead.
 */
#define SETUP_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 1, 0, 47, 10, 0

/**
 * Get signal USS_CE_DistCalcu_5_6 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[5] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[6] >> 6) & 0x03) << 0))

/**
 * Set signal USS_CE_DistCalcu_5_6 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(buf, val)                                                                \
    {                                                                                                                  \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[6] &= ~(0x03 << 6);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_5_6 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(buf) SET_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(buf, 0)

/**
 * Signal USS_CE_DistCalcu_5_6 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_5_6 raw initial value.
 */
#define START_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 0

/**
 * Signal USS_CE_DistCalcu_5_6 raw minimum value.
 */
#define MIN_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 0

/**
 * Signal USS_CE_DistCalcu_5_6 raw maximum value.
 */
#define MAX_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 511

/**
 * Signal USS_CE_DistCalcu_5_6 raw offset value.
 */
#define OFF_PAS_Olo_F_CE_USS_CE_DistCalcu_5_6 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 Signal USS_CE_DistCalcu_4_5 of Message PAS_Olo_F_CE (0x256)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_4_5 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 and \ref GET_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 instead.
 */
#define SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 1, 0, 25, 10

/**
 * Signal USS_CE_DistCalcu_4_5 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 or \ref INIT_PAS_Olo_F_CE instead.
 */
#define SETUP_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 1, 0, 25, 10, 0

/**
 * Get signal USS_CE_DistCalcu_4_5 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal USS_CE_DistCalcu_4_5 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(buf, val)                                                                \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_4_5 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(buf) SET_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(buf, 0)

/**
 * Signal USS_CE_DistCalcu_4_5 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_4_5 raw initial value.
 */
#define START_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 0

/**
 * Signal USS_CE_DistCalcu_4_5 raw minimum value.
 */
#define MIN_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 0

/**
 * Signal USS_CE_DistCalcu_4_5 raw maximum value.
 */
#define MAX_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 511

/**
 * Signal USS_CE_DistCalcu_4_5 raw offset value.
 */
#define OFF_PAS_Olo_F_CE_USS_CE_DistCalcu_4_5 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 Signal USS_CE_DistCalcu_3_4 of Message PAS_Olo_F_CE (0x256)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_3_4 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 and \ref GET_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 instead.
 */
#define SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 1, 0, 19, 10

/**
 * Signal USS_CE_DistCalcu_3_4 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 or \ref INIT_PAS_Olo_F_CE instead.
 */
#define SETUP_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 1, 0, 19, 10, 0

/**
 * Get signal USS_CE_DistCalcu_3_4 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[3] >> 2) & 0x3f) << 0))

/**
 * Set signal USS_CE_DistCalcu_3_4 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(buf, val)                                                                \
    {                                                                                                                  \
        buf[2] &= ~(0x0f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[3] &= ~(0x3f << 2);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_3_4 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(buf) SET_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(buf, 0)

/**
 * Signal USS_CE_DistCalcu_3_4 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_3_4 raw initial value.
 */
#define START_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 0

/**
 * Signal USS_CE_DistCalcu_3_4 raw minimum value.
 */
#define MIN_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 0

/**
 * Signal USS_CE_DistCalcu_3_4 raw maximum value.
 */
#define MAX_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 511

/**
 * Signal USS_CE_DistCalcu_3_4 raw offset value.
 */
#define OFF_PAS_Olo_F_CE_USS_CE_DistCalcu_3_4 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 Signal USS_CE_DistCalcu_2_3 of Message PAS_Olo_F_CE (0x256)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_2_3 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 and \ref GET_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 instead.
 */
#define SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 1, 0, 13, 10

/**
 * Signal USS_CE_DistCalcu_2_3 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 or \ref INIT_PAS_Olo_F_CE instead.
 */
#define SETUP_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 1, 0, 13, 10, 0

/**
 * Get signal USS_CE_DistCalcu_2_3 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[2] >> 4) & 0x0f) << 0))

/**
 * Set signal USS_CE_DistCalcu_2_3 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(buf, val)                                                                \
    {                                                                                                                  \
        buf[1] &= ~(0x3f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[2] &= ~(0x0f << 4);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_2_3 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(buf) SET_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(buf, 0)

/**
 * Signal USS_CE_DistCalcu_2_3 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_2_3 raw initial value.
 */
#define START_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 0

/**
 * Signal USS_CE_DistCalcu_2_3 raw minimum value.
 */
#define MIN_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 0

/**
 * Signal USS_CE_DistCalcu_2_3 raw maximum value.
 */
#define MAX_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 511

/**
 * Signal USS_CE_DistCalcu_2_3 raw offset value.
 */
#define OFF_PAS_Olo_F_CE_USS_CE_DistCalcu_2_3 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 Signal USS_CE_DistCalcu_1_2 of Message PAS_Olo_F_CE (0x256)
 *
 * The cross echo distance calcula-tion for the sensor pairs.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_F_CE
 * @{
 */

/**
 * Signal USS_CE_DistCalcu_1_2 configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 and \ref GET_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 instead.
 */
#define SIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 1, 0, 7, 10

/**
 * Signal USS_CE_DistCalcu_1_2 setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 or \ref INIT_PAS_Olo_F_CE instead.
 */
#define SETUP_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 1, 0, 7, 10, 0

/**
 * Get signal USS_CE_DistCalcu_1_2 from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal USS_CE_DistCalcu_1_2 in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(buf, val)                                                                \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal USS_CE_DistCalcu_1_2 in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(buf) SET_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(buf, 0)

/**
 * Signal USS_CE_DistCalcu_1_2 value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2(x, fmt) ((x)*fmt)

/**
 * Signal USS_CE_DistCalcu_1_2 raw initial value.
 */
#define START_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 0

/**
 * Signal USS_CE_DistCalcu_1_2 raw minimum value.
 */
#define MIN_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 0

/**
 * Signal USS_CE_DistCalcu_1_2 raw maximum value.
 */
#define MAX_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 511

/**
 * Signal USS_CE_DistCalcu_1_2 raw offset value.
 */
#define OFF_PAS_Olo_F_CE_USS_CE_DistCalcu_1_2 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum Signal PAS_Olo_TypeandHight2_Checksum of Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PAS_Olo_TypeandHight2_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum and \ref
 *GET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_TypeandHight2_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_TypeandHight2_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_TypeandHight2_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(buf, val)                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_TypeandHight2_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(buf)                                              \
    SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(buf, 0)

/**
 * Signal PAS_Olo_TypeandHight2_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_TypeandHight2_Checksum raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 0

/**
 * Signal PAS_Olo_TypeandHight2_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 0

/**
 * Signal PAS_Olo_TypeandHight2_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 255

/**
 * Signal PAS_Olo_TypeandHight2_Checksum raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt Signal PAS_Olo_TypeandHight2_RollCnt of Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt and \ref
 *GET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_TypeandHight2_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_TypeandHight2_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(buf, val)                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_TypeandHight2_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(buf)                                               \
    SET_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 0

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 0

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 15

/**
 * Signal PAS_Olo_TypeandHight2_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PAS_Olo_TypeandHight2_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type Signal PP_Olo_Obj12_Type of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 1, 0, 31, 3

/**
 * Signal PP_Olo_Obj12_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 1, 0, 31, 3, 0

/**
 * Get signal PP_Olo_Obj12_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 5) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj12_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(buf, val)                                                          \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 5);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(buf, 0)

/**
 * Signal PP_Olo_Obj12_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj12_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 0

/**
 * Signal PP_Olo_Obj12_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 0

/**
 * Signal PP_Olo_Obj12_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 4

/**
 * Signal PP_Olo_Obj12_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type Value Table for Signal PP_Olo_Obj12_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height Signal PP_Olo_Obj12_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 *instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 1, 0, 28, 2

/**
 * Signal PP_Olo_Obj12_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 1, 0, 28, 2, 0

/**
 * Get signal PP_Olo_Obj12_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 3) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj12_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 3);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(buf, 0)

/**
 * Signal PP_Olo_Obj12_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj12_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 0

/**
 * Signal PP_Olo_Obj12_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 0

/**
 * Signal PP_Olo_Obj12_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 3

/**
 * Signal PP_Olo_Obj12_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height Value Table for Signal PP_Olo_Obj12_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj12_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type Signal PP_Olo_Obj11_Type of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 1, 0, 26, 3

/**
 * Signal PP_Olo_Obj11_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 1, 0, 26, 3, 0

/**
 * Get signal PP_Olo_Obj11_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj11_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(buf, val)                                                          \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(buf, 0)

/**
 * Signal PP_Olo_Obj11_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj11_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 0

/**
 * Signal PP_Olo_Obj11_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 0

/**
 * Signal PP_Olo_Obj11_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 4

/**
 * Signal PP_Olo_Obj11_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type Value Table for Signal PP_Olo_Obj11_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height Signal PP_Olo_Obj11_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 *instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 1, 0, 22, 2

/**
 * Signal PP_Olo_Obj11_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 1, 0, 22, 2, 0

/**
 * Get signal PP_Olo_Obj11_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 5) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj11_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 5);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(buf, 0)

/**
 * Signal PP_Olo_Obj11_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj11_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 0

/**
 * Signal PP_Olo_Obj11_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 0

/**
 * Signal PP_Olo_Obj11_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 3

/**
 * Signal PP_Olo_Obj11_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height Value Table for Signal PP_Olo_Obj11_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj11_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type Signal PP_Olo_Obj10_Type of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 1, 0, 20, 3

/**
 * Signal PP_Olo_Obj10_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 1, 0, 20, 3, 0

/**
 * Get signal PP_Olo_Obj10_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 2) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj10_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(buf, val)                                                          \
    {                                                                                                                  \
        buf[2] &= ~(0x07 << 2);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x07) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(buf, 0)

/**
 * Signal PP_Olo_Obj10_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj10_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 0

/**
 * Signal PP_Olo_Obj10_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 0

/**
 * Signal PP_Olo_Obj10_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 4

/**
 * Signal PP_Olo_Obj10_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type Value Table for Signal PP_Olo_Obj10_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height Signal PP_Olo_Obj10_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 *instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 1, 0, 17, 2

/**
 * Signal PP_Olo_Obj10_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 1, 0, 17, 2, 0

/**
 * Get signal PP_Olo_Obj10_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj10_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(buf, 0)

/**
 * Signal PP_Olo_Obj10_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj10_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 0

/**
 * Signal PP_Olo_Obj10_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 0

/**
 * Signal PP_Olo_Obj10_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 3

/**
 * Signal PP_Olo_Obj10_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height Value Table for Signal PP_Olo_Obj10_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj10_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type Signal PP_Olo_Obj9_Type of Message PAS_Olo_TypeandHight2 (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 1, 0, 15, 3

/**
 * Signal PP_Olo_Obj9_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 1, 0, 15, 3, 0

/**
 * Get signal PP_Olo_Obj9_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 5) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj9_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 5);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(buf, 0)

/**
 * Signal PP_Olo_Obj9_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj9_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 0

/**
 * Signal PP_Olo_Obj9_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 0

/**
 * Signal PP_Olo_Obj9_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 4

/**
 * Signal PP_Olo_Obj9_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type Value Table for Signal PP_Olo_Obj9_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height Signal PP_Olo_Obj9_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 1, 0, 12, 2

/**
 * Signal PP_Olo_Obj9_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 1, 0, 12, 2, 0

/**
 * Get signal PP_Olo_Obj9_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj9_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(buf, 0)

/**
 * Signal PP_Olo_Obj9_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj9_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 0

/**
 * Signal PP_Olo_Obj9_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 0

/**
 * Signal PP_Olo_Obj9_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 3

/**
 * Signal PP_Olo_Obj9_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height Value Table for Signal PP_Olo_Obj9_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj9_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type Signal PP_Olo_Obj8_Type of Message PAS_Olo_TypeandHight2 (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 1, 0, 10, 3

/**
 * Signal PP_Olo_Obj8_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 1, 0, 10, 3, 0

/**
 * Get signal PP_Olo_Obj8_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj8_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(buf, 0)

/**
 * Signal PP_Olo_Obj8_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj8_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 0

/**
 * Signal PP_Olo_Obj8_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 0

/**
 * Signal PP_Olo_Obj8_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 4

/**
 * Signal PP_Olo_Obj8_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type Value Table for Signal PP_Olo_Obj8_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height Signal PP_Olo_Obj8_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 1, 0, 6, 2

/**
 * Signal PP_Olo_Obj8_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 1, 0, 6, 2, 0

/**
 * Get signal PP_Olo_Obj8_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj8_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(buf, 0)

/**
 * Signal PP_Olo_Obj8_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj8_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 0

/**
 * Signal PP_Olo_Obj8_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 0

/**
 * Signal PP_Olo_Obj8_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 3

/**
 * Signal PP_Olo_Obj8_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height Value Table for Signal PP_Olo_Obj8_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj8_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type Signal PP_Olo_Obj7_Type of Message PAS_Olo_TypeandHight2 (0x269)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 1, 0, 4, 3

/**
 * Signal PP_Olo_Obj7_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 1, 0, 4, 3, 0

/**
 * Get signal PP_Olo_Obj7_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 2) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj7_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 2);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(buf, 0)

/**
 * Signal PP_Olo_Obj7_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj7_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 0

/**
 * Signal PP_Olo_Obj7_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 0

/**
 * Signal PP_Olo_Obj7_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 4

/**
 * Signal PP_Olo_Obj7_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type Value Table for Signal PP_Olo_Obj7_Type in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height Signal PP_Olo_Obj7_Height of Message PAS_Olo_TypeandHight2
 * (0x269)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight2
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height and \ref GET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 1, 0, 1, 2

/**
 * Signal PP_Olo_Obj7_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height or \ref INIT_PAS_Olo_TypeandHight2 instead.
 */
#define SETUP_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 1, 0, 1, 2, 0

/**
 * Get signal PP_Olo_Obj7_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj7_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(buf) SET_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(buf, 0)

/**
 * Signal PP_Olo_Obj7_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj7_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 0

/**
 * Signal PP_Olo_Obj7_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 0

/**
 * Signal PP_Olo_Obj7_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 3

/**
 * Signal PP_Olo_Obj7_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height Value Table for Signal PP_Olo_Obj7_Height in Message
 * PAS_Olo_TypeandHight2 (0x269)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height
 */

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height
 */
#define PAS_Olo_TypeandHight2_PP_Olo_Obj7_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum Signal PAS_Olo_TypeandHight1_Checksum of Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PAS_Olo_TypeandHight1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum and \ref
 *GET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_TypeandHight1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_TypeandHight1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_TypeandHight1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(buf, val)                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_TypeandHight1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(buf)                                              \
    SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(buf, 0)

/**
 * Signal PAS_Olo_TypeandHight1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_TypeandHight1_Checksum raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 0

/**
 * Signal PAS_Olo_TypeandHight1_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 0

/**
 * Signal PAS_Olo_TypeandHight1_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 255

/**
 * Signal PAS_Olo_TypeandHight1_Checksum raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt Signal PAS_Olo_TypeandHight1_RollCnt of Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt and \ref
 *GET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_TypeandHight1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_TypeandHight1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(buf, val)                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_TypeandHight1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(buf)                                               \
    SET_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 0

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 0

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 15

/**
 * Signal PAS_Olo_TypeandHight1_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PAS_Olo_TypeandHight1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type Signal PP_Olo_Obj6_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 1, 0, 31, 3

/**
 * Signal PP_Olo_Obj6_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 1, 0, 31, 3, 0

/**
 * Get signal PP_Olo_Obj6_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 5) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj6_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 5);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(buf, 0)

/**
 * Signal PP_Olo_Obj6_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj6_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 0

/**
 * Signal PP_Olo_Obj6_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 0

/**
 * Signal PP_Olo_Obj6_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 4

/**
 * Signal PP_Olo_Obj6_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type Value Table for Signal PP_Olo_Obj6_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height Signal PP_Olo_Obj6_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 1, 0, 28, 2

/**
 * Signal PP_Olo_Obj6_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 1, 0, 28, 2, 0

/**
 * Get signal PP_Olo_Obj6_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 3) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj6_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[3] &= ~(0x03 << 3);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(buf, 0)

/**
 * Signal PP_Olo_Obj6_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj6_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 0

/**
 * Signal PP_Olo_Obj6_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 0

/**
 * Signal PP_Olo_Obj6_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 3

/**
 * Signal PP_Olo_Obj6_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height Value Table for Signal PP_Olo_Obj6_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj6_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type Signal PP_Olo_Obj5_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 1, 0, 26, 3

/**
 * Signal PP_Olo_Obj5_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 1, 0, 26, 3, 0

/**
 * Get signal PP_Olo_Obj5_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(buf) (0 | (ubyte)(+(ubyte)((buf[3] >> 0) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj5_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[3] &= ~(0x07 << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(buf, 0)

/**
 * Signal PP_Olo_Obj5_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj5_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 0

/**
 * Signal PP_Olo_Obj5_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 0

/**
 * Signal PP_Olo_Obj5_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 4

/**
 * Signal PP_Olo_Obj5_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type Value Table for Signal PP_Olo_Obj5_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height Signal PP_Olo_Obj5_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 1, 0, 22, 2

/**
 * Signal PP_Olo_Obj5_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 1, 0, 22, 2, 0

/**
 * Get signal PP_Olo_Obj5_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 5) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj5_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 5);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(buf, 0)

/**
 * Signal PP_Olo_Obj5_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj5_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 0

/**
 * Signal PP_Olo_Obj5_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 0

/**
 * Signal PP_Olo_Obj5_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 3

/**
 * Signal PP_Olo_Obj5_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height Value Table for Signal PP_Olo_Obj5_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj5_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type Signal PP_Olo_Obj4_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 1, 0, 20, 3

/**
 * Signal PP_Olo_Obj4_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 1, 0, 20, 3, 0

/**
 * Get signal PP_Olo_Obj4_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 2) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj4_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[2] &= ~(0x07 << 2);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x07) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(buf, 0)

/**
 * Signal PP_Olo_Obj4_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj4_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 0

/**
 * Signal PP_Olo_Obj4_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 0

/**
 * Signal PP_Olo_Obj4_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 4

/**
 * Signal PP_Olo_Obj4_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type Value Table for Signal PP_Olo_Obj4_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height Signal PP_Olo_Obj4_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 1, 0, 17, 2

/**
 * Signal PP_Olo_Obj4_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 1, 0, 17, 2, 0

/**
 * Get signal PP_Olo_Obj4_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(buf) (0 | (ubyte)(+(ubyte)((buf[2] >> 0) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj4_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[2] &= ~(0x03 << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(buf, 0)

/**
 * Signal PP_Olo_Obj4_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj4_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 0

/**
 * Signal PP_Olo_Obj4_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 0

/**
 * Signal PP_Olo_Obj4_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 3

/**
 * Signal PP_Olo_Obj4_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height Value Table for Signal PP_Olo_Obj4_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj4_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type Signal PP_Olo_Obj3_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 1, 0, 15, 3

/**
 * Signal PP_Olo_Obj3_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 1, 0, 15, 3, 0

/**
 * Get signal PP_Olo_Obj3_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 5) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj3_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 5);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(buf, 0)

/**
 * Signal PP_Olo_Obj3_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj3_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 0

/**
 * Signal PP_Olo_Obj3_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 0

/**
 * Signal PP_Olo_Obj3_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 4

/**
 * Signal PP_Olo_Obj3_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type Value Table for Signal PP_Olo_Obj3_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height Signal PP_Olo_Obj3_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 1, 0, 12, 2

/**
 * Signal PP_Olo_Obj3_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 1, 0, 12, 2, 0

/**
 * Get signal PP_Olo_Obj3_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 3) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj3_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 3);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(buf, 0)

/**
 * Signal PP_Olo_Obj3_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj3_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 0

/**
 * Signal PP_Olo_Obj3_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 0

/**
 * Signal PP_Olo_Obj3_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 3

/**
 * Signal PP_Olo_Obj3_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height Value Table for Signal PP_Olo_Obj3_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj3_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type Signal PP_Olo_Obj2_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 1, 0, 10, 3

/**
 * Signal PP_Olo_Obj2_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 1, 0, 10, 3, 0

/**
 * Get signal PP_Olo_Obj2_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj2_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[1] &= ~(0x07 << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(buf, 0)

/**
 * Signal PP_Olo_Obj2_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj2_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 0

/**
 * Signal PP_Olo_Obj2_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 0

/**
 * Signal PP_Olo_Obj2_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 4

/**
 * Signal PP_Olo_Obj2_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type Value Table for Signal PP_Olo_Obj2_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height Signal PP_Olo_Obj2_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 1, 0, 6, 2

/**
 * Signal PP_Olo_Obj2_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 1, 0, 6, 2, 0

/**
 * Get signal PP_Olo_Obj2_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj2_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 5;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(buf, 0)

/**
 * Signal PP_Olo_Obj2_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj2_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 0

/**
 * Signal PP_Olo_Obj2_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 0

/**
 * Signal PP_Olo_Obj2_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 3

/**
 * Signal PP_Olo_Obj2_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height Value Table for Signal PP_Olo_Obj2_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj2_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type Signal PP_Olo_Obj1_Type of Message PAS_Olo_TypeandHight1 (0x259)
 *
 * Type of the objects determined based on the echoes received from the object.
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Type configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 1, 0, 4, 3

/**
 * Signal PP_Olo_Obj1_Type setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 1, 0, 4, 3, 0

/**
 * Get signal PP_Olo_Obj1_Type from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 2) & 0x07) << 0))

/**
 * Set signal PP_Olo_Obj1_Type in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(buf, val)                                                           \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 2);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Type in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(buf, 0)

/**
 * Signal PP_Olo_Obj1_Type value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj1_Type raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 0

/**
 * Signal PP_Olo_Obj1_Type raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 0

/**
 * Signal PP_Olo_Obj1_Type raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 4

/**
 * Signal PP_Olo_Obj1_Type raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type Value Table for Signal PP_Olo_Obj1_Type in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type entry OLO_STRAIGHT_2_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type_OLO_STRAIGHT_2_CORNER 4

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type entry OLO_STRAIGHT_1_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type_OLO_STRAIGHT_1_CORNER 3

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type entry OLO_STRAIGHT_0_CORNER.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type_OLO_STRAIGHT_0_CORNER 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type entry OLO_POINT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type_OLO_POINT 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type entry OLO_NO_OBJECT.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Type_OLO_NO_OBJECT 0

/**
 * @defgroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height Signal PP_Olo_Obj1_Height of Message PAS_Olo_TypeandHight1
 * (0x259)
 *
 * Height of the objects determined based on the echoes received from the object
 *
 * Contains the value table \ref ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_TypeandHight1
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Height configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height and \ref GET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height instead.
 */
#define SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 1, 0, 1, 2

/**
 * Signal PP_Olo_Obj1_Height setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height or \ref INIT_PAS_Olo_TypeandHight1 instead.
 */
#define SETUP_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 1, 0, 1, 2, 0

/**
 * Get signal PP_Olo_Obj1_Height from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj1_Height in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Height in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(buf) SET_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(buf, 0)

/**
 * Signal PP_Olo_Obj1_Height value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj1_Height raw initial value.
 */
#define START_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 0

/**
 * Signal PP_Olo_Obj1_Height raw minimum value.
 */
#define MIN_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 0

/**
 * Signal PP_Olo_Obj1_Height raw maximum value.
 */
#define MAX_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 3

/**
 * Signal PP_Olo_Obj1_Height raw offset value.
 */
#define OFF_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height Value Table for Signal PP_Olo_Obj1_Height in Message
 * PAS_Olo_TypeandHight1 (0x259)
 *
 * Enum values defined for \ref SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height.
 *
 * @ingroup SIG_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height
 */

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height entry High.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height_High 2

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height entry Low.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height_Low 1

/**
 * Value table PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height entry Unknown.
 *
 * @ingroup ENUM_PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height
 */
#define PAS_Olo_TypeandHight1_PP_Olo_Obj1_Height_Unknown 0

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum Signal PAS_Olo_Obj12Dist_Checksum of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj12Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum and \ref GET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj12Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj12Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj12Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj12Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(buf)                                                      \
    SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj12Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj12Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj12Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj12Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj12Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt Signal PAS_Olo_Obj12Dist_RollCnt of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt and \ref GET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj12Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj12Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj12Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(buf) SET_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj12Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PAS_Olo_Obj12Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index Signal PP_Olo_Obj12_Index of Message PAS_Olo_Obj12Dist (0x308)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj12_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj12_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj12_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(buf, val)                                                             \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(buf, 0)

/**
 * Signal PP_Olo_Obj12_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj12_Index raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 0

/**
 * Signal PP_Olo_Obj12_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 0

/**
 * Signal PP_Olo_Obj12_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 11

/**
 * Signal PP_Olo_Obj12_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir Signal PP_Olo_Obj12_Point2_Y_Dir of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj12_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj12_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj12_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir Signal PP_Olo_Obj12_Point2_X_Dir of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj12_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj12_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj12_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir Signal PP_Olo_Obj12_Point1_Y_Dir of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj12_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj12_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj12_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir Signal PP_Olo_Obj12_Point1_X_Dir of Message
 * PAS_Olo_Obj12Dist (0x308)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj12_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj12_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj12_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability Signal PP_Olo_Obj12_Probability of Message PAS_Olo_Obj12Dist
 * (0x308)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj12Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj12_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability and \ref GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability
 *instead.
 */
#define SIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj12_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability or \ref INIT_PAS_Olo_Obj12Dist instead.
 */
#define SETUP_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj12_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj12_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(buf, val)                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj12_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(buf) SET_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj12_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj12_Probability raw initial value.
 */
#define START_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 0

/**
 * Signal PP_Olo_Obj12_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 0

/**
 * Signal PP_Olo_Obj12_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 255

/**
 * Signal PP_Olo_Obj12_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj12Dist_PP_Olo_Obj12_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum Signal PAS_Olo_Obj11Dist_Checksum of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj11Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum and \ref GET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj11Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj11Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj11Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj11Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(buf)                                                      \
    SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj11Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj11Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj11Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj11Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj11Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt Signal PAS_Olo_Obj11Dist_RollCnt of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt and \ref GET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj11Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj11Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj11Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(buf) SET_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj11Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PAS_Olo_Obj11Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index Signal PP_Olo_Obj11_Index of Message PAS_Olo_Obj11Dist (0x2f8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj11_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj11_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj11_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(buf, val)                                                             \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(buf, 0)

/**
 * Signal PP_Olo_Obj11_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj11_Index raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 0

/**
 * Signal PP_Olo_Obj11_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 0

/**
 * Signal PP_Olo_Obj11_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 11

/**
 * Signal PP_Olo_Obj11_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir Signal PP_Olo_Obj11_Point2_Y_Dir of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj11_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj11_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj11_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir Signal PP_Olo_Obj11_Point2_X_Dir of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj11_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj11_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj11_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir Signal PP_Olo_Obj11_Point1_Y_Dir of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj11_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj11_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj11_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir Signal PP_Olo_Obj11_Point1_X_Dir of Message
 * PAS_Olo_Obj11Dist (0x2f8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj11_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj11_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj11_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability Signal PP_Olo_Obj11_Probability of Message PAS_Olo_Obj11Dist
 * (0x2f8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj11Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj11_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability and \ref GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability
 *instead.
 */
#define SIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj11_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability or \ref INIT_PAS_Olo_Obj11Dist instead.
 */
#define SETUP_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj11_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj11_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(buf, val)                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj11_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(buf) SET_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj11_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj11_Probability raw initial value.
 */
#define START_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 0

/**
 * Signal PP_Olo_Obj11_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 0

/**
 * Signal PP_Olo_Obj11_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 255

/**
 * Signal PP_Olo_Obj11_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj11Dist_PP_Olo_Obj11_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum Signal PAS_Olo_Obj10Dist_Checksum of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj10Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum and \ref GET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj10Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj10Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj10Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(buf, val)                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj10Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(buf)                                                      \
    SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj10Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj10Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj10Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj10Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj10Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt Signal PAS_Olo_Obj10Dist_RollCnt of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt and \ref GET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj10Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj10Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(buf, val)                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj10Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(buf) SET_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj10Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PAS_Olo_Obj10Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index Signal PP_Olo_Obj10_Index of Message PAS_Olo_Obj10Dist (0x2e8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj10_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj10_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj10_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(buf, val)                                                             \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(buf, 0)

/**
 * Signal PP_Olo_Obj10_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj10_Index raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 0

/**
 * Signal PP_Olo_Obj10_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 0

/**
 * Signal PP_Olo_Obj10_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 11

/**
 * Signal PP_Olo_Obj10_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir Signal PP_Olo_Obj10_Point2_Y_Dir of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj10_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj10_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj10_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir Signal PP_Olo_Obj10_Point2_X_Dir of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj10_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj10_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj10_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir Signal PP_Olo_Obj10_Point1_Y_Dir of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj10_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj10_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj10_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir Signal PP_Olo_Obj10_Point1_X_Dir of Message
 * PAS_Olo_Obj10Dist (0x2e8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj10_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(buf)                                                           \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj10_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(buf, val)                                                      \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj10_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability Signal PP_Olo_Obj10_Probability of Message PAS_Olo_Obj10Dist
 * (0x2e8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj10Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj10_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability and \ref GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability
 *instead.
 */
#define SIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj10_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability or \ref INIT_PAS_Olo_Obj10Dist instead.
 */
#define SETUP_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj10_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj10_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(buf, val)                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj10_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(buf) SET_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj10_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj10_Probability raw initial value.
 */
#define START_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 0

/**
 * Signal PP_Olo_Obj10_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 0

/**
 * Signal PP_Olo_Obj10_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 255

/**
 * Signal PP_Olo_Obj10_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj10Dist_PP_Olo_Obj10_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum Signal PAS_Olo_Obj9Dist_Checksum of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj9Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum and \ref GET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj9Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj9Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj9Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj9Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(buf) SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj9Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj9Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj9Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj9Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj9Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt Signal PAS_Olo_Obj9Dist_RollCnt of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt and \ref GET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj9Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj9Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj9Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(buf) SET_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj9Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PAS_Olo_Obj9Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index Signal PP_Olo_Obj9_Index of Message PAS_Olo_Obj9Dist (0x2d8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj9_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj9_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj9_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(buf, 0)

/**
 * Signal PP_Olo_Obj9_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj9_Index raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 0

/**
 * Signal PP_Olo_Obj9_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 0

/**
 * Signal PP_Olo_Obj9_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 11

/**
 * Signal PP_Olo_Obj9_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir Signal PP_Olo_Obj9_Point2_Y_Dir of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj9_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj9_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj9_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir Signal PP_Olo_Obj9_Point2_X_Dir of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj9_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj9_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj9_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir Signal PP_Olo_Obj9_Point1_Y_Dir of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj9_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj9_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj9_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir Signal PP_Olo_Obj9_Point1_X_Dir of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj9_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj9_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj9_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability Signal PP_Olo_Obj9_Probability of Message PAS_Olo_Obj9Dist
 * (0x2d8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj9Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj9_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability and \ref GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability instead.
 */
#define SIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj9_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability or \ref INIT_PAS_Olo_Obj9Dist instead.
 */
#define SETUP_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj9_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj9_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj9_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(buf) SET_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj9_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj9_Probability raw initial value.
 */
#define START_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 0

/**
 * Signal PP_Olo_Obj9_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 0

/**
 * Signal PP_Olo_Obj9_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 255

/**
 * Signal PP_Olo_Obj9_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj9Dist_PP_Olo_Obj9_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum Signal PAS_Olo_Obj8Dist_Checksum of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj8Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum and \ref GET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj8Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj8Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj8Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj8Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(buf) SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj8Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj8Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj8Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj8Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj8Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt Signal PAS_Olo_Obj8Dist_RollCnt of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt and \ref GET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj8Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj8Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj8Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(buf) SET_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj8Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PAS_Olo_Obj8Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index Signal PP_Olo_Obj8_Index of Message PAS_Olo_Obj8Dist (0x2c8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj8_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj8_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj8_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(buf, 0)

/**
 * Signal PP_Olo_Obj8_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj8_Index raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 0

/**
 * Signal PP_Olo_Obj8_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 0

/**
 * Signal PP_Olo_Obj8_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 11

/**
 * Signal PP_Olo_Obj8_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir Signal PP_Olo_Obj8_Point2_Y_Dir of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj8_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj8_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj8_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir Signal PP_Olo_Obj8_Point2_X_Dir of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj8_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj8_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj8_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir Signal PP_Olo_Obj8_Point1_Y_Dir of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj8_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj8_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj8_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir Signal PP_Olo_Obj8_Point1_X_Dir of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj8_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj8_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj8_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability Signal PP_Olo_Obj8_Probability of Message PAS_Olo_Obj8Dist
 * (0x2c8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj8Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj8_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability and \ref GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability instead.
 */
#define SIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj8_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability or \ref INIT_PAS_Olo_Obj8Dist instead.
 */
#define SETUP_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj8_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj8_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj8_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(buf) SET_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj8_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj8_Probability raw initial value.
 */
#define START_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 0

/**
 * Signal PP_Olo_Obj8_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 0

/**
 * Signal PP_Olo_Obj8_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 255

/**
 * Signal PP_Olo_Obj8_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj8Dist_PP_Olo_Obj8_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum Signal PAS_Olo_Obj7Dist_Checksum of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj7Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum and \ref GET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj7Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj7Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj7Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj7Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(buf) SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj7Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj7Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj7Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj7Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj7Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt Signal PAS_Olo_Obj7Dist_RollCnt of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt and \ref GET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj7Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj7Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj7Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(buf) SET_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj7Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PAS_Olo_Obj7Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index Signal PP_Olo_Obj7_Index of Message PAS_Olo_Obj7Dist (0x2b8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj7_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj7_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj7_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(buf, 0)

/**
 * Signal PP_Olo_Obj7_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj7_Index raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 0

/**
 * Signal PP_Olo_Obj7_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 0

/**
 * Signal PP_Olo_Obj7_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 11

/**
 * Signal PP_Olo_Obj7_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir Signal PP_Olo_Obj7_Point2_Y_Dir of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj7_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj7_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj7_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir Signal PP_Olo_Obj7_Point2_X_Dir of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj7_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj7_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj7_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir Signal PP_Olo_Obj7_Point1_Y_Dir of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj7_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj7_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj7_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir Signal PP_Olo_Obj7_Point1_X_Dir of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj7_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj7_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj7_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability Signal PP_Olo_Obj7_Probability of Message PAS_Olo_Obj7Dist
 * (0x2b8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj7Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj7_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability and \ref GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability instead.
 */
#define SIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj7_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability or \ref INIT_PAS_Olo_Obj7Dist instead.
 */
#define SETUP_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj7_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj7_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj7_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(buf) SET_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj7_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj7_Probability raw initial value.
 */
#define START_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 0

/**
 * Signal PP_Olo_Obj7_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 0

/**
 * Signal PP_Olo_Obj7_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 255

/**
 * Signal PP_Olo_Obj7_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj7Dist_PP_Olo_Obj7_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum Signal PAS_Olo_Obj6Dist_Checksum of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj6Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum and \ref GET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj6Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj6Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj6Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj6Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(buf) SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj6Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj6Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj6Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj6Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj6Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt Signal PAS_Olo_Obj6Dist_RollCnt of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt and \ref GET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj6Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj6Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj6Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(buf) SET_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj6Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PAS_Olo_Obj6Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index Signal PP_Olo_Obj6_Index of Message PAS_Olo_Obj6Dist (0x2a8)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj6_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj6_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj6_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(buf, 0)

/**
 * Signal PP_Olo_Obj6_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj6_Index raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 0

/**
 * Signal PP_Olo_Obj6_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 0

/**
 * Signal PP_Olo_Obj6_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 11

/**
 * Signal PP_Olo_Obj6_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir Signal PP_Olo_Obj6_Point2_Y_Dir of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj6_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj6_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj6_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir Signal PP_Olo_Obj6_Point2_X_Dir of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj6_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj6_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj6_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir Signal PP_Olo_Obj6_Point1_Y_Dir of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj6_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj6_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj6_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir Signal PP_Olo_Obj6_Point1_X_Dir of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj6_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj6_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj6_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability Signal PP_Olo_Obj6_Probability of Message PAS_Olo_Obj6Dist
 * (0x2a8)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj6Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj6_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability and \ref GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability instead.
 */
#define SIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj6_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability or \ref INIT_PAS_Olo_Obj6Dist instead.
 */
#define SETUP_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj6_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj6_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj6_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(buf) SET_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj6_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj6_Probability raw initial value.
 */
#define START_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 0

/**
 * Signal PP_Olo_Obj6_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 0

/**
 * Signal PP_Olo_Obj6_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 255

/**
 * Signal PP_Olo_Obj6_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj6Dist_PP_Olo_Obj6_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum Signal PAS_Olo_Obj5Dist_Checksum of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj5Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum and \ref GET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj5Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj5Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj5Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj5Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(buf) SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj5Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj5Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj5Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj5Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj5Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt Signal PAS_Olo_Obj5Dist_RollCnt of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt and \ref GET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj5Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj5Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj5Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(buf) SET_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj5Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PAS_Olo_Obj5Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index Signal PP_Olo_Obj5_Index of Message PAS_Olo_Obj5Dist (0x298)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj5_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj5_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj5_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(buf, 0)

/**
 * Signal PP_Olo_Obj5_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj5_Index raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 0

/**
 * Signal PP_Olo_Obj5_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 0

/**
 * Signal PP_Olo_Obj5_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 11

/**
 * Signal PP_Olo_Obj5_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir Signal PP_Olo_Obj5_Point2_Y_Dir of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj5_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj5_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj5_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir Signal PP_Olo_Obj5_Point2_X_Dir of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj5_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj5_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj5_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir Signal PP_Olo_Obj5_Point1_Y_Dir of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj5_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj5_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj5_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir Signal PP_Olo_Obj5_Point1_X_Dir of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj5_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj5_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj5_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability Signal PP_Olo_Obj5_Probability of Message PAS_Olo_Obj5Dist
 * (0x298)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj5Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj5_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability and \ref GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability instead.
 */
#define SIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj5_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability or \ref INIT_PAS_Olo_Obj5Dist instead.
 */
#define SETUP_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj5_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj5_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj5_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(buf) SET_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj5_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj5_Probability raw initial value.
 */
#define START_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 0

/**
 * Signal PP_Olo_Obj5_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 0

/**
 * Signal PP_Olo_Obj5_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 255

/**
 * Signal PP_Olo_Obj5_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj5Dist_PP_Olo_Obj5_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum Signal PAS_Olo_Obj4Dist_Checksum of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj4Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum and \ref GET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj4Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj4Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj4Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj4Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(buf) SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj4Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj4Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj4Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj4Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj4Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt Signal PAS_Olo_Obj4Dist_RollCnt of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt and \ref GET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj4Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj4Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj4Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(buf) SET_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj4Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PAS_Olo_Obj4Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index Signal PP_Olo_Obj4_Index of Message PAS_Olo_Obj4Dist (0x288)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj4_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj4_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj4_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(buf, 0)

/**
 * Signal PP_Olo_Obj4_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj4_Index raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 0

/**
 * Signal PP_Olo_Obj4_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 0

/**
 * Signal PP_Olo_Obj4_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 11

/**
 * Signal PP_Olo_Obj4_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir Signal PP_Olo_Obj4_Point2_Y_Dir of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj4_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj4_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj4_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir Signal PP_Olo_Obj4_Point2_X_Dir of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj4_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj4_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj4_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir Signal PP_Olo_Obj4_Point1_Y_Dir of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj4_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj4_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj4_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir Signal PP_Olo_Obj4_Point1_X_Dir of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj4_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj4_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj4_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability Signal PP_Olo_Obj4_Probability of Message PAS_Olo_Obj4Dist
 * (0x288)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj4Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj4_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability and \ref GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability instead.
 */
#define SIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj4_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability or \ref INIT_PAS_Olo_Obj4Dist instead.
 */
#define SETUP_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj4_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj4_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj4_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(buf) SET_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj4_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj4_Probability raw initial value.
 */
#define START_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 0

/**
 * Signal PP_Olo_Obj4_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 0

/**
 * Signal PP_Olo_Obj4_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 255

/**
 * Signal PP_Olo_Obj4_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj4Dist_PP_Olo_Obj4_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum Signal PAS_Olo_Obj3Dist_Checksum of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj3Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum and \ref GET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj3Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj3Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj3Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj3Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(buf) SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj3Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj3Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj3Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj3Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj3Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt Signal PAS_Olo_Obj3Dist_RollCnt of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt and \ref GET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj3Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj3Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj3Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(buf) SET_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj3Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PAS_Olo_Obj3Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index Signal PP_Olo_Obj3_Index of Message PAS_Olo_Obj3Dist (0x278)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj3_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj3_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj3_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(buf, 0)

/**
 * Signal PP_Olo_Obj3_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj3_Index raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 0

/**
 * Signal PP_Olo_Obj3_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 0

/**
 * Signal PP_Olo_Obj3_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 11

/**
 * Signal PP_Olo_Obj3_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir Signal PP_Olo_Obj3_Point2_Y_Dir of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj3_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj3_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj3_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir Signal PP_Olo_Obj3_Point2_X_Dir of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj3_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj3_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj3_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir Signal PP_Olo_Obj3_Point1_Y_Dir of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj3_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj3_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj3_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir Signal PP_Olo_Obj3_Point1_X_Dir of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj3_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj3_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj3_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability Signal PP_Olo_Obj3_Probability of Message PAS_Olo_Obj3Dist
 * (0x278)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj3Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj3_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability and \ref GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability instead.
 */
#define SIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj3_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability or \ref INIT_PAS_Olo_Obj3Dist instead.
 */
#define SETUP_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj3_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj3_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj3_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(buf) SET_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj3_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj3_Probability raw initial value.
 */
#define START_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 0

/**
 * Signal PP_Olo_Obj3_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 0

/**
 * Signal PP_Olo_Obj3_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 255

/**
 * Signal PP_Olo_Obj3_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj3Dist_PP_Olo_Obj3_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum Signal PAS_Olo_Obj2Dist_Checksum of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj2Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum and \ref GET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj2Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj2Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj2Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj2Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(buf) SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj2Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj2Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj2Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj2Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj2Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt Signal PAS_Olo_Obj2Dist_RollCnt of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt and \ref GET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj2Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj2Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj2Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(buf) SET_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj2Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PAS_Olo_Obj2Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index Signal PP_Olo_Obj2_Index of Message PAS_Olo_Obj2Dist (0x268)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj2_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj2_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj2_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(buf, 0)

/**
 * Signal PP_Olo_Obj2_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj2_Index raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 0

/**
 * Signal PP_Olo_Obj2_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 0

/**
 * Signal PP_Olo_Obj2_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 11

/**
 * Signal PP_Olo_Obj2_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir Signal PP_Olo_Obj2_Point2_Y_Dir of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj2_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj2_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj2_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir Signal PP_Olo_Obj2_Point2_X_Dir of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj2_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj2_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj2_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir Signal PP_Olo_Obj2_Point1_Y_Dir of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj2_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj2_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj2_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir Signal PP_Olo_Obj2_Point1_X_Dir of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj2_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj2_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj2_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability Signal PP_Olo_Obj2_Probability of Message PAS_Olo_Obj2Dist
 * (0x268)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj2Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj2_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability and \ref GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability instead.
 */
#define SIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj2_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability or \ref INIT_PAS_Olo_Obj2Dist instead.
 */
#define SETUP_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj2_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj2_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj2_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(buf) SET_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj2_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj2_Probability raw initial value.
 */
#define START_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 0

/**
 * Signal PP_Olo_Obj2_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 0

/**
 * Signal PP_Olo_Obj2_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 255

/**
 * Signal PP_Olo_Obj2_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj2Dist_PP_Olo_Obj2_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum Signal PAS_Olo_Obj1Dist_Checksum of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj1Dist_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum and \ref GET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Olo_Obj1Dist_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Olo_Obj1Dist_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Olo_Obj1Dist_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(buf, val)                                                       \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj1Dist_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(buf) SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(buf, 0)

/**
 * Signal PAS_Olo_Obj1Dist_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj1Dist_Checksum raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj1Dist_Checksum raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 0

/**
 * Signal PAS_Olo_Obj1Dist_Checksum raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 255

/**
 * Signal PAS_Olo_Obj1Dist_Checksum raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt Signal PAS_Olo_Obj1Dist_RollCnt of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt and \ref GET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Olo_Obj1Dist_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Olo_Obj1Dist_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(buf, val)                                                        \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Olo_Obj1Dist_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(buf) SET_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(buf, 0)

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 0

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 15

/**
 * Signal PAS_Olo_Obj1Dist_RollCnt raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PAS_Olo_Obj1Dist_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index Signal PP_Olo_Obj1_Index of Message PAS_Olo_Obj1Dist (0x258)
 *
 * Index of the Olo object, since all the signals are multiplexed this index will indicate the number of the Object
 * which is being trans-mitted currently. This index will range from 0 to 11 incrementing by 1
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Index configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 1, 0, 51, 4

/**
 * Signal PP_Olo_Obj1_Index setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 1, 0, 51, 4, 0

/**
 * Get signal PP_Olo_Obj1_Index from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 0) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj1_Index in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(buf, val)                                                               \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 0);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Index in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(buf, 0)

/**
 * Signal PP_Olo_Obj1_Index value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj1_Index raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 0

/**
 * Signal PP_Olo_Obj1_Index raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 0

/**
 * Signal PP_Olo_Obj1_Index raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 11

/**
 * Signal PP_Olo_Obj1_Index raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Index 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir Signal PP_Olo_Obj1_Point2_Y_Dir of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Olo objects data, point 2 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir 1, 0, 33, 10

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir 1, 0, 33, 10, 0

/**
 * Get signal PP_Olo_Obj1_Point2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0x03) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj1_Point2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[4] &= ~(0x03 << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0x03) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Point2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir 0

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir 1023

/**
 * Signal PP_Olo_Obj1_Point2_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir Signal PP_Olo_Obj1_Point2_X_Dir of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Olo objects data, point 2 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir 1, 0, 27, 10

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir 1, 0, 27, 10, 0

/**
 * Get signal PP_Olo_Obj1_Point2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0x0f) << 6) | (ubyte)(+(ubyte)((buf[4] >> 2) & 0x3f) << 0))

/**
 * Set signal PP_Olo_Obj1_Point2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0x0f << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 6) & 0x0f) << 0;                                                            \
        buf[4] &= ~(0x3f << 2);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0x3f) << 2;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Point2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir 0

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir 1023

/**
 * Signal PP_Olo_Obj1_Point2_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point2_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir Signal PP_Olo_Obj1_Point1_Y_Dir of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Olo objects data, point 1 in y Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir 1, 0, 21, 10

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir 1, 0, 21, 10, 0

/**
 * Get signal PP_Olo_Obj1_Point1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[2] >> 0) & 0x3f) << 4) | (ubyte)(+(ubyte)((buf[3] >> 4) & 0x0f) << 0))

/**
 * Set signal PP_Olo_Obj1_Point1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[2] &= ~(0x3f << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 4) & 0x3f) << 0;                                                            \
        buf[3] &= ~(0x0f << 4);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Point1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir 0

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir 1023

/**
 * Signal PP_Olo_Obj1_Point1_Y_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_Y_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir Signal PP_Olo_Obj1_Point1_X_Dir of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Olo objects data, point 1 in x Coordinates.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir
 *instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir 1, 0, 15, 10

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir 1, 0, 15, 10, 0

/**
 * Get signal PP_Olo_Obj1_Point1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 2) | (ubyte)(+(ubyte)((buf[2] >> 6) & 0x03) << 0))

/**
 * Set signal PP_Olo_Obj1_Point1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 2) & 0xff) << 0;                                                            \
        buf[2] &= ~(0x03 << 6);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Point1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(buf, 0)

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir(x, fmt) ((x)*fmt * 3 / 2 + fmt * (-668))

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir 0

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir 1023

/**
 * Signal PP_Olo_Obj1_Point1_X_Dir raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Point1_X_Dir -445

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability Signal PP_Olo_Obj1_Probability of Message PAS_Olo_Obj1Dist
 * (0x258)
 *
 * Probability of the objects deter-mined based on the echoes re-ceived from the object. Probability goes up to 255 as
 * echoes are received from an object and goes towards to 0 if no echoes are re-ceived.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Olo_Obj1Dist
 * @{
 */

/**
 * Signal PP_Olo_Obj1_Probability configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability and \ref GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability instead.
 */
#define SIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 1, 0, 7, 8

/**
 * Signal PP_Olo_Obj1_Probability setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability or \ref INIT_PAS_Olo_Obj1Dist instead.
 */
#define SETUP_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 1, 0, 7, 8, 0

/**
 * Get signal PP_Olo_Obj1_Probability from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PP_Olo_Obj1_Probability in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PP_Olo_Obj1_Probability in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(buf) SET_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(buf, 0)

/**
 * Signal PP_Olo_Obj1_Probability value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability(x, fmt) ((x)*fmt)

/**
 * Signal PP_Olo_Obj1_Probability raw initial value.
 */
#define START_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 0

/**
 * Signal PP_Olo_Obj1_Probability raw minimum value.
 */
#define MIN_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 0

/**
 * Signal PP_Olo_Obj1_Probability raw maximum value.
 */
#define MAX_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 255

/**
 * Signal PP_Olo_Obj1_Probability raw offset value.
 */
#define OFF_PAS_Olo_Obj1Dist_PP_Olo_Obj1_Probability 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum Signal PAS_Right3_Obj2_Checksum of Message PAS_Right3_Obj2
 * (0x337)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj2
 * @{
 */

/**
 * Signal PAS_Right3_Obj2_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum and \ref GET_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum instead.
 */
#define SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Right3_Obj2_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum or \ref INIT_PAS_Right3_Obj2 instead.
 */
#define SETUP_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Right3_Obj2_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Right3_Obj2_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(buf, val)                                                         \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Right3_Obj2_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(buf) SET_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(buf, 0)

/**
 * Signal PAS_Right3_Obj2_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Right3_Obj2_Checksum raw initial value.
 */
#define START_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 0

/**
 * Signal PAS_Right3_Obj2_Checksum raw minimum value.
 */
#define MIN_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 0

/**
 * Signal PAS_Right3_Obj2_Checksum raw maximum value.
 */
#define MAX_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 255

/**
 * Signal PAS_Right3_Obj2_Checksum raw offset value.
 */
#define OFF_PAS_Right3_Obj2_PAS_Right3_Obj2_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt Signal PAS_Right3_Obj2_RollCnt of Message PAS_Right3_Obj2
 * (0x337)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj2
 * @{
 */

/**
 * Signal PAS_Right3_Obj2_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt and \ref GET_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt instead.
 */
#define SIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Right3_Obj2_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt or \ref INIT_PAS_Right3_Obj2 instead.
 */
#define SETUP_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Right3_Obj2_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Right3_Obj2_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(buf, val)                                                          \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Right3_Obj2_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(buf) SET_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(buf, 0)

/**
 * Signal PAS_Right3_Obj2_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Right3_Obj2_RollCnt raw initial value.
 */
#define START_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 0

/**
 * Signal PAS_Right3_Obj2_RollCnt raw minimum value.
 */
#define MIN_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 0

/**
 * Signal PAS_Right3_Obj2_RollCnt raw maximum value.
 */
#define MAX_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 15

/**
 * Signal PAS_Right3_Obj2_RollCnt raw offset value.
 */
#define OFF_PAS_Right3_Obj2_PAS_Right3_Obj2_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir Signal PAS_PSL_Right3_Obj2_Y_Dir of Message PAS_Right3_Obj2
 * (0x337)
 *
 * the corner of the parking space of second object (y-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir and \ref GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir
 *instead.
 */
#define SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir 1, 0, 31, 16

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir or \ref INIT_PAS_Right3_Obj2 instead.
 */
#define SETUP_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Right3_Obj2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(buf) SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir raw initial value.
 */
#define START_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir 65535

/**
 * Signal PAS_PSL_Right3_Obj2_Y_Dir raw offset value.
 */
#define OFF_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Y_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir Signal PAS_PSL_Right3_Obj2_X_Dir of Message PAS_Right3_Obj2
 * (0x337)
 *
 * the corner of the parking space of second object (x-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir and \ref GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir
 *instead.
 */
#define SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir 1, 0, 15, 16

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir or \ref INIT_PAS_Right3_Obj2 instead.
 */
#define SETUP_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir 1, 0, 15, 16, 0

/**
 * Get signal PAS_PSL_Right3_Obj2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(buf) SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir raw initial value.
 */
#define START_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir raw minimum value.
 */
#define MIN_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir raw maximum value.
 */
#define MAX_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir 65535

/**
 * Signal PAS_PSL_Right3_Obj2_X_Dir raw offset value.
 */
#define OFF_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_X_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation Signal PAS_PSL_Right3_Obj2_Orientation of Message
 * PAS_Right3_Obj2 (0x337)
 *
 * object 2 orientation
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation and \ref
 *GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation instead.
 */
#define SIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation 1, 0, 7, 8

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation or \ref INIT_PAS_Right3_Obj2 instead.
 */
#define SETUP_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Right3_Obj2_Orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj2_Orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(buf, val)                                                  \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj2_Orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(buf)                                                   \
    SET_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation(x, fmt) ((x)*fmt + fmt * (-128))

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation raw initial value.
 */
#define START_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation 0

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation raw minimum value.
 */
#define MIN_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation 0

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation raw maximum value.
 */
#define MAX_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation 255

/**
 * Signal PAS_PSL_Right3_Obj2_Orientation raw offset value.
 */
#define OFF_PAS_Right3_Obj2_PAS_PSL_Right3_Obj2_Orientation -128

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum Signal PAS_Right3_Obj1_Checksum of Message PAS_Right3_Obj1
 * (0x336)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj1
 * @{
 */

/**
 * Signal PAS_Right3_Obj1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum and \ref GET_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum instead.
 */
#define SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Right3_Obj1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum or \ref INIT_PAS_Right3_Obj1 instead.
 */
#define SETUP_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Right3_Obj1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Right3_Obj1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(buf, val)                                                         \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Right3_Obj1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(buf) SET_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(buf, 0)

/**
 * Signal PAS_Right3_Obj1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Right3_Obj1_Checksum raw initial value.
 */
#define START_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 0

/**
 * Signal PAS_Right3_Obj1_Checksum raw minimum value.
 */
#define MIN_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 0

/**
 * Signal PAS_Right3_Obj1_Checksum raw maximum value.
 */
#define MAX_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 255

/**
 * Signal PAS_Right3_Obj1_Checksum raw offset value.
 */
#define OFF_PAS_Right3_Obj1_PAS_Right3_Obj1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt Signal PAS_Right3_Obj1_RollCnt of Message PAS_Right3_Obj1
 * (0x336)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj1
 * @{
 */

/**
 * Signal PAS_Right3_Obj1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt and \ref GET_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt instead.
 */
#define SIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Right3_Obj1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt or \ref INIT_PAS_Right3_Obj1 instead.
 */
#define SETUP_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Right3_Obj1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Right3_Obj1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(buf, val)                                                          \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Right3_Obj1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(buf) SET_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(buf, 0)

/**
 * Signal PAS_Right3_Obj1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Right3_Obj1_RollCnt raw initial value.
 */
#define START_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 0

/**
 * Signal PAS_Right3_Obj1_RollCnt raw minimum value.
 */
#define MIN_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 0

/**
 * Signal PAS_Right3_Obj1_RollCnt raw maximum value.
 */
#define MAX_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 15

/**
 * Signal PAS_Right3_Obj1_RollCnt raw offset value.
 */
#define OFF_PAS_Right3_Obj1_PAS_Right3_Obj1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir Signal PAS_PSL_Right3_Obj1_Y_Dir of Message PAS_Right3_Obj1
 * (0x336)
 *
 * the corner of the parking space of first object (y-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir and \ref GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir
 *instead.
 */
#define SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir 1, 0, 31, 16

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir or \ref INIT_PAS_Right3_Obj1 instead.
 */
#define SETUP_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Right3_Obj1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(buf) SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir raw initial value.
 */
#define START_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir 65535

/**
 * Signal PAS_PSL_Right3_Obj1_Y_Dir raw offset value.
 */
#define OFF_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Y_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir Signal PAS_PSL_Right3_Obj1_X_Dir of Message PAS_Right3_Obj1
 * (0x336)
 *
 * the corner of the parking space of first object (x-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir and \ref GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir
 *instead.
 */
#define SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir 1, 0, 15, 16

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir or \ref INIT_PAS_Right3_Obj1 instead.
 */
#define SETUP_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir 1, 0, 15, 16, 0

/**
 * Get signal PAS_PSL_Right3_Obj1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(buf)                                                             \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(buf, val)                                                        \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(buf) SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir raw initial value.
 */
#define START_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir raw minimum value.
 */
#define MIN_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir 0

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir raw maximum value.
 */
#define MAX_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir 65535

/**
 * Signal PAS_PSL_Right3_Obj1_X_Dir raw offset value.
 */
#define OFF_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_X_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation Signal PAS_PSL_Right3_Obj1_Orientation of Message
 * PAS_Right3_Obj1 (0x336)
 *
 * object 1 orientation
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation and \ref
 *GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation instead.
 */
#define SIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation 1, 0, 7, 8

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation or \ref INIT_PAS_Right3_Obj1 instead.
 */
#define SETUP_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Right3_Obj1_Orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right3_Obj1_Orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(buf, val)                                                  \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right3_Obj1_Orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(buf)                                                   \
    SET_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(buf, 0)

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation(x, fmt) ((x)*fmt + fmt * (-128))

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation raw initial value.
 */
#define START_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation 0

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation raw minimum value.
 */
#define MIN_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation 0

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation raw maximum value.
 */
#define MAX_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation 255

/**
 * Signal PAS_PSL_Right3_Obj1_Orientation raw offset value.
 */
#define OFF_PAS_Right3_Obj1_PAS_PSL_Right3_Obj1_Orientation -128

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right2_PAS_PSL_Right2_PS_Depth Signal PAS_PSL_Right2_PS_Depth of Message PAS_Right2 (0x326)
 *
 * Parking space depth for Right side:
 * 0 = no valid PS
 * >0 = PS depth
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right2
 * @{
 */

/**
 * Signal PAS_PSL_Right2_PS_Depth configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right2_PAS_PSL_Right2_PS_Depth and \ref GET_PAS_Right2_PAS_PSL_Right2_PS_Depth instead.
 */
#define SIG_PAS_Right2_PAS_PSL_Right2_PS_Depth 1, 0, 7, 12

/**
 * Signal PAS_PSL_Right2_PS_Depth setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right2_PAS_PSL_Right2_PS_Depth or \ref INIT_PAS_Right2 instead.
 */
#define SETUP_PAS_Right2_PAS_PSL_Right2_PS_Depth 1, 0, 7, 12, 0

/**
 * Get signal PAS_PSL_Right2_PS_Depth from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right2_PAS_PSL_Right2_PS_Depth(buf)                                                                    \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 4) | (ubyte)(+(ubyte)((buf[1] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_PSL_Right2_PS_Depth in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right2_PAS_PSL_Right2_PS_Depth(buf, val)                                                               \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 4) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x0f << 4);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right2_PS_Depth in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right2_PAS_PSL_Right2_PS_Depth(buf) SET_PAS_Right2_PAS_PSL_Right2_PS_Depth(buf, 0)

/**
 * Signal PAS_PSL_Right2_PS_Depth value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right2_PAS_PSL_Right2_PS_Depth(x, fmt) ((x)*fmt / 100)

/**
 * Signal PAS_PSL_Right2_PS_Depth raw initial value.
 */
#define START_PAS_Right2_PAS_PSL_Right2_PS_Depth 0

/**
 * Signal PAS_PSL_Right2_PS_Depth raw minimum value.
 */
#define MIN_PAS_Right2_PAS_PSL_Right2_PS_Depth 0

/**
 * Signal PAS_PSL_Right2_PS_Depth raw maximum value.
 */
#define MAX_PAS_Right2_PAS_PSL_Right2_PS_Depth 4095

/**
 * Signal PAS_PSL_Right2_PS_Depth raw offset value.
 */
#define OFF_PAS_Right2_PAS_PSL_Right2_PS_Depth 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus Signal PAS_PSL_Right_PS_SearchingStatus of Message
 * PAS_Right2 (0x326)
 *
 * Right Parking Slot Localization Searching Status
 *
 * Contains the value table \ref ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right2
 * @{
 */

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus and \ref GET_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 *instead.
 */
#define SIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 1, 0, 11, 4

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus or \ref INIT_PAS_Right2 instead.
 */
#define SETUP_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 1, 0, 11, 4, 0

/**
 * Get signal PAS_PSL_Right_PS_SearchingStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0))

/**
 * Set signal PAS_PSL_Right_PS_SearchingStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(buf, val)                                                      \
    {                                                                                                                  \
        buf[1] &= ~(0x0f << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right_PS_SearchingStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(buf) SET_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(buf, 0)

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus raw initial value.
 */
#define START_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 0

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus raw minimum value.
 */
#define MIN_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 0

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus raw maximum value.
 */
#define MAX_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 7

/**
 * Signal PAS_PSL_Right_PS_SearchingStatus raw offset value.
 */
#define OFF_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus Value Table for Signal PAS_PSL_Right_PS_SearchingStatus in
 * Message PAS_Right2 (0x326)
 *
 * Enum values defined for \ref SIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus.
 *
 * @ingroup SIG_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Reseverd.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Reseverd 7

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Failure.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Failure 6

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Inhibited.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Inhibited 5

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry PSL.
 *
 * Information Clear
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_PSL 4

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Stop.
 *
 * Searching
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Stop 3

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Searching.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Searching 2

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Standby.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Standby 1

/**
 * Value table PAS_Right2_PAS_PSL_Right_PS_SearchingStatus entry Initial.
 *
 * @ingroup ENUM_PAS_Right2_PAS_PSL_Right_PS_SearchingStatus
 */
#define PAS_Right2_PAS_PSL_Right_PS_SearchingStatus_Initial 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_Checksum Signal PAS_PSL_Right1_Checksum of Message PAS_Right1 (0x316)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_Checksum and \ref GET_PAS_Right1_PAS_PSL_Right1_Checksum instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_PSL_Right1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_Checksum or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_PSL_Right1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_Checksum(buf) SET_PAS_Right1_PAS_PSL_Right1_Checksum(buf, 0)

/**
 * Signal PAS_PSL_Right1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right1_Checksum raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_Checksum 0

/**
 * Signal PAS_PSL_Right1_Checksum raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_Checksum 0

/**
 * Signal PAS_PSL_Right1_Checksum raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_Checksum 255

/**
 * Signal PAS_PSL_Right1_Checksum raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_RollCnt Signal PAS_PSL_Right1_RollCnt of Message PAS_Right1 (0x316)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_RollCnt and \ref GET_PAS_Right1_PAS_PSL_Right1_RollCnt instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_PSL_Right1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_RollCnt or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_PSL_Right1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_PSL_Right1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_RollCnt(buf) SET_PAS_Right1_PAS_PSL_Right1_RollCnt(buf, 0)

/**
 * Signal PAS_PSL_Right1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right1_RollCnt raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_RollCnt 0

/**
 * Signal PAS_PSL_Right1_RollCnt raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_RollCnt 0

/**
 * Signal PAS_PSL_Right1_RollCnt raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_RollCnt 15

/**
 * Signal PAS_PSL_Right1_RollCnt raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_PS_IndState Signal PAS_PSL_Right1_PS_IndState of Message PAS_Right1 (0x316)
 *
 * Indicates the PSL Mode
 *
 * Contains the value table \ref ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_PS_IndState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_PS_IndState and \ref GET_PAS_Right1_PAS_PSL_Right1_PS_IndState instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_PS_IndState 1, 0, 42, 2

/**
 * Signal PAS_PSL_Right1_PS_IndState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndState or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_PS_IndState 1, 0, 42, 2, 0

/**
 * Get signal PAS_PSL_Right1_PS_IndState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_PS_IndState(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 1) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Right1_PS_IndState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_PS_IndState(buf, val)                                                            \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 1);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 1;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_PS_IndState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndState(buf) SET_PAS_Right1_PAS_PSL_Right1_PS_IndState(buf, 0)

/**
 * Signal PAS_PSL_Right1_PS_IndState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_PS_IndState(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right1_PS_IndState raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_PS_IndState 0

/**
 * Signal PAS_PSL_Right1_PS_IndState raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_PS_IndState 0

/**
 * Signal PAS_PSL_Right1_PS_IndState raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_PS_IndState 3

/**
 * Signal PAS_PSL_Right1_PS_IndState raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_PS_IndState 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState Value Table for Signal PAS_PSL_Right1_PS_IndState in Message
 * PAS_Right1 (0x316)
 *
 * Enum values defined for \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_IndState.
 *
 * @ingroup SIG_PAS_Right1_PAS_PSL_Right1_PS_IndState
 */

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndState entry Found.
 *
 * valid PS
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndState_Found 3

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndState entry PS.
 *
 * Searching
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndState_PS 2

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndState entry Error.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndState_Error 1

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndState entry Inactive.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndState
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndState_Inactive 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_PS_IndType Signal PAS_PSL_Right1_PS_IndType of Message PAS_Right1 (0x316)
 *
 * Indicates the parking slot type
 *
 * Contains the value table \ref ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_PS_IndType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_PS_IndType and \ref GET_PAS_Right1_PAS_PSL_Right1_PS_IndType instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_PS_IndType 1, 0, 44, 2

/**
 * Signal PAS_PSL_Right1_PS_IndType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndType or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_PS_IndType 1, 0, 44, 2, 0

/**
 * Get signal PAS_PSL_Right1_PS_IndType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_PS_IndType(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 3) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Right1_PS_IndType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_PS_IndType(buf, val)                                                             \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 3);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_PS_IndType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_PS_IndType(buf) SET_PAS_Right1_PAS_PSL_Right1_PS_IndType(buf, 0)

/**
 * Signal PAS_PSL_Right1_PS_IndType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_PS_IndType(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right1_PS_IndType raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_PS_IndType 0

/**
 * Signal PAS_PSL_Right1_PS_IndType raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_PS_IndType 0

/**
 * Signal PAS_PSL_Right1_PS_IndType raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_PS_IndType 3

/**
 * Signal PAS_PSL_Right1_PS_IndType raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_PS_IndType 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType Value Table for Signal PAS_PSL_Right1_PS_IndType in Message
 * PAS_Right1 (0x316)
 *
 * Enum values defined for \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_IndType.
 *
 * @ingroup SIG_PAS_Right1_PAS_PSL_Right1_PS_IndType
 */

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndType entry Reserved.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndType_Reserved 3

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndType entry Cross.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndType_Cross 2

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndType entry Parallel.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndType_Parallel 1

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_IndType entry No.
 *
 * PS
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_IndType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_IndType_No 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound Signal PAS_PSL_Right_PSIndParallelFound of Message
 * PAS_Right1 (0x316)
 *
 * Indicates if the parallel parking slot found in Right side
 *
 * Contains the value table \ref ENUM_PAS_Right1_PAS_PSL_Right_PSIndParallelFound.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right_PSIndParallelFound configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right_PSIndParallelFound and \ref GET_PAS_Right1_PAS_PSL_Right_PSIndParallelFound
 *instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 1, 0, 46, 1

/**
 * Signal PAS_PSL_Right_PSIndParallelFound setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 1, 0, 46, 1, 0

/**
 * Get signal PAS_PSL_Right_PSIndParallelFound from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_PSL_Right_PSIndParallelFound in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(buf, val)                                                      \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 6);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right_PSIndParallelFound in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(buf) SET_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(buf, 0)

/**
 * Signal PAS_PSL_Right_PSIndParallelFound value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right_PSIndParallelFound(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right_PSIndParallelFound raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 0

/**
 * Signal PAS_PSL_Right_PSIndParallelFound raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 0

/**
 * Signal PAS_PSL_Right_PSIndParallelFound raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 1

/**
 * Signal PAS_PSL_Right_PSIndParallelFound raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right_PSIndParallelFound 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right1_PAS_PSL_Right_PSIndParallelFound Value Table for Signal PAS_PSL_Right_PSIndParallelFound in
 * Message PAS_Right1 (0x316)
 *
 * Enum values defined for \ref SIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound.
 *
 * @ingroup SIG_PAS_Right1_PAS_PSL_Right_PSIndParallelFound
 */

/**
 * Value table PAS_Right1_PAS_PSL_Right_PSIndParallelFound entry PS.
 *
 * found
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right_PSIndParallelFound
 */
#define PAS_Right1_PAS_PSL_Right_PSIndParallelFound_PS 1

/**
 * Value table PAS_Right1_PAS_PSL_Right_PSIndParallelFound entry No.
 *
 * PS found
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right_PSIndParallelFound
 */
#define PAS_Right1_PAS_PSL_Right_PSIndParallelFound_No 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound Signal PAS_PSL_Right_PS_IndCrossFound of Message PAS_Right1
 * (0x316)
 *
 * Indicates if the cross parking slot found in Right side
 *
 * Contains the value table \ref ENUM_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound and \ref GET_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound
 *instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 1, 0, 47, 1

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 1, 0, 47, 1, 0

/**
 * Get signal PAS_PSL_Right_PS_IndCrossFound from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_PSL_Right_PS_IndCrossFound in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(buf, val)                                                        \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 7);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right_PS_IndCrossFound in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(buf) SET_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(buf, 0)

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 0

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 0

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 1

/**
 * Signal PAS_PSL_Right_PS_IndCrossFound raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound Value Table for Signal PAS_PSL_Right_PS_IndCrossFound in
 * Message PAS_Right1 (0x316)
 *
 * Enum values defined for \ref SIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound.
 *
 * @ingroup SIG_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound
 */

/**
 * Value table PAS_Right1_PAS_PSL_Right_PS_IndCrossFound entry PS.
 *
 * found
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound
 */
#define PAS_Right1_PAS_PSL_Right_PS_IndCrossFound_PS 1

/**
 * Value table PAS_Right1_PAS_PSL_Right_PS_IndCrossFound entry No.
 *
 * PS found
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right_PS_IndCrossFound
 */
#define PAS_Right1_PAS_PSL_Right_PS_IndCrossFound_No 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation Signal PAS_PSL_Right1_PS_Orientation of Message PAS_Right1
 * (0x316)
 *
 * orientation of the parking-space
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_PS_Orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_PS_Orientation and \ref GET_PAS_Right1_PAS_PSL_Right1_PS_Orientation instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation 1, 0, 31, 16

/**
 * Signal PAS_PSL_Right1_PS_Orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_PS_Orientation 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Right1_PS_Orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_PS_Orientation(buf)                                                              \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right1_PS_Orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_PS_Orientation(buf, val)                                                         \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_PS_Orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Orientation(buf) SET_PAS_Right1_PAS_PSL_Right1_PS_Orientation(buf, 0)

/**
 * Signal PAS_PSL_Right1_PS_Orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_PS_Orientation(x, fmt) ((x)*fmt + fmt * (-32768))

/**
 * Signal PAS_PSL_Right1_PS_Orientation raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_PS_Orientation 0

/**
 * Signal PAS_PSL_Right1_PS_Orientation raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_PS_Orientation 0

/**
 * Signal PAS_PSL_Right1_PS_Orientation raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_PS_Orientation 65535

/**
 * Signal PAS_PSL_Right1_PS_Orientation raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_PS_Orientation -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_PS_Length Signal PAS_PSL_Right1_PS_Length of Message PAS_Right1 (0x316)
 *
 * Right parking slot length
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_PS_Length configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_PS_Length and \ref GET_PAS_Right1_PAS_PSL_Right1_PS_Length instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_PS_Length 1, 0, 11, 12

/**
 * Signal PAS_PSL_Right1_PS_Length setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Length or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_PS_Length 1, 0, 11, 12, 0

/**
 * Get signal PAS_PSL_Right1_PS_Length from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_PS_Length(buf)                                                                   \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right1_PS_Length in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_PS_Length(buf, val)                                                              \
    {                                                                                                                  \
        buf[1] &= ~(0x0f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_PS_Length in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_PS_Length(buf) SET_PAS_Right1_PAS_PSL_Right1_PS_Length(buf, 0)

/**
 * Signal PAS_PSL_Right1_PS_Length value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_PS_Length(x, fmt) ((x)*fmt / 100)

/**
 * Signal PAS_PSL_Right1_PS_Length raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_PS_Length 0

/**
 * Signal PAS_PSL_Right1_PS_Length raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_PS_Length 0

/**
 * Signal PAS_PSL_Right1_PS_Length raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_PS_Length 4095

/**
 * Signal PAS_PSL_Right1_PS_Length raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_PS_Length 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType Signal PAS_PSL_Right1_PS_LatRefType of Message PAS_Right1
 * (0x316)
 *
 * Right parking slot lateral reference type
 *
 * Contains the value table \ref ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right1_PS_LatRefType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right1_PS_LatRefType and \ref GET_PAS_Right1_PAS_PSL_Right1_PS_LatRefType instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 1, 0, 15, 2

/**
 * Signal PAS_PSL_Right1_PS_LatRefType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 1, 0, 15, 2, 0

/**
 * Get signal PAS_PSL_Right1_PS_LatRefType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Right1_PS_LatRefType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(buf, val)                                                          \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right1_PS_LatRefType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(buf) SET_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(buf, 0)

/**
 * Signal PAS_PSL_Right1_PS_LatRefType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right1_PS_LatRefType(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right1_PS_LatRefType raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 0

/**
 * Signal PAS_PSL_Right1_PS_LatRefType raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 0

/**
 * Signal PAS_PSL_Right1_PS_LatRefType raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 3

/**
 * Signal PAS_PSL_Right1_PS_LatRefType raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right1_PS_LatRefType 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType Value Table for Signal PAS_PSL_Right1_PS_LatRefType in Message
 * PAS_Right1 (0x316)
 *
 * Enum values defined for \ref SIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType.
 *
 * @ingroup SIG_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 */

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_LatRefType entry Reserved.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_LatRefType_Reserved 3

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_LatRefType entry LatRefHigh.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_LatRefType_LatRefHigh 2

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_LatRefType entry LatRefLow.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_LatRefType_LatRefLow 1

/**
 * Value table PAS_Right1_PAS_PSL_Right1_PS_LatRefType entry LatRefVirtual.
 *
 * @ingroup ENUM_PAS_Right1_PAS_PSL_Right1_PS_LatRefType
 */
#define PAS_Right1_PAS_PSL_Right1_PS_LatRefType_LatRefVirtual 0

/**
 * @defgroup SIG_PAS_Right1_PAS_PSL_Right_PS_ID Signal PAS_PSL_Right_PS_ID of Message PAS_Right1 (0x316)
 *
 * Right parking slot ID
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Right1
 * @{
 */

/**
 * Signal PAS_PSL_Right_PS_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Right1_PAS_PSL_Right_PS_ID and \ref GET_PAS_Right1_PAS_PSL_Right_PS_ID instead.
 */
#define SIG_PAS_Right1_PAS_PSL_Right_PS_ID 1, 0, 7, 8

/**
 * Signal PAS_PSL_Right_PS_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Right1_PAS_PSL_Right_PS_ID or \ref INIT_PAS_Right1 instead.
 */
#define SETUP_PAS_Right1_PAS_PSL_Right_PS_ID 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Right_PS_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Right1_PAS_PSL_Right_PS_ID(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Right_PS_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Right1_PAS_PSL_Right_PS_ID(buf, val)                                                                   \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Right_PS_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Right1_PAS_PSL_Right_PS_ID(buf) SET_PAS_Right1_PAS_PSL_Right_PS_ID(buf, 0)

/**
 * Signal PAS_PSL_Right_PS_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Right1_PAS_PSL_Right_PS_ID(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Right_PS_ID raw initial value.
 */
#define START_PAS_Right1_PAS_PSL_Right_PS_ID 0

/**
 * Signal PAS_PSL_Right_PS_ID raw minimum value.
 */
#define MIN_PAS_Right1_PAS_PSL_Right_PS_ID 0

/**
 * Signal PAS_PSL_Right_PS_ID raw maximum value.
 */
#define MAX_PAS_Right1_PAS_PSL_Right_PS_ID 255

/**
 * Signal PAS_PSL_Right_PS_ID raw offset value.
 */
#define OFF_PAS_Right1_PAS_PSL_Right_PS_ID 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum Signal PAS_Left3_Obj2_Checksum of Message PAS_Left3_Obj2 (0x334)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj2
 * @{
 */

/**
 * Signal PAS_Left3_Obj2_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum and \ref GET_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum instead.
 */
#define SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Left3_Obj2_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum or \ref INIT_PAS_Left3_Obj2 instead.
 */
#define SETUP_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Left3_Obj2_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Left3_Obj2_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(buf, val)                                                           \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Left3_Obj2_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(buf) SET_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(buf, 0)

/**
 * Signal PAS_Left3_Obj2_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left3_Obj2_Checksum raw initial value.
 */
#define START_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 0

/**
 * Signal PAS_Left3_Obj2_Checksum raw minimum value.
 */
#define MIN_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 0

/**
 * Signal PAS_Left3_Obj2_Checksum raw maximum value.
 */
#define MAX_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 255

/**
 * Signal PAS_Left3_Obj2_Checksum raw offset value.
 */
#define OFF_PAS_Left3_Obj2_PAS_Left3_Obj2_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt Signal PAS_Left3_Obj2_RollCnt of Message PAS_Left3_Obj2 (0x334)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj2
 * @{
 */

/**
 * Signal PAS_Left3_Obj2_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt and \ref GET_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt instead.
 */
#define SIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Left3_Obj2_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt or \ref INIT_PAS_Left3_Obj2 instead.
 */
#define SETUP_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Left3_Obj2_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Left3_Obj2_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(buf, val)                                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Left3_Obj2_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(buf) SET_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(buf, 0)

/**
 * Signal PAS_Left3_Obj2_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left3_Obj2_RollCnt raw initial value.
 */
#define START_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 0

/**
 * Signal PAS_Left3_Obj2_RollCnt raw minimum value.
 */
#define MIN_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 0

/**
 * Signal PAS_Left3_Obj2_RollCnt raw maximum value.
 */
#define MAX_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 15

/**
 * Signal PAS_Left3_Obj2_RollCnt raw offset value.
 */
#define OFF_PAS_Left3_Obj2_PAS_Left3_Obj2_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir Signal PAS_PSL_Left3_Obj2_Y_Dir of Message PAS_Left3_Obj2
 * (0x334)
 *
 * the corner of the parking space of second object (y-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir and \ref GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir instead.
 */
#define SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir 1, 0, 31, 16

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir or \ref INIT_PAS_Left3_Obj2 instead.
 */
#define SETUP_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Left3_Obj2_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(buf)                                                               \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj2_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(buf, val)                                                          \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj2_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(buf) SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir raw initial value.
 */
#define START_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir raw minimum value.
 */
#define MIN_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir raw maximum value.
 */
#define MAX_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir 65535

/**
 * Signal PAS_PSL_Left3_Obj2_Y_Dir raw offset value.
 */
#define OFF_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_Y_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir Signal PAS_PSL_Left3_Obj2_X_Dir of Message PAS_Left3_Obj2
 * (0x334)
 *
 * the corner of the parking space of second object (x-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir and \ref GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir instead.
 */
#define SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir 1, 0, 15, 16

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir or \ref INIT_PAS_Left3_Obj2 instead.
 */
#define SETUP_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir 1, 0, 15, 16, 0

/**
 * Get signal PAS_PSL_Left3_Obj2_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(buf)                                                               \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj2_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(buf, val)                                                          \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj2_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(buf) SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir raw initial value.
 */
#define START_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir raw minimum value.
 */
#define MIN_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir raw maximum value.
 */
#define MAX_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir 65535

/**
 * Signal PAS_PSL_Left3_Obj2_X_Dir raw offset value.
 */
#define OFF_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_X_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation Signal PAS_PSL_Left3_Obj2_orientation of Message
 * PAS_Left3_Obj2 (0x334)
 *
 * object 2 orientation
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj2
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj2_orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation and \ref
 *GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation instead.
 */
#define SIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation 1, 0, 7, 8

/**
 * Signal PAS_PSL_Left3_Obj2_orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation or \ref INIT_PAS_Left3_Obj2 instead.
 */
#define SETUP_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Left3_Obj2_orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj2_orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(buf, val)                                                    \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj2_orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(buf)                                                     \
    SET_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj2_orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation(x, fmt) ((x)*fmt + fmt * (-128))

/**
 * Signal PAS_PSL_Left3_Obj2_orientation raw initial value.
 */
#define START_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation 0

/**
 * Signal PAS_PSL_Left3_Obj2_orientation raw minimum value.
 */
#define MIN_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation 0

/**
 * Signal PAS_PSL_Left3_Obj2_orientation raw maximum value.
 */
#define MAX_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation 255

/**
 * Signal PAS_PSL_Left3_Obj2_orientation raw offset value.
 */
#define OFF_PAS_Left3_Obj2_PAS_PSL_Left3_Obj2_orientation -128

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum Signal PAS_Left3_Obj1_Checksum of Message PAS_Left3_Obj1 (0x335)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj1
 * @{
 */

/**
 * Signal PAS_Left3_Obj1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum and \ref GET_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum instead.
 */
#define SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Left3_Obj1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum or \ref INIT_PAS_Left3_Obj1 instead.
 */
#define SETUP_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Left3_Obj1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Left3_Obj1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(buf, val)                                                           \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Left3_Obj1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(buf) SET_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(buf, 0)

/**
 * Signal PAS_Left3_Obj1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left3_Obj1_Checksum raw initial value.
 */
#define START_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 0

/**
 * Signal PAS_Left3_Obj1_Checksum raw minimum value.
 */
#define MIN_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 0

/**
 * Signal PAS_Left3_Obj1_Checksum raw maximum value.
 */
#define MAX_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 255

/**
 * Signal PAS_Left3_Obj1_Checksum raw offset value.
 */
#define OFF_PAS_Left3_Obj1_PAS_Left3_Obj1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt Signal PAS_Left3_Obj1_RollCnt of Message PAS_Left3_Obj1 (0x335)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj1
 * @{
 */

/**
 * Signal PAS_Left3_Obj1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt and \ref GET_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt instead.
 */
#define SIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Left3_Obj1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt or \ref INIT_PAS_Left3_Obj1 instead.
 */
#define SETUP_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Left3_Obj1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Left3_Obj1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(buf, val)                                                            \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Left3_Obj1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(buf) SET_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(buf, 0)

/**
 * Signal PAS_Left3_Obj1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left3_Obj1_RollCnt raw initial value.
 */
#define START_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 0

/**
 * Signal PAS_Left3_Obj1_RollCnt raw minimum value.
 */
#define MIN_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 0

/**
 * Signal PAS_Left3_Obj1_RollCnt raw maximum value.
 */
#define MAX_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 15

/**
 * Signal PAS_Left3_Obj1_RollCnt raw offset value.
 */
#define OFF_PAS_Left3_Obj1_PAS_Left3_Obj1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir Signal PAS_PSL_Left3_Obj1_Y_Dir of Message PAS_Left3_Obj1
 * (0x335)
 *
 * the corner of the parking space of first object (x-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir and \ref GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir instead.
 */
#define SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir 1, 0, 31, 16

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir or \ref INIT_PAS_Left3_Obj1 instead.
 */
#define SETUP_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Left3_Obj1_Y_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(buf)                                                               \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj1_Y_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(buf, val)                                                          \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj1_Y_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(buf) SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir raw initial value.
 */
#define START_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir raw minimum value.
 */
#define MIN_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir raw maximum value.
 */
#define MAX_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir 65535

/**
 * Signal PAS_PSL_Left3_Obj1_Y_Dir raw offset value.
 */
#define OFF_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_Y_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir Signal PAS_PSL_Left3_Obj1_X_Dir of Message PAS_Left3_Obj1
 * (0x335)
 *
 * the corner of the parking space of first object (x-direction)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir and \ref GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir instead.
 */
#define SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir 1, 0, 15, 16

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir or \ref INIT_PAS_Left3_Obj1 instead.
 */
#define SETUP_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir 1, 0, 15, 16, 0

/**
 * Get signal PAS_PSL_Left3_Obj1_X_Dir from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(buf)                                                               \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj1_X_Dir in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(buf, val)                                                          \
    {                                                                                                                  \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj1_X_Dir in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(buf) SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir raw initial value.
 */
#define START_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir raw minimum value.
 */
#define MIN_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir 0

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir raw maximum value.
 */
#define MAX_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir 65535

/**
 * Signal PAS_PSL_Left3_Obj1_X_Dir raw offset value.
 */
#define OFF_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_X_Dir -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation Signal PAS_PSL_Left3_Obj1_orientation of Message
 * PAS_Left3_Obj1 (0x335)
 *
 * object 1 orientation
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left3_Obj1
 * @{
 */

/**
 * Signal PAS_PSL_Left3_Obj1_orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation and \ref
 *GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation instead.
 */
#define SIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation 1, 0, 7, 8

/**
 * Signal PAS_PSL_Left3_Obj1_orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation or \ref INIT_PAS_Left3_Obj1 instead.
 */
#define SETUP_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Left3_Obj1_orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left3_Obj1_orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(buf, val)                                                    \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left3_Obj1_orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(buf)                                                     \
    SET_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(buf, 0)

/**
 * Signal PAS_PSL_Left3_Obj1_orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation(x, fmt) ((x)*fmt + fmt * (-128))

/**
 * Signal PAS_PSL_Left3_Obj1_orientation raw initial value.
 */
#define START_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation 0

/**
 * Signal PAS_PSL_Left3_Obj1_orientation raw minimum value.
 */
#define MIN_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation 0

/**
 * Signal PAS_PSL_Left3_Obj1_orientation raw maximum value.
 */
#define MAX_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation 255

/**
 * Signal PAS_PSL_Left3_Obj1_orientation raw offset value.
 */
#define OFF_PAS_Left3_Obj1_PAS_PSL_Left3_Obj1_orientation -128

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left2_PAS_PSL_Left2_PS_depth Signal PAS_PSL_Left2_PS_depth of Message PAS_Left2 (0x325)
 *
 * Parking space depth for left side:
 * 0 = no valid PS
 * >0 = PS depth
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left2
 * @{
 */

/**
 * Signal PAS_PSL_Left2_PS_depth configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left2_PAS_PSL_Left2_PS_depth and \ref GET_PAS_Left2_PAS_PSL_Left2_PS_depth instead.
 */
#define SIG_PAS_Left2_PAS_PSL_Left2_PS_depth 1, 0, 7, 12

/**
 * Signal PAS_PSL_Left2_PS_depth setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left2_PAS_PSL_Left2_PS_depth or \ref INIT_PAS_Left2 instead.
 */
#define SETUP_PAS_Left2_PAS_PSL_Left2_PS_depth 1, 0, 7, 12, 0

/**
 * Get signal PAS_PSL_Left2_PS_depth from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left2_PAS_PSL_Left2_PS_depth(buf)                                                                      \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 4) | (ubyte)(+(ubyte)((buf[1] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_PSL_Left2_PS_depth in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left2_PAS_PSL_Left2_PS_depth(buf, val)                                                                 \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 4) & 0xff) << 0;                                                            \
        buf[1] &= ~(0x0f << 4);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left2_PS_depth in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left2_PAS_PSL_Left2_PS_depth(buf) SET_PAS_Left2_PAS_PSL_Left2_PS_depth(buf, 0)

/**
 * Signal PAS_PSL_Left2_PS_depth value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left2_PAS_PSL_Left2_PS_depth(x, fmt) ((x)*fmt / 100)

/**
 * Signal PAS_PSL_Left2_PS_depth raw initial value.
 */
#define START_PAS_Left2_PAS_PSL_Left2_PS_depth 0

/**
 * Signal PAS_PSL_Left2_PS_depth raw minimum value.
 */
#define MIN_PAS_Left2_PAS_PSL_Left2_PS_depth 0

/**
 * Signal PAS_PSL_Left2_PS_depth raw maximum value.
 */
#define MAX_PAS_Left2_PAS_PSL_Left2_PS_depth 4095

/**
 * Signal PAS_PSL_Left2_PS_depth raw offset value.
 */
#define OFF_PAS_Left2_PAS_PSL_Left2_PS_depth 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus Signal PAS_PSL_Left2_SearchingStatus of Message PAS_Left2
 * (0x325)
 *
 * Left Parking Slot Localization Searching Status
 *
 * Contains the value table \ref ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left2
 * @{
 */

/**
 * Signal PAS_PSL_Left2_SearchingStatus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left2_PAS_PSL_Left2_SearchingStatus and \ref GET_PAS_Left2_PAS_PSL_Left2_SearchingStatus instead.
 */
#define SIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus 1, 0, 11, 4

/**
 * Signal PAS_PSL_Left2_SearchingStatus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus or \ref INIT_PAS_Left2 instead.
 */
#define SETUP_PAS_Left2_PAS_PSL_Left2_SearchingStatus 1, 0, 11, 4, 0

/**
 * Get signal PAS_PSL_Left2_SearchingStatus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left2_PAS_PSL_Left2_SearchingStatus(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 0) & 0x0f) << 0))

/**
 * Set signal PAS_PSL_Left2_SearchingStatus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left2_PAS_PSL_Left2_SearchingStatus(buf, val)                                                          \
    {                                                                                                                  \
        buf[1] &= ~(0x0f << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x0f) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left2_SearchingStatus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus(buf) SET_PAS_Left2_PAS_PSL_Left2_SearchingStatus(buf, 0)

/**
 * Signal PAS_PSL_Left2_SearchingStatus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left2_PAS_PSL_Left2_SearchingStatus(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left2_SearchingStatus raw initial value.
 */
#define START_PAS_Left2_PAS_PSL_Left2_SearchingStatus 0

/**
 * Signal PAS_PSL_Left2_SearchingStatus raw minimum value.
 */
#define MIN_PAS_Left2_PAS_PSL_Left2_SearchingStatus 0

/**
 * Signal PAS_PSL_Left2_SearchingStatus raw maximum value.
 */
#define MAX_PAS_Left2_PAS_PSL_Left2_SearchingStatus 7

/**
 * Signal PAS_PSL_Left2_SearchingStatus raw offset value.
 */
#define OFF_PAS_Left2_PAS_PSL_Left2_SearchingStatus 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus Value Table for Signal PAS_PSL_Left2_SearchingStatus in
 * Message PAS_Left2 (0x325)
 *
 * Enum values defined for \ref SIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus.
 *
 * @ingroup SIG_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Reseverd.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Reseverd 7

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Failure.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Failure 6

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Inhibited.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Inhibited 5

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry PSL.
 *
 * Information Clear
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_PSL 4

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Stop.
 *
 * Searching
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Stop 3

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Searching.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Searching 2

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Standby.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Standby 1

/**
 * Value table PAS_Left2_PAS_PSL_Left2_SearchingStatus entry Initial.
 *
 * @ingroup ENUM_PAS_Left2_PAS_PSL_Left2_SearchingStatus
 */
#define PAS_Left2_PAS_PSL_Left2_SearchingStatus_Initial 0

/**
 * @defgroup SIG_PAS_Left1_PAS_Left1_Checksum Signal PAS_Left1_Checksum of Message PAS_Left1 (0x315)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_Left1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_Left1_Checksum and \ref GET_PAS_Left1_PAS_Left1_Checksum instead.
 */
#define SIG_PAS_Left1_PAS_Left1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_Left1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_Left1_Checksum or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_Left1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_Left1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_Left1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Left1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_Left1_Checksum(buf, val)                                                                     \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Left1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_Left1_Checksum(buf) SET_PAS_Left1_PAS_Left1_Checksum(buf, 0)

/**
 * Signal PAS_Left1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_Left1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left1_Checksum raw initial value.
 */
#define START_PAS_Left1_PAS_Left1_Checksum 0

/**
 * Signal PAS_Left1_Checksum raw minimum value.
 */
#define MIN_PAS_Left1_PAS_Left1_Checksum 0

/**
 * Signal PAS_Left1_Checksum raw maximum value.
 */
#define MAX_PAS_Left1_PAS_Left1_Checksum 255

/**
 * Signal PAS_Left1_Checksum raw offset value.
 */
#define OFF_PAS_Left1_PAS_Left1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left1_PAS_Left1_RollCnt Signal PAS_Left1_RollCnt of Message PAS_Left1 (0x315)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_Left1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_Left1_RollCnt and \ref GET_PAS_Left1_PAS_Left1_RollCnt instead.
 */
#define SIG_PAS_Left1_PAS_Left1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_Left1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_Left1_RollCnt or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_Left1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_Left1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_Left1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_Left1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_Left1_RollCnt(buf, val)                                                                      \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_Left1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_Left1_RollCnt(buf) SET_PAS_Left1_PAS_Left1_RollCnt(buf, 0)

/**
 * Signal PAS_Left1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_Left1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Left1_RollCnt raw initial value.
 */
#define START_PAS_Left1_PAS_Left1_RollCnt 0

/**
 * Signal PAS_Left1_RollCnt raw minimum value.
 */
#define MIN_PAS_Left1_PAS_Left1_RollCnt 0

/**
 * Signal PAS_Left1_RollCnt raw maximum value.
 */
#define MAX_PAS_Left1_PAS_Left1_RollCnt 15

/**
 * Signal PAS_Left1_RollCnt raw offset value.
 */
#define OFF_PAS_Left1_PAS_Left1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left1_PS_IndState Signal PAS_PSL_Left1_PS_IndState of Message PAS_Left1 (0x315)
 *
 * Indicates the PSL Mode
 *
 * Contains the value table \ref ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left1_PS_IndState configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left1_PS_IndState and \ref GET_PAS_Left1_PAS_PSL_Left1_PS_IndState instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left1_PS_IndState 1, 0, 42, 2

/**
 * Signal PAS_PSL_Left1_PS_IndState setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndState or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left1_PS_IndState 1, 0, 42, 2, 0

/**
 * Get signal PAS_PSL_Left1_PS_IndState from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left1_PS_IndState(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 1) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Left1_PS_IndState in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left1_PS_IndState(buf, val)                                                              \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 1);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 1;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left1_PS_IndState in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndState(buf) SET_PAS_Left1_PAS_PSL_Left1_PS_IndState(buf, 0)

/**
 * Signal PAS_PSL_Left1_PS_IndState value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left1_PS_IndState(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left1_PS_IndState raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left1_PS_IndState 0

/**
 * Signal PAS_PSL_Left1_PS_IndState raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left1_PS_IndState 0

/**
 * Signal PAS_PSL_Left1_PS_IndState raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left1_PS_IndState 3

/**
 * Signal PAS_PSL_Left1_PS_IndState raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left1_PS_IndState 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState Value Table for Signal PAS_PSL_Left1_PS_IndState in Message
 * PAS_Left1 (0x315)
 *
 * Enum values defined for \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_IndState.
 *
 * @ingroup SIG_PAS_Left1_PAS_PSL_Left1_PS_IndState
 */

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndState entry Found.
 *
 * valid PS
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndState_Found 3

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndState entry PS.
 *
 * Searching
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndState_PS 2

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndState entry Error.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndState_Error 1

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndState entry Inactive.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndState
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndState_Inactive 0

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left1_PS_IndType Signal PAS_PSL_Left1_PS_IndType of Message PAS_Left1 (0x315)
 *
 * Indicates the parking slot type
 *
 * Contains the value table \ref ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left1_PS_IndType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left1_PS_IndType and \ref GET_PAS_Left1_PAS_PSL_Left1_PS_IndType instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left1_PS_IndType 1, 0, 44, 2

/**
 * Signal PAS_PSL_Left1_PS_IndType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndType or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left1_PS_IndType 1, 0, 44, 2, 0

/**
 * Get signal PAS_PSL_Left1_PS_IndType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left1_PS_IndType(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 3) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Left1_PS_IndType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left1_PS_IndType(buf, val)                                                               \
    {                                                                                                                  \
        buf[5] &= ~(0x03 << 3);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left1_PS_IndType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left1_PS_IndType(buf) SET_PAS_Left1_PAS_PSL_Left1_PS_IndType(buf, 0)

/**
 * Signal PAS_PSL_Left1_PS_IndType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left1_PS_IndType(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left1_PS_IndType raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left1_PS_IndType 0

/**
 * Signal PAS_PSL_Left1_PS_IndType raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left1_PS_IndType 0

/**
 * Signal PAS_PSL_Left1_PS_IndType raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left1_PS_IndType 3

/**
 * Signal PAS_PSL_Left1_PS_IndType raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left1_PS_IndType 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType Value Table for Signal PAS_PSL_Left1_PS_IndType in Message
 * PAS_Left1 (0x315)
 *
 * Enum values defined for \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_IndType.
 *
 * @ingroup SIG_PAS_Left1_PAS_PSL_Left1_PS_IndType
 */

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndType entry Reserved.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndType_Reserved 3

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndType entry Cross.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndType_Cross 2

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndType entry Parallel.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndType_Parallel 1

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_IndType entry No.
 *
 * PS
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_IndType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_IndType_No 0

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound Signal PAS_PSL_Left_PS_IndParallelFound of Message PAS_Left1
 * (0x315)
 *
 * Indicates if the parallel parking slot found in left side
 *
 * Contains the value table \ref ENUM_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound and \ref GET_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound
 *instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 1, 0, 46, 1

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 1, 0, 46, 1, 0

/**
 * Get signal PAS_PSL_Left_PS_IndParallelFound from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 6) & 0x01) << 0))

/**
 * Set signal PAS_PSL_Left_PS_IndParallelFound in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(buf, val)                                                       \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 6);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 6;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left_PS_IndParallelFound in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(buf) SET_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(buf, 0)

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 0

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 0

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 1

/**
 * Signal PAS_PSL_Left_PS_IndParallelFound raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound Value Table for Signal PAS_PSL_Left_PS_IndParallelFound in
 * Message PAS_Left1 (0x315)
 *
 * Enum values defined for \ref SIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound.
 *
 * @ingroup SIG_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound
 */

/**
 * Value table PAS_Left1_PAS_PSL_Left_PS_IndParallelFound entry PS.
 *
 * found
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound
 */
#define PAS_Left1_PAS_PSL_Left_PS_IndParallelFound_PS 1

/**
 * Value table PAS_Left1_PAS_PSL_Left_PS_IndParallelFound entry No.
 *
 * PS found
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndParallelFound
 */
#define PAS_Left1_PAS_PSL_Left_PS_IndParallelFound_No 0

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound Signal PAS_PSL_Left_PS_IndCrossFound of Message PAS_Left1
 * (0x315)
 *
 * Indicates if the cross parking slot found in left side
 *
 * Contains the value table \ref ENUM_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound and \ref GET_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 1, 0, 47, 1

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 1, 0, 47, 1, 0

/**
 * Get signal PAS_PSL_Left_PS_IndCrossFound from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(buf) (0 | (ubyte)(+(ubyte)((buf[5] >> 7) & 0x01) << 0))

/**
 * Set signal PAS_PSL_Left_PS_IndCrossFound in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(buf, val)                                                          \
    {                                                                                                                  \
        buf[5] &= ~(0x01 << 7);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 7;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left_PS_IndCrossFound in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(buf) SET_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(buf, 0)

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 0

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 0

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 1

/**
 * Signal PAS_PSL_Left_PS_IndCrossFound raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound Value Table for Signal PAS_PSL_Left_PS_IndCrossFound in
 * Message PAS_Left1 (0x315)
 *
 * Enum values defined for \ref SIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound.
 *
 * @ingroup SIG_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound
 */

/**
 * Value table PAS_Left1_PAS_PSL_Left_PS_IndCrossFound entry PS.
 *
 * found
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound
 */
#define PAS_Left1_PAS_PSL_Left_PS_IndCrossFound_PS 1

/**
 * Value table PAS_Left1_PAS_PSL_Left_PS_IndCrossFound entry No.
 *
 * PS found
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left_PS_IndCrossFound
 */
#define PAS_Left1_PAS_PSL_Left_PS_IndCrossFound_No 0

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation Signal PAS_PSL_Left1_PS_Orientation of Message PAS_Left1 (0x315)
 *
 * orientation of the parking-space
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left1_PS_Orientation configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left1_PS_Orientation and \ref GET_PAS_Left1_PAS_PSL_Left1_PS_Orientation instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation 1, 0, 31, 16

/**
 * Signal PAS_PSL_Left1_PS_Orientation setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left1_PS_Orientation 1, 0, 31, 16, 0

/**
 * Get signal PAS_PSL_Left1_PS_Orientation from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left1_PS_Orientation(buf)                                                                \
    (0 | (uword)(+(uword)((buf[3] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[4] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left1_PS_Orientation in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left1_PS_Orientation(buf, val)                                                           \
    {                                                                                                                  \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left1_PS_Orientation in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Orientation(buf) SET_PAS_Left1_PAS_PSL_Left1_PS_Orientation(buf, 0)

/**
 * Signal PAS_PSL_Left1_PS_Orientation value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left1_PS_Orientation(x, fmt) ((x)*fmt + fmt * (-32768))

/**
 * Signal PAS_PSL_Left1_PS_Orientation raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left1_PS_Orientation 0

/**
 * Signal PAS_PSL_Left1_PS_Orientation raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left1_PS_Orientation 0

/**
 * Signal PAS_PSL_Left1_PS_Orientation raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left1_PS_Orientation 65535

/**
 * Signal PAS_PSL_Left1_PS_Orientation raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left1_PS_Orientation -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left1_PS_Length Signal PAS_PSL_Left1_PS_Length of Message PAS_Left1 (0x315)
 *
 * Left parking slot length
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left1_PS_Length configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left1_PS_Length and \ref GET_PAS_Left1_PAS_PSL_Left1_PS_Length instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left1_PS_Length 1, 0, 11, 12

/**
 * Signal PAS_PSL_Left1_PS_Length setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Length or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left1_PS_Length 1, 0, 11, 12, 0

/**
 * Get signal PAS_PSL_Left1_PS_Length from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left1_PS_Length(buf)                                                                     \
    (0 | (uword)(+(uword)((buf[1] >> 0) & 0x0f) << 8) | (ubyte)(+(ubyte)((buf[2] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left1_PS_Length in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left1_PS_Length(buf, val)                                                                \
    {                                                                                                                  \
        buf[1] &= ~(0x0f << 0);                                                                                        \
        buf[1] |= ((ubyte)((uword)(val) >> 8) & 0x0f) << 0;                                                            \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left1_PS_Length in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left1_PS_Length(buf) SET_PAS_Left1_PAS_PSL_Left1_PS_Length(buf, 0)

/**
 * Signal PAS_PSL_Left1_PS_Length value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left1_PS_Length(x, fmt) ((x)*fmt / 100)

/**
 * Signal PAS_PSL_Left1_PS_Length raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left1_PS_Length 0

/**
 * Signal PAS_PSL_Left1_PS_Length raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left1_PS_Length 0

/**
 * Signal PAS_PSL_Left1_PS_Length raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left1_PS_Length 4095

/**
 * Signal PAS_PSL_Left1_PS_Length raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left1_PS_Length 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType Signal PAS_PSL_Left1_PS_LatRefType of Message PAS_Left1 (0x315)
 *
 * Left parking slot lateral reference type
 *
 * Contains the value table \ref ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left1_PS_LatRefType configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left1_PS_LatRefType and \ref GET_PAS_Left1_PAS_PSL_Left1_PS_LatRefType instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 1, 0, 15, 2

/**
 * Signal PAS_PSL_Left1_PS_LatRefType setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 1, 0, 15, 2, 0

/**
 * Get signal PAS_PSL_Left1_PS_LatRefType from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(buf) (0 | (ubyte)(+(ubyte)((buf[1] >> 6) & 0x03) << 0))

/**
 * Set signal PAS_PSL_Left1_PS_LatRefType in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(buf, val)                                                            \
    {                                                                                                                  \
        buf[1] &= ~(0x03 << 6);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0x03) << 6;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left1_PS_LatRefType in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(buf) SET_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(buf, 0)

/**
 * Signal PAS_PSL_Left1_PS_LatRefType value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left1_PS_LatRefType(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left1_PS_LatRefType raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 0

/**
 * Signal PAS_PSL_Left1_PS_LatRefType raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 0

/**
 * Signal PAS_PSL_Left1_PS_LatRefType raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 3

/**
 * Signal PAS_PSL_Left1_PS_LatRefType raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left1_PS_LatRefType 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType Value Table for Signal PAS_PSL_Left1_PS_LatRefType in Message
 * PAS_Left1 (0x315)
 *
 * Enum values defined for \ref SIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType.
 *
 * @ingroup SIG_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 */

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_LatRefType entry Reserved.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_LatRefType_Reserved 3

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_LatRefType entry LatRefHigh.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_LatRefType_LatRefHigh 2

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_LatRefType entry LatRefLow.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_LatRefType_LatRefLow 1

/**
 * Value table PAS_Left1_PAS_PSL_Left1_PS_LatRefType entry LatRefVirtual.
 *
 * @ingroup ENUM_PAS_Left1_PAS_PSL_Left1_PS_LatRefType
 */
#define PAS_Left1_PAS_PSL_Left1_PS_LatRefType_LatRefVirtual 0

/**
 * @defgroup SIG_PAS_Left1_PAS_PSL_Left_PS_ID Signal PAS_PSL_Left_PS_ID of Message PAS_Left1 (0x315)
 *
 * Left Parking slot ID
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_Left1
 * @{
 */

/**
 * Signal PAS_PSL_Left_PS_ID configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_Left1_PAS_PSL_Left_PS_ID and \ref GET_PAS_Left1_PAS_PSL_Left_PS_ID instead.
 */
#define SIG_PAS_Left1_PAS_PSL_Left_PS_ID 1, 0, 7, 8

/**
 * Signal PAS_PSL_Left_PS_ID setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_Left1_PAS_PSL_Left_PS_ID or \ref INIT_PAS_Left1 instead.
 */
#define SETUP_PAS_Left1_PAS_PSL_Left_PS_ID 1, 0, 7, 8, 0

/**
 * Get signal PAS_PSL_Left_PS_ID from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_Left1_PAS_PSL_Left_PS_ID(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_PSL_Left_PS_ID in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_Left1_PAS_PSL_Left_PS_ID(buf, val)                                                                     \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_PSL_Left_PS_ID in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_Left1_PAS_PSL_Left_PS_ID(buf) SET_PAS_Left1_PAS_PSL_Left_PS_ID(buf, 0)

/**
 * Signal PAS_PSL_Left_PS_ID value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_Left1_PAS_PSL_Left_PS_ID(x, fmt) ((x)*fmt)

/**
 * Signal PAS_PSL_Left_PS_ID raw initial value.
 */
#define START_PAS_Left1_PAS_PSL_Left_PS_ID 0

/**
 * Signal PAS_PSL_Left_PS_ID raw minimum value.
 */
#define MIN_PAS_Left1_PAS_PSL_Left_PS_ID 0

/**
 * Signal PAS_PSL_Left_PS_ID raw maximum value.
 */
#define MAX_PAS_Left1_PAS_PSL_Left_PS_ID 255

/**
 * Signal PAS_PSL_Left_PS_ID raw offset value.
 */
#define OFF_PAS_Left1_PAS_PSL_Left_PS_ID 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt Signal PAS_SVAStatus_RollCnt of Message PAS_SVAStatus (0x211)
 *
 * Rolling counter
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SVAStatus
 * @{
 */

/**
 * Signal PAS_SVAStatus_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SVAStatus_PAS_SVAStatus_RollCnt and \ref GET_PAS_SVAStatus_PAS_SVAStatus_RollCnt instead.
 */
#define SIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_SVAStatus_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt or \ref INIT_PAS_SVAStatus instead.
 */
#define SETUP_PAS_SVAStatus_PAS_SVAStatus_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_SVAStatus_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SVAStatus_PAS_SVAStatus_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_SVAStatus_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SVAStatus_PAS_SVAStatus_RollCnt(buf, val)                                                              \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_SVAStatus_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SVAStatus_PAS_SVAStatus_RollCnt(buf) SET_PAS_SVAStatus_PAS_SVAStatus_RollCnt(buf, 0)

/**
 * Signal PAS_SVAStatus_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SVAStatus_PAS_SVAStatus_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SVAStatus_RollCnt raw initial value.
 */
#define START_PAS_SVAStatus_PAS_SVAStatus_RollCnt 0

/**
 * Signal PAS_SVAStatus_RollCnt raw minimum value.
 */
#define MIN_PAS_SVAStatus_PAS_SVAStatus_RollCnt 0

/**
 * Signal PAS_SVAStatus_RollCnt raw maximum value.
 */
#define MAX_PAS_SVAStatus_PAS_SVAStatus_RollCnt 15

/**
 * Signal PAS_SVAStatus_RollCnt raw offset value.
 */
#define OFF_PAS_SVAStatus_PAS_SVAStatus_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_SVAStatus_PAS_SVAStatus_Checksum Signal PAS_SVAStatus_Checksum of Message PAS_SVAStatus (0x211)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SVAStatus
 * @{
 */

/**
 * Signal PAS_SVAStatus_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SVAStatus_PAS_SVAStatus_Checksum and \ref GET_PAS_SVAStatus_PAS_SVAStatus_Checksum instead.
 */
#define SIG_PAS_SVAStatus_PAS_SVAStatus_Checksum 1, 0, 63, 8

/**
 * Signal PAS_SVAStatus_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SVAStatus_PAS_SVAStatus_Checksum or \ref INIT_PAS_SVAStatus instead.
 */
#define SETUP_PAS_SVAStatus_PAS_SVAStatus_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_SVAStatus_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SVAStatus_PAS_SVAStatus_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_SVAStatus_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SVAStatus_PAS_SVAStatus_Checksum(buf, val)                                                             \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_SVAStatus_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SVAStatus_PAS_SVAStatus_Checksum(buf) SET_PAS_SVAStatus_PAS_SVAStatus_Checksum(buf, 0)

/**
 * Signal PAS_SVAStatus_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SVAStatus_PAS_SVAStatus_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SVAStatus_Checksum raw initial value.
 */
#define START_PAS_SVAStatus_PAS_SVAStatus_Checksum 0

/**
 * Signal PAS_SVAStatus_Checksum raw minimum value.
 */
#define MIN_PAS_SVAStatus_PAS_SVAStatus_Checksum 0

/**
 * Signal PAS_SVAStatus_Checksum raw maximum value.
 */
#define MAX_PAS_SVAStatus_PAS_SVAStatus_Checksum 255

/**
 * Signal PAS_SVAStatus_Checksum raw offset value.
 */
#define OFF_PAS_SVAStatus_PAS_SVAStatus_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd Signal PAS_SVARightBlindWarningInd of Message PAS_SVAStatus
 * (0x211)
 *
 * Right Blind spot monitor warning indicator
 *
 * Contains the value table \ref ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SVAStatus
 * @{
 */

/**
 * Signal PAS_SVARightBlindWarningInd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SVAStatus_PAS_SVARightBlindWarningInd and \ref GET_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 *instead.
 */
#define SIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd 1, 0, 6, 2

/**
 * Signal PAS_SVARightBlindWarningInd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd or \ref INIT_PAS_SVAStatus instead.
 */
#define SETUP_PAS_SVAStatus_PAS_SVARightBlindWarningInd 1, 0, 6, 2, 0

/**
 * Get signal PAS_SVARightBlindWarningInd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SVAStatus_PAS_SVARightBlindWarningInd(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 5) & 0x03) << 0))

/**
 * Set signal PAS_SVARightBlindWarningInd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SVAStatus_PAS_SVARightBlindWarningInd(buf, val)                                                        \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 5);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 5;                                                                   \
    }

/**
 * Set signal PAS_SVARightBlindWarningInd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd(buf) SET_PAS_SVAStatus_PAS_SVARightBlindWarningInd(buf, 0)

/**
 * Signal PAS_SVARightBlindWarningInd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SVAStatus_PAS_SVARightBlindWarningInd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SVARightBlindWarningInd raw initial value.
 */
#define START_PAS_SVAStatus_PAS_SVARightBlindWarningInd 0

/**
 * Signal PAS_SVARightBlindWarningInd raw minimum value.
 */
#define MIN_PAS_SVAStatus_PAS_SVARightBlindWarningInd 0

/**
 * Signal PAS_SVARightBlindWarningInd raw maximum value.
 */
#define MAX_PAS_SVAStatus_PAS_SVARightBlindWarningInd 3

/**
 * Signal PAS_SVARightBlindWarningInd raw offset value.
 */
#define OFF_PAS_SVAStatus_PAS_SVARightBlindWarningInd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd Value Table for Signal PAS_SVARightBlindWarningInd in
 * Message PAS_SVAStatus (0x211)
 *
 * Enum values defined for \ref SIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd.
 *
 * @ingroup SIG_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 */

/**
 * Value table PAS_SVAStatus_PAS_SVARightBlindWarningInd entry Invalid.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVARightBlindWarningInd_Invalid 3

/**
 * Value table PAS_SVAStatus_PAS_SVARightBlindWarningInd entry Warning.
 *
 * Level 2
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVARightBlindWarningInd_Warning 2

/**
 * Value table PAS_SVAStatus_PAS_SVARightBlindWarningInd entry Warning_1.
 *
 * Level 1
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVARightBlindWarningInd_Warning_1 1

/**
 * Value table PAS_SVAStatus_PAS_SVARightBlindWarningInd entry No.
 *
 * Warning
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVARightBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVARightBlindWarningInd_No 0

/**
 * @defgroup SIG_PAS_SVAStatus_PAS_SVAOpMode Signal PAS_SVAOpMode of Message PAS_SVAStatus (0x211)
 *
 * SVA operation mode
 *
 * Contains the value table \ref ENUM_PAS_SVAStatus_PAS_SVAOpMode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SVAStatus
 * @{
 */

/**
 * Signal PAS_SVAOpMode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SVAStatus_PAS_SVAOpMode and \ref GET_PAS_SVAStatus_PAS_SVAOpMode instead.
 */
#define SIG_PAS_SVAStatus_PAS_SVAOpMode 1, 0, 2, 3

/**
 * Signal PAS_SVAOpMode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SVAStatus_PAS_SVAOpMode or \ref INIT_PAS_SVAStatus instead.
 */
#define SETUP_PAS_SVAStatus_PAS_SVAOpMode 1, 0, 2, 3, 0

/**
 * Get signal PAS_SVAOpMode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SVAStatus_PAS_SVAOpMode(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 0) & 0x07) << 0))

/**
 * Set signal PAS_SVAOpMode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SVAStatus_PAS_SVAOpMode(buf, val)                                                                      \
    {                                                                                                                  \
        buf[0] &= ~(0x07 << 0);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x07) << 0;                                                                   \
    }

/**
 * Set signal PAS_SVAOpMode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SVAStatus_PAS_SVAOpMode(buf) SET_PAS_SVAStatus_PAS_SVAOpMode(buf, 0)

/**
 * Signal PAS_SVAOpMode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SVAStatus_PAS_SVAOpMode(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SVAOpMode raw initial value.
 */
#define START_PAS_SVAStatus_PAS_SVAOpMode 0

/**
 * Signal PAS_SVAOpMode raw minimum value.
 */
#define MIN_PAS_SVAStatus_PAS_SVAOpMode 0

/**
 * Signal PAS_SVAOpMode raw maximum value.
 */
#define MAX_PAS_SVAStatus_PAS_SVAOpMode 7

/**
 * Signal PAS_SVAOpMode raw offset value.
 */
#define OFF_PAS_SVAStatus_PAS_SVAOpMode 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SVAStatus_PAS_SVAOpMode Value Table for Signal PAS_SVAOpMode in Message PAS_SVAStatus (0x211)
 *
 * Enum values defined for \ref SIG_PAS_SVAStatus_PAS_SVAOpMode.
 *
 * @ingroup SIG_PAS_SVAStatus_PAS_SVAOpMode
 */

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Invalid.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Invalid 7

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Reserved.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Reserved 6

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Reserved_5.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Reserved_5 5

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Inhibited.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Inhibited 4

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Failure.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Failure 3

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Active.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Active 2

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Standby.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Standby 1

/**
 * Value table PAS_SVAStatus_PAS_SVAOpMode entry Off.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVAOpMode
 */
#define PAS_SVAStatus_PAS_SVAOpMode_Off 0

/**
 * @defgroup SIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd Signal PAS_SVALeftBlindWarningInd of Message PAS_SVAStatus
 * (0x211)
 *
 * Left Blind spot monitor warning indicator
 *
 * Contains the value table \ref ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_SVAStatus
 * @{
 */

/**
 * Signal PAS_SVALeftBlindWarningInd configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_SVAStatus_PAS_SVALeftBlindWarningInd and \ref GET_PAS_SVAStatus_PAS_SVALeftBlindWarningInd instead.
 */
#define SIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 1, 0, 4, 2

/**
 * Signal PAS_SVALeftBlindWarningInd setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd or \ref INIT_PAS_SVAStatus instead.
 */
#define SETUP_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 1, 0, 4, 2, 0

/**
 * Get signal PAS_SVALeftBlindWarningInd from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(buf) (0 | (ubyte)(+(ubyte)((buf[0] >> 3) & 0x03) << 0))

/**
 * Set signal PAS_SVALeftBlindWarningInd in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(buf, val)                                                         \
    {                                                                                                                  \
        buf[0] &= ~(0x03 << 3);                                                                                        \
        buf[0] |= (((ubyte)(val) >> 0) & 0x03) << 3;                                                                   \
    }

/**
 * Set signal PAS_SVALeftBlindWarningInd in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(buf) SET_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(buf, 0)

/**
 * Signal PAS_SVALeftBlindWarningInd value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_SVAStatus_PAS_SVALeftBlindWarningInd(x, fmt) ((x)*fmt)

/**
 * Signal PAS_SVALeftBlindWarningInd raw initial value.
 */
#define START_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 0

/**
 * Signal PAS_SVALeftBlindWarningInd raw minimum value.
 */
#define MIN_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 0

/**
 * Signal PAS_SVALeftBlindWarningInd raw maximum value.
 */
#define MAX_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 3

/**
 * Signal PAS_SVALeftBlindWarningInd raw offset value.
 */
#define OFF_PAS_SVAStatus_PAS_SVALeftBlindWarningInd 0

/**
 * @}
 */

/**
 * @defgroup ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd Value Table for Signal PAS_SVALeftBlindWarningInd in Message
 * PAS_SVAStatus (0x211)
 *
 * Enum values defined for \ref SIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd.
 *
 * @ingroup SIG_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 */

/**
 * Value table PAS_SVAStatus_PAS_SVALeftBlindWarningInd entry Invalid.
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVALeftBlindWarningInd_Invalid 3

/**
 * Value table PAS_SVAStatus_PAS_SVALeftBlindWarningInd entry Warning.
 *
 * Level 2
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVALeftBlindWarningInd_Warning 2

/**
 * Value table PAS_SVAStatus_PAS_SVALeftBlindWarningInd entry Warning_1.
 *
 * Level 1
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVALeftBlindWarningInd_Warning_1 1

/**
 * Value table PAS_SVAStatus_PAS_SVALeftBlindWarningInd entry No.
 *
 * Warning
 *
 * @ingroup ENUM_PAS_SVAStatus_PAS_SVALeftBlindWarningInd
 */
#define PAS_SVAStatus_PAS_SVALeftBlindWarningInd_No 0

/**
 * @defgroup SIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum Signal PAS_OdoInfo5_Checksum of Message PAS_OdoInfo5 (0x124)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo5
 * @{
 */

/**
 * Signal PAS_OdoInfo5_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo5_PAS_OdoInfo5_Checksum and \ref GET_PAS_OdoInfo5_PAS_OdoInfo5_Checksum instead.
 */
#define SIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 1, 0, 63, 8

/**
 * Signal PAS_OdoInfo5_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum or \ref INIT_PAS_OdoInfo5 instead.
 */
#define SETUP_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_OdoInfo5_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_OdoInfo5_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo5_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(buf) SET_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(buf, 0)

/**
 * Signal PAS_OdoInfo5_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo5_PAS_OdoInfo5_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo5_Checksum raw initial value.
 */
#define START_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 0

/**
 * Signal PAS_OdoInfo5_Checksum raw minimum value.
 */
#define MIN_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 0

/**
 * Signal PAS_OdoInfo5_Checksum raw maximum value.
 */
#define MAX_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 255

/**
 * Signal PAS_OdoInfo5_Checksum raw offset value.
 */
#define OFF_PAS_OdoInfo5_PAS_OdoInfo5_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt Signal PAS_OdoInfo5_RollCnt of Message PAS_OdoInfo5 (0x124)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo5
 * @{
 */

/**
 * Signal PAS_OdoInfo5_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt and \ref GET_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt instead.
 */
#define SIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_OdoInfo5_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt or \ref INIT_PAS_OdoInfo5 instead.
 */
#define SETUP_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_OdoInfo5_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_OdoInfo5_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo5_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(buf) SET_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(buf, 0)

/**
 * Signal PAS_OdoInfo5_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo5_RollCnt raw initial value.
 */
#define START_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 0

/**
 * Signal PAS_OdoInfo5_RollCnt raw minimum value.
 */
#define MIN_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 0

/**
 * Signal PAS_OdoInfo5_RollCnt raw maximum value.
 */
#define MAX_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 15

/**
 * Signal PAS_OdoInfo5_RollCnt raw offset value.
 */
#define OFF_PAS_OdoInfo5_PAS_OdoInfo5_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance Signal PAS_Odo_DrivenDistance of Message PAS_OdoInfo5 (0x124)
 *
 * driven distance
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo5
 * @{
 */

/**
 * Signal PAS_Odo_DrivenDistance configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo5_PAS_Odo_DrivenDistance and \ref GET_PAS_OdoInfo5_PAS_Odo_DrivenDistance instead.
 */
#define SIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance 1, 0, 7, 32

/**
 * Signal PAS_Odo_DrivenDistance setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance or \ref INIT_PAS_OdoInfo5 instead.
 */
#define SETUP_PAS_OdoInfo5_PAS_Odo_DrivenDistance 1, 0, 7, 32, 0

/**
 * Get signal PAS_Odo_DrivenDistance from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo5_PAS_Odo_DrivenDistance(buf)                                                                   \
    (0 | (ulong)(+(ulong)((buf[0] >> 0) & 0xff) << 24) | (ulong)(+(ulong)((buf[1] >> 0) & 0xff) << 16) |               \
     (uword)(+(uword)((buf[2] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_DrivenDistance in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo5_PAS_Odo_DrivenDistance(buf, val)                                                              \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0;                                                           \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0;                                                           \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_DrivenDistance in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo5_PAS_Odo_DrivenDistance(buf) SET_PAS_OdoInfo5_PAS_Odo_DrivenDistance(buf, 0)

/**
 * Signal PAS_Odo_DrivenDistance value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo5_PAS_Odo_DrivenDistance(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_Odo_DrivenDistance raw initial value.
 */
#define START_PAS_OdoInfo5_PAS_Odo_DrivenDistance 0

/**
 * Signal PAS_Odo_DrivenDistance raw minimum value.
 */
#define MIN_PAS_OdoInfo5_PAS_Odo_DrivenDistance 0

/**
 * Signal PAS_Odo_DrivenDistance raw maximum value.
 */
#define MAX_PAS_OdoInfo5_PAS_Odo_DrivenDistance 65535

/**
 * Signal PAS_Odo_DrivenDistance raw offset value.
 */
#define OFF_PAS_OdoInfo5_PAS_Odo_DrivenDistance -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum Signal PAS_OdoInfo4_Checksum of Message PAS_OdoInfo4 (0x123)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo4
 * @{
 */

/**
 * Signal PAS_OdoInfo4_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo4_PAS_OdoInfo4_Checksum and \ref GET_PAS_OdoInfo4_PAS_OdoInfo4_Checksum instead.
 */
#define SIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 1, 0, 63, 8

/**
 * Signal PAS_OdoInfo4_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum or \ref INIT_PAS_OdoInfo4 instead.
 */
#define SETUP_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_OdoInfo4_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_OdoInfo4_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo4_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(buf) SET_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(buf, 0)

/**
 * Signal PAS_OdoInfo4_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo4_PAS_OdoInfo4_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo4_Checksum raw initial value.
 */
#define START_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 0

/**
 * Signal PAS_OdoInfo4_Checksum raw minimum value.
 */
#define MIN_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 0

/**
 * Signal PAS_OdoInfo4_Checksum raw maximum value.
 */
#define MAX_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 255

/**
 * Signal PAS_OdoInfo4_Checksum raw offset value.
 */
#define OFF_PAS_OdoInfo4_PAS_OdoInfo4_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt Signal PAS_OdoInfo4_RollCnt of Message PAS_OdoInfo4 (0x123)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo4
 * @{
 */

/**
 * Signal PAS_OdoInfo4_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt and \ref GET_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt instead.
 */
#define SIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_OdoInfo4_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt or \ref INIT_PAS_OdoInfo4 instead.
 */
#define SETUP_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_OdoInfo4_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_OdoInfo4_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo4_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(buf) SET_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(buf, 0)

/**
 * Signal PAS_OdoInfo4_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo4_RollCnt raw initial value.
 */
#define START_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 0

/**
 * Signal PAS_OdoInfo4_RollCnt raw minimum value.
 */
#define MIN_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 0

/**
 * Signal PAS_OdoInfo4_RollCnt raw maximum value.
 */
#define MAX_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 15

/**
 * Signal PAS_OdoInfo4_RollCnt raw offset value.
 */
#define OFF_PAS_OdoInfo4_PAS_OdoInfo4_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo4_PAS_Odo_YawAngle Signal PAS_Odo_YawAngle of Message PAS_OdoInfo4 (0x123)
 *
 * angle between inertial system and vehicle longitudinal velocity in rad
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo4
 * @{
 */

/**
 * Signal PAS_Odo_YawAngle configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo4_PAS_Odo_YawAngle and \ref GET_PAS_OdoInfo4_PAS_Odo_YawAngle instead.
 */
#define SIG_PAS_OdoInfo4_PAS_Odo_YawAngle 1, 0, 7, 32

/**
 * Signal PAS_Odo_YawAngle setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo4_PAS_Odo_YawAngle or \ref INIT_PAS_OdoInfo4 instead.
 */
#define SETUP_PAS_OdoInfo4_PAS_Odo_YawAngle 1, 0, 7, 32, 0

/**
 * Get signal PAS_Odo_YawAngle from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo4_PAS_Odo_YawAngle(buf)                                                                         \
    (0 | (ulong)(+(ulong)((buf[0] >> 0) & 0xff) << 24) | (ulong)(+(ulong)((buf[1] >> 0) & 0xff) << 16) |               \
     (uword)(+(uword)((buf[2] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_YawAngle in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo4_PAS_Odo_YawAngle(buf, val)                                                                    \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0;                                                           \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0;                                                           \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_YawAngle in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo4_PAS_Odo_YawAngle(buf) SET_PAS_OdoInfo4_PAS_Odo_YawAngle(buf, 0)

/**
 * Signal PAS_Odo_YawAngle value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo4_PAS_Odo_YawAngle(x, fmt) ((x)*fmt / 4096 + fmt * 1686629713 / (-536870912))

/**
 * Signal PAS_Odo_YawAngle raw initial value.
 */
#define START_PAS_OdoInfo4_PAS_Odo_YawAngle 0

/**
 * Signal PAS_Odo_YawAngle raw minimum value.
 */
#define MIN_PAS_OdoInfo4_PAS_Odo_YawAngle 0

/**
 * Signal PAS_Odo_YawAngle raw maximum value.
 */
#define MAX_PAS_OdoInfo4_PAS_Odo_YawAngle 25736

/**
 * Signal PAS_Odo_YawAngle raw offset value.
 */
#define OFF_PAS_OdoInfo4_PAS_Odo_YawAngle -12868

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum Signal PAS_OdoInfo3_Checksum of Message PAS_OdoInfo3 (0x120)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo3
 * @{
 */

/**
 * Signal PAS_OdoInfo3_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo3_PAS_OdoInfo3_Checksum and \ref GET_PAS_OdoInfo3_PAS_OdoInfo3_Checksum instead.
 */
#define SIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 1, 0, 63, 8

/**
 * Signal PAS_OdoInfo3_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum or \ref INIT_PAS_OdoInfo3 instead.
 */
#define SETUP_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_OdoInfo3_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_OdoInfo3_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo3_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(buf) SET_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(buf, 0)

/**
 * Signal PAS_OdoInfo3_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo3_PAS_OdoInfo3_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo3_Checksum raw initial value.
 */
#define START_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 0

/**
 * Signal PAS_OdoInfo3_Checksum raw minimum value.
 */
#define MIN_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 0

/**
 * Signal PAS_OdoInfo3_Checksum raw maximum value.
 */
#define MAX_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 255

/**
 * Signal PAS_OdoInfo3_Checksum raw offset value.
 */
#define OFF_PAS_OdoInfo3_PAS_OdoInfo3_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt Signal PAS_OdoInfo3_RollCnt of Message PAS_OdoInfo3 (0x120)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo3
 * @{
 */

/**
 * Signal PAS_OdoInfo3_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt and \ref GET_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt instead.
 */
#define SIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_OdoInfo3_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt or \ref INIT_PAS_OdoInfo3 instead.
 */
#define SETUP_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_OdoInfo3_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_OdoInfo3_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo3_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(buf) SET_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(buf, 0)

/**
 * Signal PAS_OdoInfo3_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo3_RollCnt raw initial value.
 */
#define START_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 0

/**
 * Signal PAS_OdoInfo3_RollCnt raw minimum value.
 */
#define MIN_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 0

/**
 * Signal PAS_OdoInfo3_RollCnt raw maximum value.
 */
#define MAX_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 15

/**
 * Signal PAS_OdoInfo3_RollCnt raw offset value.
 */
#define OFF_PAS_OdoInfo3_PAS_OdoInfo3_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo3_PAS_Odo_Y Signal PAS_Odo_Y of Message PAS_OdoInfo3 (0x120)
 *
 * Y-Position of the center of rear axle in cm
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo3
 * @{
 */

/**
 * Signal PAS_Odo_Y configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo3_PAS_Odo_Y and \ref GET_PAS_OdoInfo3_PAS_Odo_Y instead.
 */
#define SIG_PAS_OdoInfo3_PAS_Odo_Y 1, 0, 7, 32

/**
 * Signal PAS_Odo_Y setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo3_PAS_Odo_Y or \ref INIT_PAS_OdoInfo3 instead.
 */
#define SETUP_PAS_OdoInfo3_PAS_Odo_Y 1, 0, 7, 32, 0

/**
 * Get signal PAS_Odo_Y from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo3_PAS_Odo_Y(buf)                                                                                \
    (0 | (ulong)(+(ulong)((buf[0] >> 0) & 0xff) << 24) | (ulong)(+(ulong)((buf[1] >> 0) & 0xff) << 16) |               \
     (uword)(+(uword)((buf[2] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_Y in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo3_PAS_Odo_Y(buf, val)                                                                           \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0;                                                           \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0;                                                           \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_Y in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo3_PAS_Odo_Y(buf) SET_PAS_OdoInfo3_PAS_Odo_Y(buf, 0)

/**
 * Signal PAS_Odo_Y value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo3_PAS_Odo_Y(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_Odo_Y raw initial value.
 */
#define START_PAS_OdoInfo3_PAS_Odo_Y 0

/**
 * Signal PAS_Odo_Y raw minimum value.
 */
#define MIN_PAS_OdoInfo3_PAS_Odo_Y 0

/**
 * Signal PAS_Odo_Y raw maximum value.
 */
#define MAX_PAS_OdoInfo3_PAS_Odo_Y 65535

/**
 * Signal PAS_Odo_Y raw offset value.
 */
#define OFF_PAS_OdoInfo3_PAS_Odo_Y -32768

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum Signal PAS_OdoInfo2_Checksum of Message PAS_OdoInfo2 (0x122)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo2
 * @{
 */

/**
 * Signal PAS_OdoInfo2_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo2_PAS_OdoInfo2_Checksum and \ref GET_PAS_OdoInfo2_PAS_OdoInfo2_Checksum instead.
 */
#define SIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 1, 0, 63, 8

/**
 * Signal PAS_OdoInfo2_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum or \ref INIT_PAS_OdoInfo2 instead.
 */
#define SETUP_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_OdoInfo2_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_OdoInfo2_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo2_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(buf) SET_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(buf, 0)

/**
 * Signal PAS_OdoInfo2_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo2_PAS_OdoInfo2_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo2_Checksum raw initial value.
 */
#define START_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 0

/**
 * Signal PAS_OdoInfo2_Checksum raw minimum value.
 */
#define MIN_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 0

/**
 * Signal PAS_OdoInfo2_Checksum raw maximum value.
 */
#define MAX_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 255

/**
 * Signal PAS_OdoInfo2_Checksum raw offset value.
 */
#define OFF_PAS_OdoInfo2_PAS_OdoInfo2_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt Signal PAS_OdoInfo2_RollCnt of Message PAS_OdoInfo2 (0x122)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo2
 * @{
 */

/**
 * Signal PAS_OdoInfo2_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt and \ref GET_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt instead.
 */
#define SIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_OdoInfo2_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt or \ref INIT_PAS_OdoInfo2 instead.
 */
#define SETUP_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_OdoInfo2_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_OdoInfo2_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo2_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(buf) SET_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(buf, 0)

/**
 * Signal PAS_OdoInfo2_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo2_RollCnt raw initial value.
 */
#define START_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 0

/**
 * Signal PAS_OdoInfo2_RollCnt raw minimum value.
 */
#define MIN_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 0

/**
 * Signal PAS_OdoInfo2_RollCnt raw maximum value.
 */
#define MAX_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 15

/**
 * Signal PAS_OdoInfo2_RollCnt raw offset value.
 */
#define OFF_PAS_OdoInfo2_PAS_OdoInfo2_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo2_PAS_Odo_TimeStamp Signal PAS_Odo_TimeStamp of Message PAS_OdoInfo2 (0x122)
 *
 * PAS time stamp
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo2
 * @{
 */

/**
 * Signal PAS_Odo_TimeStamp configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo2_PAS_Odo_TimeStamp and \ref GET_PAS_OdoInfo2_PAS_Odo_TimeStamp instead.
 */
#define SIG_PAS_OdoInfo2_PAS_Odo_TimeStamp 1, 0, 39, 16

/**
 * Signal PAS_Odo_TimeStamp setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo2_PAS_Odo_TimeStamp or \ref INIT_PAS_OdoInfo2 instead.
 */
#define SETUP_PAS_OdoInfo2_PAS_Odo_TimeStamp 1, 0, 39, 16, 0

/**
 * Get signal PAS_Odo_TimeStamp from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo2_PAS_Odo_TimeStamp(buf)                                                                        \
    (0 | (uword)(+(uword)((buf[4] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[5] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_TimeStamp in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo2_PAS_Odo_TimeStamp(buf, val)                                                                   \
    {                                                                                                                  \
        buf[4] &= ~(0xff << 0);                                                                                        \
        buf[4] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[5] &= ~(0xff << 0);                                                                                        \
        buf[5] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_TimeStamp in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo2_PAS_Odo_TimeStamp(buf) SET_PAS_OdoInfo2_PAS_Odo_TimeStamp(buf, 0)

/**
 * Signal PAS_Odo_TimeStamp value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo2_PAS_Odo_TimeStamp(x, fmt) ((x)*fmt)

/**
 * Signal PAS_Odo_TimeStamp raw initial value.
 */
#define START_PAS_OdoInfo2_PAS_Odo_TimeStamp 0

/**
 * Signal PAS_Odo_TimeStamp raw minimum value.
 */
#define MIN_PAS_OdoInfo2_PAS_Odo_TimeStamp 0

/**
 * Signal PAS_Odo_TimeStamp raw maximum value.
 */
#define MAX_PAS_OdoInfo2_PAS_Odo_TimeStamp 65535

/**
 * Signal PAS_Odo_TimeStamp raw offset value.
 */
#define OFF_PAS_OdoInfo2_PAS_Odo_TimeStamp 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo2_PAS_Odo_Kappa Signal PAS_Odo_Kappa of Message PAS_OdoInfo2 (0x122)
 *
 * Kappa
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo2
 * @{
 */

/**
 * Signal PAS_Odo_Kappa configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo2_PAS_Odo_Kappa and \ref GET_PAS_OdoInfo2_PAS_Odo_Kappa instead.
 */
#define SIG_PAS_OdoInfo2_PAS_Odo_Kappa 1, 1, 7, 16

/**
 * Signal PAS_Odo_Kappa setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo2_PAS_Odo_Kappa or \ref INIT_PAS_OdoInfo2 instead.
 */
#define SETUP_PAS_OdoInfo2_PAS_Odo_Kappa 1, 1, 7, 16, 0

/**
 * Get signal PAS_Odo_Kappa from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo2_PAS_Odo_Kappa(buf)                                                                            \
    (0 | (uword)(+(uword)((buf[0] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[1] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_Kappa in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo2_PAS_Odo_Kappa(buf, val)                                                                       \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_Kappa in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo2_PAS_Odo_Kappa(buf) SET_PAS_OdoInfo2_PAS_Odo_Kappa(buf, 0)

/**
 * Signal PAS_Odo_Kappa value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo2_PAS_Odo_Kappa(x, fmt) ((x)*fmt / 16384)

/**
 * Signal PAS_Odo_Kappa raw initial value.
 */
#define START_PAS_OdoInfo2_PAS_Odo_Kappa 0

/**
 * Signal PAS_Odo_Kappa raw minimum value.
 */
#define MIN_PAS_OdoInfo2_PAS_Odo_Kappa -32768

/**
 * Signal PAS_Odo_Kappa raw maximum value.
 */
#define MAX_PAS_OdoInfo2_PAS_Odo_Kappa 32768

/**
 * Signal PAS_Odo_Kappa raw offset value.
 */
#define OFF_PAS_OdoInfo2_PAS_Odo_Kappa 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt Signal PAS_OdoInfo1_RollCnt of Message PAS_OdoInfo1 (0x121)
 *
 * Rolling counter
 * ÏûÏ¢¼ÆÊýÆ÷
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo1
 * @{
 */

/**
 * Signal PAS_OdoInfo1_RollCnt configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt and \ref GET_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt instead.
 */
#define SIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 1, 0, 55, 4

/**
 * Signal PAS_OdoInfo1_RollCnt setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt or \ref INIT_PAS_OdoInfo1 instead.
 */
#define SETUP_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 1, 0, 55, 4, 0

/**
 * Get signal PAS_OdoInfo1_RollCnt from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(buf) (0 | (ubyte)(+(ubyte)((buf[6] >> 4) & 0x0f) << 0))

/**
 * Set signal PAS_OdoInfo1_RollCnt in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(buf, val)                                                                \
    {                                                                                                                  \
        buf[6] &= ~(0x0f << 4);                                                                                        \
        buf[6] |= (((ubyte)(val) >> 0) & 0x0f) << 4;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo1_RollCnt in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(buf) SET_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(buf, 0)

/**
 * Signal PAS_OdoInfo1_RollCnt value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo1_RollCnt raw initial value.
 */
#define START_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 0

/**
 * Signal PAS_OdoInfo1_RollCnt raw minimum value.
 */
#define MIN_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 0

/**
 * Signal PAS_OdoInfo1_RollCnt raw maximum value.
 */
#define MAX_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 15

/**
 * Signal PAS_OdoInfo1_RollCnt raw offset value.
 */
#define OFF_PAS_OdoInfo1_PAS_OdoInfo1_RollCnt 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum Signal PAS_OdoInfo1_Checksum of Message PAS_OdoInfo1 (0x121)
 *
 * Checksum
 * ÏûÏ¢Ð£ÑéºÍ
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo1
 * @{
 */

/**
 * Signal PAS_OdoInfo1_Checksum configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo1_PAS_OdoInfo1_Checksum and \ref GET_PAS_OdoInfo1_PAS_OdoInfo1_Checksum instead.
 */
#define SIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 1, 0, 63, 8

/**
 * Signal PAS_OdoInfo1_Checksum setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum or \ref INIT_PAS_OdoInfo1 instead.
 */
#define SETUP_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 1, 0, 63, 8, 0

/**
 * Get signal PAS_OdoInfo1_Checksum from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(buf) (0 | (ubyte)(+(ubyte)((buf[7] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_OdoInfo1_Checksum in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(buf, val)                                                               \
    {                                                                                                                  \
        buf[7] &= ~(0xff << 0);                                                                                        \
        buf[7] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_OdoInfo1_Checksum in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(buf) SET_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(buf, 0)

/**
 * Signal PAS_OdoInfo1_Checksum value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo1_PAS_OdoInfo1_Checksum(x, fmt) ((x)*fmt)

/**
 * Signal PAS_OdoInfo1_Checksum raw initial value.
 */
#define START_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 0

/**
 * Signal PAS_OdoInfo1_Checksum raw minimum value.
 */
#define MIN_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 0

/**
 * Signal PAS_OdoInfo1_Checksum raw maximum value.
 */
#define MAX_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 255

/**
 * Signal PAS_OdoInfo1_Checksum raw offset value.
 */
#define OFF_PAS_OdoInfo1_PAS_OdoInfo1_Checksum 0

/**
 * @}
 */

/**
 * @defgroup SIG_PAS_OdoInfo1_PAS_Odo_X Signal PAS_Odo_X of Message PAS_OdoInfo1 (0x121)
 *
 * X-Position of the center of rear axle in cm
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_PAS_OdoInfo1
 * @{
 */

/**
 * Signal PAS_Odo_X configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_PAS_OdoInfo1_PAS_Odo_X and \ref GET_PAS_OdoInfo1_PAS_Odo_X instead.
 */
#define SIG_PAS_OdoInfo1_PAS_Odo_X 1, 0, 7, 32

/**
 * Signal PAS_Odo_X setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_PAS_OdoInfo1_PAS_Odo_X or \ref INIT_PAS_OdoInfo1 instead.
 */
#define SETUP_PAS_OdoInfo1_PAS_Odo_X 1, 0, 7, 32, 0

/**
 * Get signal PAS_Odo_X from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_PAS_OdoInfo1_PAS_Odo_X(buf)                                                                                \
    (0 | (ulong)(+(ulong)((buf[0] >> 0) & 0xff) << 24) | (ulong)(+(ulong)((buf[1] >> 0) & 0xff) << 16) |               \
     (uword)(+(uword)((buf[2] >> 0) & 0xff) << 8) | (ubyte)(+(ubyte)((buf[3] >> 0) & 0xff) << 0))

/**
 * Set signal PAS_Odo_X in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_PAS_OdoInfo1_PAS_Odo_X(buf, val)                                                                           \
    {                                                                                                                  \
        buf[0] &= ~(0xff << 0);                                                                                        \
        buf[0] |= ((ubyte)((ulong)(val) >> 24) & 0xff) << 0;                                                           \
        buf[1] &= ~(0xff << 0);                                                                                        \
        buf[1] |= ((ubyte)((ulong)(val) >> 16) & 0xff) << 0;                                                           \
        buf[2] &= ~(0xff << 0);                                                                                        \
        buf[2] |= ((ubyte)((uword)(val) >> 8) & 0xff) << 0;                                                            \
        buf[3] &= ~(0xff << 0);                                                                                        \
        buf[3] |= (((ubyte)(val) >> 0) & 0xff) << 0;                                                                   \
    }

/**
 * Set signal PAS_Odo_X in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_PAS_OdoInfo1_PAS_Odo_X(buf) SET_PAS_OdoInfo1_PAS_Odo_X(buf, 0)

/**
 * Signal PAS_Odo_X value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_PAS_OdoInfo1_PAS_Odo_X(x, fmt) ((x)*fmt / 100 + fmt * 8192 / (-25))

/**
 * Signal PAS_Odo_X raw initial value.
 */
#define START_PAS_OdoInfo1_PAS_Odo_X 0

/**
 * Signal PAS_Odo_X raw minimum value.
 */
#define MIN_PAS_OdoInfo1_PAS_Odo_X 0

/**
 * Signal PAS_Odo_X raw maximum value.
 */
#define MAX_PAS_OdoInfo1_PAS_Odo_X 65535

/**
 * Signal PAS_Odo_X raw offset value.
 */
#define OFF_PAS_OdoInfo1_PAS_Odo_X -32768

/**
 * @}
 */

#endif
