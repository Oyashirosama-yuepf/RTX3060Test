#ifndef HOLO_C_SENSORS_VEHICLE_BODY_STATE_VEHICLE_BODY_DBC_H
#define HOLO_C_SENSORS_VEHICLE_BODY_STATE_VEHICLE_BODY_DBC_H

/** \file
 * CAN DBC C-Headers
 *
 * These headers were generated by dbc2c.awk on 2020年 03月 18日 星期三 15:57:24 CST.
 *
 * The dbc2c.awk script parses Vector .dbc files, and generates C-style
 * headers with Doxygen documentation from a set of templates.
 *
 * The following databases were parsed:
 * - \ref DB_holo_can_plus
 */

/**
 * @defgroup DB_holo_can_plus CAN Database holo_can_plus
 *
 * Path to file: output/holo_can_plus.dbc
 *
 * Provides the following ECUs:
 */

/**
 * @defgroup MSG_Airbag_01 Message Airbag_01 (0x40)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Airbag_01_front_driver_belt_warning
 * - \ref SIG_Airbag_01_front_passenger_belt_warning
 *
 * @{
 */

/**
 * Message Airbag_01 configuration tuple.
 */
#define MSG_Airbag_01                               0x40, 0, 8

/**
 * Message Airbag_01 id.
 */
#define ID_Airbag_01                                0x40

/**
 * Message Airbag_01 extended id bit.
 */
#define EXT_Airbag_01                               0

/**
 * Message Airbag_01 Data Length Count.
 */
#define DLC_Airbag_01                               8

/**
 * Message Airbag_01 cycle time.
 */
#define CYCLE_Airbag_01                             50

/**
 * Message Airbag_01 fast cycle time.
 */
#define FAST_Airbag_01                              10

/**
 * Initialise message Airbag_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Airbag_01(buf) { \
	INITSIG_Airbag_01_front_driver_belt_warning(buf); \
	INITSIG_Airbag_01_front_passenger_belt_warning(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Airbag_02 Message Airbag_02 (0x520)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Airbag_02_front_driver_belt_status
 * - \ref SIG_Airbag_02_front_passenger_belt_status
 * - \ref SIG_Airbag_02_row2_driver_belt_status
 * - \ref SIG_Airbag_02_row2_middle_belt_status
 * - \ref SIG_Airbag_02_row2_passenger_belt_status
 *
 * @{
 */

/**
 * Message Airbag_02 configuration tuple.
 */
#define MSG_Airbag_02                               0x520, 0, 8

/**
 * Message Airbag_02 id.
 */
#define ID_Airbag_02                                0x520

/**
 * Message Airbag_02 extended id bit.
 */
#define EXT_Airbag_02                               0

/**
 * Message Airbag_02 Data Length Count.
 */
#define DLC_Airbag_02                               8

/**
 * Message Airbag_02 cycle time.
 */
#define CYCLE_Airbag_02                             200

/**
 * Message Airbag_02 fast cycle time.
 */
#define FAST_Airbag_02                              0

/**
 * Initialise message Airbag_02 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Airbag_02(buf) { \
	INITSIG_Airbag_02_front_driver_belt_status(buf); \
	INITSIG_Airbag_02_front_passenger_belt_status(buf); \
	INITSIG_Airbag_02_row2_driver_belt_status(buf); \
	INITSIG_Airbag_02_row2_middle_belt_status(buf); \
	INITSIG_Airbag_02_row2_passenger_belt_status(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Blinkmodi_02 Message Blinkmodi_02 (0x366)
 *
 * Nur die Kombination des statischen und toggelnden Signals ergibt den Blinktakt für die Hell & Dunkelphase
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Blinkmodi_02_blinker_waning
 * - \ref SIG_Blinkmodi_02_blinker_left
 * - \ref SIG_Blinkmodi_02_blinker_right
 *
 * @{
 */

/**
 * Message Blinkmodi_02 configuration tuple.
 */
#define MSG_Blinkmodi_02                            0x366, 0, 8

/**
 * Message Blinkmodi_02 id.
 */
#define ID_Blinkmodi_02                             0x366

/**
 * Message Blinkmodi_02 extended id bit.
 */
#define EXT_Blinkmodi_02                            0

/**
 * Message Blinkmodi_02 Data Length Count.
 */
#define DLC_Blinkmodi_02                            8

/**
 * Message Blinkmodi_02 cycle time.
 */
#define CYCLE_Blinkmodi_02                          1000

/**
 * Message Blinkmodi_02 fast cycle time.
 */
#define FAST_Blinkmodi_02                           50

/**
 * Initialise message Blinkmodi_02 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Blinkmodi_02(buf) { \
	INITSIG_Blinkmodi_02_blinker_waning(buf); \
	INITSIG_Blinkmodi_02_blinker_left(buf); \
	INITSIG_Blinkmodi_02_blinker_right(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_EPB_01 Message EPB_01 (0x104)
 *
 * ab MQB mit CRC-8
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_EPB_01_epb_status
 *
 * @{
 */

/**
 * Message EPB_01 configuration tuple.
 */
#define MSG_EPB_01                                  0x104, 0, 8

/**
 * Message EPB_01 id.
 */
#define ID_EPB_01                                   0x104

/**
 * Message EPB_01 extended id bit.
 */
#define EXT_EPB_01                                  0

/**
 * Message EPB_01 Data Length Count.
 */
#define DLC_EPB_01                                  8

/**
 * Message EPB_01 cycle time.
 */
#define CYCLE_EPB_01                                20

/**
 * Message EPB_01 fast cycle time.
 */
#define FAST_EPB_01                                 0

/**
 * Initialise message EPB_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_EPB_01(buf) { \
	INITSIG_EPB_01_epb_status(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_05 Message ESP_05 (0x106)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_05_esp_hdc_active
 * - \ref SIG_ESP_05_ECD_Bremslicht
 *
 * @{
 */

/**
 * Message ESP_05 configuration tuple.
 */
#define MSG_ESP_05                                  0x106, 0, 8

/**
 * Message ESP_05 id.
 */
#define ID_ESP_05                                   0x106

/**
 * Message ESP_05 extended id bit.
 */
#define EXT_ESP_05                                  0

/**
 * Message ESP_05 Data Length Count.
 */
#define DLC_ESP_05                                  8

/**
 * Message ESP_05 cycle time.
 */
#define CYCLE_ESP_05                                20

/**
 * Message ESP_05 fast cycle time.
 */
#define FAST_ESP_05                                 0

/**
 * Initialise message ESP_05 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_05(buf) { \
	INITSIG_ESP_05_esp_hdc_active(buf); \
	INITSIG_ESP_05_ECD_Bremslicht(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_ESP_21 Message ESP_21 (0xfd)
 *
 * Neue Momente im MQB
 * Struktur ab MQB mit CRC8 entstanden aus ESP_01
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_ESP_21_abs_active
 *
 * @{
 */

/**
 * Message ESP_21 configuration tuple.
 */
#define MSG_ESP_21                                  0xfd, 0, 8

/**
 * Message ESP_21 id.
 */
#define ID_ESP_21                                   0xfd

/**
 * Message ESP_21 extended id bit.
 */
#define EXT_ESP_21                                  0

/**
 * Message ESP_21 Data Length Count.
 */
#define DLC_ESP_21                                  8

/**
 * Message ESP_21 cycle time.
 */
#define CYCLE_ESP_21                                20

/**
 * Message ESP_21 fast cycle time.
 */
#define FAST_ESP_21                                 0

/**
 * Initialise message ESP_21 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_ESP_21(buf) { \
	INITSIG_ESP_21_abs_active(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Gateway_72 Message Gateway_72 (0x3db)
 *
 * Komfort -> Antrieb, Extended, Fahrwerk, Infotainment
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Gateway_72_engine_hood_status
 * - \ref SIG_Gateway_72_rear_left_door
 * - \ref SIG_Gateway_72_rear_right_door
 * - \ref SIG_Gateway_72_front_right_door
 * - \ref SIG_Gateway_72_front_left_door
 * - \ref SIG_Gateway_72_trunk_status
 *
 * @{
 */

/**
 * Message Gateway_72 configuration tuple.
 */
#define MSG_Gateway_72                              0x3db, 0, 8

/**
 * Message Gateway_72 id.
 */
#define ID_Gateway_72                               0x3db

/**
 * Message Gateway_72 extended id bit.
 */
#define EXT_Gateway_72                              0

/**
 * Message Gateway_72 Data Length Count.
 */
#define DLC_Gateway_72                              8

/**
 * Message Gateway_72 cycle time.
 */
#define CYCLE_Gateway_72                            100

/**
 * Message Gateway_72 fast cycle time.
 */
#define FAST_Gateway_72                             0

/**
 * Initialise message Gateway_72 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Gateway_72(buf) { \
	INITSIG_Gateway_72_engine_hood_status(buf); \
	INITSIG_Gateway_72_rear_left_door(buf); \
	INITSIG_Gateway_72_rear_right_door(buf); \
	INITSIG_Gateway_72_front_right_door(buf); \
	INITSIG_Gateway_72_front_left_door(buf); \
	INITSIG_Gateway_72_trunk_status(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_GRA_ACC_01 Message GRA_ACC_01 (0x12b)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_GRA_ACC_01_wheel_button_io
 * - \ref SIG_GRA_ACC_01_wheel_button_mode
 * - \ref SIG_GRA_ACC_01_wheel_button_set
 * - \ref SIG_GRA_ACC_01_wheel_button_plus
 * - \ref SIG_GRA_ACC_01_wheel_button_minus
 * - \ref SIG_GRA_ACC_01_wheel_button_resume
 *
 * @{
 */

/**
 * Message GRA_ACC_01 configuration tuple.
 */
#define MSG_GRA_ACC_01                              0x12b, 0, 8

/**
 * Message GRA_ACC_01 id.
 */
#define ID_GRA_ACC_01                               0x12b

/**
 * Message GRA_ACC_01 extended id bit.
 */
#define EXT_GRA_ACC_01                              0

/**
 * Message GRA_ACC_01 Data Length Count.
 */
#define DLC_GRA_ACC_01                              8

/**
 * Message GRA_ACC_01 cycle time.
 */
#define CYCLE_GRA_ACC_01                            30

/**
 * Message GRA_ACC_01 fast cycle time.
 */
#define FAST_GRA_ACC_01                             0

/**
 * Initialise message GRA_ACC_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_GRA_ACC_01(buf) { \
	INITSIG_GRA_ACC_01_wheel_button_io(buf); \
	INITSIG_GRA_ACC_01_wheel_button_mode(buf); \
	INITSIG_GRA_ACC_01_wheel_button_set(buf); \
	INITSIG_GRA_ACC_01_wheel_button_plus(buf); \
	INITSIG_GRA_ACC_01_wheel_button_minus(buf); \
	INITSIG_GRA_ACC_01_wheel_button_resume(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_Licht_vorne_01 Message Licht_vorne_01 (0x658)
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_Licht_vorne_01_low_beam_light
 * - \ref SIG_Licht_vorne_01_high_beam_light
 * - \ref SIG_Licht_vorne_01_front_frog_light
 * - \ref SIG_Licht_vorne_01_rear_frog_light
 *
 * @{
 */

/**
 * Message Licht_vorne_01 configuration tuple.
 */
#define MSG_Licht_vorne_01                          0x658, 0, 8

/**
 * Message Licht_vorne_01 id.
 */
#define ID_Licht_vorne_01                           0x658

/**
 * Message Licht_vorne_01 extended id bit.
 */
#define EXT_Licht_vorne_01                          0

/**
 * Message Licht_vorne_01 Data Length Count.
 */
#define DLC_Licht_vorne_01                          8

/**
 * Message Licht_vorne_01 cycle time.
 */
#define CYCLE_Licht_vorne_01                        1000

/**
 * Message Licht_vorne_01 fast cycle time.
 */
#define FAST_Licht_vorne_01                         0

/**
 * Initialise message Licht_vorne_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_Licht_vorne_01(buf) { \
	INITSIG_Licht_vorne_01_low_beam_light(buf); \
	INITSIG_Licht_vorne_01_high_beam_light(buf); \
	INITSIG_Licht_vorne_01_front_frog_light(buf); \
	INITSIG_Licht_vorne_01_rear_frog_light(buf); \
}

/**
 * @}
 */

/**
 * @defgroup MSG_RLS_01 Message RLS_01 (0x5a0)
 *
 * LIN-CAN (1:1) Botschaften werden geroutet
 * -  wenn entsprechender Slave codiert ist
 * -  wenn fehlerfreie Kommunikation zum Slave besteht
 * -  bei fehlerhafter Kommunikation zum Slave wird die Botschaft für 4s mit den letzten gültigen Werten versendet
 *
 * Contains signal groups:
 *
 * Contains signals:
 * - \ref SIG_RLS_01_rainfall
 * - \ref SIG_RLS_01_front_wiper_speed
 *
 * @{
 */

/**
 * Message RLS_01 configuration tuple.
 */
#define MSG_RLS_01                                  0x5a0, 0, 5

/**
 * Message RLS_01 id.
 */
#define ID_RLS_01                                   0x5a0

/**
 * Message RLS_01 extended id bit.
 */
#define EXT_RLS_01                                  0

/**
 * Message RLS_01 Data Length Count.
 */
#define DLC_RLS_01                                  5

/**
 * Message RLS_01 cycle time.
 */
#define CYCLE_RLS_01                                200

/**
 * Message RLS_01 fast cycle time.
 */
#define FAST_RLS_01                                 0

/**
 * Initialise message RLS_01 buffer.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INIT_RLS_01(buf) { \
	INITSIG_RLS_01_rainfall(buf); \
	INITSIG_RLS_01_front_wiper_speed(buf); \
}

/**
 * @}
 */

/**
 * @defgroup SIG_Airbag_01_front_driver_belt_warning Signal front_driver_belt_warning of Message Airbag_01 (0x40)
 *
 * Fahrer hat Gurt nicht gesteckt, Anzeige im Kombi
 *
 * Contains the value table \ref ENUM_Airbag_01_front_driver_belt_warning.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_01
 * @{
 */

/**
 * Signal front_driver_belt_warning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_01_front_driver_belt_warning and \ref GET_Airbag_01_front_driver_belt_warning instead.
 */
#define SIG_Airbag_01_front_driver_belt_warning        0, 0, 32, 1

/**
 * Signal front_driver_belt_warning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_01_front_driver_belt_warning or \ref INIT_Airbag_01 instead.
 */
#define SETUP_Airbag_01_front_driver_belt_warning      0, 0, 32, 1, 0

/**
 * Get signal front_driver_belt_warning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_01_front_driver_belt_warning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0x01) << 0) \
)

/**
 * Set signal front_driver_belt_warning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_01_front_driver_belt_warning(buf, val) { \
	buf[4] &= ~(0x01 << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal front_driver_belt_warning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_01_front_driver_belt_warning(buf) \
	SET_Airbag_01_front_driver_belt_warning(buf, 0)

/**
 * Signal front_driver_belt_warning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_01_front_driver_belt_warning(x, fmt) \
	((x) * fmt)

/**
 * Signal front_driver_belt_warning raw initial value.
 */
#define START_Airbag_01_front_driver_belt_warning      0

/**
 * Signal front_driver_belt_warning raw minimum value.
 */
#define MIN_Airbag_01_front_driver_belt_warning        0

/**
 * Signal front_driver_belt_warning raw maximum value.
 */
#define MAX_Airbag_01_front_driver_belt_warning        1

/**
 * Signal front_driver_belt_warning raw offset value.
 */
#define OFF_Airbag_01_front_driver_belt_warning        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_01_front_driver_belt_warning Value Table for Signal front_driver_belt_warning in Message Airbag_01 (0x40)
 *
 * Enum values defined for \ref SIG_Airbag_01_front_driver_belt_warning.
 *
 * @ingroup SIG_Airbag_01_front_driver_belt_warning
 */

/**
 * Value table Airbag_01_front_driver_belt_warning entry keine_Warnung.
 *
 * @ingroup ENUM_Airbag_01_front_driver_belt_warning
 */
#define Airbag_01_front_driver_belt_warning_keine_Warnung       0

/**
 * Value table Airbag_01_front_driver_belt_warning entry Gurtwarnung_ausloesen.
 *
 * @ingroup ENUM_Airbag_01_front_driver_belt_warning
 */
#define Airbag_01_front_driver_belt_warning_Gurtwarnung_ausloesen    1

/**
 * @defgroup SIG_Airbag_01_front_passenger_belt_warning Signal front_passenger_belt_warning of Message Airbag_01 (0x40)
 *
 * Beifahrer hat Gurt nicht gesteckt, Anzeige im Kombi
 *
 * Contains the value table \ref ENUM_Airbag_01_front_passenger_belt_warning.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_01
 * @{
 */

/**
 * Signal front_passenger_belt_warning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_01_front_passenger_belt_warning and \ref GET_Airbag_01_front_passenger_belt_warning instead.
 */
#define SIG_Airbag_01_front_passenger_belt_warning        0, 0, 33, 1

/**
 * Signal front_passenger_belt_warning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_01_front_passenger_belt_warning or \ref INIT_Airbag_01 instead.
 */
#define SETUP_Airbag_01_front_passenger_belt_warning      0, 0, 33, 1, 0

/**
 * Get signal front_passenger_belt_warning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_01_front_passenger_belt_warning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 1) & 0x01) << 0) \
)

/**
 * Set signal front_passenger_belt_warning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_01_front_passenger_belt_warning(buf, val) { \
	buf[4] &= ~(0x01 << 1); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x01) << 1; \
}

/**
 * Set signal front_passenger_belt_warning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_01_front_passenger_belt_warning(buf) \
	SET_Airbag_01_front_passenger_belt_warning(buf, 0)

/**
 * Signal front_passenger_belt_warning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_01_front_passenger_belt_warning(x, fmt) \
	((x) * fmt)

/**
 * Signal front_passenger_belt_warning raw initial value.
 */
#define START_Airbag_01_front_passenger_belt_warning      0

/**
 * Signal front_passenger_belt_warning raw minimum value.
 */
#define MIN_Airbag_01_front_passenger_belt_warning        0

/**
 * Signal front_passenger_belt_warning raw maximum value.
 */
#define MAX_Airbag_01_front_passenger_belt_warning        1

/**
 * Signal front_passenger_belt_warning raw offset value.
 */
#define OFF_Airbag_01_front_passenger_belt_warning        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_01_front_passenger_belt_warning Value Table for Signal front_passenger_belt_warning in Message Airbag_01 (0x40)
 *
 * Enum values defined for \ref SIG_Airbag_01_front_passenger_belt_warning.
 *
 * @ingroup SIG_Airbag_01_front_passenger_belt_warning
 */

/**
 * Value table Airbag_01_front_passenger_belt_warning entry keine_Warnung.
 *
 * @ingroup ENUM_Airbag_01_front_passenger_belt_warning
 */
#define Airbag_01_front_passenger_belt_warning_keine_Warnung       0

/**
 * Value table Airbag_01_front_passenger_belt_warning entry Gurtwarnung_ausloesen.
 *
 * @ingroup ENUM_Airbag_01_front_passenger_belt_warning
 */
#define Airbag_01_front_passenger_belt_warning_Gurtwarnung_ausloesen    1

/**
 * @defgroup SIG_Airbag_02_front_driver_belt_status Signal front_driver_belt_status of Message Airbag_02 (0x520)
 *
 * Gurtschlosstatatus Fahrerseite
 *
 * Contains the value table \ref ENUM_Airbag_02_front_driver_belt_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_02
 * @{
 */

/**
 * Signal front_driver_belt_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_02_front_driver_belt_status and \ref GET_Airbag_02_front_driver_belt_status instead.
 */
#define SIG_Airbag_02_front_driver_belt_status        0, 0, 40, 2

/**
 * Signal front_driver_belt_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_02_front_driver_belt_status or \ref INIT_Airbag_02 instead.
 */
#define SETUP_Airbag_02_front_driver_belt_status      0, 0, 40, 2, 1

/**
 * Get signal front_driver_belt_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_02_front_driver_belt_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 0) & 0x03) << 0) \
)

/**
 * Set signal front_driver_belt_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_02_front_driver_belt_status(buf, val) { \
	buf[5] &= ~(0x03 << 0); \
	buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal front_driver_belt_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_02_front_driver_belt_status(buf) \
	SET_Airbag_02_front_driver_belt_status(buf, 1)

/**
 * Signal front_driver_belt_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_02_front_driver_belt_status(x, fmt) \
	((x) * fmt)

/**
 * Signal front_driver_belt_status raw initial value.
 */
#define START_Airbag_02_front_driver_belt_status      1

/**
 * Signal front_driver_belt_status raw minimum value.
 */
#define MIN_Airbag_02_front_driver_belt_status        0

/**
 * Signal front_driver_belt_status raw maximum value.
 */
#define MAX_Airbag_02_front_driver_belt_status        3

/**
 * Signal front_driver_belt_status raw offset value.
 */
#define OFF_Airbag_02_front_driver_belt_status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_02_front_driver_belt_status Value Table for Signal front_driver_belt_status in Message Airbag_02 (0x520)
 *
 * Enum values defined for \ref SIG_Airbag_02_front_driver_belt_status.
 *
 * @ingroup SIG_Airbag_02_front_driver_belt_status
 */

/**
 * Value table Airbag_02_front_driver_belt_status entry nicht_verbaut.
 *
 * @ingroup ENUM_Airbag_02_front_driver_belt_status
 */
#define Airbag_02_front_driver_belt_status_nicht_verbaut       0

/**
 * Value table Airbag_02_front_driver_belt_status entry nicht_verf_gbar.
 *
 * nicht_verfügbar (Fehler oder Init)
 *
 * @ingroup ENUM_Airbag_02_front_driver_belt_status
 */
#define Airbag_02_front_driver_belt_status_nicht_verf_gbar     1

/**
 * Value table Airbag_02_front_driver_belt_status entry nicht_gesteckt.
 *
 * @ingroup ENUM_Airbag_02_front_driver_belt_status
 */
#define Airbag_02_front_driver_belt_status_nicht_gesteckt      2

/**
 * Value table Airbag_02_front_driver_belt_status entry gesteckt.
 *
 * @ingroup ENUM_Airbag_02_front_driver_belt_status
 */
#define Airbag_02_front_driver_belt_status_gesteckt            3

/**
 * @defgroup SIG_Airbag_02_front_passenger_belt_status Signal front_passenger_belt_status of Message Airbag_02 (0x520)
 *
 * Gurtschlossstatus Beifahrerseite
 *
 * Contains the value table \ref ENUM_Airbag_02_front_passenger_belt_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_02
 * @{
 */

/**
 * Signal front_passenger_belt_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_02_front_passenger_belt_status and \ref GET_Airbag_02_front_passenger_belt_status instead.
 */
#define SIG_Airbag_02_front_passenger_belt_status        0, 0, 42, 2

/**
 * Signal front_passenger_belt_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_02_front_passenger_belt_status or \ref INIT_Airbag_02 instead.
 */
#define SETUP_Airbag_02_front_passenger_belt_status      0, 0, 42, 2, 1

/**
 * Get signal front_passenger_belt_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_02_front_passenger_belt_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 2) & 0x03) << 0) \
)

/**
 * Set signal front_passenger_belt_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_02_front_passenger_belt_status(buf, val) { \
	buf[5] &= ~(0x03 << 2); \
	buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 2; \
}

/**
 * Set signal front_passenger_belt_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_02_front_passenger_belt_status(buf) \
	SET_Airbag_02_front_passenger_belt_status(buf, 1)

/**
 * Signal front_passenger_belt_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_02_front_passenger_belt_status(x, fmt) \
	((x) * fmt)

/**
 * Signal front_passenger_belt_status raw initial value.
 */
#define START_Airbag_02_front_passenger_belt_status      1

/**
 * Signal front_passenger_belt_status raw minimum value.
 */
#define MIN_Airbag_02_front_passenger_belt_status        0

/**
 * Signal front_passenger_belt_status raw maximum value.
 */
#define MAX_Airbag_02_front_passenger_belt_status        3

/**
 * Signal front_passenger_belt_status raw offset value.
 */
#define OFF_Airbag_02_front_passenger_belt_status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_02_front_passenger_belt_status Value Table for Signal front_passenger_belt_status in Message Airbag_02 (0x520)
 *
 * Enum values defined for \ref SIG_Airbag_02_front_passenger_belt_status.
 *
 * @ingroup SIG_Airbag_02_front_passenger_belt_status
 */

/**
 * Value table Airbag_02_front_passenger_belt_status entry nicht_verbaut.
 *
 * @ingroup ENUM_Airbag_02_front_passenger_belt_status
 */
#define Airbag_02_front_passenger_belt_status_nicht_verbaut       0

/**
 * Value table Airbag_02_front_passenger_belt_status entry nicht_verf_gbar.
 *
 * nicht_verfügbar (Fehler oder Init)
 *
 * @ingroup ENUM_Airbag_02_front_passenger_belt_status
 */
#define Airbag_02_front_passenger_belt_status_nicht_verf_gbar     1

/**
 * Value table Airbag_02_front_passenger_belt_status entry nicht_gesteckt.
 *
 * @ingroup ENUM_Airbag_02_front_passenger_belt_status
 */
#define Airbag_02_front_passenger_belt_status_nicht_gesteckt      2

/**
 * Value table Airbag_02_front_passenger_belt_status entry gesteckt.
 *
 * @ingroup ENUM_Airbag_02_front_passenger_belt_status
 */
#define Airbag_02_front_passenger_belt_status_gesteckt            3

/**
 * @defgroup SIG_Airbag_02_row2_driver_belt_status Signal row2_driver_belt_status of Message Airbag_02 (0x520)
 *
 * Gurtschlossstatus 2. Reihe Fahrerseite, Mehrausstattung
 *
 * Contains the value table \ref ENUM_Airbag_02_row2_driver_belt_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_02
 * @{
 */

/**
 * Signal row2_driver_belt_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_02_row2_driver_belt_status and \ref GET_Airbag_02_row2_driver_belt_status instead.
 */
#define SIG_Airbag_02_row2_driver_belt_status        0, 0, 44, 2

/**
 * Signal row2_driver_belt_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_02_row2_driver_belt_status or \ref INIT_Airbag_02 instead.
 */
#define SETUP_Airbag_02_row2_driver_belt_status      0, 0, 44, 2, 1

/**
 * Get signal row2_driver_belt_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_02_row2_driver_belt_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 4) & 0x03) << 0) \
)

/**
 * Set signal row2_driver_belt_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_02_row2_driver_belt_status(buf, val) { \
	buf[5] &= ~(0x03 << 4); \
	buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 4; \
}

/**
 * Set signal row2_driver_belt_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_02_row2_driver_belt_status(buf) \
	SET_Airbag_02_row2_driver_belt_status(buf, 1)

/**
 * Signal row2_driver_belt_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_02_row2_driver_belt_status(x, fmt) \
	((x) * fmt)

/**
 * Signal row2_driver_belt_status raw initial value.
 */
#define START_Airbag_02_row2_driver_belt_status      1

/**
 * Signal row2_driver_belt_status raw minimum value.
 */
#define MIN_Airbag_02_row2_driver_belt_status        0

/**
 * Signal row2_driver_belt_status raw maximum value.
 */
#define MAX_Airbag_02_row2_driver_belt_status        3

/**
 * Signal row2_driver_belt_status raw offset value.
 */
#define OFF_Airbag_02_row2_driver_belt_status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_02_row2_driver_belt_status Value Table for Signal row2_driver_belt_status in Message Airbag_02 (0x520)
 *
 * Enum values defined for \ref SIG_Airbag_02_row2_driver_belt_status.
 *
 * @ingroup SIG_Airbag_02_row2_driver_belt_status
 */

/**
 * Value table Airbag_02_row2_driver_belt_status entry nicht_verbaut.
 *
 * @ingroup ENUM_Airbag_02_row2_driver_belt_status
 */
#define Airbag_02_row2_driver_belt_status_nicht_verbaut       0

/**
 * Value table Airbag_02_row2_driver_belt_status entry nicht_verf_gbar.
 *
 * nicht_verfügbar (Fehler oder Init)
 *
 * @ingroup ENUM_Airbag_02_row2_driver_belt_status
 */
#define Airbag_02_row2_driver_belt_status_nicht_verf_gbar     1

/**
 * Value table Airbag_02_row2_driver_belt_status entry nicht_gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_driver_belt_status
 */
#define Airbag_02_row2_driver_belt_status_nicht_gesteckt      2

/**
 * Value table Airbag_02_row2_driver_belt_status entry gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_driver_belt_status
 */
#define Airbag_02_row2_driver_belt_status_gesteckt            3

/**
 * @defgroup SIG_Airbag_02_row2_middle_belt_status Signal row2_middle_belt_status of Message Airbag_02 (0x520)
 *
 * Gurtschlossstatus 2. Reihe Mitte,  Mehrausstattung
 *
 * Contains the value table \ref ENUM_Airbag_02_row2_middle_belt_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_02
 * @{
 */

/**
 * Signal row2_middle_belt_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_02_row2_middle_belt_status and \ref GET_Airbag_02_row2_middle_belt_status instead.
 */
#define SIG_Airbag_02_row2_middle_belt_status        0, 0, 46, 2

/**
 * Signal row2_middle_belt_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_02_row2_middle_belt_status or \ref INIT_Airbag_02 instead.
 */
#define SETUP_Airbag_02_row2_middle_belt_status      0, 0, 46, 2, 1

/**
 * Get signal row2_middle_belt_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_02_row2_middle_belt_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 6) & 0x03) << 0) \
)

/**
 * Set signal row2_middle_belt_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_02_row2_middle_belt_status(buf, val) { \
	buf[5] &= ~(0x03 << 6); \
	buf[5] |= (((ubyte)(val) >> 0) & 0x03) << 6; \
}

/**
 * Set signal row2_middle_belt_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_02_row2_middle_belt_status(buf) \
	SET_Airbag_02_row2_middle_belt_status(buf, 1)

/**
 * Signal row2_middle_belt_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_02_row2_middle_belt_status(x, fmt) \
	((x) * fmt)

/**
 * Signal row2_middle_belt_status raw initial value.
 */
#define START_Airbag_02_row2_middle_belt_status      1

/**
 * Signal row2_middle_belt_status raw minimum value.
 */
#define MIN_Airbag_02_row2_middle_belt_status        0

/**
 * Signal row2_middle_belt_status raw maximum value.
 */
#define MAX_Airbag_02_row2_middle_belt_status        3

/**
 * Signal row2_middle_belt_status raw offset value.
 */
#define OFF_Airbag_02_row2_middle_belt_status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_02_row2_middle_belt_status Value Table for Signal row2_middle_belt_status in Message Airbag_02 (0x520)
 *
 * Enum values defined for \ref SIG_Airbag_02_row2_middle_belt_status.
 *
 * @ingroup SIG_Airbag_02_row2_middle_belt_status
 */

/**
 * Value table Airbag_02_row2_middle_belt_status entry nicht_verbaut.
 *
 * @ingroup ENUM_Airbag_02_row2_middle_belt_status
 */
#define Airbag_02_row2_middle_belt_status_nicht_verbaut       0

/**
 * Value table Airbag_02_row2_middle_belt_status entry nicht_verf_gbar.
 *
 * nicht_verfügbar (Fehler oder Init)
 *
 * @ingroup ENUM_Airbag_02_row2_middle_belt_status
 */
#define Airbag_02_row2_middle_belt_status_nicht_verf_gbar     1

/**
 * Value table Airbag_02_row2_middle_belt_status entry nicht_gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_middle_belt_status
 */
#define Airbag_02_row2_middle_belt_status_nicht_gesteckt      2

/**
 * Value table Airbag_02_row2_middle_belt_status entry gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_middle_belt_status
 */
#define Airbag_02_row2_middle_belt_status_gesteckt            3

/**
 * @defgroup SIG_Airbag_02_row2_passenger_belt_status Signal row2_passenger_belt_status of Message Airbag_02 (0x520)
 *
 * Gurtschlossstatus 2. Reihe Beifahrerseite,  Mehrausstattung
 *
 * Contains the value table \ref ENUM_Airbag_02_row2_passenger_belt_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Airbag_02
 * @{
 */

/**
 * Signal row2_passenger_belt_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Airbag_02_row2_passenger_belt_status and \ref GET_Airbag_02_row2_passenger_belt_status instead.
 */
#define SIG_Airbag_02_row2_passenger_belt_status        0, 0, 48, 2

/**
 * Signal row2_passenger_belt_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Airbag_02_row2_passenger_belt_status or \ref INIT_Airbag_02 instead.
 */
#define SETUP_Airbag_02_row2_passenger_belt_status      0, 0, 48, 2, 1

/**
 * Get signal row2_passenger_belt_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Airbag_02_row2_passenger_belt_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[6] >> 0) & 0x03) << 0) \
)

/**
 * Set signal row2_passenger_belt_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Airbag_02_row2_passenger_belt_status(buf, val) { \
	buf[6] &= ~(0x03 << 0); \
	buf[6] |= (((ubyte)(val) >> 0) & 0x03) << 0; \
}

/**
 * Set signal row2_passenger_belt_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Airbag_02_row2_passenger_belt_status(buf) \
	SET_Airbag_02_row2_passenger_belt_status(buf, 1)

/**
 * Signal row2_passenger_belt_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Airbag_02_row2_passenger_belt_status(x, fmt) \
	((x) * fmt)

/**
 * Signal row2_passenger_belt_status raw initial value.
 */
#define START_Airbag_02_row2_passenger_belt_status      1

/**
 * Signal row2_passenger_belt_status raw minimum value.
 */
#define MIN_Airbag_02_row2_passenger_belt_status        0

/**
 * Signal row2_passenger_belt_status raw maximum value.
 */
#define MAX_Airbag_02_row2_passenger_belt_status        3

/**
 * Signal row2_passenger_belt_status raw offset value.
 */
#define OFF_Airbag_02_row2_passenger_belt_status        0

/**
 * @}
 */

/**
 * @defgroup ENUM_Airbag_02_row2_passenger_belt_status Value Table for Signal row2_passenger_belt_status in Message Airbag_02 (0x520)
 *
 * Enum values defined for \ref SIG_Airbag_02_row2_passenger_belt_status.
 *
 * @ingroup SIG_Airbag_02_row2_passenger_belt_status
 */

/**
 * Value table Airbag_02_row2_passenger_belt_status entry nicht_verbaut.
 *
 * @ingroup ENUM_Airbag_02_row2_passenger_belt_status
 */
#define Airbag_02_row2_passenger_belt_status_nicht_verbaut       0

/**
 * Value table Airbag_02_row2_passenger_belt_status entry nicht_verf_gbar.
 *
 * nicht_verfügbar (Fehler oder Init)
 *
 * @ingroup ENUM_Airbag_02_row2_passenger_belt_status
 */
#define Airbag_02_row2_passenger_belt_status_nicht_verf_gbar     1

/**
 * Value table Airbag_02_row2_passenger_belt_status entry nicht_gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_passenger_belt_status
 */
#define Airbag_02_row2_passenger_belt_status_nicht_gesteckt      2

/**
 * Value table Airbag_02_row2_passenger_belt_status entry gesteckt.
 *
 * @ingroup ENUM_Airbag_02_row2_passenger_belt_status
 */
#define Airbag_02_row2_passenger_belt_status_gesteckt            3

/**
 * @defgroup SIG_Blinkmodi_02_blinker_waning Signal blinker_waning of Message Blinkmodi_02 (0x366)
 *
 * Warnblinken
 *
 * Contains the value table \ref ENUM_Blinkmodi_02_blinker_waning.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Blinkmodi_02
 * @{
 */

/**
 * Signal blinker_waning configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Blinkmodi_02_blinker_waning and \ref GET_Blinkmodi_02_blinker_waning instead.
 */
#define SIG_Blinkmodi_02_blinker_waning             0, 0, 20, 1

/**
 * Signal blinker_waning setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Blinkmodi_02_blinker_waning or \ref INIT_Blinkmodi_02 instead.
 */
#define SETUP_Blinkmodi_02_blinker_waning           0, 0, 20, 1, 0

/**
 * Get signal blinker_waning from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Blinkmodi_02_blinker_waning(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0) \
)

/**
 * Set signal blinker_waning in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Blinkmodi_02_blinker_waning(buf, val) { \
	buf[2] &= ~(0x01 << 4); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal blinker_waning in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Blinkmodi_02_blinker_waning(buf) \
	SET_Blinkmodi_02_blinker_waning(buf, 0)

/**
 * Signal blinker_waning value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Blinkmodi_02_blinker_waning(x, fmt) \
	((x) * fmt)

/**
 * Signal blinker_waning raw initial value.
 */
#define START_Blinkmodi_02_blinker_waning           0

/**
 * Signal blinker_waning raw minimum value.
 */
#define MIN_Blinkmodi_02_blinker_waning             0

/**
 * Signal blinker_waning raw maximum value.
 */
#define MAX_Blinkmodi_02_blinker_waning             1

/**
 * Signal blinker_waning raw offset value.
 */
#define OFF_Blinkmodi_02_blinker_waning             0

/**
 * @}
 */

/**
 * @defgroup ENUM_Blinkmodi_02_blinker_waning Value Table for Signal blinker_waning in Message Blinkmodi_02 (0x366)
 *
 * Enum values defined for \ref SIG_Blinkmodi_02_blinker_waning.
 *
 * @ingroup SIG_Blinkmodi_02_blinker_waning
 */

/**
 * Value table Blinkmodi_02_blinker_waning entry inaktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_waning
 */
#define Blinkmodi_02_blinker_waning_inaktiv             0

/**
 * Value table Blinkmodi_02_blinker_waning entry aktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_waning
 */
#define Blinkmodi_02_blinker_waning_aktiv               1

/**
 * @defgroup SIG_Blinkmodi_02_blinker_left Signal blinker_left of Message Blinkmodi_02 (0x366)
 *
 * Richtungsblinken links
 *
 * Contains the value table \ref ENUM_Blinkmodi_02_blinker_left.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Blinkmodi_02
 * @{
 */

/**
 * Signal blinker_left configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Blinkmodi_02_blinker_left and \ref GET_Blinkmodi_02_blinker_left instead.
 */
#define SIG_Blinkmodi_02_blinker_left               0, 0, 23, 1

/**
 * Signal blinker_left setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Blinkmodi_02_blinker_left or \ref INIT_Blinkmodi_02 instead.
 */
#define SETUP_Blinkmodi_02_blinker_left             0, 0, 23, 1, 0

/**
 * Get signal blinker_left from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Blinkmodi_02_blinker_left(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 7) & 0x01) << 0) \
)

/**
 * Set signal blinker_left in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Blinkmodi_02_blinker_left(buf, val) { \
	buf[2] &= ~(0x01 << 7); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal blinker_left in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Blinkmodi_02_blinker_left(buf) \
	SET_Blinkmodi_02_blinker_left(buf, 0)

/**
 * Signal blinker_left value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Blinkmodi_02_blinker_left(x, fmt) \
	((x) * fmt)

/**
 * Signal blinker_left raw initial value.
 */
#define START_Blinkmodi_02_blinker_left             0

/**
 * Signal blinker_left raw minimum value.
 */
#define MIN_Blinkmodi_02_blinker_left               0

/**
 * Signal blinker_left raw maximum value.
 */
#define MAX_Blinkmodi_02_blinker_left               1

/**
 * Signal blinker_left raw offset value.
 */
#define OFF_Blinkmodi_02_blinker_left               0

/**
 * @}
 */

/**
 * @defgroup ENUM_Blinkmodi_02_blinker_left Value Table for Signal blinker_left in Message Blinkmodi_02 (0x366)
 *
 * Enum values defined for \ref SIG_Blinkmodi_02_blinker_left.
 *
 * @ingroup SIG_Blinkmodi_02_blinker_left
 */

/**
 * Value table Blinkmodi_02_blinker_left entry inaktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_left
 */
#define Blinkmodi_02_blinker_left_inaktiv             0

/**
 * Value table Blinkmodi_02_blinker_left entry aktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_left
 */
#define Blinkmodi_02_blinker_left_aktiv               1

/**
 * @defgroup SIG_Blinkmodi_02_blinker_right Signal blinker_right of Message Blinkmodi_02 (0x366)
 *
 * Richtungsblinken rechts
 *
 * Contains the value table \ref ENUM_Blinkmodi_02_blinker_right.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Blinkmodi_02
 * @{
 */

/**
 * Signal blinker_right configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Blinkmodi_02_blinker_right and \ref GET_Blinkmodi_02_blinker_right instead.
 */
#define SIG_Blinkmodi_02_blinker_right              0, 0, 24, 1

/**
 * Signal blinker_right setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Blinkmodi_02_blinker_right or \ref INIT_Blinkmodi_02 instead.
 */
#define SETUP_Blinkmodi_02_blinker_right            0, 0, 24, 1, 0

/**
 * Get signal blinker_right from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Blinkmodi_02_blinker_right(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 0) & 0x01) << 0) \
)

/**
 * Set signal blinker_right in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Blinkmodi_02_blinker_right(buf, val) { \
	buf[3] &= ~(0x01 << 0); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal blinker_right in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Blinkmodi_02_blinker_right(buf) \
	SET_Blinkmodi_02_blinker_right(buf, 0)

/**
 * Signal blinker_right value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Blinkmodi_02_blinker_right(x, fmt) \
	((x) * fmt)

/**
 * Signal blinker_right raw initial value.
 */
#define START_Blinkmodi_02_blinker_right            0

/**
 * Signal blinker_right raw minimum value.
 */
#define MIN_Blinkmodi_02_blinker_right              0

/**
 * Signal blinker_right raw maximum value.
 */
#define MAX_Blinkmodi_02_blinker_right              1

/**
 * Signal blinker_right raw offset value.
 */
#define OFF_Blinkmodi_02_blinker_right              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Blinkmodi_02_blinker_right Value Table for Signal blinker_right in Message Blinkmodi_02 (0x366)
 *
 * Enum values defined for \ref SIG_Blinkmodi_02_blinker_right.
 *
 * @ingroup SIG_Blinkmodi_02_blinker_right
 */

/**
 * Value table Blinkmodi_02_blinker_right entry inaktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_right
 */
#define Blinkmodi_02_blinker_right_inaktiv             0

/**
 * Value table Blinkmodi_02_blinker_right entry aktiv.
 *
 * @ingroup ENUM_Blinkmodi_02_blinker_right
 */
#define Blinkmodi_02_blinker_right_aktiv               1

/**
 * @defgroup SIG_EPB_01_epb_status Signal epb_status of Message EPB_01 (0x104)
 *
 * Gibt den Zustand der EPB-Aktuatoren an.
 * 
 * Nur VW526/PAG E2: Wert 0x3 bedeutet 'unbekannt'
 *
 * Contains the value table \ref ENUM_EPB_01_epb_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_EPB_01
 * @{
 */

/**
 * Signal epb_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_EPB_01_epb_status and \ref GET_EPB_01_epb_status instead.
 */
#define SIG_EPB_01_epb_status                       0, 0, 61, 2

/**
 * Signal epb_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_EPB_01_epb_status or \ref INIT_EPB_01 instead.
 */
#define SETUP_EPB_01_epb_status                     0, 0, 61, 2, 0

/**
 * Get signal epb_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_EPB_01_epb_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[7] >> 5) & 0x03) << 0) \
)

/**
 * Set signal epb_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_EPB_01_epb_status(buf, val) { \
	buf[7] &= ~(0x03 << 5); \
	buf[7] |= (((ubyte)(val) >> 0) & 0x03) << 5; \
}

/**
 * Set signal epb_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_EPB_01_epb_status(buf) \
	SET_EPB_01_epb_status(buf, 0)

/**
 * Signal epb_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_EPB_01_epb_status(x, fmt) \
	((x) * fmt)

/**
 * Signal epb_status raw initial value.
 */
#define START_EPB_01_epb_status                     0

/**
 * Signal epb_status raw minimum value.
 */
#define MIN_EPB_01_epb_status                       0

/**
 * Signal epb_status raw maximum value.
 */
#define MAX_EPB_01_epb_status                       3

/**
 * Signal epb_status raw offset value.
 */
#define OFF_EPB_01_epb_status                       0

/**
 * @}
 */

/**
 * @defgroup ENUM_EPB_01_epb_status Value Table for Signal epb_status in Message EPB_01 (0x104)
 *
 * Enum values defined for \ref SIG_EPB_01_epb_status.
 *
 * @ingroup SIG_EPB_01_epb_status
 */

/**
 * Value table EPB_01_epb_status entry offen.
 *
 * @ingroup ENUM_EPB_01_epb_status
 */
#define EPB_01_epb_status_offen               0

/**
 * Value table EPB_01_epb_status entry Bremse_geschl__Spannkraft_voll_reduziert_.
 *
 * Bremse_geschl_(Spannkraft_voll/reduziert)
 *
 * @ingroup ENUM_EPB_01_epb_status
 */
#define EPB_01_epb_status_Bremse_geschl__Spannkraft_voll_reduziert_    1

/**
 * Value table EPB_01_epb_status entry Aktuator_im_Lauf.
 *
 * @ingroup ENUM_EPB_01_epb_status
 */
#define EPB_01_epb_status_Aktuator_im_Lauf    2

/**
 * Value table EPB_01_epb_status entry Fehler_oder_unbekannt.
 *
 * @ingroup ENUM_EPB_01_epb_status
 */
#define EPB_01_epb_status_Fehler_oder_unbekannt    3

/**
 * @defgroup SIG_ESP_05_esp_hdc_active Signal esp_hdc_active of Message ESP_05 (0x106)
 *
 * MQB und AU57x Allroad: Mit diesem Statusbit wird eine gerade aktive Regelung des Bergabfahrassistenten (Hill Descent Control) signalisiert.
 *
 * Contains the value table \ref ENUM_ESP_05_esp_hdc_active.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_05
 * @{
 */

/**
 * Signal esp_hdc_active configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_05_esp_hdc_active and \ref GET_ESP_05_esp_hdc_active instead.
 */
#define SIG_ESP_05_esp_hdc_active                   0, 0, 41, 1

/**
 * Signal esp_hdc_active setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_05_esp_hdc_active or \ref INIT_ESP_05 instead.
 */
#define SETUP_ESP_05_esp_hdc_active                 0, 0, 41, 1, 0

/**
 * Get signal esp_hdc_active from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_05_esp_hdc_active(buf) (0 \
	| (ubyte)(+(ubyte)((buf[5] >> 1) & 0x01) << 0) \
)

/**
 * Set signal esp_hdc_active in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_05_esp_hdc_active(buf, val) { \
	buf[5] &= ~(0x01 << 1); \
	buf[5] |= (((ubyte)(val) >> 0) & 0x01) << 1; \
}

/**
 * Set signal esp_hdc_active in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_05_esp_hdc_active(buf) \
	SET_ESP_05_esp_hdc_active(buf, 0)

/**
 * Signal esp_hdc_active value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_05_esp_hdc_active(x, fmt) \
	((x) * fmt)

/**
 * Signal esp_hdc_active raw initial value.
 */
#define START_ESP_05_esp_hdc_active                 0

/**
 * Signal esp_hdc_active raw minimum value.
 */
#define MIN_ESP_05_esp_hdc_active                   0

/**
 * Signal esp_hdc_active raw maximum value.
 */
#define MAX_ESP_05_esp_hdc_active                   1

/**
 * Signal esp_hdc_active raw offset value.
 */
#define OFF_ESP_05_esp_hdc_active                   0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_05_esp_hdc_active Value Table for Signal esp_hdc_active in Message ESP_05 (0x106)
 *
 * Enum values defined for \ref SIG_ESP_05_esp_hdc_active.
 *
 * @ingroup SIG_ESP_05_esp_hdc_active
 */

/**
 * Value table ESP_05_esp_hdc_active entry inaktiv.
 *
 * @ingroup ENUM_ESP_05_esp_hdc_active
 */
#define ESP_05_esp_hdc_active_inaktiv             0

/**
 * Value table ESP_05_esp_hdc_active entry aktiv.
 *
 * @ingroup ENUM_ESP_05_esp_hdc_active
 */
#define ESP_05_esp_hdc_active_aktiv               1

/**
 * @defgroup SIG_ESP_05_ECD_Bremslicht Signal ECD_Bremslicht of Message ESP_05 (0x106)
 *
 * Bremslichtansteuerung durch ECD-Funktion
 *
 * Contains the value table \ref ENUM_ESP_05_ECD_Bremslicht.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_05
 * @{
 */

/**
 * Signal ECD_Bremslicht configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_05_ECD_Bremslicht and \ref GET_ESP_05_ECD_Bremslicht instead.
 */
#define SIG_ESP_05_ECD_Bremslicht                   0, 0, 59, 1

/**
 * Signal ECD_Bremslicht setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_05_ECD_Bremslicht or \ref INIT_ESP_05 instead.
 */
#define SETUP_ESP_05_ECD_Bremslicht                 0, 0, 59, 1, 0

/**
 * Get signal ECD_Bremslicht from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_05_ECD_Bremslicht(buf) (0 \
	| (ubyte)(+(ubyte)((buf[7] >> 3) & 0x01) << 0) \
)

/**
 * Set signal ECD_Bremslicht in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_05_ECD_Bremslicht(buf, val) { \
	buf[7] &= ~(0x01 << 3); \
	buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal ECD_Bremslicht in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_05_ECD_Bremslicht(buf) \
	SET_ESP_05_ECD_Bremslicht(buf, 0)

/**
 * Signal ECD_Bremslicht value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_05_ECD_Bremslicht(x, fmt) \
	((x) * fmt)

/**
 * Signal ECD_Bremslicht raw initial value.
 */
#define START_ESP_05_ECD_Bremslicht                 0

/**
 * Signal ECD_Bremslicht raw minimum value.
 */
#define MIN_ESP_05_ECD_Bremslicht                   0

/**
 * Signal ECD_Bremslicht raw maximum value.
 */
#define MAX_ESP_05_ECD_Bremslicht                   1

/**
 * Signal ECD_Bremslicht raw offset value.
 */
#define OFF_ESP_05_ECD_Bremslicht                   0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_05_ECD_Bremslicht Value Table for Signal ECD_Bremslicht in Message ESP_05 (0x106)
 *
 * Enum values defined for \ref SIG_ESP_05_ECD_Bremslicht.
 *
 * @ingroup SIG_ESP_05_ECD_Bremslicht
 */

/**
 * Value table ESP_05_ECD_Bremslicht entry Aus.
 *
 * @ingroup ENUM_ESP_05_ECD_Bremslicht
 */
#define ESP_05_ECD_Bremslicht_Aus                 0

/**
 * Value table ESP_05_ECD_Bremslicht entry Ein.
 *
 * @ingroup ENUM_ESP_05_ECD_Bremslicht
 */
#define ESP_05_ECD_Bremslicht_Ein                 1

/**
 * @defgroup SIG_ESP_21_abs_active Signal abs_active of Message ESP_21 (0xfd)
 *
 * Antiblockiersystem, Bit zeigt auch Druckabbau an (z.B. ESP hat zuviel Druck aufgebaut oder ungebremste Regelung auf Bahnübergang)
 * Weiterführende Informationen im Lastenheft spezifiziert und in der entsprechenden Fachabteilung zu erfragen.
 *
 * Contains the value table \ref ENUM_ESP_21_abs_active.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_ESP_21
 * @{
 */

/**
 * Signal abs_active configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_ESP_21_abs_active and \ref GET_ESP_21_abs_active instead.
 */
#define SIG_ESP_21_abs_active                       0, 0, 56, 1

/**
 * Signal abs_active setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_ESP_21_abs_active or \ref INIT_ESP_21 instead.
 */
#define SETUP_ESP_21_abs_active                     0, 0, 56, 1, 0

/**
 * Get signal abs_active from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_ESP_21_abs_active(buf) (0 \
	| (ubyte)(+(ubyte)((buf[7] >> 0) & 0x01) << 0) \
)

/**
 * Set signal abs_active in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_ESP_21_abs_active(buf, val) { \
	buf[7] &= ~(0x01 << 0); \
	buf[7] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal abs_active in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_ESP_21_abs_active(buf) \
	SET_ESP_21_abs_active(buf, 0)

/**
 * Signal abs_active value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_ESP_21_abs_active(x, fmt) \
	((x) * fmt)

/**
 * Signal abs_active raw initial value.
 */
#define START_ESP_21_abs_active                     0

/**
 * Signal abs_active raw minimum value.
 */
#define MIN_ESP_21_abs_active                       0

/**
 * Signal abs_active raw maximum value.
 */
#define MAX_ESP_21_abs_active                       1

/**
 * Signal abs_active raw offset value.
 */
#define OFF_ESP_21_abs_active                       0

/**
 * @}
 */

/**
 * @defgroup ENUM_ESP_21_abs_active Value Table for Signal abs_active in Message ESP_21 (0xfd)
 *
 * Enum values defined for \ref SIG_ESP_21_abs_active.
 *
 * @ingroup SIG_ESP_21_abs_active
 */

/**
 * Value table ESP_21_abs_active entry keine_ABS_Regelung.
 *
 * @ingroup ENUM_ESP_21_abs_active
 */
#define ESP_21_abs_active_keine_ABS_Regelung    0

/**
 * Value table ESP_21_abs_active entry ABS_Regelung_aktiv.
 *
 * @ingroup ENUM_ESP_21_abs_active
 */
#define ESP_21_abs_active_ABS_Regelung_aktiv    1

/**
 * @defgroup SIG_Gateway_72_engine_hood_status Signal engine_hood_status of Message Gateway_72 (0x3db)
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal engine_hood_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_engine_hood_status and \ref GET_Gateway_72_engine_hood_status instead.
 */
#define SIG_Gateway_72_engine_hood_status           0, 0, 29, 1

/**
 * Signal engine_hood_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_engine_hood_status or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_engine_hood_status         0, 0, 29, 1, 0

/**
 * Get signal engine_hood_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_engine_hood_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 5) & 0x01) << 0) \
)

/**
 * Set signal engine_hood_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_engine_hood_status(buf, val) { \
	buf[3] &= ~(0x01 << 5); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal engine_hood_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_engine_hood_status(buf) \
	SET_Gateway_72_engine_hood_status(buf, 0)

/**
 * Signal engine_hood_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_engine_hood_status(x, fmt) \
	((x) * fmt)

/**
 * Signal engine_hood_status raw initial value.
 */
#define START_Gateway_72_engine_hood_status         0

/**
 * Signal engine_hood_status raw minimum value.
 */
#define MIN_Gateway_72_engine_hood_status           0

/**
 * Signal engine_hood_status raw maximum value.
 */
#define MAX_Gateway_72_engine_hood_status           1

/**
 * Signal engine_hood_status raw offset value.
 */
#define OFF_Gateway_72_engine_hood_status           0

/**
 * @}
 */

/**
 * @defgroup SIG_Gateway_72_rear_left_door Signal rear_left_door of Message Gateway_72 (0x3db)
 *
 * gespiegeltes Bit HFS_Tuer_geoeffnet TSG_HFS_1 Botschaft
 *
 * Contains the value table \ref ENUM_Gateway_72_rear_left_door.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal rear_left_door configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_rear_left_door and \ref GET_Gateway_72_rear_left_door instead.
 */
#define SIG_Gateway_72_rear_left_door               0, 0, 20, 1

/**
 * Signal rear_left_door setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_rear_left_door or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_rear_left_door             0, 0, 20, 1, 0

/**
 * Get signal rear_left_door from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_rear_left_door(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 4) & 0x01) << 0) \
)

/**
 * Set signal rear_left_door in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_rear_left_door(buf, val) { \
	buf[2] &= ~(0x01 << 4); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal rear_left_door in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_rear_left_door(buf) \
	SET_Gateway_72_rear_left_door(buf, 0)

/**
 * Signal rear_left_door value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_rear_left_door(x, fmt) \
	((x) * fmt)

/**
 * Signal rear_left_door raw initial value.
 */
#define START_Gateway_72_rear_left_door             0

/**
 * Signal rear_left_door raw minimum value.
 */
#define MIN_Gateway_72_rear_left_door               0

/**
 * Signal rear_left_door raw maximum value.
 */
#define MAX_Gateway_72_rear_left_door               1

/**
 * Signal rear_left_door raw offset value.
 */
#define OFF_Gateway_72_rear_left_door               0

/**
 * @}
 */

/**
 * @defgroup ENUM_Gateway_72_rear_left_door Value Table for Signal rear_left_door in Message Gateway_72 (0x3db)
 *
 * Enum values defined for \ref SIG_Gateway_72_rear_left_door.
 *
 * @ingroup SIG_Gateway_72_rear_left_door
 */

/**
 * Value table Gateway_72_rear_left_door entry geschlossen.
 *
 * @ingroup ENUM_Gateway_72_rear_left_door
 */
#define Gateway_72_rear_left_door_geschlossen         0

/**
 * Value table Gateway_72_rear_left_door entry offen.
 *
 * @ingroup ENUM_Gateway_72_rear_left_door
 */
#define Gateway_72_rear_left_door_offen               1

/**
 * @defgroup SIG_Gateway_72_rear_right_door Signal rear_right_door of Message Gateway_72 (0x3db)
 *
 * gespiegeltes Bit HBFS_Tuer_geoeffnet TSG_HBFS_1 Botschaft
 *
 * Contains the value table \ref ENUM_Gateway_72_rear_right_door.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal rear_right_door configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_rear_right_door and \ref GET_Gateway_72_rear_right_door instead.
 */
#define SIG_Gateway_72_rear_right_door              0, 0, 21, 1

/**
 * Signal rear_right_door setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_rear_right_door or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_rear_right_door            0, 0, 21, 1, 0

/**
 * Get signal rear_right_door from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_rear_right_door(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 5) & 0x01) << 0) \
)

/**
 * Set signal rear_right_door in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_rear_right_door(buf, val) { \
	buf[2] &= ~(0x01 << 5); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal rear_right_door in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_rear_right_door(buf) \
	SET_Gateway_72_rear_right_door(buf, 0)

/**
 * Signal rear_right_door value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_rear_right_door(x, fmt) \
	((x) * fmt)

/**
 * Signal rear_right_door raw initial value.
 */
#define START_Gateway_72_rear_right_door            0

/**
 * Signal rear_right_door raw minimum value.
 */
#define MIN_Gateway_72_rear_right_door              0

/**
 * Signal rear_right_door raw maximum value.
 */
#define MAX_Gateway_72_rear_right_door              1

/**
 * Signal rear_right_door raw offset value.
 */
#define OFF_Gateway_72_rear_right_door              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Gateway_72_rear_right_door Value Table for Signal rear_right_door in Message Gateway_72 (0x3db)
 *
 * Enum values defined for \ref SIG_Gateway_72_rear_right_door.
 *
 * @ingroup SIG_Gateway_72_rear_right_door
 */

/**
 * Value table Gateway_72_rear_right_door entry geschlossen.
 *
 * @ingroup ENUM_Gateway_72_rear_right_door
 */
#define Gateway_72_rear_right_door_geschlossen         0

/**
 * Value table Gateway_72_rear_right_door entry offen.
 *
 * @ingroup ENUM_Gateway_72_rear_right_door
 */
#define Gateway_72_rear_right_door_offen               1

/**
 * @defgroup SIG_Gateway_72_front_right_door Signal front_right_door of Message Gateway_72 (0x3db)
 *
 * gespiegeltes Bit BT_Tuer_geoeffnet TSG_BT_1 Botschaft
 *
 * Contains the value table \ref ENUM_Gateway_72_front_right_door.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal front_right_door configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_front_right_door and \ref GET_Gateway_72_front_right_door instead.
 */
#define SIG_Gateway_72_front_right_door             0, 0, 24, 1

/**
 * Signal front_right_door setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_front_right_door or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_front_right_door           0, 0, 24, 1, 0

/**
 * Get signal front_right_door from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_front_right_door(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 0) & 0x01) << 0) \
)

/**
 * Set signal front_right_door in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_front_right_door(buf, val) { \
	buf[3] &= ~(0x01 << 0); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal front_right_door in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_front_right_door(buf) \
	SET_Gateway_72_front_right_door(buf, 0)

/**
 * Signal front_right_door value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_front_right_door(x, fmt) \
	((x) * fmt)

/**
 * Signal front_right_door raw initial value.
 */
#define START_Gateway_72_front_right_door           0

/**
 * Signal front_right_door raw minimum value.
 */
#define MIN_Gateway_72_front_right_door             0

/**
 * Signal front_right_door raw maximum value.
 */
#define MAX_Gateway_72_front_right_door             1

/**
 * Signal front_right_door raw offset value.
 */
#define OFF_Gateway_72_front_right_door             0

/**
 * @}
 */

/**
 * @defgroup ENUM_Gateway_72_front_right_door Value Table for Signal front_right_door in Message Gateway_72 (0x3db)
 *
 * Enum values defined for \ref SIG_Gateway_72_front_right_door.
 *
 * @ingroup SIG_Gateway_72_front_right_door
 */

/**
 * Value table Gateway_72_front_right_door entry BT_geoeffnet.
 *
 * @ingroup ENUM_Gateway_72_front_right_door
 */
#define Gateway_72_front_right_door_BT_geoeffnet        1

/**
 * @defgroup SIG_Gateway_72_front_left_door Signal front_left_door of Message Gateway_72 (0x3db)
 *
 * gespiegeltes Bit FT_Tuer_geoeffnet TSG_FT_1 Botschaft
 *
 * Contains the value table \ref ENUM_Gateway_72_front_left_door.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal front_left_door configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_front_left_door and \ref GET_Gateway_72_front_left_door instead.
 */
#define SIG_Gateway_72_front_left_door              0, 0, 26, 1

/**
 * Signal front_left_door setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_front_left_door or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_front_left_door            0, 0, 26, 1, 0

/**
 * Get signal front_left_door from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_front_left_door(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 2) & 0x01) << 0) \
)

/**
 * Set signal front_left_door in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_front_left_door(buf, val) { \
	buf[3] &= ~(0x01 << 2); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 2; \
}

/**
 * Set signal front_left_door in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_front_left_door(buf) \
	SET_Gateway_72_front_left_door(buf, 0)

/**
 * Signal front_left_door value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_front_left_door(x, fmt) \
	((x) * fmt)

/**
 * Signal front_left_door raw initial value.
 */
#define START_Gateway_72_front_left_door            0

/**
 * Signal front_left_door raw minimum value.
 */
#define MIN_Gateway_72_front_left_door              0

/**
 * Signal front_left_door raw maximum value.
 */
#define MAX_Gateway_72_front_left_door              1

/**
 * Signal front_left_door raw offset value.
 */
#define OFF_Gateway_72_front_left_door              0

/**
 * @}
 */

/**
 * @defgroup ENUM_Gateway_72_front_left_door Value Table for Signal front_left_door in Message Gateway_72 (0x3db)
 *
 * Enum values defined for \ref SIG_Gateway_72_front_left_door.
 *
 * @ingroup SIG_Gateway_72_front_left_door
 */

/**
 * Value table Gateway_72_front_left_door entry FT_geoeffnet.
 *
 * @ingroup ENUM_Gateway_72_front_left_door
 */
#define Gateway_72_front_left_door_FT_geoeffnet        1

/**
 * @defgroup SIG_Gateway_72_trunk_status Signal trunk_status of Message Gateway_72 (0x3db)
 *
 * Status Heckdeckel
 *
 * Contains the value table \ref ENUM_Gateway_72_trunk_status.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Gateway_72
 * @{
 */

/**
 * Signal trunk_status configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Gateway_72_trunk_status and \ref GET_Gateway_72_trunk_status instead.
 */
#define SIG_Gateway_72_trunk_status                 0, 0, 30, 1

/**
 * Signal trunk_status setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Gateway_72_trunk_status or \ref INIT_Gateway_72 instead.
 */
#define SETUP_Gateway_72_trunk_status               0, 0, 30, 1, 0

/**
 * Get signal trunk_status from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Gateway_72_trunk_status(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 6) & 0x01) << 0) \
)

/**
 * Set signal trunk_status in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Gateway_72_trunk_status(buf, val) { \
	buf[3] &= ~(0x01 << 6); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal trunk_status in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Gateway_72_trunk_status(buf) \
	SET_Gateway_72_trunk_status(buf, 0)

/**
 * Signal trunk_status value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Gateway_72_trunk_status(x, fmt) \
	((x) * fmt)

/**
 * Signal trunk_status raw initial value.
 */
#define START_Gateway_72_trunk_status               0

/**
 * Signal trunk_status raw minimum value.
 */
#define MIN_Gateway_72_trunk_status                 0

/**
 * Signal trunk_status raw maximum value.
 */
#define MAX_Gateway_72_trunk_status                 1

/**
 * Signal trunk_status raw offset value.
 */
#define OFF_Gateway_72_trunk_status                 0

/**
 * @}
 */

/**
 * @defgroup ENUM_Gateway_72_trunk_status Value Table for Signal trunk_status in Message Gateway_72 (0x3db)
 *
 * Enum values defined for \ref SIG_Gateway_72_trunk_status.
 *
 * @ingroup SIG_Gateway_72_trunk_status
 */

/**
 * Value table Gateway_72_trunk_status entry Heckdeckel_auf.
 *
 * @ingroup ENUM_Gateway_72_trunk_status
 */
#define Gateway_72_trunk_status_Heckdeckel_auf      1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_io Signal wheel_button_io of Message GRA_ACC_01 (0x12b)
 *
 * Stellung des GRA/ACC-Hauptschalters: 
 * Bei gerastetem Hauptschalter:
 * 0: Hauptschalter aus
 * 1: Hauptschalter ein
 * Bei getastetem Hauptschalter:
 * 0: Taster nicht betätigt
 * 1: Taster betätigt
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_io.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_io configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_io and \ref GET_GRA_ACC_01_wheel_button_io instead.
 */
#define SIG_GRA_ACC_01_wheel_button_io              0, 0, 12, 1

/**
 * Signal wheel_button_io setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_io or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_io            0, 0, 12, 1, 0

/**
 * Get signal wheel_button_io from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_io(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 4) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_io in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_io(buf, val) { \
	buf[1] &= ~(0x01 << 4); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 4; \
}

/**
 * Set signal wheel_button_io in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_io(buf) \
	SET_GRA_ACC_01_wheel_button_io(buf, 0)

/**
 * Signal wheel_button_io value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_io(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_io raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_io            0

/**
 * Signal wheel_button_io raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_io              0

/**
 * Signal wheel_button_io raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_io              1

/**
 * Signal wheel_button_io raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_io              0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_io Value Table for Signal wheel_button_io in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_io.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_io
 */

/**
 * Value table GRA_ACC_01_wheel_button_io entry Hauptschalter_aus__Taster_nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_io
 */
#define GRA_ACC_01_wheel_button_io_Hauptschalter_aus__Taster_nicht_betaetigt    0

/**
 * Value table GRA_ACC_01_wheel_button_io entry Hauptschalter_ein__Taster_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_io
 */
#define GRA_ACC_01_wheel_button_io_Hauptschalter_ein__Taster_betaetigt    1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_mode Signal wheel_button_mode of Message GRA_ACC_01 (0x12b)
 *
 * Stellung des Limiter-Tasters
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_mode.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_mode configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_mode and \ref GET_GRA_ACC_01_wheel_button_mode instead.
 */
#define SIG_GRA_ACC_01_wheel_button_mode            0, 0, 15, 1

/**
 * Signal wheel_button_mode setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_mode or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_mode          0, 0, 15, 1, 0

/**
 * Get signal wheel_button_mode from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_mode(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_mode in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_mode(buf, val) { \
	buf[1] &= ~(0x01 << 7); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal wheel_button_mode in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_mode(buf) \
	SET_GRA_ACC_01_wheel_button_mode(buf, 0)

/**
 * Signal wheel_button_mode value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_mode(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_mode raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_mode          0

/**
 * Signal wheel_button_mode raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_mode            0

/**
 * Signal wheel_button_mode raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_mode            1

/**
 * Signal wheel_button_mode raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_mode            0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_mode Value Table for Signal wheel_button_mode in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_mode.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_mode
 */

/**
 * Value table GRA_ACC_01_wheel_button_mode entry nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_mode
 */
#define GRA_ACC_01_wheel_button_mode_nicht_betaetigt     0

/**
 * Value table GRA_ACC_01_wheel_button_mode entry betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_mode
 */
#define GRA_ACC_01_wheel_button_mode_betaetigt           1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_set Signal wheel_button_set of Message GRA_ACC_01 (0x12b)
 *
 * Tippschalter Set
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_set.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_set configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_set and \ref GET_GRA_ACC_01_wheel_button_set instead.
 */
#define SIG_GRA_ACC_01_wheel_button_set             0, 0, 16, 1

/**
 * Signal wheel_button_set setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_set or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_set           0, 0, 16, 1, 0

/**
 * Get signal wheel_button_set from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_set(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_set in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_set(buf, val) { \
	buf[2] &= ~(0x01 << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal wheel_button_set in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_set(buf) \
	SET_GRA_ACC_01_wheel_button_set(buf, 0)

/**
 * Signal wheel_button_set value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_set(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_set raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_set           0

/**
 * Signal wheel_button_set raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_set             0

/**
 * Signal wheel_button_set raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_set             1

/**
 * Signal wheel_button_set raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_set             0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_set Value Table for Signal wheel_button_set in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_set.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_set
 */

/**
 * Value table GRA_ACC_01_wheel_button_set entry nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_set
 */
#define GRA_ACC_01_wheel_button_set_nicht_betaetigt     0

/**
 * Value table GRA_ACC_01_wheel_button_set entry betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_set
 */
#define GRA_ACC_01_wheel_button_set_betaetigt           1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_plus Signal wheel_button_plus of Message GRA_ACC_01 (0x12b)
 *
 * Tippschalter Tip Up / Geschwindigkeit erhöhen
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_plus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_plus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_plus and \ref GET_GRA_ACC_01_wheel_button_plus instead.
 */
#define SIG_GRA_ACC_01_wheel_button_plus            0, 0, 17, 1

/**
 * Signal wheel_button_plus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_plus or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_plus          0, 0, 17, 1, 0

/**
 * Get signal wheel_button_plus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_plus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 1) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_plus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_plus(buf, val) { \
	buf[2] &= ~(0x01 << 1); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 1; \
}

/**
 * Set signal wheel_button_plus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_plus(buf) \
	SET_GRA_ACC_01_wheel_button_plus(buf, 0)

/**
 * Signal wheel_button_plus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_plus(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_plus raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_plus          0

/**
 * Signal wheel_button_plus raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_plus            0

/**
 * Signal wheel_button_plus raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_plus            1

/**
 * Signal wheel_button_plus raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_plus            0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_plus Value Table for Signal wheel_button_plus in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_plus.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_plus
 */

/**
 * Value table GRA_ACC_01_wheel_button_plus entry nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_plus
 */
#define GRA_ACC_01_wheel_button_plus_nicht_betaetigt     0

/**
 * Value table GRA_ACC_01_wheel_button_plus entry betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_plus
 */
#define GRA_ACC_01_wheel_button_plus_betaetigt           1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_minus Signal wheel_button_minus of Message GRA_ACC_01 (0x12b)
 *
 * Tippschalter Tip Down / Geschwindigkeit reduzieren
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_minus.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_minus configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_minus and \ref GET_GRA_ACC_01_wheel_button_minus instead.
 */
#define SIG_GRA_ACC_01_wheel_button_minus           0, 0, 18, 1

/**
 * Signal wheel_button_minus setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_minus or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_minus         0, 0, 18, 1, 0

/**
 * Get signal wheel_button_minus from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_minus(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 2) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_minus in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_minus(buf, val) { \
	buf[2] &= ~(0x01 << 2); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 2; \
}

/**
 * Set signal wheel_button_minus in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_minus(buf) \
	SET_GRA_ACC_01_wheel_button_minus(buf, 0)

/**
 * Signal wheel_button_minus value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_minus(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_minus raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_minus         0

/**
 * Signal wheel_button_minus raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_minus           0

/**
 * Signal wheel_button_minus raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_minus           1

/**
 * Signal wheel_button_minus raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_minus           0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_minus Value Table for Signal wheel_button_minus in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_minus.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_minus
 */

/**
 * Value table GRA_ACC_01_wheel_button_minus entry nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_minus
 */
#define GRA_ACC_01_wheel_button_minus_nicht_betaetigt     0

/**
 * Value table GRA_ACC_01_wheel_button_minus entry betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_minus
 */
#define GRA_ACC_01_wheel_button_minus_betaetigt           1

/**
 * @defgroup SIG_GRA_ACC_01_wheel_button_resume Signal wheel_button_resume of Message GRA_ACC_01 (0x12b)
 *
 * Tippschalter Wiederaufnahme
 *
 * Contains the value table \ref ENUM_GRA_ACC_01_wheel_button_resume.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_GRA_ACC_01
 * @{
 */

/**
 * Signal wheel_button_resume configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_GRA_ACC_01_wheel_button_resume and \ref GET_GRA_ACC_01_wheel_button_resume instead.
 */
#define SIG_GRA_ACC_01_wheel_button_resume          0, 0, 19, 1

/**
 * Signal wheel_button_resume setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_GRA_ACC_01_wheel_button_resume or \ref INIT_GRA_ACC_01 instead.
 */
#define SETUP_GRA_ACC_01_wheel_button_resume        0, 0, 19, 1, 0

/**
 * Get signal wheel_button_resume from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_GRA_ACC_01_wheel_button_resume(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 3) & 0x01) << 0) \
)

/**
 * Set signal wheel_button_resume in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_GRA_ACC_01_wheel_button_resume(buf, val) { \
	buf[2] &= ~(0x01 << 3); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 3; \
}

/**
 * Set signal wheel_button_resume in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_GRA_ACC_01_wheel_button_resume(buf) \
	SET_GRA_ACC_01_wheel_button_resume(buf, 0)

/**
 * Signal wheel_button_resume value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_GRA_ACC_01_wheel_button_resume(x, fmt) \
	((x) * fmt)

/**
 * Signal wheel_button_resume raw initial value.
 */
#define START_GRA_ACC_01_wheel_button_resume        0

/**
 * Signal wheel_button_resume raw minimum value.
 */
#define MIN_GRA_ACC_01_wheel_button_resume          0

/**
 * Signal wheel_button_resume raw maximum value.
 */
#define MAX_GRA_ACC_01_wheel_button_resume          1

/**
 * Signal wheel_button_resume raw offset value.
 */
#define OFF_GRA_ACC_01_wheel_button_resume          0

/**
 * @}
 */

/**
 * @defgroup ENUM_GRA_ACC_01_wheel_button_resume Value Table for Signal wheel_button_resume in Message GRA_ACC_01 (0x12b)
 *
 * Enum values defined for \ref SIG_GRA_ACC_01_wheel_button_resume.
 *
 * @ingroup SIG_GRA_ACC_01_wheel_button_resume
 */

/**
 * Value table GRA_ACC_01_wheel_button_resume entry nicht_betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_resume
 */
#define GRA_ACC_01_wheel_button_resume_nicht_betaetigt     0

/**
 * Value table GRA_ACC_01_wheel_button_resume entry betaetigt.
 *
 * @ingroup ENUM_GRA_ACC_01_wheel_button_resume
 */
#define GRA_ACC_01_wheel_button_resume_betaetigt           1

/**
 * @defgroup SIG_Licht_vorne_01_low_beam_light Signal low_beam_light of Message Licht_vorne_01 (0x658)
 *
 * Abblendlicht aktiv
 *
 * Contains the value table \ref ENUM_Licht_vorne_01_low_beam_light.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Licht_vorne_01
 * @{
 */

/**
 * Signal low_beam_light configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Licht_vorne_01_low_beam_light and \ref GET_Licht_vorne_01_low_beam_light instead.
 */
#define SIG_Licht_vorne_01_low_beam_light           0, 0, 13, 1

/**
 * Signal low_beam_light setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Licht_vorne_01_low_beam_light or \ref INIT_Licht_vorne_01 instead.
 */
#define SETUP_Licht_vorne_01_low_beam_light         0, 0, 13, 1, 0

/**
 * Get signal low_beam_light from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Licht_vorne_01_low_beam_light(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 5) & 0x01) << 0) \
)

/**
 * Set signal low_beam_light in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Licht_vorne_01_low_beam_light(buf, val) { \
	buf[1] &= ~(0x01 << 5); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 5; \
}

/**
 * Set signal low_beam_light in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Licht_vorne_01_low_beam_light(buf) \
	SET_Licht_vorne_01_low_beam_light(buf, 0)

/**
 * Signal low_beam_light value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Licht_vorne_01_low_beam_light(x, fmt) \
	((x) * fmt)

/**
 * Signal low_beam_light raw initial value.
 */
#define START_Licht_vorne_01_low_beam_light         0

/**
 * Signal low_beam_light raw minimum value.
 */
#define MIN_Licht_vorne_01_low_beam_light           0

/**
 * Signal low_beam_light raw maximum value.
 */
#define MAX_Licht_vorne_01_low_beam_light           1

/**
 * Signal low_beam_light raw offset value.
 */
#define OFF_Licht_vorne_01_low_beam_light           0

/**
 * @}
 */

/**
 * @defgroup ENUM_Licht_vorne_01_low_beam_light Value Table for Signal low_beam_light in Message Licht_vorne_01 (0x658)
 *
 * Enum values defined for \ref SIG_Licht_vorne_01_low_beam_light.
 *
 * @ingroup SIG_Licht_vorne_01_low_beam_light
 */

/**
 * Value table Licht_vorne_01_low_beam_light entry inaktiv.
 *
 * @ingroup ENUM_Licht_vorne_01_low_beam_light
 */
#define Licht_vorne_01_low_beam_light_inaktiv             0

/**
 * Value table Licht_vorne_01_low_beam_light entry aktiv.
 *
 * @ingroup ENUM_Licht_vorne_01_low_beam_light
 */
#define Licht_vorne_01_low_beam_light_aktiv               1

/**
 * @defgroup SIG_Licht_vorne_01_high_beam_light Signal high_beam_light of Message Licht_vorne_01 (0x658)
 *
 * Fernlicht_aktiv
 *
 * Contains the value table \ref ENUM_Licht_vorne_01_high_beam_light.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Licht_vorne_01
 * @{
 */

/**
 * Signal high_beam_light configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Licht_vorne_01_high_beam_light and \ref GET_Licht_vorne_01_high_beam_light instead.
 */
#define SIG_Licht_vorne_01_high_beam_light          0, 0, 14, 1

/**
 * Signal high_beam_light setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Licht_vorne_01_high_beam_light or \ref INIT_Licht_vorne_01 instead.
 */
#define SETUP_Licht_vorne_01_high_beam_light        0, 0, 14, 1, 0

/**
 * Get signal high_beam_light from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Licht_vorne_01_high_beam_light(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 6) & 0x01) << 0) \
)

/**
 * Set signal high_beam_light in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Licht_vorne_01_high_beam_light(buf, val) { \
	buf[1] &= ~(0x01 << 6); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 6; \
}

/**
 * Set signal high_beam_light in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Licht_vorne_01_high_beam_light(buf) \
	SET_Licht_vorne_01_high_beam_light(buf, 0)

/**
 * Signal high_beam_light value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Licht_vorne_01_high_beam_light(x, fmt) \
	((x) * fmt)

/**
 * Signal high_beam_light raw initial value.
 */
#define START_Licht_vorne_01_high_beam_light        0

/**
 * Signal high_beam_light raw minimum value.
 */
#define MIN_Licht_vorne_01_high_beam_light          0

/**
 * Signal high_beam_light raw maximum value.
 */
#define MAX_Licht_vorne_01_high_beam_light          1

/**
 * Signal high_beam_light raw offset value.
 */
#define OFF_Licht_vorne_01_high_beam_light          0

/**
 * @}
 */

/**
 * @defgroup ENUM_Licht_vorne_01_high_beam_light Value Table for Signal high_beam_light in Message Licht_vorne_01 (0x658)
 *
 * Enum values defined for \ref SIG_Licht_vorne_01_high_beam_light.
 *
 * @ingroup SIG_Licht_vorne_01_high_beam_light
 */

/**
 * Value table Licht_vorne_01_high_beam_light entry nicht.
 *
 * aktiv
 *
 * @ingroup ENUM_Licht_vorne_01_high_beam_light
 */
#define Licht_vorne_01_high_beam_light_nicht               0

/**
 * Value table Licht_vorne_01_high_beam_light entry aktiv.
 *
 * @ingroup ENUM_Licht_vorne_01_high_beam_light
 */
#define Licht_vorne_01_high_beam_light_aktiv               1

/**
 * @defgroup SIG_Licht_vorne_01_front_frog_light Signal front_frog_light of Message Licht_vorne_01 (0x658)
 *
 * Nebellicht_aktiv
 *
 * Contains the value table \ref ENUM_Licht_vorne_01_front_frog_light.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Licht_vorne_01
 * @{
 */

/**
 * Signal front_frog_light configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Licht_vorne_01_front_frog_light and \ref GET_Licht_vorne_01_front_frog_light instead.
 */
#define SIG_Licht_vorne_01_front_frog_light         0, 0, 15, 1

/**
 * Signal front_frog_light setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Licht_vorne_01_front_frog_light or \ref INIT_Licht_vorne_01 instead.
 */
#define SETUP_Licht_vorne_01_front_frog_light       0, 0, 15, 1, 0

/**
 * Get signal front_frog_light from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Licht_vorne_01_front_frog_light(buf) (0 \
	| (ubyte)(+(ubyte)((buf[1] >> 7) & 0x01) << 0) \
)

/**
 * Set signal front_frog_light in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Licht_vorne_01_front_frog_light(buf, val) { \
	buf[1] &= ~(0x01 << 7); \
	buf[1] |= (((ubyte)(val) >> 0) & 0x01) << 7; \
}

/**
 * Set signal front_frog_light in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Licht_vorne_01_front_frog_light(buf) \
	SET_Licht_vorne_01_front_frog_light(buf, 0)

/**
 * Signal front_frog_light value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Licht_vorne_01_front_frog_light(x, fmt) \
	((x) * fmt)

/**
 * Signal front_frog_light raw initial value.
 */
#define START_Licht_vorne_01_front_frog_light       0

/**
 * Signal front_frog_light raw minimum value.
 */
#define MIN_Licht_vorne_01_front_frog_light         0

/**
 * Signal front_frog_light raw maximum value.
 */
#define MAX_Licht_vorne_01_front_frog_light         1

/**
 * Signal front_frog_light raw offset value.
 */
#define OFF_Licht_vorne_01_front_frog_light         0

/**
 * @}
 */

/**
 * @defgroup ENUM_Licht_vorne_01_front_frog_light Value Table for Signal front_frog_light in Message Licht_vorne_01 (0x658)
 *
 * Enum values defined for \ref SIG_Licht_vorne_01_front_frog_light.
 *
 * @ingroup SIG_Licht_vorne_01_front_frog_light
 */

/**
 * Value table Licht_vorne_01_front_frog_light entry nicht.
 *
 * aktiv
 *
 * @ingroup ENUM_Licht_vorne_01_front_frog_light
 */
#define Licht_vorne_01_front_frog_light_nicht               0

/**
 * Value table Licht_vorne_01_front_frog_light entry aktiv.
 *
 * @ingroup ENUM_Licht_vorne_01_front_frog_light
 */
#define Licht_vorne_01_front_frog_light_aktiv               1

/**
 * @defgroup SIG_Licht_vorne_01_rear_frog_light Signal rear_frog_light of Message Licht_vorne_01 (0x658)
 *
 * Nebelschlusslicht_aktiv
 *
 * Contains the value table \ref ENUM_Licht_vorne_01_rear_frog_light.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_Licht_vorne_01
 * @{
 */

/**
 * Signal rear_frog_light configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_Licht_vorne_01_rear_frog_light and \ref GET_Licht_vorne_01_rear_frog_light instead.
 */
#define SIG_Licht_vorne_01_rear_frog_light          0, 0, 16, 1

/**
 * Signal rear_frog_light setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_Licht_vorne_01_rear_frog_light or \ref INIT_Licht_vorne_01 instead.
 */
#define SETUP_Licht_vorne_01_rear_frog_light        0, 0, 16, 1, 0

/**
 * Get signal rear_frog_light from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_Licht_vorne_01_rear_frog_light(buf) (0 \
	| (ubyte)(+(ubyte)((buf[2] >> 0) & 0x01) << 0) \
)

/**
 * Set signal rear_frog_light in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_Licht_vorne_01_rear_frog_light(buf, val) { \
	buf[2] &= ~(0x01 << 0); \
	buf[2] |= (((ubyte)(val) >> 0) & 0x01) << 0; \
}

/**
 * Set signal rear_frog_light in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_Licht_vorne_01_rear_frog_light(buf) \
	SET_Licht_vorne_01_rear_frog_light(buf, 0)

/**
 * Signal rear_frog_light value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_Licht_vorne_01_rear_frog_light(x, fmt) \
	((x) * fmt)

/**
 * Signal rear_frog_light raw initial value.
 */
#define START_Licht_vorne_01_rear_frog_light        0

/**
 * Signal rear_frog_light raw minimum value.
 */
#define MIN_Licht_vorne_01_rear_frog_light          0

/**
 * Signal rear_frog_light raw maximum value.
 */
#define MAX_Licht_vorne_01_rear_frog_light          1

/**
 * Signal rear_frog_light raw offset value.
 */
#define OFF_Licht_vorne_01_rear_frog_light          0

/**
 * @}
 */

/**
 * @defgroup ENUM_Licht_vorne_01_rear_frog_light Value Table for Signal rear_frog_light in Message Licht_vorne_01 (0x658)
 *
 * Enum values defined for \ref SIG_Licht_vorne_01_rear_frog_light.
 *
 * @ingroup SIG_Licht_vorne_01_rear_frog_light
 */

/**
 * Value table Licht_vorne_01_rear_frog_light entry nicht.
 *
 * aktiv
 *
 * @ingroup ENUM_Licht_vorne_01_rear_frog_light
 */
#define Licht_vorne_01_rear_frog_light_nicht               0

/**
 * Value table Licht_vorne_01_rear_frog_light entry aktiv.
 *
 * @ingroup ENUM_Licht_vorne_01_rear_frog_light
 */
#define Licht_vorne_01_rear_frog_light_aktiv               1

/**
 * @defgroup SIG_RLS_01_rainfall Signal rainfall of Message RLS_01 (0x5a0)
 *
 * Regenmenge für intel. Heckleuchte 
 *
 * Contains the value table \ref ENUM_RLS_01_rainfall.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_RLS_01
 * @{
 */

/**
 * Signal rainfall configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_RLS_01_rainfall and \ref GET_RLS_01_rainfall instead.
 */
#define SIG_RLS_01_rainfall                         0, 0, 24, 4

/**
 * Signal rainfall setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_RLS_01_rainfall or \ref INIT_RLS_01 instead.
 */
#define SETUP_RLS_01_rainfall                       0, 0, 24, 4, 14

/**
 * Get signal rainfall from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_RLS_01_rainfall(buf) (0 \
	| (ubyte)(+(ubyte)((buf[3] >> 0) & 0x0f) << 0) \
)

/**
 * Set signal rainfall in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_RLS_01_rainfall(buf, val) { \
	buf[3] &= ~(0x0f << 0); \
	buf[3] |= (((ubyte)(val) >> 0) & 0x0f) << 0; \
}

/**
 * Set signal rainfall in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_RLS_01_rainfall(buf) \
	SET_RLS_01_rainfall(buf, 14)

/**
 * Signal rainfall value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_RLS_01_rainfall(x, fmt) \
	((x) * fmt * 10)

/**
 * Signal rainfall raw initial value.
 */
#define START_RLS_01_rainfall                       14

/**
 * Signal rainfall raw minimum value.
 */
#define MIN_RLS_01_rainfall                         0

/**
 * Signal rainfall raw maximum value.
 */
#define MAX_RLS_01_rainfall                         10

/**
 * Signal rainfall raw offset value.
 */
#define OFF_RLS_01_rainfall                         0

/**
 * @}
 */

/**
 * @defgroup ENUM_RLS_01_rainfall Value Table for Signal rainfall in Message RLS_01 (0x5a0)
 *
 * Enum values defined for \ref SIG_RLS_01_rainfall.
 *
 * @ingroup SIG_RLS_01_rainfall
 */

/**
 * Value table RLS_01_rainfall entry Init.
 *
 * @ingroup ENUM_RLS_01_rainfall
 */
#define RLS_01_rainfall_Init                14

/**
 * Value table RLS_01_rainfall entry Fehler.
 *
 * @ingroup ENUM_RLS_01_rainfall
 */
#define RLS_01_rainfall_Fehler              15

/**
 * @defgroup SIG_RLS_01_front_wiper_speed Signal front_wiper_speed of Message RLS_01 (0x5a0)
 *
 * Wischergeschwindigkeit (Hübe/min)
 *
 * Contains the value table \ref ENUM_RLS_01_front_wiper_speed.
 *
 * Received by the ECUs:
 *
 * @ingroup MSG_RLS_01
 * @{
 */

/**
 * Signal front_wiper_speed configuration tuple.
 *
 * @deprecated
 *	Use \ref SET_RLS_01_front_wiper_speed and \ref GET_RLS_01_front_wiper_speed instead.
 */
#define SIG_RLS_01_front_wiper_speed                0, 0, 32, 3

/**
 * Signal front_wiper_speed setup tuple.
 *
 * @deprecated
 *	Use \ref INITSIG_RLS_01_front_wiper_speed or \ref INIT_RLS_01 instead.
 */
#define SETUP_RLS_01_front_wiper_speed              0, 0, 32, 3, 0

/**
 * Get signal front_wiper_speed from buffer.
 *
 * @param buf
 *	The can message buffer containing the signal
 * @return
 *	The raw signal
 */
#define GET_RLS_01_front_wiper_speed(buf) (0 \
	| (ubyte)(+(ubyte)((buf[4] >> 0) & 0x07) << 0) \
)

/**
 * Set signal front_wiper_speed in buffer.
 *
 * @param buf
 *	The can message buffer to add the signal to
 * @param val
 *	The raw value to set the signal to
 */
#define SET_RLS_01_front_wiper_speed(buf, val) { \
	buf[4] &= ~(0x07 << 0); \
	buf[4] |= (((ubyte)(val) >> 0) & 0x07) << 0; \
}

/**
 * Set signal front_wiper_speed in buffer to its initial value.
 *
 * @param buf
 *	The can message buffer to initialise
 */
#define INITSIG_RLS_01_front_wiper_speed(buf) \
	SET_RLS_01_front_wiper_speed(buf, 0)

/**
 * Signal front_wiper_speed value conversion with 16 bit factor and offset.
 *
 * @param x
 *	The raw signal value
 * @param fmt
 *	A factor to adjust values, e.g. 10 to get one additional
 *	digit or 1 / 1000 to dispay a fraction
 * @return
 *	The signal value as a human readable number
 */
#define CALC_RLS_01_front_wiper_speed(x, fmt) \
	((x) * fmt)

/**
 * Signal front_wiper_speed raw initial value.
 */
#define START_RLS_01_front_wiper_speed              0

/**
 * Signal front_wiper_speed raw minimum value.
 */
#define MIN_RLS_01_front_wiper_speed                0

/**
 * Signal front_wiper_speed raw maximum value.
 */
#define MAX_RLS_01_front_wiper_speed                7

/**
 * Signal front_wiper_speed raw offset value.
 */
#define OFF_RLS_01_front_wiper_speed                0

/**
 * @}
 */

/**
 * @defgroup ENUM_RLS_01_front_wiper_speed Value Table for Signal front_wiper_speed in Message RLS_01 (0x5a0)
 *
 * Enum values defined for \ref SIG_RLS_01_front_wiper_speed.
 *
 * @ingroup SIG_RLS_01_front_wiper_speed
 */

/**
 * Value table RLS_01_front_wiper_speed entry kein.
 *
 * Wischen
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_kein                0

/**
 * Value table RLS_01_front_wiper_speed entry 42.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_42                  1

/**
 * Value table RLS_01_front_wiper_speed entry 45.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_45                  2

/**
 * Value table RLS_01_front_wiper_speed entry 48.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_48                  3

/**
 * Value table RLS_01_front_wiper_speed entry 51.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_51                  4

/**
 * Value table RLS_01_front_wiper_speed entry 54.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_54                  5

/**
 * Value table RLS_01_front_wiper_speed entry 57.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_57                  6

/**
 * Value table RLS_01_front_wiper_speed entry 60.
 *
 * Huebe/min
 *
 * @ingroup ENUM_RLS_01_front_wiper_speed
 */
#define RLS_01_front_wiper_speed_60                  7

#endif
