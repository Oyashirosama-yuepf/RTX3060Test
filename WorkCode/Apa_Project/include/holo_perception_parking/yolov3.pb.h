// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yolov3.proto

#ifndef PROTOBUF_INCLUDED_yolov3_2eproto
#define PROTOBUF_INCLUDED_yolov3_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensor_rt.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_yolov3_2eproto 

namespace protobuf_yolov3_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_yolov3_2eproto
namespace holo {
namespace perception {
class Bias;
class BiasDefaultTypeInternal;
extern BiasDefaultTypeInternal _Bias_default_instance_;
class NMSConfig;
class NMSConfigDefaultTypeInternal;
extern NMSConfigDefaultTypeInternal _NMSConfig_default_instance_;
class YoloV3Config;
class YoloV3ConfigDefaultTypeInternal;
extern YoloV3ConfigDefaultTypeInternal _YoloV3Config_default_instance_;
}  // namespace perception
}  // namespace holo
namespace google {
namespace protobuf {
template<> ::holo::perception::Bias* Arena::CreateMaybeMessage<::holo::perception::Bias>(Arena*);
template<> ::holo::perception::NMSConfig* Arena::CreateMaybeMessage<::holo::perception::NMSConfig>(Arena*);
template<> ::holo::perception::YoloV3Config* Arena::CreateMaybeMessage<::holo::perception::YoloV3Config>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holo {
namespace perception {

// ===================================================================

class NMSConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.perception.NMSConfig) */ {
 public:
  NMSConfig();
  virtual ~NMSConfig();

  NMSConfig(const NMSConfig& from);

  inline NMSConfig& operator=(const NMSConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NMSConfig(NMSConfig&& from) noexcept
    : NMSConfig() {
    *this = ::std::move(from);
  }

  inline NMSConfig& operator=(NMSConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NMSConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NMSConfig* internal_default_instance() {
    return reinterpret_cast<const NMSConfig*>(
               &_NMSConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NMSConfig* other);
  friend void swap(NMSConfig& a, NMSConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NMSConfig* New() const final {
    return CreateMaybeMessage<NMSConfig>(NULL);
  }

  NMSConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NMSConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NMSConfig& from);
  void MergeFrom(const NMSConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NMSConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string soft_type = 2;
  bool has_soft_type() const;
  void clear_soft_type();
  static const int kSoftTypeFieldNumber = 2;
  const ::std::string& soft_type() const;
  void set_soft_type(const ::std::string& value);
  #if LANG_CXX11
  void set_soft_type(::std::string&& value);
  #endif
  void set_soft_type(const char* value);
  void set_soft_type(const char* value, size_t size);
  ::std::string* mutable_soft_type();
  ::std::string* release_soft_type();
  void set_allocated_soft_type(::std::string* soft_type);

  // optional float threshold = 1;
  bool has_threshold() const;
  void clear_threshold();
  static const int kThresholdFieldNumber = 1;
  float threshold() const;
  void set_threshold(float value);

  // optional float sigma = 3;
  bool has_sigma() const;
  void clear_sigma();
  static const int kSigmaFieldNumber = 3;
  float sigma() const;
  void set_sigma(float value);

  // @@protoc_insertion_point(class_scope:holo.perception.NMSConfig)
 private:
  void set_has_threshold();
  void clear_has_threshold();
  void set_has_soft_type();
  void clear_has_soft_type();
  void set_has_sigma();
  void clear_has_sigma();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr soft_type_;
  float threshold_;
  float sigma_;
  friend struct ::protobuf_yolov3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bias : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.perception.Bias) */ {
 public:
  Bias();
  virtual ~Bias();

  Bias(const Bias& from);

  inline Bias& operator=(const Bias& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bias(Bias&& from) noexcept
    : Bias() {
    *this = ::std::move(from);
  }

  inline Bias& operator=(Bias&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bias& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bias* internal_default_instance() {
    return reinterpret_cast<const Bias*>(
               &_Bias_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Bias* other);
  friend void swap(Bias& a, Bias& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bias* New() const final {
    return CreateMaybeMessage<Bias>(NULL);
  }

  Bias* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bias>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bias& from);
  void MergeFrom(const Bias& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bias* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string layer_name = 1;
  bool has_layer_name() const;
  void clear_layer_name();
  static const int kLayerNameFieldNumber = 1;
  const ::std::string& layer_name() const;
  void set_layer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_layer_name(::std::string&& value);
  #endif
  void set_layer_name(const char* value);
  void set_layer_name(const char* value, size_t size);
  ::std::string* mutable_layer_name();
  ::std::string* release_layer_name();
  void set_allocated_layer_name(::std::string* layer_name);

  // optional string bias_config = 2;
  bool has_bias_config() const;
  void clear_bias_config();
  static const int kBiasConfigFieldNumber = 2;
  const ::std::string& bias_config() const;
  void set_bias_config(const ::std::string& value);
  #if LANG_CXX11
  void set_bias_config(::std::string&& value);
  #endif
  void set_bias_config(const char* value);
  void set_bias_config(const char* value, size_t size);
  ::std::string* mutable_bias_config();
  ::std::string* release_bias_config();
  void set_allocated_bias_config(::std::string* bias_config);

  // @@protoc_insertion_point(class_scope:holo.perception.Bias)
 private:
  void set_has_layer_name();
  void clear_has_layer_name();
  void set_has_bias_config();
  void clear_has_bias_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr layer_name_;
  ::google::protobuf::internal::ArenaStringPtr bias_config_;
  friend struct ::protobuf_yolov3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class YoloV3Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holo.perception.YoloV3Config) */ {
 public:
  YoloV3Config();
  virtual ~YoloV3Config();

  YoloV3Config(const YoloV3Config& from);

  inline YoloV3Config& operator=(const YoloV3Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  YoloV3Config(YoloV3Config&& from) noexcept
    : YoloV3Config() {
    *this = ::std::move(from);
  }

  inline YoloV3Config& operator=(YoloV3Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YoloV3Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const YoloV3Config* internal_default_instance() {
    return reinterpret_cast<const YoloV3Config*>(
               &_YoloV3Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(YoloV3Config* other);
  friend void swap(YoloV3Config& a, YoloV3Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline YoloV3Config* New() const final {
    return CreateMaybeMessage<YoloV3Config>(NULL);
  }

  YoloV3Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<YoloV3Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const YoloV3Config& from);
  void MergeFrom(const YoloV3Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(YoloV3Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .holo.perception.Bias bias = 4;
  int bias_size() const;
  void clear_bias();
  static const int kBiasFieldNumber = 4;
  ::holo::perception::Bias* mutable_bias(int index);
  ::google::protobuf::RepeatedPtrField< ::holo::perception::Bias >*
      mutable_bias();
  const ::holo::perception::Bias& bias(int index) const;
  ::holo::perception::Bias* add_bias();
  const ::google::protobuf::RepeatedPtrField< ::holo::perception::Bias >&
      bias() const;

  // optional string mean = 5;
  bool has_mean() const;
  void clear_mean();
  static const int kMeanFieldNumber = 5;
  const ::std::string& mean() const;
  void set_mean(const ::std::string& value);
  #if LANG_CXX11
  void set_mean(::std::string&& value);
  #endif
  void set_mean(const char* value);
  void set_mean(const char* value, size_t size);
  ::std::string* mutable_mean();
  ::std::string* release_mean();
  void set_allocated_mean(::std::string* mean);

  // optional string save_dir = 6;
  bool has_save_dir() const;
  void clear_save_dir();
  static const int kSaveDirFieldNumber = 6;
  const ::std::string& save_dir() const;
  void set_save_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_save_dir(::std::string&& value);
  #endif
  void set_save_dir(const char* value);
  void set_save_dir(const char* value, size_t size);
  ::std::string* mutable_save_dir();
  ::std::string* release_save_dir();
  void set_allocated_save_dir(::std::string* save_dir);

  // optional .holo.perception.TensorRTConfig tensor_rt_config = 1;
  bool has_tensor_rt_config() const;
  void clear_tensor_rt_config();
  static const int kTensorRtConfigFieldNumber = 1;
  private:
  const ::holo::perception::TensorRTConfig& _internal_tensor_rt_config() const;
  public:
  const ::holo::perception::TensorRTConfig& tensor_rt_config() const;
  ::holo::perception::TensorRTConfig* release_tensor_rt_config();
  ::holo::perception::TensorRTConfig* mutable_tensor_rt_config();
  void set_allocated_tensor_rt_config(::holo::perception::TensorRTConfig* tensor_rt_config);

  // optional .holo.perception.NMSConfig nms_config = 3;
  bool has_nms_config() const;
  void clear_nms_config();
  static const int kNmsConfigFieldNumber = 3;
  private:
  const ::holo::perception::NMSConfig& _internal_nms_config() const;
  public:
  const ::holo::perception::NMSConfig& nms_config() const;
  ::holo::perception::NMSConfig* release_nms_config();
  ::holo::perception::NMSConfig* mutable_nms_config();
  void set_allocated_nms_config(::holo::perception::NMSConfig* nms_config);

  // optional float box_threshold = 2;
  bool has_box_threshold() const;
  void clear_box_threshold();
  static const int kBoxThresholdFieldNumber = 2;
  float box_threshold() const;
  void set_box_threshold(float value);

  // optional int32 image_width = 7;
  bool has_image_width() const;
  void clear_image_width();
  static const int kImageWidthFieldNumber = 7;
  ::google::protobuf::int32 image_width() const;
  void set_image_width(::google::protobuf::int32 value);

  // optional int32 image_height = 8;
  bool has_image_height() const;
  void clear_image_height();
  static const int kImageHeightFieldNumber = 8;
  ::google::protobuf::int32 image_height() const;
  void set_image_height(::google::protobuf::int32 value);

  // optional int32 num_anchor = 9;
  bool has_num_anchor() const;
  void clear_num_anchor();
  static const int kNumAnchorFieldNumber = 9;
  ::google::protobuf::int32 num_anchor() const;
  void set_num_anchor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:holo.perception.YoloV3Config)
 private:
  void set_has_tensor_rt_config();
  void clear_has_tensor_rt_config();
  void set_has_box_threshold();
  void clear_has_box_threshold();
  void set_has_nms_config();
  void clear_has_nms_config();
  void set_has_mean();
  void clear_has_mean();
  void set_has_save_dir();
  void clear_has_save_dir();
  void set_has_image_width();
  void clear_has_image_width();
  void set_has_image_height();
  void clear_has_image_height();
  void set_has_num_anchor();
  void clear_has_num_anchor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::holo::perception::Bias > bias_;
  ::google::protobuf::internal::ArenaStringPtr mean_;
  ::google::protobuf::internal::ArenaStringPtr save_dir_;
  ::holo::perception::TensorRTConfig* tensor_rt_config_;
  ::holo::perception::NMSConfig* nms_config_;
  float box_threshold_;
  ::google::protobuf::int32 image_width_;
  ::google::protobuf::int32 image_height_;
  ::google::protobuf::int32 num_anchor_;
  friend struct ::protobuf_yolov3_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NMSConfig

// optional float threshold = 1;
inline bool NMSConfig::has_threshold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NMSConfig::set_has_threshold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NMSConfig::clear_has_threshold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NMSConfig::clear_threshold() {
  threshold_ = 0;
  clear_has_threshold();
}
inline float NMSConfig::threshold() const {
  // @@protoc_insertion_point(field_get:holo.perception.NMSConfig.threshold)
  return threshold_;
}
inline void NMSConfig::set_threshold(float value) {
  set_has_threshold();
  threshold_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.NMSConfig.threshold)
}

// optional string soft_type = 2;
inline bool NMSConfig::has_soft_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NMSConfig::set_has_soft_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NMSConfig::clear_has_soft_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NMSConfig::clear_soft_type() {
  soft_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_soft_type();
}
inline const ::std::string& NMSConfig::soft_type() const {
  // @@protoc_insertion_point(field_get:holo.perception.NMSConfig.soft_type)
  return soft_type_.GetNoArena();
}
inline void NMSConfig::set_soft_type(const ::std::string& value) {
  set_has_soft_type();
  soft_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.perception.NMSConfig.soft_type)
}
#if LANG_CXX11
inline void NMSConfig::set_soft_type(::std::string&& value) {
  set_has_soft_type();
  soft_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.perception.NMSConfig.soft_type)
}
#endif
inline void NMSConfig::set_soft_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_soft_type();
  soft_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.perception.NMSConfig.soft_type)
}
inline void NMSConfig::set_soft_type(const char* value, size_t size) {
  set_has_soft_type();
  soft_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.perception.NMSConfig.soft_type)
}
inline ::std::string* NMSConfig::mutable_soft_type() {
  set_has_soft_type();
  // @@protoc_insertion_point(field_mutable:holo.perception.NMSConfig.soft_type)
  return soft_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NMSConfig::release_soft_type() {
  // @@protoc_insertion_point(field_release:holo.perception.NMSConfig.soft_type)
  if (!has_soft_type()) {
    return NULL;
  }
  clear_has_soft_type();
  return soft_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NMSConfig::set_allocated_soft_type(::std::string* soft_type) {
  if (soft_type != NULL) {
    set_has_soft_type();
  } else {
    clear_has_soft_type();
  }
  soft_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soft_type);
  // @@protoc_insertion_point(field_set_allocated:holo.perception.NMSConfig.soft_type)
}

// optional float sigma = 3;
inline bool NMSConfig::has_sigma() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NMSConfig::set_has_sigma() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NMSConfig::clear_has_sigma() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NMSConfig::clear_sigma() {
  sigma_ = 0;
  clear_has_sigma();
}
inline float NMSConfig::sigma() const {
  // @@protoc_insertion_point(field_get:holo.perception.NMSConfig.sigma)
  return sigma_;
}
inline void NMSConfig::set_sigma(float value) {
  set_has_sigma();
  sigma_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.NMSConfig.sigma)
}

// -------------------------------------------------------------------

// Bias

// optional string layer_name = 1;
inline bool Bias::has_layer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bias::set_has_layer_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bias::clear_has_layer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bias::clear_layer_name() {
  layer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layer_name();
}
inline const ::std::string& Bias::layer_name() const {
  // @@protoc_insertion_point(field_get:holo.perception.Bias.layer_name)
  return layer_name_.GetNoArena();
}
inline void Bias::set_layer_name(const ::std::string& value) {
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.perception.Bias.layer_name)
}
#if LANG_CXX11
inline void Bias::set_layer_name(::std::string&& value) {
  set_has_layer_name();
  layer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.perception.Bias.layer_name)
}
#endif
inline void Bias::set_layer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.perception.Bias.layer_name)
}
inline void Bias::set_layer_name(const char* value, size_t size) {
  set_has_layer_name();
  layer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.perception.Bias.layer_name)
}
inline ::std::string* Bias::mutable_layer_name() {
  set_has_layer_name();
  // @@protoc_insertion_point(field_mutable:holo.perception.Bias.layer_name)
  return layer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bias::release_layer_name() {
  // @@protoc_insertion_point(field_release:holo.perception.Bias.layer_name)
  if (!has_layer_name()) {
    return NULL;
  }
  clear_has_layer_name();
  return layer_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bias::set_allocated_layer_name(::std::string* layer_name) {
  if (layer_name != NULL) {
    set_has_layer_name();
  } else {
    clear_has_layer_name();
  }
  layer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layer_name);
  // @@protoc_insertion_point(field_set_allocated:holo.perception.Bias.layer_name)
}

// optional string bias_config = 2;
inline bool Bias::has_bias_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Bias::set_has_bias_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Bias::clear_has_bias_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Bias::clear_bias_config() {
  bias_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bias_config();
}
inline const ::std::string& Bias::bias_config() const {
  // @@protoc_insertion_point(field_get:holo.perception.Bias.bias_config)
  return bias_config_.GetNoArena();
}
inline void Bias::set_bias_config(const ::std::string& value) {
  set_has_bias_config();
  bias_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.perception.Bias.bias_config)
}
#if LANG_CXX11
inline void Bias::set_bias_config(::std::string&& value) {
  set_has_bias_config();
  bias_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.perception.Bias.bias_config)
}
#endif
inline void Bias::set_bias_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bias_config();
  bias_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.perception.Bias.bias_config)
}
inline void Bias::set_bias_config(const char* value, size_t size) {
  set_has_bias_config();
  bias_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.perception.Bias.bias_config)
}
inline ::std::string* Bias::mutable_bias_config() {
  set_has_bias_config();
  // @@protoc_insertion_point(field_mutable:holo.perception.Bias.bias_config)
  return bias_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Bias::release_bias_config() {
  // @@protoc_insertion_point(field_release:holo.perception.Bias.bias_config)
  if (!has_bias_config()) {
    return NULL;
  }
  clear_has_bias_config();
  return bias_config_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Bias::set_allocated_bias_config(::std::string* bias_config) {
  if (bias_config != NULL) {
    set_has_bias_config();
  } else {
    clear_has_bias_config();
  }
  bias_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bias_config);
  // @@protoc_insertion_point(field_set_allocated:holo.perception.Bias.bias_config)
}

// -------------------------------------------------------------------

// YoloV3Config

// optional .holo.perception.TensorRTConfig tensor_rt_config = 1;
inline bool YoloV3Config::has_tensor_rt_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YoloV3Config::set_has_tensor_rt_config() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YoloV3Config::clear_has_tensor_rt_config() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::holo::perception::TensorRTConfig& YoloV3Config::_internal_tensor_rt_config() const {
  return *tensor_rt_config_;
}
inline const ::holo::perception::TensorRTConfig& YoloV3Config::tensor_rt_config() const {
  const ::holo::perception::TensorRTConfig* p = tensor_rt_config_;
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.tensor_rt_config)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::perception::TensorRTConfig*>(
      &::holo::perception::_TensorRTConfig_default_instance_);
}
inline ::holo::perception::TensorRTConfig* YoloV3Config::release_tensor_rt_config() {
  // @@protoc_insertion_point(field_release:holo.perception.YoloV3Config.tensor_rt_config)
  clear_has_tensor_rt_config();
  ::holo::perception::TensorRTConfig* temp = tensor_rt_config_;
  tensor_rt_config_ = NULL;
  return temp;
}
inline ::holo::perception::TensorRTConfig* YoloV3Config::mutable_tensor_rt_config() {
  set_has_tensor_rt_config();
  if (tensor_rt_config_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::perception::TensorRTConfig>(GetArenaNoVirtual());
    tensor_rt_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.perception.YoloV3Config.tensor_rt_config)
  return tensor_rt_config_;
}
inline void YoloV3Config::set_allocated_tensor_rt_config(::holo::perception::TensorRTConfig* tensor_rt_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tensor_rt_config_);
  }
  if (tensor_rt_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tensor_rt_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tensor_rt_config, submessage_arena);
    }
    set_has_tensor_rt_config();
  } else {
    clear_has_tensor_rt_config();
  }
  tensor_rt_config_ = tensor_rt_config;
  // @@protoc_insertion_point(field_set_allocated:holo.perception.YoloV3Config.tensor_rt_config)
}

// optional float box_threshold = 2;
inline bool YoloV3Config::has_box_threshold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YoloV3Config::set_has_box_threshold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YoloV3Config::clear_has_box_threshold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YoloV3Config::clear_box_threshold() {
  box_threshold_ = 0;
  clear_has_box_threshold();
}
inline float YoloV3Config::box_threshold() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.box_threshold)
  return box_threshold_;
}
inline void YoloV3Config::set_box_threshold(float value) {
  set_has_box_threshold();
  box_threshold_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.box_threshold)
}

// optional .holo.perception.NMSConfig nms_config = 3;
inline bool YoloV3Config::has_nms_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YoloV3Config::set_has_nms_config() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YoloV3Config::clear_has_nms_config() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YoloV3Config::clear_nms_config() {
  if (nms_config_ != NULL) nms_config_->Clear();
  clear_has_nms_config();
}
inline const ::holo::perception::NMSConfig& YoloV3Config::_internal_nms_config() const {
  return *nms_config_;
}
inline const ::holo::perception::NMSConfig& YoloV3Config::nms_config() const {
  const ::holo::perception::NMSConfig* p = nms_config_;
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.nms_config)
  return p != NULL ? *p : *reinterpret_cast<const ::holo::perception::NMSConfig*>(
      &::holo::perception::_NMSConfig_default_instance_);
}
inline ::holo::perception::NMSConfig* YoloV3Config::release_nms_config() {
  // @@protoc_insertion_point(field_release:holo.perception.YoloV3Config.nms_config)
  clear_has_nms_config();
  ::holo::perception::NMSConfig* temp = nms_config_;
  nms_config_ = NULL;
  return temp;
}
inline ::holo::perception::NMSConfig* YoloV3Config::mutable_nms_config() {
  set_has_nms_config();
  if (nms_config_ == NULL) {
    auto* p = CreateMaybeMessage<::holo::perception::NMSConfig>(GetArenaNoVirtual());
    nms_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:holo.perception.YoloV3Config.nms_config)
  return nms_config_;
}
inline void YoloV3Config::set_allocated_nms_config(::holo::perception::NMSConfig* nms_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nms_config_;
  }
  if (nms_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nms_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nms_config, submessage_arena);
    }
    set_has_nms_config();
  } else {
    clear_has_nms_config();
  }
  nms_config_ = nms_config;
  // @@protoc_insertion_point(field_set_allocated:holo.perception.YoloV3Config.nms_config)
}

// repeated .holo.perception.Bias bias = 4;
inline int YoloV3Config::bias_size() const {
  return bias_.size();
}
inline void YoloV3Config::clear_bias() {
  bias_.Clear();
}
inline ::holo::perception::Bias* YoloV3Config::mutable_bias(int index) {
  // @@protoc_insertion_point(field_mutable:holo.perception.YoloV3Config.bias)
  return bias_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::holo::perception::Bias >*
YoloV3Config::mutable_bias() {
  // @@protoc_insertion_point(field_mutable_list:holo.perception.YoloV3Config.bias)
  return &bias_;
}
inline const ::holo::perception::Bias& YoloV3Config::bias(int index) const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.bias)
  return bias_.Get(index);
}
inline ::holo::perception::Bias* YoloV3Config::add_bias() {
  // @@protoc_insertion_point(field_add:holo.perception.YoloV3Config.bias)
  return bias_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::holo::perception::Bias >&
YoloV3Config::bias() const {
  // @@protoc_insertion_point(field_list:holo.perception.YoloV3Config.bias)
  return bias_;
}

// optional string mean = 5;
inline bool YoloV3Config::has_mean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YoloV3Config::set_has_mean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YoloV3Config::clear_has_mean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YoloV3Config::clear_mean() {
  mean_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mean();
}
inline const ::std::string& YoloV3Config::mean() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.mean)
  return mean_.GetNoArena();
}
inline void YoloV3Config::set_mean(const ::std::string& value) {
  set_has_mean();
  mean_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.mean)
}
#if LANG_CXX11
inline void YoloV3Config::set_mean(::std::string&& value) {
  set_has_mean();
  mean_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.perception.YoloV3Config.mean)
}
#endif
inline void YoloV3Config::set_mean(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mean();
  mean_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.perception.YoloV3Config.mean)
}
inline void YoloV3Config::set_mean(const char* value, size_t size) {
  set_has_mean();
  mean_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.perception.YoloV3Config.mean)
}
inline ::std::string* YoloV3Config::mutable_mean() {
  set_has_mean();
  // @@protoc_insertion_point(field_mutable:holo.perception.YoloV3Config.mean)
  return mean_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YoloV3Config::release_mean() {
  // @@protoc_insertion_point(field_release:holo.perception.YoloV3Config.mean)
  if (!has_mean()) {
    return NULL;
  }
  clear_has_mean();
  return mean_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoloV3Config::set_allocated_mean(::std::string* mean) {
  if (mean != NULL) {
    set_has_mean();
  } else {
    clear_has_mean();
  }
  mean_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mean);
  // @@protoc_insertion_point(field_set_allocated:holo.perception.YoloV3Config.mean)
}

// optional string save_dir = 6;
inline bool YoloV3Config::has_save_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YoloV3Config::set_has_save_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YoloV3Config::clear_has_save_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YoloV3Config::clear_save_dir() {
  save_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_save_dir();
}
inline const ::std::string& YoloV3Config::save_dir() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.save_dir)
  return save_dir_.GetNoArena();
}
inline void YoloV3Config::set_save_dir(const ::std::string& value) {
  set_has_save_dir();
  save_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.save_dir)
}
#if LANG_CXX11
inline void YoloV3Config::set_save_dir(::std::string&& value) {
  set_has_save_dir();
  save_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:holo.perception.YoloV3Config.save_dir)
}
#endif
inline void YoloV3Config::set_save_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_save_dir();
  save_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:holo.perception.YoloV3Config.save_dir)
}
inline void YoloV3Config::set_save_dir(const char* value, size_t size) {
  set_has_save_dir();
  save_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:holo.perception.YoloV3Config.save_dir)
}
inline ::std::string* YoloV3Config::mutable_save_dir() {
  set_has_save_dir();
  // @@protoc_insertion_point(field_mutable:holo.perception.YoloV3Config.save_dir)
  return save_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YoloV3Config::release_save_dir() {
  // @@protoc_insertion_point(field_release:holo.perception.YoloV3Config.save_dir)
  if (!has_save_dir()) {
    return NULL;
  }
  clear_has_save_dir();
  return save_dir_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoloV3Config::set_allocated_save_dir(::std::string* save_dir) {
  if (save_dir != NULL) {
    set_has_save_dir();
  } else {
    clear_has_save_dir();
  }
  save_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_dir);
  // @@protoc_insertion_point(field_set_allocated:holo.perception.YoloV3Config.save_dir)
}

// optional int32 image_width = 7;
inline bool YoloV3Config::has_image_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YoloV3Config::set_has_image_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YoloV3Config::clear_has_image_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YoloV3Config::clear_image_width() {
  image_width_ = 0;
  clear_has_image_width();
}
inline ::google::protobuf::int32 YoloV3Config::image_width() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.image_width)
  return image_width_;
}
inline void YoloV3Config::set_image_width(::google::protobuf::int32 value) {
  set_has_image_width();
  image_width_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.image_width)
}

// optional int32 image_height = 8;
inline bool YoloV3Config::has_image_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YoloV3Config::set_has_image_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YoloV3Config::clear_has_image_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YoloV3Config::clear_image_height() {
  image_height_ = 0;
  clear_has_image_height();
}
inline ::google::protobuf::int32 YoloV3Config::image_height() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.image_height)
  return image_height_;
}
inline void YoloV3Config::set_image_height(::google::protobuf::int32 value) {
  set_has_image_height();
  image_height_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.image_height)
}

// optional int32 num_anchor = 9;
inline bool YoloV3Config::has_num_anchor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void YoloV3Config::set_has_num_anchor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void YoloV3Config::clear_has_num_anchor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void YoloV3Config::clear_num_anchor() {
  num_anchor_ = 0;
  clear_has_num_anchor();
}
inline ::google::protobuf::int32 YoloV3Config::num_anchor() const {
  // @@protoc_insertion_point(field_get:holo.perception.YoloV3Config.num_anchor)
  return num_anchor_;
}
inline void YoloV3Config::set_num_anchor(::google::protobuf::int32 value) {
  set_has_num_anchor();
  num_anchor_ = value;
  // @@protoc_insertion_point(field_set:holo.perception.YoloV3Config.num_anchor)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace holo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_yolov3_2eproto
