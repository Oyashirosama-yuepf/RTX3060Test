// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_NUMERICS_MATRIXC_XNF06B_H_
#define _TAO_IDL__HOME_HOLO_WORKSPACE_BUILD_TDA4_UBUNTU_18_04_DEBUG_HOLO_BASE_MSG_INCLUDE_HOLO_BASE_MSG_NUMERICS_MATRIXC_XNF06B_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "holo_base_msg/core/TypesC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace holo_base_msg
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace numerics
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_HOLO_BASE_MSG_NUMERICS_MATRIXDDATA_CH_)
#define _HOLO_BASE_MSG_NUMERICS_MATRIXDDATA_CH_

    class MatrixdData;

    typedef
      ::TAO_FixedSeq_Var_T<
          MatrixdData
        >
      MatrixdData_var;

    typedef
      ::TAO_Seq_Out_T<
          MatrixdData
        >
      MatrixdData_out;

    class  MatrixdData
      : public
          ::TAO::unbounded_value_sequence<
              holo_base_msg::core::float64_t
            >
    {
    public:
      MatrixdData (void);
      MatrixdData ( ::CORBA::ULong max);
      MatrixdData (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Double* buffer,
        ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
      MatrixdData (const MatrixdData &) = default;
      MatrixdData (MatrixdData &&) = default;
      MatrixdData& operator= (const MatrixdData &) = default;
      MatrixdData& operator= (MatrixdData &&) = default;
#endif /* ACE_HAS_CPP11 */
      virtual ~MatrixdData (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MatrixdData_var _var_type;
      typedef MatrixdData_out _out_type;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_MatrixdData;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Matrixd;

    typedef
      ::TAO_Var_Var_T<
          Matrixd
        >
      Matrixd_var;

    typedef
      ::TAO_Out_T<
          Matrixd
        >
      Matrixd_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Matrixd
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Matrixd_var _var_type;
      typedef Matrixd_out _out_type;

      static void _tao_any_destructor (void *);
      
      holo_base_msg::core::int32_t rows;
      holo_base_msg::core::int32_t cols;
      holo_base_msg::numerics::MatrixdData data;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrixd;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float64_t Matrix22d[2][2];
    typedef holo_base_msg::core::float64_t Matrix22d_slice[2];
    struct Matrix22d_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix22d,
          Matrix22d_slice,
          Matrix22d_tag
        >
      Matrix22d_var;

    typedef
      Matrix22d
      Matrix22d_out;

    typedef
      TAO_Array_Forany_T<
          Matrix22d,
          Matrix22d_slice,
          Matrix22d_tag
        >
      Matrix22d_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix22d_slice *
    Matrix22d_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix22d_free (
        Matrix22d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix22d_slice *
    Matrix22d_dup (
        const Matrix22d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix22d_copy (
        Matrix22d_slice *_tao_to,
        const Matrix22d_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix22d;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float64_t Matrix33d[3][3];
    typedef holo_base_msg::core::float64_t Matrix33d_slice[3];
    struct Matrix33d_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix33d,
          Matrix33d_slice,
          Matrix33d_tag
        >
      Matrix33d_var;

    typedef
      Matrix33d
      Matrix33d_out;

    typedef
      TAO_Array_Forany_T<
          Matrix33d,
          Matrix33d_slice,
          Matrix33d_tag
        >
      Matrix33d_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix33d_slice *
    Matrix33d_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix33d_free (
        Matrix33d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix33d_slice *
    Matrix33d_dup (
        const Matrix33d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix33d_copy (
        Matrix33d_slice *_tao_to,
        const Matrix33d_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix33d;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float64_t Matrix44d[4][4];
    typedef holo_base_msg::core::float64_t Matrix44d_slice[4];
    struct Matrix44d_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix44d,
          Matrix44d_slice,
          Matrix44d_tag
        >
      Matrix44d_var;

    typedef
      Matrix44d
      Matrix44d_out;

    typedef
      TAO_Array_Forany_T<
          Matrix44d,
          Matrix44d_slice,
          Matrix44d_tag
        >
      Matrix44d_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix44d_slice *
    Matrix44d_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix44d_free (
        Matrix44d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix44d_slice *
    Matrix44d_dup (
        const Matrix44d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix44d_copy (
        Matrix44d_slice *_tao_to,
        const Matrix44d_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix44d;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float64_t Matrix55d[5][5];
    typedef holo_base_msg::core::float64_t Matrix55d_slice[5];
    struct Matrix55d_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix55d,
          Matrix55d_slice,
          Matrix55d_tag
        >
      Matrix55d_var;

    typedef
      Matrix55d
      Matrix55d_out;

    typedef
      TAO_Array_Forany_T<
          Matrix55d,
          Matrix55d_slice,
          Matrix55d_tag
        >
      Matrix55d_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix55d_slice *
    Matrix55d_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix55d_free (
        Matrix55d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix55d_slice *
    Matrix55d_dup (
        const Matrix55d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix55d_copy (
        Matrix55d_slice *_tao_to,
        const Matrix55d_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix55d;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float64_t Matrix66d[6][6];
    typedef holo_base_msg::core::float64_t Matrix66d_slice[6];
    struct Matrix66d_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix66d,
          Matrix66d_slice,
          Matrix66d_tag
        >
      Matrix66d_var;

    typedef
      Matrix66d
      Matrix66d_out;

    typedef
      TAO_Array_Forany_T<
          Matrix66d,
          Matrix66d_slice,
          Matrix66d_tag
        >
      Matrix66d_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix66d_slice *
    Matrix66d_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix66d_free (
        Matrix66d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix66d_slice *
    Matrix66d_dup (
        const Matrix66d_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix66d_copy (
        Matrix66d_slice *_tao_to,
        const Matrix66d_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix66d;

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_HOLO_BASE_MSG_NUMERICS_MATRIXFDATA_CH_)
#define _HOLO_BASE_MSG_NUMERICS_MATRIXFDATA_CH_

    class MatrixfData;

    typedef
      ::TAO_FixedSeq_Var_T<
          MatrixfData
        >
      MatrixfData_var;

    typedef
      ::TAO_Seq_Out_T<
          MatrixfData
        >
      MatrixfData_out;

    class  MatrixfData
      : public
          ::TAO::unbounded_value_sequence<
              holo_base_msg::core::float32_t
            >
    {
    public:
      MatrixfData (void);
      MatrixfData ( ::CORBA::ULong max);
      MatrixfData (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Float* buffer,
        ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
      MatrixfData (const MatrixfData &) = default;
      MatrixfData (MatrixfData &&) = default;
      MatrixfData& operator= (const MatrixfData &) = default;
      MatrixfData& operator= (MatrixfData &&) = default;
#endif /* ACE_HAS_CPP11 */
      virtual ~MatrixfData (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MatrixfData_var _var_type;
      typedef MatrixfData_out _out_type;

      static void _tao_any_destructor (void *);
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_MatrixfData;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct Matrixf;

    typedef
      ::TAO_Var_Var_T<
          Matrixf
        >
      Matrixf_var;

    typedef
      ::TAO_Out_T<
          Matrixf
        >
      Matrixf_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct  Matrixf
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef Matrixf_var _var_type;
      typedef Matrixf_out _out_type;

      static void _tao_any_destructor (void *);
      
      holo_base_msg::core::int32_t rows;
      holo_base_msg::core::int32_t cols;
      holo_base_msg::numerics::MatrixfData data;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrixf;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float32_t Matrix22f[2][2];
    typedef holo_base_msg::core::float32_t Matrix22f_slice[2];
    struct Matrix22f_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix22f,
          Matrix22f_slice,
          Matrix22f_tag
        >
      Matrix22f_var;

    typedef
      Matrix22f
      Matrix22f_out;

    typedef
      TAO_Array_Forany_T<
          Matrix22f,
          Matrix22f_slice,
          Matrix22f_tag
        >
      Matrix22f_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix22f_slice *
    Matrix22f_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix22f_free (
        Matrix22f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix22f_slice *
    Matrix22f_dup (
        const Matrix22f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix22f_copy (
        Matrix22f_slice *_tao_to,
        const Matrix22f_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix22f;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float32_t Matrix33f[3][3];
    typedef holo_base_msg::core::float32_t Matrix33f_slice[3];
    struct Matrix33f_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix33f,
          Matrix33f_slice,
          Matrix33f_tag
        >
      Matrix33f_var;

    typedef
      Matrix33f
      Matrix33f_out;

    typedef
      TAO_Array_Forany_T<
          Matrix33f,
          Matrix33f_slice,
          Matrix33f_tag
        >
      Matrix33f_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix33f_slice *
    Matrix33f_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix33f_free (
        Matrix33f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix33f_slice *
    Matrix33f_dup (
        const Matrix33f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix33f_copy (
        Matrix33f_slice *_tao_to,
        const Matrix33f_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix33f;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float32_t Matrix44f[4][4];
    typedef holo_base_msg::core::float32_t Matrix44f_slice[4];
    struct Matrix44f_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix44f,
          Matrix44f_slice,
          Matrix44f_tag
        >
      Matrix44f_var;

    typedef
      Matrix44f
      Matrix44f_out;

    typedef
      TAO_Array_Forany_T<
          Matrix44f,
          Matrix44f_slice,
          Matrix44f_tag
        >
      Matrix44f_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix44f_slice *
    Matrix44f_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix44f_free (
        Matrix44f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix44f_slice *
    Matrix44f_dup (
        const Matrix44f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix44f_copy (
        Matrix44f_slice *_tao_to,
        const Matrix44f_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix44f;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float32_t Matrix55f[5][5];
    typedef holo_base_msg::core::float32_t Matrix55f_slice[5];
    struct Matrix55f_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix55f,
          Matrix55f_slice,
          Matrix55f_tag
        >
      Matrix55f_var;

    typedef
      Matrix55f
      Matrix55f_out;

    typedef
      TAO_Array_Forany_T<
          Matrix55f,
          Matrix55f_slice,
          Matrix55f_tag
        >
      Matrix55f_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix55f_slice *
    Matrix55f_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix55f_free (
        Matrix55f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix55f_slice *
    Matrix55f_dup (
        const Matrix55f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix55f_copy (
        Matrix55f_slice *_tao_to,
        const Matrix55f_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix55f;

    // TAO_IDL - Generated from
    // be/be_visitor_array/array_ch.cpp:54

    typedef holo_base_msg::core::float32_t Matrix66f[6][6];
    typedef holo_base_msg::core::float32_t Matrix66f_slice[6];
    struct Matrix66f_tag {};
    

    typedef
      TAO_FixedArray_Var_T<
          Matrix66f,
          Matrix66f_slice,
          Matrix66f_tag
        >
      Matrix66f_var;

    typedef
      Matrix66f
      Matrix66f_out;

    typedef
      TAO_Array_Forany_T<
          Matrix66f,
          Matrix66f_slice,
          Matrix66f_tag
        >
      Matrix66f_forany;

    TAO_NAMESPACE_STORAGE_CLASS Matrix66f_slice *
    Matrix66f_alloc (void);

    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix66f_free (
        Matrix66f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS Matrix66f_slice *
    Matrix66f_dup (
        const Matrix66f_slice *_tao_slice);
    
    TAO_NAMESPACE_STORAGE_CLASS void
    Matrix66f_copy (
        Matrix66f_slice *_tao_to,
        const Matrix66f_slice *_tao_from);

    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:37

    extern  ::CORBA::TypeCode_ptr const _tc_Matrix66f;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module holo_base_msg::numerics

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module holo_base_msg

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::MatrixdData>
    : public
        Var_Size_Arg_Traits_T<
            ::holo_base_msg::numerics::MatrixdData,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrixd>
    : public
        Var_Size_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrixd,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix22d_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix22d_var,
            ::holo_base_msg::numerics::Matrix22d_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix33d_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix33d_var,
            ::holo_base_msg::numerics::Matrix33d_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix44d_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix44d_var,
            ::holo_base_msg::numerics::Matrix44d_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix55d_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix55d_var,
            ::holo_base_msg::numerics::Matrix55d_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix66d_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix66d_var,
            ::holo_base_msg::numerics::Matrix66d_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::MatrixfData>
    : public
        Var_Size_Arg_Traits_T<
            ::holo_base_msg::numerics::MatrixfData,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrixf>
    : public
        Var_Size_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrixf,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix22f_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix22f_var,
            ::holo_base_msg::numerics::Matrix22f_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix33f_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix33f_var,
            ::holo_base_msg::numerics::Matrix33f_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix44f_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix44f_var,
            ::holo_base_msg::numerics::Matrix44f_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix55f_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix55f_var,
            ::holo_base_msg::numerics::Matrix55f_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::holo_base_msg::numerics::Matrix66f_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::holo_base_msg::numerics::Matrix66f_var,
            ::holo_base_msg::numerics::Matrix66f_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix22d_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix22d_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix22d_slice * dup (
        const holo_base_msg::numerics::Matrix22d_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix22d_slice * _tao_to,
        const holo_base_msg::numerics::Matrix22d_slice * _tao_from);
    static holo_base_msg::numerics::Matrix22d_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix22d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix33d_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix33d_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix33d_slice * dup (
        const holo_base_msg::numerics::Matrix33d_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix33d_slice * _tao_to,
        const holo_base_msg::numerics::Matrix33d_slice * _tao_from);
    static holo_base_msg::numerics::Matrix33d_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix33d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix44d_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix44d_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix44d_slice * dup (
        const holo_base_msg::numerics::Matrix44d_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix44d_slice * _tao_to,
        const holo_base_msg::numerics::Matrix44d_slice * _tao_from);
    static holo_base_msg::numerics::Matrix44d_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix44d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix55d_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix55d_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix55d_slice * dup (
        const holo_base_msg::numerics::Matrix55d_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix55d_slice * _tao_to,
        const holo_base_msg::numerics::Matrix55d_slice * _tao_from);
    static holo_base_msg::numerics::Matrix55d_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix55d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix66d_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix66d_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix66d_slice * dup (
        const holo_base_msg::numerics::Matrix66d_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix66d_slice * _tao_to,
        const holo_base_msg::numerics::Matrix66d_slice * _tao_from);
    static holo_base_msg::numerics::Matrix66d_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix66d_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix22f_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix22f_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix22f_slice * dup (
        const holo_base_msg::numerics::Matrix22f_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix22f_slice * _tao_to,
        const holo_base_msg::numerics::Matrix22f_slice * _tao_from);
    static holo_base_msg::numerics::Matrix22f_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix22f_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix33f_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix33f_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix33f_slice * dup (
        const holo_base_msg::numerics::Matrix33f_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix33f_slice * _tao_to,
        const holo_base_msg::numerics::Matrix33f_slice * _tao_from);
    static holo_base_msg::numerics::Matrix33f_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix33f_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix44f_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix44f_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix44f_slice * dup (
        const holo_base_msg::numerics::Matrix44f_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix44f_slice * _tao_to,
        const holo_base_msg::numerics::Matrix44f_slice * _tao_from);
    static holo_base_msg::numerics::Matrix44f_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix44f_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix55f_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix55f_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix55f_slice * dup (
        const holo_base_msg::numerics::Matrix55f_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix55f_slice * _tao_to,
        const holo_base_msg::numerics::Matrix55f_slice * _tao_from);
    static holo_base_msg::numerics::Matrix55f_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix55f_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      holo_base_msg::numerics::Matrix66f_forany
    >
  {
    static void free (
        holo_base_msg::numerics::Matrix66f_slice * _tao_slice);
    static holo_base_msg::numerics::Matrix66f_slice * dup (
        const holo_base_msg::numerics::Matrix66f_slice * _tao_slice);
    static void copy (
        holo_base_msg::numerics::Matrix66f_slice * _tao_to,
        const holo_base_msg::numerics::Matrix66f_slice * _tao_from);
    static holo_base_msg::numerics::Matrix66f_slice * alloc (void);
    static void zero (
        holo_base_msg::numerics::Matrix66f_slice * _tao_slice);
  };
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace numerics
  {
     void operator<<= ( ::CORBA::Any &, const ::holo_base_msg::numerics::MatrixdData &); // copying version
     void operator<<= ( ::CORBA::Any &, ::holo_base_msg::numerics::MatrixdData*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::numerics::MatrixdData *&); // deprecated
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::numerics::MatrixdData *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const holo_base_msg::numerics::MatrixdData &); // copying version
 void operator<<= ( ::CORBA::Any &, holo_base_msg::numerics::MatrixdData*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::MatrixdData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::numerics::MatrixdData *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace numerics
  {
     void operator<<= (::CORBA::Any &, const ::holo_base_msg::numerics::Matrixd &); // copying version
     void operator<<= (::CORBA::Any &, ::holo_base_msg::numerics::Matrixd*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::numerics::Matrixd *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::numerics::Matrixd *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrixd &); // copying version
 void operator<<= (::CORBA::Any &, holo_base_msg::numerics::Matrixd*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrixd *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::numerics::Matrixd *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix22d_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix22d_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix33d_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix33d_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix44d_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix44d_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix55d_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix55d_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix66d_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix66d_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:50



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace numerics
  {
     void operator<<= ( ::CORBA::Any &, const ::holo_base_msg::numerics::MatrixfData &); // copying version
     void operator<<= ( ::CORBA::Any &, ::holo_base_msg::numerics::MatrixfData*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::numerics::MatrixfData *&); // deprecated
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::numerics::MatrixfData *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const holo_base_msg::numerics::MatrixfData &); // copying version
 void operator<<= ( ::CORBA::Any &, holo_base_msg::numerics::MatrixfData*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::MatrixfData *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::numerics::MatrixfData *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace holo_base_msg
{
  
  namespace numerics
  {
     void operator<<= (::CORBA::Any &, const ::holo_base_msg::numerics::Matrixf &); // copying version
     void operator<<= (::CORBA::Any &, ::holo_base_msg::numerics::Matrixf*); // noncopying version
     ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::holo_base_msg::numerics::Matrixf *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::holo_base_msg::numerics::Matrixf *&);
  }
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrixf &); // copying version
 void operator<<= (::CORBA::Any &, holo_base_msg::numerics::Matrixf*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrixf *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const holo_base_msg::numerics::Matrixf *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix22f_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix22f_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix33f_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix33f_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix44f_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix44f_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix55f_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix55f_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const holo_base_msg::numerics::Matrix66f_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, holo_base_msg::numerics::Matrix66f_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_holo_base_msg_numerics_MatrixdData_H_
#define _TAO_CDR_OP_holo_base_msg_numerics_MatrixdData_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const holo_base_msg::numerics::MatrixdData &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    holo_base_msg::numerics::MatrixdData &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_holo_base_msg_numerics_MatrixdData_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const holo_base_msg::numerics::Matrixd &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrixd &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix22d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix22d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix33d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix33d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix44d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix44d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix55d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix55d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix66d_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix66d_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_holo_base_msg_numerics_MatrixfData_H_
#define _TAO_CDR_OP_holo_base_msg_numerics_MatrixfData_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const holo_base_msg::numerics::MatrixfData &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    holo_base_msg::numerics::MatrixfData &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_holo_base_msg_numerics_MatrixfData_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const holo_base_msg::numerics::Matrixf &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrixf &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix22f_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix22f_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix33f_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix33f_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix44f_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix44f_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix55f_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix55f_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const holo_base_msg::numerics::Matrix66f_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, holo_base_msg::numerics::Matrix66f_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "MatrixC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

